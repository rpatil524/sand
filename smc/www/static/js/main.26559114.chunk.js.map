{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","env.ts","models/Project.ts","models/table/TableContext.ts","models/table/TableRowStore.ts","models/table/TableStore.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/entity/Entity.ts","models/entity/EntitySettings.ts","models/entity/EntityStore.ts","models/ontology/PropertyStore.ts","models/ontology/ClassStore.ts","models/index.ts","pages/HomePage.tsx","pages/ProjectPage.tsx","components/entity/Entity.ts","components/entity/InlineEntityComponent.tsx","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","components/element/Number.tsx","components/element/Button.tsx","components/table/CandidateEntityListComponent.tsx","components/table/CellComponent.tsx","components/table/TableComponent.tsx","components/table/styles.ts","misc/SequentialFuncInvoker.ts","pages/table/OntSearchComponent.tsx","pages/table/EntitySettingComponent.tsx","components/graph/RectNode.ts","components/graph/CircleNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/GraphComponent.tsx","pages/table/forms/EdgeForm.tsx","pages/table/forms/NodeForm.tsx","pages/table/forms/index.tsx","pages/table/SemanticModelComponent.tsx","pages/table/TablePage.tsx","logo.png","routes.tsx","pages/SettingPage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","length","Object","entries","key","name2field","fromEntries","undefined","action","fetchOne","fetchById","list","limit","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","draft","discardDraft","serializeCreateDraft","delete","draftID","update","put","serializeUpdateDraft","toModel","markSaved","deindex","listener","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","clear","remove","SingleKeyUniqueIndex","idField","fkField","SingleKeyIndex","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","callback","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","x","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","preventDefault","ctrlKey","metaKey","window","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","openInNewPage","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","app","Router","Switch","Route","ConfigProvider","locale","enUSIntl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","Project","description","ProjectStore","isLineBreak","nLines","TableRowStore","findByTable","tableId","start","no","tableIndex","rowId","links","forEach","link","entity","entityId","candidate_entities","ce","candidateEntities","entity_id","TableStore","findByProject","projectId","projectIndex","contextPage","context_page","contextValues","context_values","context_tree","contextTree","contentBefore","content_before","n_lines","contentAfter","content_after","URICount","nodes","counter","id2num","label","node","nextLabel","uri","unlabel","substring","lastIndexOf","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","clone","toJS","onSave","hasNode","nodesByURI","nodeByColumnIndex","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","graph","table","isDraft","sm","DraftSemanticModel","columns","column","SemanticModelStore","getNewDraftId","getCreateDraft","column_index","is_in_context","sms","drafts","getDraftsByTable","idx","concat","exec","parseInt","Math","max","Entity","readableLabel","aliases","properties","id2uri","EntitySettings","_showedPropsInFullView","_showedPropsInPopoverView","setShowedPropsInFullView","setShowedPropsInPopoverView","addShowedPropsInFullView","addShowedPropsInPopoverView","removeShowedPropsInFullView","removeShowedPropsInPopoverView","showedPropsInFullView","showedPropsInPopoverView","EntityStore","fetchByIdQueue","settings","readable_label","stmts","stmt","qualifiersOrder","qualifiers_order","catch","PropertyStore","getPropertyByURI","uriIndex","ClassStore","getClassByURI","stores","projectStore","tableStore","tableRowStore","semanticModelStore","entityStore","propertyStore","classStore","_stores","StoreContext","createContext","useStores","useContext","HomePage","observer","useEffect","Fragment","gutter","span","Title","level","itemLayout","dataSource","renderItem","project","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","ProjectPage","borderLeft","fontWeight","LoadingPage","dataIndex","renderText","text","tbl","encodeWhereQuery","_","upperFirst","defaultSize","request","sort","a","pageSize","current","table2row","success","options","headerTitle","pagination","pageSizeOptions","rowKey","useEntityProperties","propIds","pid","qualifiers","qid","fetchByIds","doesNotExist","InlineEntityComponent","nolink","FetchEntityComponent","render","renderLoading","renderNotFound","forceWaiting","serializeFetchById","InlinePropertyComponent","property","showId","CollapsibleComponent","hide","display","useState","visible","setVisible","toggleVisible","btn","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","unit","amount","language","globe","latitude","longitude","StatementComponent","marginLeft","id2prop","qval","Text","italic","valueIndex","PropertyComponent","propDivider","color","filteredProps","components","strong","direction","width","PropertyFilterComponent","enable","setEnable","addFilteredProp","removeFilteredProp","onChange","checked","allowClear","optionFilterProp","onSelect","onDeselect","PageEntityComponent","margin","minWidth","float","lang2value","lang","fontSize","copyable","lang2values","openPageEntityComponent","args","zIndex","content","info","icon","bodyStyle","maskClosable","mask","top","PopoverEntityComponent","marginBottom","cursor","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","padding","selected","colorSelected","blue","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","styles","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","candidateLst","slice","faCheck","faCheckDouble","probability","findIndex","candidate","score","textDecoration","noEntityLink","CellComponent","cell","flatMap","prefix","end","linksurface","infix","dangerouslySetInnerHTML","__html","trim","verticalAlign","TableComponent","toolBarRender","showRowIndex","col","disabled","context","webpage","TableInformation","contentHierarchy","hierarchy","heading","repeat","ContentComponent","lines","comps","line","lst","SequentialFuncInvoker","timer","calledAt","selection","OntPropSearchComponent","useSearchComponent","OntClassSearchComponent","EntitySearchComponent","storeName","store","seqInvoker","showSearch","onSearch","EntitySettingComponent","drawText","group","wordwrap","units","xoffset","yoffset","cfg","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","registerCircleNode","defaultWidth","getApproximateWidth","G6","registerNode","draw","labelOffset","labelCfg","wrapText","cacheFn","cache","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","layout","lineHeight","cssLineHeight","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","b","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","deltaX","deltaY","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","hotswapProps","isEqual","enableActivateRelations","destroy","fitCenter","setDataAndRender","onFinish","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","extraHeight","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","offsetHeight","initHeight","changeSize","moveTo","leftOffset","topOffset","untilLayoutStable","maxTries","delay","significantChange","prevBBox","setTimeout","nextBBox","wp","paddingWidth","hp","paddingHeight","setState","_cfg","model","states","labelStyles","registerRectNode","modes","resetSelected","Graph","scrollWidth","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","default","edit","nodeStateStyles","active","opacity","inactive","edgeStateStyles","onNodeClick","on","event","onEdgeClick","newNodes","u","labelStyle","uniq","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","ref","renderingAdjustedHeight","layouts","useRef","useImperativeHandle","recenter","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","centerGraph","changeLayout","FullscreenOutlined","overlay","LayoutOutlined","DownOutlined","borderSpacing","NodeSelectionComponent","EdgeForm","setSource","setTarget","predicate","setPredicate","setApproximation","isValid","labelCol","wrapperCol","labelWrap","val","destroyAll","NodeForm","setNodeType","setNodeId","setIsInContext","Group","buttonStyle","openForm","graphContainer","yellow","gold","selectedDraft","SemanticModelComponent","graphRef","currentIndex","setCurrentIndex","getDefaultDraftSemanticModel","green","purple","centering","useHotkeys","smLists","isSelected","smListComponent","onConfirm","nSms","getNewSemanticModelName","TablePage","marginRight","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","sortedIndex","all","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","hasByTable","rtable","semComponent","queryRow","row","btns","extraSubTitle","TableNavBar","onBack","upload","projects","home","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.26559114.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        /**\n         * Deserialize the data sent from the server to a record\n         */\n        this.deserialize = (record) => {\n            if (this.nameAndField.length > 0) {\n                for (const [name, field] of this.nameAndField) {\n                    record[field] = record[name];\n                    delete record[name];\n                }\n            }\n            return record;\n        };\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, makeObservable, runInAction, action } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        /**\n         * Create the record, will sync with remote server.\n         */\n        this.create = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                let record = this.deserialize(resp.data);\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft) {\n                    this.createDrafts.delete(draft.draftID);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Update the record, with sync with remote server\n         */\n        this.update = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                let record = draft.toModel() || this.deserialize(resp.data);\n                draft.markSaved();\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft && this.updateDrafts.has(draft.id)) {\n                    this.updateDrafts.delete(draft.id);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Remove a record, will sync with remote server\n         */\n        this.delete = flow(function* (id) {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                this.state.value = \"updated\";\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n}\n","import { action, makeObservable, observable } from \"mobx\";\nexport class SingleKeyUniqueIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        this.index.set(key, record[this.idField]);\n    }\n    remove(record) {\n        const key = record[this.fkField];\n        this.index.delete(key);\n    }\n}\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index\n                .get(key1)\n                .get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3\n            .get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (e !== undefined && (e.ctrlKey || e.metaKey)) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        props.path\n            .path(props.urlArgs, props.queryArgs)\n            .mouseClickNavigationHandler(e);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    const app = (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0));\n    if (enUSLocale === true) {\n        return _jsx(ConfigProvider, Object.assign({ locale: enUSIntl }, { children: app }), void 0);\n    }\n    return app;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  public deserialize = (record: any): Project => {\n    return new Project(record.id, record.name, record.description);\n  };\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.name,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { HTMLProps } from \"react\";\n\nexport interface ContentHierarchy {\n  level: number; // level of the heading\n  heading: string; // title of the level (header)\n  contentBefore: (Text | LineBreak)[];\n  contentAfter: (Text | LineBreak)[];\n}\n\nexport interface Text {\n  value: string;\n  tags: string[];\n  id2attrs: { [id: string]: HTMLProps<HTMLAnchorElement> };\n}\n\nexport interface LineBreak {\n  nLines: number;\n}\n\nexport function isLineBreak(item: Text | LineBreak): item is LineBreak {\n  return (item as LineBreak).nLines !== undefined;\n}\n","import { SERVER } from \"../../env\";\nimport { PairKeysUniqueIndex, RStore } from \"rma-baseapp\";\nimport { TableRow } from \"./Table\";\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false, [\n      new PairKeysUniqueIndex(\"table\", \"index\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as PairKeysUniqueIndex<\n      number,\n      number,\n      number,\n      TableRow\n    >;\n  }\n\n  /**\n   * Find rows of the table\n   *\n   * @param tableId\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  findByTable = (tableId: number, start: number, no: number): TableRow[] => {\n    const map = this.tableIndex.index.get(tableId);\n    if (map === undefined) return [];\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n    return output;\n  };\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize = (record: any): TableRow => {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity !== null) {\n          link.entityId = link.entity;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity;\n          delete ce.entity;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  };\n}\n","import { SERVER } from \"../../env\";\nimport { SingleKeyIndex, RStore } from \"rma-baseapp\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends RStore<number, Table> {\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false, [\n      new SingleKeyIndex(\"project\"),\n    ]);\n  }\n\n  get projectIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, Table>;\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize = (record: any): Table => {\n    record.contextPage = record.context_page;\n    if (\n      record.contextPage !== null &&\n      record.contextPage !== undefined &&\n      record.contextPage.entity !== null\n    ) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n    record.contextValues = record.context_values;\n    if (record.context_tree !== undefined) {\n      record.contextTree = record.context_tree.map((item: any) => {\n        item.contentBefore = item.content_before.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        item.contentAfter = item.content_after.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        delete item.content_before;\n        delete item.content_after;\n        return item;\n      });\n      delete record.context_tree;\n    }\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  };\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * value of this literal node, depends on the type\n   */\n  value:\n    | {\n        type: \"string\";\n        value: string;\n      }\n    | {\n        type: \"entity-id\";\n        id: string;\n        uri: string;\n      };\n  // readable name for this node\n  label: string;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface GraphEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    return `${label} ${this.counter[uri] || 1}`;\n  };\n\n  unlabel = (label: string) => {\n    return label.substring(0, label.lastIndexOf(\" \"));\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: GraphEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: GraphEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  clone = () => {\n    const record = this.toJS();\n    return new SMGraph(this.id, record.nodes, record.edges);\n  };\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [GraphEdge, GraphEdge?][] => {\n    let matchPaths: [GraphEdge, GraphEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [GraphEdge, GraphEdge?][] => {\n    let outprops: [GraphEdge, GraphEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        target.uri === \"http://wikiba.se/ontology#Statement\"\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<GraphEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: GraphEdge) {\n    if (\n      this.edges.filter(\n        (e) => e.source === edge.source && e.target === edge.target\n      ).length > 0\n    ) {\n      throw new Error(\"Cannot have more than one edge between two classes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<GraphEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { Table } from \"../table\";\nimport { SERVER } from \"../../env\";\nimport { SMGraph, SMNodeType } from \"./SMGraph\";\nimport { toJS } from \"mobx\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  static isDraft = (\n    sm: SemanticModel | DraftSemanticModel\n  ): sm is DraftSemanticModel => {\n    return (sm as DraftSemanticModel).draftID !== undefined;\n  };\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  /**\n   * Get a default draft model for a table\n   */\n  static getDefaultDraftSemanticModel(\n    id: string,\n    name: string,\n    table: Table,\n    description = \"\"\n  ): DraftSemanticModel {\n    const graph = new SMGraph(\n      id,\n      table.columns.map((column, index) => ({\n        id: `col-${index}`,\n        label: column,\n        columnIndex: index,\n        nodetype: \"data_node\",\n      })),\n      []\n    );\n    graph.stale = true;\n    return new DraftSemanticModel(id, name, description, 0, graph, table.id);\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false, [\n      new SingleKeyIndex(\"table\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, SemanticModel>;\n  }\n\n  /** Generate new draft id */\n  getNewDraftId = (table: Table): string => {\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      if (this.getCreateDraft(id) === undefined) {\n        return id;\n      }\n      i++;\n    }\n  };\n\n  /** Generate new semantic model name */\n  getNewSemanticModelName(table: Table): string {\n    const sms = this.findByTable(table.id);\n    const drafts = this.getDraftsByTable(table);\n\n    let idx = -1;\n    for (const sm of sms.concat(drafts)) {\n      const m = /sm-(\\d+)/.exec(sm.name);\n      if (m === null) continue;\n      if (parseInt(m[1]) >= idx) {\n        idx = Math.max(idx, parseInt(m[1]));\n      }\n    }\n    return `sm-${idx + 1}`;\n  }\n\n  /** Get all drafts of a table */\n  getDraftsByTable(table: Table): DraftSemanticModel[] {\n    const drafts = [];\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      const draft = this.getCreateDraft(id);\n      if (draft === undefined) {\n        break;\n      }\n      drafts.push(draft);\n      i++;\n    }\n    return drafts;\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /**\n   * Remove a record (by id) from your indexes\n   */\n  protected deindex(record: SemanticModel): void {\n    for (const index of this.indices) {\n      index.remove(record);\n    }\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize = (record: any): SemanticModel => {\n    let nodes = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    let graph = new SMGraph(record.id.toString(), nodes, record.data.edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  };\n\n  public serializeUpdateDraft(record: SemanticModel): object {\n    record.version += 1;\n    return {\n      table: record.table,\n      name: record.name,\n      description: record.description,\n      version: record.version,\n      data: {\n        nodes: record.graph.nodes.map((node) => {\n          switch (node.nodetype) {\n            case \"class_node\":\n              return {\n                id: node.id,\n                uri: node.uri,\n                approximation: node.approximation,\n                label: node.label,\n                type: node.nodetype,\n              };\n            case \"data_node\":\n              return {\n                id: node.id,\n                label: node.label,\n                column_index: node.columnIndex,\n                type: node.nodetype,\n              };\n            case \"literal_node\":\n              return {\n                id: node.id,\n                value: node.value,\n                label: node.label,\n                is_in_context: node.isInContext,\n                type: node.nodetype,\n              };\n          }\n        }),\n        edges: record.graph.edges.map((edge) => {\n          return {\n            source: edge.source,\n            target: edge.target,\n            uri: edge.uri,\n            approximation: edge.approximation,\n            label: edge.label,\n          };\n        }),\n      },\n    };\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    return this.serializeUpdateDraft(record);\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public uri: string;\n  public label: MultiLingualString;\n  public readableLabel: string;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    uri: string,\n    label: MultiLingualString,\n    readableLabel: string,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.uri = uri;\n    this.label = label;\n    this.readableLabel = readableLabel;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n\n  /**\n   * Mapping from entity id to url to external KG\n   * @param entityId\n   */\n  static id2uri = (entityId: string): string => {\n    switch (entityId[0]) {\n      case \"Q\":\n        return `https://www.wikidata.org/wiki/${entityId}`;\n      case \"P\":\n        return `https://www.wikidata.org/wiki/Property:${entityId}`;\n      case \"L\":\n        return `https://www.wikidata.org/wiki/Lexeme:${entityId}`;\n      default:\n        return entityId;\n    }\n  };\n}\n\nexport type MultiLingualString = {\n  lang2value: { [lang: string]: string };\n  lang: string;\n};\nexport type MultiLingualStringList = {\n  lang2values: { [lang: string]: string[] };\n  lang: string;\n};\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport type DataValue =\n  | DataValueString\n  | DataValueTime\n  | DataValueQuantity\n  | DataValueGlobeCoordinate\n  | DataValueMonolingualText\n  | DataValueEntity;\n\nexport interface DataValueTime {\n  readonly type: \"time\";\n  value: {\n    time: string;\n    timezone: number;\n    before: number;\n    after: number;\n    precision: number;\n    calendarmodel: string;\n  };\n}\n\nexport interface DataValueQuantity {\n  readonly type: \"quantity\";\n  value: {\n    amount: string;\n    upperBound: string;\n    lowerBound: string;\n    unit: string;\n  };\n}\n\nexport interface DataValueMonolingualText {\n  readonly type: \"monolingualtext\";\n  value: {\n    text: string;\n    language: string;\n  };\n}\n\nexport interface DataValueGlobeCoordinate {\n  readonly type: \"globecoordinate\";\n  value: {\n    latitude: number;\n    longitude: number;\n    precision: number;\n    altitude: null;\n    globe: string;\n  };\n}\n\nexport interface DataValueEntity {\n  readonly type: \"entityid\";\n  value: string;\n}\n\nexport interface DataValueString {\n  readonly type: \"string\";\n  value: string;\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class EntitySettings {\n  // properties to show in full view\n  public _showedPropsInFullView: Set<string> = new Set();\n\n  // properties to show in popover view\n  public _showedPropsInPopoverView: Set<string> = new Set();\n\n  constructor() {\n    this._showedPropsInPopoverView.add(\"P31\");\n\n    makeObservable(this, {\n      _showedPropsInFullView: observable,\n      _showedPropsInPopoverView: observable,\n      showedPropsInFullView: computed,\n      showedPropsInPopoverView: computed,\n      setShowedPropsInFullView: action,\n      setShowedPropsInPopoverView: action,\n      addShowedPropsInFullView: action,\n      addShowedPropsInPopoverView: action,\n      removeShowedPropsInFullView: action,\n      removeShowedPropsInPopoverView: action,\n    });\n  }\n\n  get showedPropsInFullView() {\n    return Array.from(this._showedPropsInFullView);\n  }\n\n  get showedPropsInPopoverView() {\n    return Array.from(this._showedPropsInPopoverView);\n  }\n\n  setShowedPropsInFullView = (props: Set<string>) => {\n    this._showedPropsInFullView = props;\n  };\n\n  setShowedPropsInPopoverView = (props: Set<string>) => {\n    this._showedPropsInPopoverView = props;\n  };\n\n  addShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.add(prop);\n  };\n\n  addShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.add(prop);\n  };\n\n  removeShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.delete(prop);\n  };\n\n  removeShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.delete(prop);\n  };\n}\n","import { AxiosError } from \"axios\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\nimport { EntitySettings } from \"./EntitySettings\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  protected fetchByIdQueue: Map<\n    string,\n    ((entity?: Entity, error?: AxiosError<any>) => void)[]\n  >;\n  public settings: EntitySettings;\n\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n    this.fetchByIdQueue = new Map();\n    this.settings = new EntitySettings();\n\n    makeObservable(this, {\n      settings: observable,\n    });\n  }\n\n  /**\n   * Fetch entity from server. However, only one request is sent out and the rest\n   * if coming too fast is going to use the response of the previous request\n   *\n   * @param id entity id\n   * @returns\n   */\n  public serializeFetchById(id: string): Promise<Entity | undefined> {\n    return new Promise((resolve, reject) => {\n      if (!this.fetchByIdQueue.has(id)) {\n        this.fetchByIdQueue.set(id, []);\n        return this.fetchById(id)\n          .catch((error) => {\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(undefined, error);\n            }\n            this.fetchByIdQueue.delete(id);\n            throw error;\n          })\n          .then((entity) => {\n            // release the rest of the queued requests\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(entity);\n            }\n            this.fetchByIdQueue.delete(id);\n            return entity;\n          });\n      } else {\n        this.fetchByIdQueue.get(id)!.push((entity, error) => {\n          if (error !== undefined) {\n            reject(error);\n          } else {\n            resolve(entity);\n          }\n        });\n      }\n    });\n  }\n\n  public deserialize = (record: any): Entity => {\n    record.readableLabel = record.readable_label;\n    delete record.readable_label;\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Property {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class PropertyStore extends RStore<string, Property> {\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Property>;\n  }\n\n  getPropertyByURI = (uri: string): Property | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Class {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class ClassStore extends RStore<string, Class> {\n  constructor() {\n    super(`${SERVER}/api/classes`, { readableLabel: \"readable_label\" }, false, [\n      new SingleKeyUniqueIndex(\"uri\"),\n    ]);\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Class>;\n  }\n\n  getClassByURI = (uri: string): Class | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { Project, ProjectStore } from \"./Project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableStore, TableRowStore } from \"./table\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  SemanticModelStore,\n} from \"./sm\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { ClassStore } from \"./ontology/ClassStore\";\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore: new TableStore(),\n  tableRowStore: new TableRowStore(),\n  semanticModelStore: new SemanticModelStore(),\n  entityStore: new EntityStore(),\n  propertyStore: new PropertyStore(),\n  classStore: new ClassStore(),\n};\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  ClassStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n};\nexport type { Property } from \"./ontology/PropertyStore\";\nexport type { Table, TableRow } from \"./table\";\nexport type { GraphEdge, SMNode as GraphNode } from \"./sm/SMGraph\";\n","import { Avatar, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor: [\n                          \"#f56a00\",\n                          \"#7265e6\",\n                          \"#1890ff\",\n                          \"#00a2ae\",\n                        ][project.name.charCodeAt(0) % 4],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project: {_.upperFirst(project.name)}\n        </Typography.Title>\n        <ProTable<ReturnType<typeof table2row>>\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          // toolBarRender={false}\n          search={false}\n          pagination={{\n            pageSize: 500,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  onCtrlClick,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n  onCtrlClick?: () => void;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return <span {...restprops}>{entity.readableLabel}</span>;\n  }\n\n  return (\n    <ExternalLink\n      href={Entity.id2uri(entity.id)}\n      openInNewPage={true}\n      onCtrlClick={onCtrlClick}\n      {...restprops}\n    >\n      {entity.readableLabel}\n    </ExternalLink>\n  );\n};\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingPage } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    renderLoading,\n    renderNotFound,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity, settings: EntitySettings) => React.ReactElement;\n    renderLoading?: () => React.ReactElement;\n    renderNotFound?: () => React.ReactElement;\n  }) => {\n    const { entityStore } = useStores();\n\n    useEffect(() => {\n      entityStore.serializeFetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        if (renderLoading !== undefined) {\n          return renderLoading();\n        }\n        return <LoadingPage />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      if (renderNotFound !== undefined) {\n        return renderNotFound();\n      }\n\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity, entityStore.settings);\n  }\n);\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  showId = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  showId?: boolean;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  const label = showId ? `${property.label} (${property.id})` : property.label;\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Divider, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop, IncompleteProperty, useEntityProperties } from \".\";\nimport { Property } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      showId = false,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      showId?: boolean;\n      filteredProps: string[];\n    } & WithStyles<typeof styles>) => {\n      if (filteredProps.length === 0) {\n        filteredProps = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of filteredProps) {\n        // we have undefined when entity does not have this property `pid`\n        if (entity.properties[pid] === undefined) continue;\n\n        const stmts = entity.properties[pid];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent\n                  property={id2prop[pid]}\n                  showId={showId}\n                />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      enable,\n      setEnable,\n      id2prop,\n      filteredProps,\n      addFilteredProp,\n      removeFilteredProp,\n      classes,\n    }: {\n      enable: boolean;\n      setEnable: (enable: boolean) => void;\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      addFilteredProp: (prop: string) => void;\n      removeFilteredProp: (prop: string) => void;\n    } & WithStyles<typeof styles>) => {\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={addFilteredProp as any}\n            onDeselect={removeFilteredProp as any}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { observer } from \"mobx-react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      settings,\n    }: { entity: Entity; settings: EntitySettings } & WithStyles<\n      typeof styles\n    >) => {\n      const id2prop = useEntityProperties(entity);\n      const [enable, setEnable] = useState<boolean>(true);\n\n      return (\n        <div>\n          <Space style={{ float: \"right\" }}>\n            <PropertyFilterComponent\n              enable={enable}\n              setEnable={setEnable}\n              entity={entity}\n              id2prop={id2prop}\n              filteredProps={settings.showedPropsInFullView}\n              addFilteredProp={settings.addShowedPropsInFullView}\n              removeFilteredProp={settings.removeShowedPropsInFullView}\n            />\n          </Space>\n          <h2>\n            <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            entity={entity}\n            id2prop={id2prop}\n            showId={true}\n            filteredProps={enable ? settings.showedPropsInFullView : []}\n          />\n        </div>\n      );\n    }\n  )\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  args: { entity: Entity; settings: EntitySettings } | string,\n  zIndex?: number\n) {\n  // avoid using instanceof Entity because it's going to be proxy object due to mobx\n  const isEntity = typeof args !== \"string\";\n  let content;\n  if (isEntity) {\n    content = (\n      <PageEntityComponent entity={args.entity} settings={args.settings} />\n    );\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={args}\n        render={(entity, settings) => (\n          <PageEntityComponent entity={entity} settings={settings} />\n        )}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  ({\n    entity,\n    children,\n    classes,\n    zIndex,\n    settings,\n    ...restprops\n  }: {\n    entity: Entity;\n    settings: EntitySettings;\n    zIndex?: number;\n  } & React.HTMLProps<HTMLDivElement> &\n    WithStyles<typeof styles>) => {\n    // TODO: find a way to remove this hard code\n    const id2prop = useEntityProperties(entity);\n    const content = (\n      <div {...restprops} className={`${classes.root} ${restprops.className}`}>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n            {entity.label.lang2value[entity.label.lang]}\n          </ExternalLink>\n          &nbsp;\n          <Typography.Text\n            italic={true}\n            strong={false}\n            style={{ fontSize: 14, fontWeight: 400 }}\n            copyable={{ text: entity.id }}\n          >\n            ({entity.id})\n          </Typography.Text>\n          <UnfoldMoreIcon\n            style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              openPageEntityComponent(\n                { entity, settings },\n                zIndex !== undefined ? zIndex + 1 : undefined\n              );\n            }}\n          />\n        </h2>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description.lang2value[entity.description.lang]}</p>\n        <hr />\n        <PropertyComponent\n          id2prop={id2prop}\n          entity={entity}\n          filteredProps={settings.showedPropsInPopoverView}\n        />\n      </div>\n    );\n\n    return (\n      <Popover content={content} zIndex={zIndex}>\n        {children}\n      </Popover>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: 1,\n    border: \"1px solid\",\n    borderRadius: 2,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n      setStateSelected(!stateSelected);\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { faCheck, faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport * as RTable from \"./RelationalTable\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\nexport const CandidateEntityListComponent = withStyles(styles)(\n  ({\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const [showAllCandidateModals, setShowAllCandidateModals] = useState(false);\n\n    const links = record.links[index] || [];\n    const candidateLst = [];\n    if (links.length > 0) {\n      for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n        const className =\n          candidateEntity.entityId === links[0].entityId\n            ? classes.correctCandidateEntity\n            : classes.candidateEntity;\n\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <PopoverEntityComponent entity={entity} settings={settings}>\n                    <InlineEntityComponent\n                      nolink={true}\n                      entity={entity}\n                      className={className}\n                    />\n                  </PopoverEntityComponent>\n                )}\n              />\n              <span className={className}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      // if there is a correct entity in top K, no need to highlight, otherwise,\n      // add them to the list\n      const idx = links[0].candidateEntities.findIndex(\n        (candidate) => candidate.entityId === links[0].entityId\n      );\n      if (idx !== -1 && idx >= topK) {\n        const candidateEntity = links[0].candidateEntities[idx];\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <span className={classes.correctCandidateEntity}>\n                    ({idx})&nbsp;\n                    <PopoverEntityComponent entity={entity} settings={settings}>\n                      <InlineEntityComponent nolink={true} entity={entity} />\n                    </PopoverEntityComponent>\n                  </span>\n                )}\n              />\n              <span className={classes.correctCandidateEntity}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      if (links[0].candidateEntities.length > topK) {\n        candidateLst.push(\n          <div key=\"see-more\">\n            <Typography.Text\n              className={classes.candidateEntitySeeMore}\n              onClick={() => setShowAllCandidateModals(!showAllCandidateModals)}\n            >\n              See more\n            </Typography.Text>\n          </div>\n        );\n      }\n    }\n\n    const columns: any = [\n      {\n        dataIndex: \"id\",\n        title: \"Entity\",\n        render: (entityId: string) => {\n          return (\n            <FetchEntityComponent\n              entityId={entityId}\n              render={(entity, settings) => (\n                <PopoverEntityComponent entity={entity} settings={settings}>\n                  <InlineEntityComponent nolink={true} entity={entity} />\n                </PopoverEntityComponent>\n              )}\n            />\n          );\n        },\n      },\n      {\n        dataIndex: \"score\",\n        title: \"Score\",\n        render: (score: number) => {\n          return <Number value={score} fractionDigits={5} />;\n        },\n      },\n      {\n        title: \"action\",\n        render: () => {\n          return (\n            <Space size={4}>\n              <Button>Select</Button>\n            </Space>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {candidateLst}\n        <Modal\n          title=\"Candidate Entities\"\n          visible={showAllCandidateModals}\n          style={{ top: 20 }}\n          bodyStyle={{ padding: 0 }}\n          width={\"60%\"}\n          onOk={() => setShowAllCandidateModals(false)}\n          onCancel={() => setShowAllCandidateModals(false)}\n        >\n          <ProTable\n            defaultSize=\"small\"\n            bordered={true}\n            search={false}\n            pagination={{\n              pageSize: 20,\n              pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n            }}\n            rowKey=\"id\"\n            columns={columns}\n            request={async (params, sort, filter) => {\n              return Promise.resolve({\n                total: links.length > 0 ? links[0].candidateEntities.length : 0,\n                success: true,\n                data:\n                  links.length === 0\n                    ? []\n                    : links[0].candidateEntities\n                        .slice(\n                          (params.current! - 1) * params.pageSize!,\n                          params.current! * params.pageSize!\n                        )\n                        .map((candidateEntity, index) => ({\n                          id: candidateEntity.entityId,\n                          score: candidateEntity.probability,\n                        })),\n              });\n            }}\n          ></ProTable>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n);\n","import * as RTable from \"./RelationalTable\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"rma-baseapp\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  noEntityLink: {\n    color: grey[5],\n    \"&:hover\": {\n      color: grey[5],\n    },\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  ({\n    cell,\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    cell: string;\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const links = record.links[index] || [];\n    let components = links.flatMap((link, index) => {\n      let prefix =\n        index === 0\n          ? cell.substring(0, link.start)\n          : cell.substring(links[index - 1].end, link.start);\n      let linksurface = cell.substring(link.start, link.end);\n      let onCtrlClick = undefined;\n      if (link.entityId !== undefined) {\n        onCtrlClick = () => {\n          openPageEntityComponent(link.entityId!);\n        };\n      }\n      const infix = (\n        <ExternalLink\n          key={index}\n          href={link.url}\n          openInNewPage={true}\n          dangerouslySetInnerHTML={{\n            __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n          }}\n          className={\n            classes.link +\n            (link.entityId === undefined ? \" \" + classes.noEntityLink : \"\")\n          }\n          style={link.entityId === null ? { color: \"#aaa\" } : {}}\n          onCtrlClick={onCtrlClick}\n        />\n      );\n\n      if (link.entityId === undefined) {\n        return [prefix, infix];\n      }\n\n      // reassign to infix somehow killing the application\n      const wrappedInfix = (\n        <FetchEntityComponent\n          key={index}\n          entityId={link.entityId}\n          render={(entity, settings) => (\n            <PopoverEntityComponent\n              entity={entity}\n              zIndex={500}\n              settings={settings}\n            >\n              {infix}\n            </PopoverEntityComponent>\n          )}\n          renderNotFound={() => (\n            <span className={classes.noEntityLink}>{infix}</span>\n          )}\n        />\n      );\n\n      return [prefix, wrappedInfix];\n    });\n\n    if (links.length === 0) {\n      components.push(cell);\n    } else {\n      components.push(cell.substring(links[links.length - 1].end));\n    }\n\n    return (\n      <div>\n        {components}\n        <CandidateEntityListComponent\n          record={record}\n          index={index}\n          topK={topK}\n        />\n      </div>\n    );\n  }\n);\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions, Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { isLineBreak, LineBreak, Text } from \"../../models/table/TableContext\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { CellComponent } from \"./CellComponent\";\nimport * as RTable from \"./RelationalTable\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport const TableComponent = withStyles(styles)(\n  ({\n    table,\n    query,\n    classes,\n    toolBarRender,\n    showRowIndex = false,\n  }: {\n    table: RTable.Table;\n    query: (limit: number, offset: number) => Promise<RTable.Row[]>;\n    toolBarRender?: false;\n    showRowIndex?: boolean;\n  } & WithStyles<typeof styles>) => {\n    const columns = table.columns.map((col, columnIndex) => ({\n      dataIndex: [\"row\", columnIndex, \"value\"],\n      title: col,\n      render: ((value: string, record: RTable.Row) => {\n        return (\n          <CellComponent cell={value} record={record} index={columnIndex} />\n        );\n      }) as any,\n    }));\n\n    if (showRowIndex) {\n      columns.splice(0, 0, {\n        title: (\n          <Typography.Text type=\"secondary\" disabled={true}>\n            #\n          </Typography.Text>\n        ),\n        dataIndex: \"index\",\n      } as any);\n    }\n\n    return (\n      <React.Fragment>\n        <ProTable\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let records = await query(\n              params.pageSize!,\n              (params.current! - 1) * params.pageSize!\n            );\n            return {\n              data: records,\n              success: true,\n              total: table.size,\n            };\n          }}\n          search={false}\n          pagination={{\n            pageSize: 5,\n            pageSizeOptions: [\n              \"5\",\n              \"10\",\n              \"20\",\n              \"50\",\n              \"100\",\n              \"200\",\n              \"500\",\n              \"1000\",\n            ],\n          }}\n          headerTitle={\n            table.context.webpage !== undefined ? (\n              <ExternalLink href={table.context.webpage} openInNewPage={true}>\n                {table.name}\n              </ExternalLink>\n            ) : (\n              table.name\n            )\n          }\n          toolBarRender={toolBarRender}\n          rowKey=\"index\"\n          columns={columns}\n        />\n        <TableInformation table={table} />\n      </React.Fragment>\n    );\n  }\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: RTable.Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.context.webpage !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.context.webpage} openInNewPage={true}>\n        {table.context.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.context.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.context.entityId}\n        render={(entity, settings) => (\n          <PopoverEntityComponent\n            entity={entity}\n            zIndex={500}\n            settings={settings}\n          >\n            <InlineEntityComponent\n              entity={entity}\n              onCtrlClick={() => {\n                openPageEntityComponent({ entity, settings });\n              }}\n            />\n          </PopoverEntityComponent>\n        )}\n        renderNotFound={() => (\n          <span>`Entity ${table.context.entityId} does not exist`</span>\n        )}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.context.contentHierarchy || []).flatMap(\n    (hierarchy, index) => {\n      if (hierarchy.level === 0 && hierarchy.heading.trim().length === 0) {\n        if (\n          hierarchy.contentBefore.every(isLineBreak) &&\n          hierarchy.contentAfter.length === 0\n        ) {\n          return [];\n        }\n      }\n      const output = [\n        <p key={`${index}-head`}>\n          <b>\n            {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n          </b>\n        </p>,\n      ];\n      return output\n        .concat(ContentComponent(`${index}-before`, hierarchy.contentBefore))\n        .concat(ContentComponent(`${index}-after`, hierarchy.contentAfter));\n    }\n  );\n  info.push([\n    \"Content Hierarchy\",\n    content.length > 0 ? <div>{content}</div> : \"N/A\",\n  ]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n\nconst ContentComponent = (key: string, lines: (Text | LineBreak)[]) => {\n  const comps: string[][] = [[]];\n  for (const line of lines) {\n    if (isLineBreak(line)) {\n      comps.push([]);\n    } else {\n      comps[comps.length - 1].push(line.value);\n    }\n  }\n  return comps\n    .filter((lst) => lst.length > 0)\n    .map((lst, i) => <p key={`${key}-${i}`}>{lst}</p>);\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","export class SequentialFuncInvoker {\n  private timer: number = 0;\n  public exec<T>(fn: () => Promise<T>): Promise<T | undefined> {\n    this.timer += 1;\n    let calledAt = this.timer;\n\n    return fn().then((result: any) => {\n      if (calledAt < this.timer) {\n        return undefined;\n      }\n\n      return result;\n    });\n  }\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { useStores } from \"../../models\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n};\n\ntype SearchProps = {\n  value?: string | string[];\n  onDeselect?: (value: string) => void;\n  onSelect?: (value: string) => void;\n  mode?: \"multiple\" | \"tags\";\n} & WithStyles<typeof styles>;\n\nexport const OntPropSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"propertyStore\", props);\n  })\n);\n\nexport const OntClassSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"classStore\", props);\n  })\n);\n\nexport const EntitySearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"entityStore\", props);\n  })\n);\n\nfunction useSearchComponent(\n  storeName: \"propertyStore\" | \"classStore\" | \"entityStore\",\n  props: SearchProps\n) {\n  const store = useStores()[storeName];\n  const seqInvoker = new SequentialFuncInvoker();\n\n  // gather all options already in the store, leverage the fact\n  // that property store is readonly\n  const options = useMemo(() => {\n    const options = [];\n    for (const r of store.iter()) {\n      options.push({\n        value: r.id,\n        label: r.readableLabel,\n      });\n    }\n    return options;\n  }, [store.records.size]);\n\n  // search for additional properties if it's not in the list\n  const onSearch = (query: string) => {\n    if (query === \"\") return;\n    seqInvoker.exec(() => {\n      return store.fetchById(query).then(() => 1);\n    });\n  };\n\n  return (\n    <Select\n      mode={props.mode}\n      allowClear={true}\n      options={options}\n      optionFilterProp=\"label\"\n      className={props.classes.selection}\n      showSearch={true}\n      onSearch={onSearch}\n      value={props.value}\n      onSelect={props.onSelect as any}\n      onDeselect={props.onDeselect as any}\n    />\n  );\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { useStores } from \"../../models\";\nimport { OntPropSearchComponent } from \"./OntSearchComponent\";\n\nconst styles = {};\n\nexport const EntitySettingComponent = withStyles(styles)(\n  observer(({ classes }: {} & WithStyles<typeof styles>) => {\n    const { entityStore } = useStores();\n\n    return (\n      <Descriptions title=\"Entity Settings\" size=\"small\" column={1}>\n        <Descriptions.Item label=\"Properties (full view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInFullView}\n            onSelect={entityStore.settings.addShowedPropsInFullView}\n            onDeselect={entityStore.settings.removeShowedPropsInFullView}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Properties (popover view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInPopoverView}\n            onSelect={entityStore.settings.addShowedPropsInPopoverView as any}\n            onDeselect={\n              entityStore.settings.removeShowedPropsInPopoverView as any\n            }\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  })\n);\n","import { WordWrap } from \"./wordwrap\";\nimport G6, {\n  ModelConfig,\n  ShapeStyle,\n  IGroup,\n  IShape,\n  LabelStyle,\n} from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: LabelStyle;\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n): IShape[] {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.map(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"bg-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  return units.map(({ text, x, y }) => {\n    return group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  label: string;\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n  labelCfg?: { style: LabelStyle };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n  // TODO: fix x and y as well as position of the text\n  const draw = (cfg: RectConfig, group: IGroup): IShape => {\n    const wp = cfg.style.paddingWidth || 0;\n    const hp = cfg.style.paddingHeight || 0;\n    const { units, width, height } = wordwrap.wrapText(\n      cfg.label,\n      cfg.size || defaultWidth,\n      \"center\"\n    );\n\n    // draw shape\n    const shape = group!.addShape(\"rect\", {\n      attrs: {\n        // x,\n        // y,\n        width: width + wp * 2,\n        height: height + hp * 2,\n        ...cfg.style,\n      },\n      name: \"rect\",\n    });\n\n    // draw text\n    drawText(group, wordwrap, units, {\n      xoffset: wp,\n      yoffset: hp,\n      cfg: cfg.labelCfg?.style,\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup) => {\n        return draw(cfg! as RectConfig, group!);\n      },\n\n      // call everything state is changed so we can update the shape\n      // currently clear and re-draw it, but we could do better\n      setState(name, value, node) {\n        const cfg = node!._cfg!;\n        const model = cfg.model!;\n        const states = cfg.states!;\n        let styles: any = {};\n        let labelStyles = { ...model.labelCfg?.style };\n\n        for (const [name, prop] of Object.entries(model.style!)) {\n          if (typeof prop === \"object\") {\n            continue;\n          }\n          styles[name] = prop;\n        }\n        for (const state of states) {\n          for (const [name, prop] of Object.entries(\n            cfg.styles![state] as object\n          )) {\n            if (name === \"label\") {\n              Object.assign(labelStyles, prop);\n            } else {\n              styles[name] = prop;\n            }\n          }\n        }\n\n        const group = cfg.group!;\n        group.clear();\n        draw(\n          {\n            label: model.label as string,\n            size: model.size as number,\n            style: styles,\n            labelCfg: { style: labelStyles },\n          },\n          group\n        );\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import G6, {\n  IGroup,\n  ILabelConfig,\n  IShape,\n  LabelStyle,\n  ModelConfig,\n  ShapeStyle,\n} from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig {\n  label: string;\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n  labelCfg?: { offset: number; style: LabelStyle };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  const draw = (cfg: CircleConfig, group: IGroup): IShape => {\n    const padding = cfg.style.padding || 8;\n    const labelPosition: string = \"below\";\n    const labelOffset = cfg.labelCfg?.offset || 0;\n\n    if (labelPosition === \"inside\") {\n      // render text inside circle\n      const { units, radius } = wordwrap.wrapTextCircle(cfg.label, 256);\n      const shape = group!.addShape(\"circle\", {\n        attrs: {\n          // x: cfg.x,\n          // y: cfg.y,\n          r: radius + padding,\n          ...cfg.style,\n        },\n        name: \"circle\",\n      });\n      drawText(group, wordwrap, units, {\n        xoffset: 0,\n        yoffset: 0,\n        cfg: cfg.labelCfg?.style,\n      });\n      return shape;\n    }\n\n    // render text below circle\n    const { units, width } = wordwrap.wrapText(\n      cfg.label as string,\n      defaultWidth,\n      \"center\"\n    );\n    const defaultRadius = 10;\n    const shape = group!.addShape(\"circle\", {\n      attrs: {\n        // x: cfg.x,\n        // y: cfg.y,\n        r: defaultRadius,\n        ...cfg.style,\n      },\n      name: \"circle\",\n    });\n\n    drawText(group, wordwrap, units, {\n      xoffset: -width / 2,\n      yoffset: defaultRadius + labelOffset,\n      cfg: cfg?.labelCfg?.style,\n      stroke: { color: \"white\", width: 4 },\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup): IShape => {\n        return draw(cfg! as CircleConfig, group!);\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\nimport { testNodeWrap } from \"./TestNodeWrap\";\nimport _ from \"lodash\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units -- default 0\n  leftOffset?: number;\n  // shift the node in the graph by `topOffset` units -- default 0\n  topOffset?: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n  // highlight the node and its related nodes and edges when the mouse enter the node;\n  // default is false\n  enableActivateRelations?: boolean;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  public props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    const modes: any[] = [\"drag-canvas\", \"drag-node\"];\n\n    if (props.enableActivateRelations) {\n      modes.push({\n        type: \"activate-relations\",\n        resetSelected: true,\n      });\n    }\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: modes,\n        edit: [\"click-select\"],\n      },\n      // these control styles of nodes & edges at different states\n      // currently define active & inactive for the activate-relations mode\n      nodeStateStyles: {\n        active: {\n          opacity: 1,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 1,\n          },\n        },\n        inactive: {\n          opacity: 0.2,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 0.2,\n          },\n        },\n      },\n      edgeStateStyles: {\n        active: {\n          stroke: \"black\",\n          opacity: 1,\n        },\n        inactive: {\n          opacity: 0.2,\n          text: {\n            opacity: 0.2,\n          },\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        this.props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        this.props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Try to hot-swap the properties of this graph and returns whether it's success or not */\n  hotswapProps = (props: G6GraphProps) => {\n    if (!_.isEqual(this.props.layout, props.layout)) {\n      return false;\n    }\n\n    if (this.props.enableActivateRelations !== props.enableActivateRelations) {\n      return false;\n    }\n\n    this.props = props;\n    return true;\n  };\n\n  destroy = () => {\n    this.graph.destroy();\n  };\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // const { nodes: x, edges: y } = testNodeWrap(\"rect\");\n    // nodes = x;\n    // edges = y;\n\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: {\n          ...u.style,\n          radius: 4,\n          paddingHeight: 2,\n          paddingWidth: 4,\n        },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    if (_.uniq(edges.map((u) => u.id)).length !== edges.length) {\n      console.error(\n        \"Edges must have unique ids. However, we get:\",\n        edges.map((u) => u.id)\n      );\n    }\n\n    let newEdges = edges.map((e) => ({\n      id: e.id,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /**\n   * Adjust the canvas size to fit with the graph\n   *\n   * For fit-graph mode, the extraHeight mode is used to add top & bottom padding so that it's not too close (e.g., 20px)\n   * For fit-remaining-window, the offsetHeight is used to reserved some pixels at the bottom of the window so that it's not overflow (e.g., minus 1px for the border)\n   * For keep-as-is, we use the initial height\n   */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height:\n      | { type: \"fit-graph\"; extraHeight: number }\n      | { type: \"fit-remaining-window\"; offsetHeight: number }\n      | { type: \"keep-as-is\" };\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      let graphHeight;\n      switch (height.type) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + height.extraHeight;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight -\n            (viewportOffset + documentScrollY) -\n            height.offsetHeight;\n          break;\n        case \"keep-as-is\":\n          graphHeight = this.props.initHeight;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n      if (center === true) {\n        this.graph.moveTo(\n          graphWidth / 2 - bbox.width / 2,\n          graphHeight / 2 - bbox.height / 2\n        );\n      } else {\n        this.graph.moveTo(\n          this.props.leftOffset || 0,\n          this.props.topOffset || 0\n        );\n      }\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  bordered: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n  },\n  container: {\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n  recenter: () => boolean;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = { type: \"fit-graph\", extraHeight: 8 },\n        toolbar = false,\n        bordered = true,\n        layouts = GraphLayout,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        bordered?: boolean;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?:\n          | { type: \"fit-graph\"; extraHeight: number }\n          | { type: \"fit-remaining-window\"; offsetHeight: number }\n          | { type: \"keep-as-is\" };\n        className?: string;\n        layouts?: typeof GraphLayout;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n          recenter: () => {\n            if (graph.current === undefined) return false;\n            graph.current.updateContainerSize({\n              center: true,\n              height: renderingAdjustedHeight,\n            });\n            return true;\n          },\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n            }\n          );\n        }\n\n        let g = graph.current;\n        if (props !== undefined) {\n          const success = g.hotswapProps(props);\n          if (!success) {\n            g.destroy();\n            graph.current = new G6Graph(\n              container.current,\n              props || {\n                initHeight: 500,\n              }\n            );\n            g = graph.current;\n          }\n        }\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar\n            autoHide={toolbar === \"auto-hide\"}\n            graph={graph}\n            layouts={layouts}\n          />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div\n              ref={container}\n              className={\n                classes.container + (bordered ? \" \" + classes.bordered : \"\")\n              }\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n    layouts,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n    layouts: typeof GraphLayout;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (name: keyof typeof GraphLayout) => {\n      setLayout(name);\n      graph.current?.updateLayout(layouts[name]);\n      graph.current?.untilLayoutStable(20, 50, centerGraph, [], () => {});\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4} align=\"start\">\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Form, Input, Modal, Radio, Select, Space, Switch } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SequentialFuncInvoker } from \"../../../misc\";\nimport { SemanticModel, useStores, GraphEdge, Property } from \"../../../models\";\nimport { SMNode } from \"../../../models/sm\";\nimport {\n  OntClassSearchComponent,\n  OntPropSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {\n  table: {\n    width: \"100%\",\n    textAlign: \"left\",\n    borderSpacing: 0,\n    borderRadius: \"2px 2px 0 0\",\n\n    \"& tr\": {\n      verticalAlign: \"middle\",\n    },\n    \"& th, td\": {\n      padding: \"0 4px\",\n    },\n  },\n  selection: {\n    width: \"100%\",\n  },\n} as const;\n\nexport const NodeSelectionComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      classes,\n      value,\n      onSelect,\n      onDeselect,\n    }: {\n      sm: SemanticModel;\n      value?: string;\n      onDeselect?: (value: string) => void;\n      onSelect?: (value: string) => void;\n    } & WithStyles<typeof styles>) => {\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        return sm.graph.nodes.map((node) => {\n          return {\n            value: node.id,\n            label: node.label,\n          };\n        });\n      }, [sm]);\n\n      return (\n        <Select\n          showSearch={true}\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          value={value}\n          onSelect={onSelect as any}\n          onDeselect={onDeselect as any}\n        />\n      );\n    }\n  )\n);\n\nexport type EdgeFormProps = {\n  sm: SemanticModel;\n  edge?: GraphEdge;\n};\n\nexport const EdgeForm = withStyles(styles)(\n  observer(\n    ({ sm, edge, classes }: EdgeFormProps & WithStyles<typeof styles>) => {\n      const { propertyStore } = useStores();\n      const [source, setSource] = useState<string | undefined>(edge?.source);\n      const [target, setTarget] = useState<string | undefined>(edge?.target);\n      const [predicate, setPredicate] = useState<string | undefined>(\n        edge === undefined\n          ? undefined\n          : propertyStore.getPropertyByURI(edge.uri)?.id\n      );\n      const [approximation, setApproximation] = useState(false);\n\n      useEffect(() => {\n        if (edge === undefined) {\n          return;\n        }\n\n        if (propertyStore.getPropertyByURI(edge.uri) === undefined) {\n          propertyStore\n            .fetchOne({\n              conditions: { uri: edge.uri },\n            })\n            .then((prop: Property | undefined) => {\n              if (prop === undefined) return;\n              setPredicate(prop.id);\n            });\n        }\n      }, [edge, predicate]);\n\n      const isValid = () => {\n        return (\n          source !== undefined &&\n          target !== undefined &&\n          predicate !== undefined\n        );\n      };\n\n      const save = () => {\n        if (!isValid()) return;\n        const prop = propertyStore.get(predicate!)!;\n\n        sm.graph.addEdge({\n          source: source!,\n          target: target!,\n          uri: prop.uri,\n          approximation,\n          label: prop.label,\n        });\n\n        Modal.destroyAll();\n      };\n\n      const remove = () => {\n        if (edge === undefined) return;\n        sm.graph.removeEdge(edge.source, edge.target);\n        Modal.destroyAll();\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item label=\"Source\">\n            <NodeSelectionComponent\n              sm={sm}\n              value={source}\n              onSelect={setSource}\n              onDeselect={() => setSource(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Target\">\n            <NodeSelectionComponent\n              sm={sm}\n              value={target}\n              onSelect={setTarget}\n              onDeselect={() => setTarget(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Predicate\">\n            <OntPropSearchComponent\n              value={predicate}\n              onSelect={setPredicate}\n              onDeselect={(value) => setPredicate(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Approximation\">\n            <Switch\n              checked={approximation}\n              onChange={(val) => setApproximation(val)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Button\">\n            <Space>\n              <Button type=\"primary\" onClick={save} disabled={!isValid()}>\n                Save\n              </Button>\n              {edge !== undefined ? (\n                <Button\n                  type=\"primary\"\n                  danger={true}\n                  onClick={remove}\n                  disabled={!isValid()}\n                >\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Radio, Space, Switch } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { SMNode, SemanticModel, SMNodeType } from \"../../../models/sm\";\nimport {\n  EntitySearchComponent,\n  OntClassSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {} as const;\n\nexport interface NodeFormProps {\n  sm: SemanticModel;\n  node?: SMNode;\n}\n\nexport const NodeForm = withStyles(styles)(\n  observer(\n    ({ sm, node, classes }: NodeFormProps & WithStyles<typeof styles>) => {\n      const { classStore, entityStore } = useStores();\n      const [nodetype, setNodeType] = useState<SMNodeType>(\"class_node\");\n      const [nodeId, setNodeId] = useState<string | undefined>(node?.id);\n      const [approximation, setApproximation] = useState(\n        node !== undefined && node.nodetype === \"class_node\"\n          ? node.approximation\n          : false\n      );\n      const [isInContext, setIsInContext] = useState(\n        node !== undefined && node.nodetype === \"literal_node\"\n          ? node.isInContext\n          : false\n      );\n\n      const isValid = () => nodeId !== undefined;\n      const isDeletable = () => {\n        if (node === undefined) return false;\n        if (node.nodetype === \"literal_node\" && node.isInContext) return false;\n        return true;\n      };\n\n      const save = () => {\n        if (!isValid()) return;\n        switch (nodetype) {\n          case \"class_node\":\n            const node = classStore.get(nodeId!)!;\n            sm.graph.addClassNode({\n              id: sm.graph.nextNodeId(),\n              uri: node.uri,\n              approximation,\n              label: node.readableLabel,\n              nodetype,\n            });\n            break;\n          case \"literal_node\":\n            const entity = entityStore.get(nodeId!)!;\n            sm.graph.addLiteralNode({\n              id: `ent:${entity.id}`,\n              value: {\n                type: \"entity-id\",\n                id: entity.id,\n                uri: entity.uri,\n              },\n              label: entity.readableLabel,\n              isInContext: isInContext,\n              nodetype,\n            });\n            break;\n        }\n\n        Modal.destroyAll();\n      };\n\n      const remove = () => {\n        if (node === undefined) return;\n        sm.graph.removeNode(node.id);\n        Modal.destroyAll();\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item label=\"Node Type\">\n            <Radio.Group\n              value={nodetype}\n              onChange={(event) => setNodeType(event.target.value)}\n              buttonStyle=\"solid\"\n            >\n              <Radio.Button value=\"class_node\">Class Node</Radio.Button>\n              <Radio.Button value=\"literal_node\">Literal Node</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label=\"ID or URI\">\n            {nodetype === \"class_node\" ? (\n              <OntClassSearchComponent\n                value={nodeId}\n                onSelect={setNodeId}\n                onDeselect={(value) => setNodeId(undefined)}\n              />\n            ) : (\n              <EntitySearchComponent\n                value={nodeId}\n                onSelect={setNodeId}\n                onDeselect={(value) => setNodeId(undefined)}\n              />\n            )}\n          </Form.Item>\n          {nodetype === \"class_node\" ? (\n            <Form.Item label=\"Approximation\">\n              <Switch\n                checked={approximation}\n                onChange={(val) => setApproximation(val)}\n              />\n            </Form.Item>\n          ) : null}\n          {nodetype === \"literal_node\" ? (\n            <Form.Item label=\"Is In Context?\">\n              <Switch\n                checked={isInContext}\n                onChange={(val) => setIsInContext(val)}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\"Button\">\n            <Space>\n              <Button type=\"primary\" onClick={save} disabled={!isValid()}>\n                Save\n              </Button>\n              {node !== undefined ? (\n                <Button\n                  type=\"primary\"\n                  danger={true}\n                  onClick={remove}\n                  disabled={!isDeletable()}\n                >\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { Modal } from \"antd\";\nimport { EdgeForm, EdgeFormProps } from \"./EdgeForm\";\nimport { NodeForm, NodeFormProps } from \"./NodeForm\";\n\ninterface TypedEdgeFormProps extends EdgeFormProps {\n  type: \"edge\";\n}\n\ninterface TypedNodeFormProps extends NodeFormProps {\n  type: \"node\";\n}\n\nexport function openForm(\n  args: TypedEdgeFormProps | TypedNodeFormProps,\n  zIndex?: number\n) {\n  let title;\n  let content;\n  switch (args.type) {\n    case \"edge\":\n      content = <EdgeForm {...args} />;\n      title = args.edge === undefined ? \"Add Edge\" : \"Update Edge\";\n      break;\n    case \"node\":\n      content = <NodeForm {...args} />;\n      title = args.node === undefined ? \"Add Node\" : \"Update Node\";\n      break;\n  }\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>{title}</span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Divider, Popconfirm, Space } from \"antd\";\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  SemanticModel,\n  Table,\n  DraftSemanticModel,\n  SMGraph,\n  useStores,\n} from \"../../models\";\nimport {\n  GraphComponent,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport { gold, green, orange, yellow, purple, grey } from \"@ant-design/colors\";\nimport { observer } from \"mobx-react\";\nimport { openForm } from \"./forms\";\nimport { toJS } from \"mobx\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    marginTop: 8,\n  },\n  draft: {\n    border: `1px dashed ${yellow[7]} !important`,\n    \"&:hover\": {\n      color: `${gold[5]} !important`,\n    },\n  },\n  selectedDraft: {\n    backgroundColor: `${gold[5]} !important`,\n  },\n};\n\nexport const SemanticModelComponent = withStyles(styles)(\n  observer(\n    ({ classes, table }: { table: Table } & WithStyles<typeof styles>) => {\n      const graphRef = useRef<GraphComponentFunc | undefined>(undefined);\n      const [currentIndex, setCurrentIndex] = useState(0);\n      const { semanticModelStore } = useStores();\n      const sms = semanticModelStore.findByTable(table.id);\n      const drafts = semanticModelStore.getDraftsByTable(table);\n      if (currentIndex >= sms.length + drafts.length) {\n        // there is no semantic model & no draft for this table, create a new draft\n        const id = semanticModelStore.getNewDraftId(table);\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          `sm-${sms.length}`,\n          table\n        );\n        semanticModelStore.setCreateDraft(draft);\n        drafts.push(draft);\n      }\n\n      const sm =\n        currentIndex < sms.length\n          ? sms[currentIndex]\n          : drafts[currentIndex - sms.length];\n\n      const [nodes, edges] = useMemo(() => {\n        const nodes = sm.graph.nodes.map((node) => {\n          let shape: GraphNode[\"shape\"], style;\n          switch (node.nodetype) {\n            case \"class_node\":\n              shape = \"circle\";\n              style = { fill: green[2], stroke: green[8] };\n              break;\n            case \"data_node\":\n              shape = \"rect\";\n              style = { fill: gold[3], stroke: gold[8] };\n              break;\n            case \"literal_node\":\n              if (node.value.type === \"entity-id\") {\n                shape = \"circle\";\n              } else {\n                shape = \"rect\";\n              }\n              if (node.isInContext) {\n                style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n              } else {\n                style = { fill: purple[2], stroke: \"#c41d7f\" };\n              }\n              break;\n            default:\n              throw new Error(`Unreachable!`);\n          }\n\n          return {\n            id: node.id,\n            label: node.label,\n            style,\n            shape,\n          };\n        });\n        const edges = sm.graph.edges.map((edge) => {\n          return {\n            id: `${edge.source}-${edge.target}-${edge.uri}`,\n            source: edge.source,\n            target: edge.target,\n            label: edge.label,\n          };\n        });\n\n        return [nodes, edges];\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [\n        SemanticModel.isDraft(sm) ? sm.draftID : null,\n        sm.id,\n        sm.graph.version,\n      ]);\n\n      // center the graph\n      const centering = () => {\n        if (graphRef.current === undefined) {\n          return;\n        }\n        graphRef.current.recenter();\n      };\n      useHotkeys(\"c\", centering, [sm.id, graphRef !== undefined]);\n\n      // add model\n      const cloneNewModel = () => {\n        const id = semanticModelStore.getNewDraftId(table);\n        const nSms = sms.length + drafts.length;\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          semanticModelStore.getNewSemanticModelName(table),\n          table\n        );\n        draft.graph = sm.graph.clone();\n        draft.graph.id = id;\n        semanticModelStore.setCreateDraft(draft);\n        setCurrentIndex(nSms);\n      };\n\n      const smLists = [];\n      for (let idx = 0; idx < sms.length + drafts.length; idx++) {\n        const item = idx < sms.length ? sms[idx] : drafts[idx - sms.length];\n        const isSelected = idx === currentIndex;\n        smLists.push(\n          <Button\n            size=\"small\"\n            key={item.id}\n            type={isSelected ? \"primary\" : \"default\"}\n            onClick={() => setCurrentIndex(idx)}\n            className={\n              item.graph.stale || SemanticModel.isDraft(item)\n                ? classes.draft +\n                  (isSelected ? ` ${classes.selectedDraft}` : \"\")\n                : \"\"\n            }\n          >\n            {item.name}\n          </Button>\n        );\n      }\n\n      // only show the list of semantic models when we have more than one semantic model\n      // or when we have some drafts or when the only semantic model is modified\n      let smListComponent = undefined;\n      smListComponent = (\n        <Space style={{ float: \"right\" }}>\n          {smLists.length !== 1 || drafts.length > 0 || sms[0].graph.stale ? (\n            <React.Fragment>\n              <span>Semantic Models:</span>\n              {smLists}\n              <Divider type=\"vertical\" />\n            </React.Fragment>\n          ) : null}\n          {/* reset is nice to have, but we didn't have the original copy... */}\n          {/* {!sm.isDraft && sm.graph.stale ? (\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Reset\n            </Button>\n          ) : null} */}\n          {sms.length + drafts.length > 1 ? (\n            <Popconfirm\n              title=\"Are you sure to delete this model?\"\n              onConfirm={() => {\n                if (SemanticModel.isDraft(sm)) {\n                  semanticModelStore.deleteCreateDraft(sm.draftID);\n                } else {\n                  semanticModelStore.delete(sm.id);\n                }\n                setCurrentIndex(0);\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button size=\"small\" danger={true}>\n                Delete model\n              </Button>\n            </Popconfirm>\n          ) : null}\n          {SemanticModel.isDraft(sm) || sm.graph.stale ? (\n            <Button\n              size=\"small\"\n              onClick={() =>\n                SemanticModel.isDraft(sm)\n                  ? semanticModelStore.create(sm)\n                  : semanticModelStore.update(sm)\n              }\n            >\n              Save model\n            </Button>\n          ) : null}\n\n          <Button size=\"small\" onClick={cloneNewModel}>\n            Add model\n          </Button>\n        </Space>\n      );\n\n      return (\n        <div>\n          {smListComponent}\n          <Space>\n            <Button size=\"small\" onClick={centering}>\n              Center graph (C)\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"node\", sm })}>\n              Add node\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Add edge\n            </Button>\n          </Space>\n          <GraphComponent\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.graph.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight={{ type: \"fit-graph\", extraHeight: 20 }}\n            props={{\n              initHeight: 300,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                openForm({\n                  type: \"node\",\n                  sm,\n                  node: sm.graph.node(nodeId),\n                });\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                openForm({\n                  type: \"edge\",\n                  sm,\n                  edge: sm.graph.edge(edge.source, edge.target),\n                });\n              },\n            }}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Descriptions, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { TableComponent } from \"../../components/table\";\nimport * as RTable from \"../../components/table/RelationalTable\";\nimport {\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { EntitySettingComponent } from \"./EntitySettingComponent\";\nimport { SemanticModelComponent } from \"./SemanticModelComponent\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const { projectStore, tableStore, tableRowStore, semanticModelStore } =\n      useStores();\n\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      tableStore,\n      tableId\n    );\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n\n      // fetch its semantic model\n      if (!semanticModelStore.hasByTable(tableId)) {\n        semanticModelStore.fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        });\n      }\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = tableStore.get(tableId);\n    const rtable: RTable.Table | undefined = useMemo(() => {\n      const table = tableStore.get(tableId);\n      if (table === undefined || table === null) {\n        return undefined;\n      }\n\n      return {\n        name: table.name,\n        description: table.description,\n        columns: table.columns,\n        size: table.size,\n        context: {\n          webpage: table.contextPage?.url,\n          title: table.contextPage?.title,\n          entityId: table.contextPage?.entityId,\n          contentHierarchy: table.contextTree,\n        },\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableId, table !== undefined]);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined) {\n      return <LoadingPage />;\n    }\n\n    let semComponent = null;\n    if (!semanticModelStore.hasByTable(tableId)) {\n      semComponent = <LoadingPage bordered={true} />;\n    } else {\n      semComponent = <SemanticModelComponent key={tableId} table={table} />;\n    }\n\n    const queryRow = async (limit: number, offset: number) => {\n      let result = await tableRowStore.fetch({\n        limit,\n        offset,\n        conditions: { table: table.id },\n      });\n      return result.records.map((row) => ({\n        index: row.index,\n        row: row.row.map((v) => ({ value: v })),\n        links: row.links,\n      }));\n    };\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={projectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            {semComponent}\n            <TableComponent\n              key={tableId}\n              toolBarRender={false}\n              table={rtable!}\n              query={queryRow}\n              showRowIndex={true}\n            />\n            <EntitySettingComponent />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [TableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nconst TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {props.table.name}\n          </span>\n        </Space>\n      }\n      subTitle={\n        <Space>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </Space>\n      }\n      extra={props.btns}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the application\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    component: ProjectPage,\n    urlSchema: { projectId: \"number\" },\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    component: TablePage,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    pathDef: \"/tables/:tableId\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={true} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}