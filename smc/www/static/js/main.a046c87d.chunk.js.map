{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","models/project/Project.ts","env.ts","models/project/ProjectStore.ts","models/project/ProjectUpload.ts","models/table/TableContext.ts","models/table/TableRowStore.ts","models/table/TableStore.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/entity/Entity.ts","models/entity/EntitySettings.ts","models/entity/EntityStore.ts","models/ontology/PropertyStore.ts","models/ontology/ClassStore.ts","models/AssistantService.ts","models/index.ts","pages/project/forms/NewProjectForm.tsx","pages/home/HomePage.tsx","pages/project/forms/UpdateProjectForm.tsx","pages/project/forms/upload/ParserOptsComponent.tsx","pages/project/forms/upload/RawTableComponent.tsx","pages/project/forms/upload/UploadTableForm.tsx","pages/project/ProjectPage.tsx","components/entity/Entity.ts","components/entity/InlineEntityComponent.tsx","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","components/element/Number.tsx","components/element/Button.tsx","components/table/CandidateEntityListComponent.tsx","components/table/CellComponent.tsx","components/table/TableComponent.tsx","components/table/styles.ts","misc/SequentialFuncInvoker.ts","pages/table/OntSearchComponent.tsx","pages/table/EntitySettingComponent.tsx","components/graph/RectNode.ts","components/graph/CircleNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/GraphComponent.tsx","pages/table/NodeSearchComponent.tsx","pages/table/forms/EdgeForm.tsx","pages/table/forms/NodeForm.tsx","pages/table/forms/index.tsx","pages/table/SemanticModelComponent.tsx","pages/table/TablePage.tsx","logo.png","routes.tsx","pages/SettingPage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","length","Object","entries","key","name2field","fromEntries","undefined","batch","BatchFetchRequests","action","fetchOne","fetchById","list","limit","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","store","window","requests","executingRequests","callback","clearTimeout","setTimeout","promise","exec","catch","pendingPromises","all","x","reqs","fetchByIds","req","delete","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","update","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","listener","draft","discardDraft","serializeCreateDraft","draftID","put","serializeUpdateDraft","toModel","markSaved","prevRecord","deindex","clear","remove","SingleKeyUniqueIndex","idField","fkField","SingleKeyIndex","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","openInNewPage","preventDefault","ctrlKey","metaKey","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","ConfigProvider","locale","enUSIntl","Router","Switch","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Project","description","DraftUpdateProject","project","DraftCreateProject","SERVER","ProjectStore","uploadTable","projectId","file","parserOpt","selectedTables","a","form","FormData","append","headers","tables","table_ids","formats","isLineBreak","nLines","TableRowStore","fetchByTable","table","start","no","hasLocalData","tableIndex","rowId","links","forEach","link","entity","entityId","candidate_entities","ce","candidateEntities","entity_id","TableStore","findByProject","projectIndex","contextPage","context_page","contextValues","context_values","context_tree","contextTree","contentBefore","content_before","n_lines","contentAfter","content_after","URICount","nodes","counter","id2num","label","node","nextLabel","uri","getNum","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","isEmpty","clone","toJS","onSave","hasNode","nodesByURI","nodeByColumnIndex","nodeByEntityId","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","graph","isDraft","sm","DraftSemanticModel","columns","column","SemanticModelStore","getNewCreateDraftId","getCreateDraft","column_index","is_in_context","sms","findByTable","drafts","getCreateDraftsByTable","idx","concat","parseInt","Math","max","tableId","Entity","readableLabel","aliases","properties","id2uri","uri2id","entityURI","startsWith","slice","EntitySettings","_showedPropsInFullView","_showedPropsInPopoverView","setShowedPropsInFullView","setShowedPropsInPopoverView","addShowedPropsInFullView","addShowedPropsInPopoverView","removeShowedPropsInFullView","removeShowedPropsInPopoverView","showedPropsInFullView","showedPropsInPopoverView","EntityStore","settings","readable_label","stmts","stmt","qualifiersOrder","qualifiers_order","PropertyStore","getPropertyByURI","uriIndex","ClassStore","getClassByURI","AssistantService","tableStore","tableRowStore","smStore","rows","predict","algorithm","rawsm","mtab","rawrows","draftId","prevDrafts","getNewSemanticModelName","row","semanticModelStore","stores","projectStore","entityStore","propertyStore","classStore","assistantService","_stores","StoreContext","createContext","useStores","useContext","NewProjectForm","observer","Form","useForm","useState","nameValidation","setNameValidation","labelCol","span","wrapperCol","onFinish","getFieldValue","destroyAll","rules","required","validateStatus","htmlType","colorWheels","red","volcano","blue","gold","orange","yellow","lime","green","cyan","geekblue","purple","magenta","HomePage","useEffect","Fragment","gutter","Title","level","float","zIndex","content","info","marginBottom","display","bodyStyle","margin","maskClosable","mask","width","top","openNewProjectForm","itemLayout","dataSource","renderItem","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","UpdateProjectForm","fromProject","initialValue","home","CSVParserForm","opt","onChange","setFieldsValue","delimiter","valuePropName","escapeDelimiter","ParserOptsForm","additionalProps","parserOpts","format","layout","initialValues","Option","RawTableComponent","borderLeft","fontWeight","defaultSize","toolBarRender","pagination","pageSize","pageSizeOptions","rowKey","header","dataIndex","request","sort","current","end","success","styles","upload","padding","carouselDot","opacity","UploadPhase1","setUploadTable","direction","Dragger","multiple","onDrop","dataTransfer","files","tbl","beforeUpload","InboxOutlined","UploadPhase2","uploadingTable","destroy","onDone","setSelectedTables","Text","checked","lst","parser_opts","flag","UploadTableForm","phase","setPhase","setUploadingTable","ProjectPage","useModal","modal","contextHolder","actionRef","useRef","LoadingPage","renderText","text","encodeWhereQuery","_","upperFirst","fontSize","openUpdateProjectForm","EditOutlined","table2row","options","headerTitle","cfg","ref","openUploadTableForm","reload","useEntityProperties","propIds","pid","qualifiers","qid","doesNotExist","InlineEntityComponent","nolink","FetchEntityComponent","render","renderLoading","renderNotFound","forceWaiting","InlinePropertyComponent","property","showId","CollapsibleComponent","hide","visible","setVisible","toggleVisible","btn","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","unit","amount","language","globe","latitude","longitude","StatementComponent","marginLeft","id2prop","qval","italic","valueIndex","PropertyComponent","propDivider","color","filteredProps","components","strong","PropertyFilterComponent","enable","setEnable","addFilteredProp","removeFilteredProp","allowClear","optionFilterProp","onSelect","onDeselect","PageEntityComponent","minWidth","lang2value","lang","copyable","lang2values","openPageEntityComponent","args","icon","PopoverEntityComponent","cursor","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","selected","colorSelected","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","candidateLst","faCheck","faCheckDouble","probability","findIndex","candidate","score","textDecoration","noEntityLink","CellComponent","cell","flatMap","prefix","substring","linksurface","infix","dangerouslySetInnerHTML","__html","trim","verticalAlign","TableComponent","forwardRef","showRowIndex","useImperativeHandle","col","disabled","context","webpage","TableInformation","contentHierarchy","hierarchy","heading","repeat","ContentComponent","lines","comps","line","SequentialFuncInvoker","timer","calledAt","selection","OntPropSearchComponent","useSearchComponent","OntClassSearchComponent","EntitySearchComponent","storeName","seqInvoker","showSearch","onSearch","EntitySettingComponent","drawText","group","wordwrap","units","xoffset","yoffset","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","registerCircleNode","defaultWidth","getApproximateWidth","G6","registerNode","draw","labelOffset","labelCfg","wrapText","cacheFn","cache","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","lineHeight","cssLineHeight","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","b","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","deltaX","deltaY","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","hotswapProps","isEqual","enableActivateRelations","fitCenter","setDataAndRender","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","extraHeight","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","offsetHeight","initHeight","changeSize","moveTo","leftOffset","topOffset","untilLayoutStable","maxTries","delay","significantChange","prevBBox","nextBBox","wp","paddingWidth","hp","paddingHeight","setState","_cfg","model","states","labelStyles","registerRectNode","modes","resetSelected","Graph","scrollWidth","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","default","edit","nodeStateStyles","active","inactive","edgeStateStyles","onNodeClick","on","event","onEdgeClick","newNodes","u","labelStyle","uniq","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","renderingAdjustedHeight","layouts","recenter","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","centerGraph","changeLayout","FullscreenOutlined","overlay","LayoutOutlined","DownOutlined","class_node","literal_node","data_node","NodeSearchComponent","option","borderSpacing","EdgeForm","setSource","setTarget","setURI","setApproximation","dupEdge","labelWrap","help","val","colon","cls","newEdge","ClassNodeSubForm","LiteralNodeSubForm","setId","setIsInContext","duplicatedId","ent","DataNodeSubForm","NodeForm","setNodeType","Group","buttonStyle","openForm","graphContainer","selectedDraft","SemanticModelComponent","leftMenu","graphRef","currentIndex","setCurrentIndex","getDefaultDraftSemanticModel","getNodeLabel","centering","useHotkeys","smLists","isSelected","smListComponent","onConfirm","nSms","borderColor","tableExport","TablePage","marginRight","hasFetchSemanticModel","setHashFetchSemanticModel","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","sortedIndex","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","tableRef","hasByTable","rtable","semComponent","queryRow","btns","extraSubTitle","TableNavBar","onBack","ms","navigator","clipboard","writeText","AutoHideTooltip","onVisibleChange","trigger","projects","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.a046c87d.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     * @param indices list of indices to create\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        /**\n         * Deserialize the data sent from the server to a record.\n         */\n        this.deserialize = (record) => {\n            if (this.nameAndField.length > 0) {\n                for (const [name, field] of this.nameAndField) {\n                    record[field] = record[name];\n                    delete record[name];\n                }\n            }\n            return record;\n        };\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        this.batch = new BatchFetchRequests(this, 50);\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n        this.index(m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\nclass BatchFetchRequests {\n    constructor(store, window) {\n        this.store = store;\n        this.window = window;\n        this.requests = new Set();\n        this.executingRequests = new Map();\n    }\n    fetchById(id) {\n        this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    // in case it's still pending from previous requests\n                    const m = this.executingRequests.get(id);\n                    if (m !== undefined) {\n                        // don't remove executingRequests as it will be removed automatically when the promise resolves\n                        m.then(() => {\n                            const r = this.store.records.get(id);\n                            resolve(r === null ? undefined : r);\n                        });\n                    }\n                    else {\n                        const r = this.store.records.get(id);\n                        resolve(r === null ? undefined : r);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    fetchByIds(ids) {\n        for (const id of ids)\n            this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    const output = {};\n                    const pendingPromises = [];\n                    for (const id of ids) {\n                        const m = this.executingRequests.get(id);\n                        if (m !== undefined) {\n                            // don't remove executingRequests as it will be removed automatically when the promise resolves\n                            pendingPromises.push([m, id]);\n                        }\n                        else {\n                            const record = this.store.records.get(id);\n                            if (record !== null && record !== undefined) {\n                                output[id] = record;\n                            }\n                        }\n                    }\n                    if (pendingPromises.length > 0) {\n                        // waiting for pending requests to finish\n                        Promise.all(pendingPromises.map((x) => x[0])).then(() => {\n                            for (const [m, id] of pendingPromises) {\n                                const record = this.store.records.get(id);\n                                if (record !== null && record !== undefined) {\n                                    output[id] = record;\n                                }\n                            }\n                            resolve(output);\n                        });\n                    }\n                    else {\n                        resolve(output);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    exec() {\n        // clear the callback as we are executing it\n        this.callback = undefined;\n        // sending out requests that is not executing\n        const reqs = Array.from(this.requests).filter((id) => !this.executingRequests.has(id));\n        // clean up the requests so the next callback can add\n        this.requests = new Set();\n        const promise = this.store.fetchByIds(reqs);\n        // adding the sending out requests into the executing queue\n        for (const req of reqs)\n            this.executingRequests.set(req, promise);\n        return promise.then((result) => {\n            // clean up the executing requests\n            for (const req of reqs)\n                this.executingRequests.delete(req);\n            return result;\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, makeObservable, runInAction, action, override, } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Create the record, will sync with remote server.\n     */\n    create(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft) {\n                        this.createDrafts.delete(draft.draftID);\n                    }\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Update the record, with sync with remote server\n     */\n    update(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                return runInAction(() => {\n                    let record = draft.toModel() || this.deserialize(resp.data);\n                    draft.markSaved();\n                    // deindex the record if it's in the store\n                    const prevRecord = this.records.get(draft.id);\n                    if (prevRecord !== undefined && prevRecord !== null) {\n                        this.deindex(prevRecord);\n                    }\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft && this.updateDrafts.has(draft.id)) {\n                        this.updateDrafts.delete(draft.id);\n                    }\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove a record, will sync with remote server\n     */\n    delete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                runInAction(() => {\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        makeObservable(this, {\n            create: override,\n            update: override,\n        });\n    }\n    create(draft) {\n        const _super = Object.create(null, {\n            create: { get: () => super.create }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.create.call(this, Object.assign({ draftID: \"\" }, draft), true);\n        });\n    }\n    update(draft) {\n        const _super = Object.create(null, {\n            update: { get: () => super.update }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.update.call(this, Object.assign({\n                markSaved: () => { },\n                toModel: () => undefined,\n            }, draft), true);\n        });\n    }\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\n","import { action, makeObservable, observable } from \"mobx\";\nexport class SingleKeyUniqueIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        this.index.set(key, record[this.idField]);\n    }\n    remove(record) {\n        const key = record[this.fkField];\n        this.index.delete(key);\n    }\n}\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index\n                .get(key1)\n                .get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3\n            .get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e, openInNewPage) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (openInNewPage || (e !== undefined && (e.ctrlKey || e.metaKey))) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (_a) => {\n    var { path, urlArgs, queryArgs, openInNewPage = false, children } = _a, restprops = __rest(_a, [\"path\", \"urlArgs\", \"queryArgs\", \"openInNewPage\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e, openInNewPage);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    // has to wrap the config provider here when creating components\n    // otherwise, create components first, store in an object, and wrap won't work\n    return (_jsx(ConfigProvider, Object.assign({ locale: enUSLocale === true ? enUSIntl : undefined }, { children: _jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0) }), void 0));\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\nimport { DraftCreateProject, DraftUpdateProject, Project } from \"./Project\";\nimport { ParserOpts, UploadingTable } from \"./ProjectUpload\";\nimport axios from \"axios\";\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  /**\n   * Upload a table to the project\n   */\n  public uploadTable = async (\n    projectId: number,\n    file: File,\n    parserOpt?: ParserOpts,\n    selectedTables?: number[]\n  ): Promise<UploadingTable | number[]> => {\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    if (parserOpt !== undefined) {\n      form.append(\"parser_opts\", JSON.stringify({ file: parserOpt }));\n    }\n\n    if (selectedTables !== undefined) {\n      form.append(\"selected_tables\", JSON.stringify(selectedTables));\n    }\n\n    const resp = await axios.post(\n      `${SERVER}/api/project/${projectId}/upload`,\n      form,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      }\n    );\n\n    if (resp.data.tables !== undefined) return resp.data.tables[0];\n    return resp.data.table_ids;\n  };\n\n  public deserialize = (record: any): Project => {\n    return new Project(record.id, record.name, record.description);\n  };\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.id,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { Link } from \"../table\";\n\nexport interface CSVParserOpts {\n  format: \"csv\";\n  delimiter: string;\n  first_row_is_header: boolean;\n}\n\nexport interface JSONParserOpts {\n  format: \"json\";\n}\n\nexport type Format = \"csv\" | \"json\";\nexport const formats: Format[] = [\"csv\", \"json\"];\nexport type ParserOpts = CSVParserOpts | JSONParserOpts;\n\nexport interface RawTable {\n  name: string;\n  header: string[];\n  rows: (string | number)[][];\n  links: { [columnIndex: string | number]: Link[] }[];\n}\n\nexport interface UploadingTable {\n  parser_opts: ParserOpts;\n  tables: RawTable[];\n}\n","import { HTMLProps } from \"react\";\n\nexport interface ContentHierarchy {\n  level: number; // level of the heading\n  heading: string; // title of the level (header)\n  contentBefore: (Text | LineBreak)[];\n  contentAfter: (Text | LineBreak)[];\n}\n\nexport interface Text {\n  value: string;\n  tags: string[];\n  id2attrs: { [id: string]: HTMLProps<HTMLAnchorElement> };\n}\n\nexport interface LineBreak {\n  nLines: number;\n}\n\nexport function isLineBreak(item: Text | LineBreak): item is LineBreak {\n  return (item as LineBreak).nLines !== undefined;\n}\n","import { SERVER } from \"../../env\";\nimport { FetchResult, PairKeysUniqueIndex, RStore } from \"rma-baseapp\";\nimport { Table, TableRow } from \"./Table\";\nimport { action, makeObservable, flow } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false, [\n      new PairKeysUniqueIndex(\"table\", \"index\"),\n    ]);\n\n    makeObservable(this, {\n      fetchByTable: action,\n    });\n  }\n\n  get tableIndex() {\n    return this.indices[0] as PairKeysUniqueIndex<\n      number,\n      number,\n      number,\n      TableRow\n    >;\n  }\n\n  /**\n   * Find rows of the table\n   *\n   * @param tableId\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  fetchByTable: (\n    table: Table,\n    start: number,\n    no: number\n  ) => CancellablePromise<TableRow[]> = flow(function* (\n    this: TableRowStore,\n    table: Table,\n    start: number,\n    no: number\n  ) {\n    // update the query so we won't query rows not in the table\n    if (table.size < start + no) {\n      no = table.size - start;\n    }\n\n    let hasLocalData = true;\n    const map = this.tableIndex.index.get(table.id);\n    if (map === undefined) {\n      const result: FetchResult<TableRow> = yield this.fetch({\n        limit: no,\n        offset: start,\n        conditions: { table: table.id },\n      });\n      return result.records;\n    }\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        hasLocalData = false;\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n\n    if (hasLocalData) return output;\n    const result: FetchResult<TableRow> = yield this.fetch({\n      limit: no,\n      offset: start,\n      conditions: { table: table.id },\n    });\n    return result.records;\n  });\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize = (record: any): TableRow => {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity !== null) {\n          link.entityId = link.entity;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity;\n          delete ce.entity;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  };\n}\n","import { SERVER } from \"../../env\";\nimport { SingleKeyIndex, RStore } from \"rma-baseapp\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends RStore<number, Table> {\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false, [\n      new SingleKeyIndex(\"project\"),\n    ]);\n  }\n\n  get projectIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, Table>;\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize = (record: any): Table => {\n    record.contextPage = record.context_page;\n    if (\n      record.contextPage !== null &&\n      record.contextPage !== undefined &&\n      record.contextPage.entity !== null\n    ) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n    record.contextValues = record.context_values;\n    if (record.context_tree !== undefined) {\n      record.contextTree = record.context_tree.map((item: any) => {\n        item.contentBefore = item.content_before.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        item.contentAfter = item.content_after.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        delete item.content_before;\n        delete item.content_after;\n        return item;\n      });\n      delete record.context_tree;\n    }\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  };\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * value of this literal node, depends on the type\n   */\n  value:\n    | {\n        type: \"string\";\n        value: string;\n      }\n    | {\n        type: \"entity-id\";\n        id: string;\n        uri: string;\n      };\n  // readable name for this node\n  label: string;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface SMEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    if (this.id2num[node.id] === undefined || this.id2num[node.id] === 1) {\n      return node.label;\n    }\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    if (this.counter[uri] === undefined) {\n      return label;\n    }\n    return `${label} ${this.counter[uri]}`;\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n\n  getNum = (node: ClassNode) => {\n    return this.id2num[node.id];\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: SMEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: SMEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  /** Whether this graph is just containing all data nodes and no edges (it hasn't been modeled) */\n  isEmpty = () => {\n    return (\n      this.edges.length == 0 &&\n      this.nodes.every((node) => node.nodetype === \"data_node\")\n    );\n  };\n\n  clone = () => {\n    const record = this.toJS();\n    return new SMGraph(this.id, record.nodes, record.edges);\n  };\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n  nodeByEntityId = (id: string) =>\n    this.nodes.filter(\n      (node) =>\n        node.nodetype === \"literal_node\" &&\n        node.value.type === \"entity-id\" &&\n        node.value.id === id\n    )[0];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [SMEdge, SMEdge?][] => {\n    let matchPaths: [SMEdge, SMEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [SMEdge, SMEdge?][] => {\n    let outprops: [SMEdge, SMEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        target.uri === \"http://wikiba.se/ontology#Statement\"\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<SMEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: SMEdge) {\n    if (this.hasEdge(edge.source, edge.target)) {\n      throw new Error(\"Cannot have more than one edge between two nodes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<SMEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"../table\";\nimport { SMEdge, SMGraph, SMNode, SMNodeType } from \"./SMGraph\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  static isDraft = (\n    sm: SemanticModel | DraftSemanticModel\n  ): sm is DraftSemanticModel => {\n    return (sm as DraftSemanticModel).draftID !== undefined;\n  };\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  /**\n   * Get a default draft model for a table\n   */\n  static getDefaultDraftSemanticModel(\n    id: string,\n    name: string,\n    table: Table,\n    description = \"\"\n  ): DraftSemanticModel {\n    const graph = new SMGraph(\n      id,\n      table.columns.map((column, index) => ({\n        id: `col-${index}`,\n        label: column,\n        columnIndex: index,\n        nodetype: \"data_node\",\n      })),\n      []\n    );\n    graph.stale = true;\n    return new DraftSemanticModel(id, name, description, 0, graph, table.id);\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false, [\n      new SingleKeyIndex(\"table\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, SemanticModel>;\n  }\n\n  /** Generate new draft id */\n  getNewCreateDraftId = (table: Table): string => {\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      if (this.getCreateDraft(id) === undefined) {\n        return id;\n      }\n      i++;\n    }\n  };\n\n  /** Generate new semantic model name */\n  getNewSemanticModelName(table: Table): string {\n    const sms = this.findByTable(table.id);\n    const drafts = this.getCreateDraftsByTable(table);\n\n    let idx = -1;\n    for (const sm of sms.concat(drafts)) {\n      const m = /sm-(\\d+)/.exec(sm.name);\n      if (m === null) continue;\n      if (parseInt(m[1]) >= idx) {\n        idx = Math.max(idx, parseInt(m[1]));\n      }\n    }\n    return `sm-${idx + 1}`;\n  }\n\n  /** Get all drafts of a table */\n  getCreateDraftsByTable(table: Table): DraftSemanticModel[] {\n    const drafts = [];\n    for (const draft of this.createDrafts.values()) {\n      if (draft.table == table.id) {\n        drafts.push(draft);\n      }\n    }\n    return drafts;\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /**\n   * Remove a record (by id) from your indexes\n   */\n  protected deindex(record: SemanticModel): void {\n    for (const index of this.indices) {\n      index.remove(record);\n    }\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize = (record: any): SemanticModel => {\n    const nodes: SMNode[] = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    const edges: SMEdge[] = record.data.edges;\n\n    let graph = new SMGraph(record.id.toString(), nodes, edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  };\n\n  public serializeUpdateDraft(record: SemanticModel): object {\n    record.version += 1;\n    return {\n      table: record.table,\n      name: record.name,\n      description: record.description,\n      version: record.version,\n      data: {\n        nodes: record.graph.nodes.map((node) => {\n          switch (node.nodetype) {\n            case \"class_node\":\n              return {\n                id: node.id,\n                uri: node.uri,\n                approximation: node.approximation,\n                label: node.label,\n                type: node.nodetype,\n              };\n            case \"data_node\":\n              return {\n                id: node.id,\n                label: node.label,\n                column_index: node.columnIndex,\n                type: node.nodetype,\n              };\n            case \"literal_node\":\n              return {\n                id: node.id,\n                value: node.value,\n                label: node.label,\n                is_in_context: node.isInContext,\n                type: node.nodetype,\n              };\n          }\n        }),\n        edges: record.graph.edges.map((edge) => {\n          return {\n            source: edge.source,\n            target: edge.target,\n            uri: edge.uri,\n            approximation: edge.approximation,\n            label: edge.label,\n          };\n        }),\n      },\n    };\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    return this.serializeUpdateDraft(record);\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public uri: string;\n  public label: MultiLingualString;\n  public readableLabel: string;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    uri: string,\n    label: MultiLingualString,\n    readableLabel: string,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.uri = uri;\n    this.label = label;\n    this.readableLabel = readableLabel;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n\n  /**\n   * Mapping from entity id to url to external KG\n   * @param entityId\n   */\n  static id2uri = (entityId: string): string => {\n    switch (entityId[0]) {\n      case \"Q\":\n        return `https://www.wikidata.org/wiki/${entityId}`;\n      case \"P\":\n        return `https://www.wikidata.org/wiki/Property:${entityId}`;\n      case \"L\":\n        return `https://www.wikidata.org/wiki/Lexeme:${entityId}`;\n      default:\n        return entityId;\n    }\n  };\n\n  static uri2id = (entityURI: string): string => {\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/Property:\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/Property:\".length);\n    }\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/Lexeme:\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/Lexeme:\".length);\n    }\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/\".length);\n    }\n    return entityURI;\n  };\n}\n\nexport type MultiLingualString = {\n  lang2value: { [lang: string]: string };\n  lang: string;\n};\nexport type MultiLingualStringList = {\n  lang2values: { [lang: string]: string[] };\n  lang: string;\n};\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport type DataValue =\n  | DataValueString\n  | DataValueTime\n  | DataValueQuantity\n  | DataValueGlobeCoordinate\n  | DataValueMonolingualText\n  | DataValueEntity;\n\nexport interface DataValueTime {\n  readonly type: \"time\";\n  value: {\n    time: string;\n    timezone: number;\n    before: number;\n    after: number;\n    precision: number;\n    calendarmodel: string;\n  };\n}\n\nexport interface DataValueQuantity {\n  readonly type: \"quantity\";\n  value: {\n    amount: string;\n    upperBound: string;\n    lowerBound: string;\n    unit: string;\n  };\n}\n\nexport interface DataValueMonolingualText {\n  readonly type: \"monolingualtext\";\n  value: {\n    text: string;\n    language: string;\n  };\n}\n\nexport interface DataValueGlobeCoordinate {\n  readonly type: \"globecoordinate\";\n  value: {\n    latitude: number;\n    longitude: number;\n    precision: number;\n    altitude: null;\n    globe: string;\n  };\n}\n\nexport interface DataValueEntity {\n  readonly type: \"entityid\";\n  value: string;\n}\n\nexport interface DataValueString {\n  readonly type: \"string\";\n  value: string;\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class EntitySettings {\n  // properties to show in full view\n  public _showedPropsInFullView: Set<string> = new Set();\n\n  // properties to show in popover view\n  public _showedPropsInPopoverView: Set<string> = new Set();\n\n  constructor() {\n    this._showedPropsInPopoverView.add(\"P31\");\n\n    makeObservable(this, {\n      _showedPropsInFullView: observable,\n      _showedPropsInPopoverView: observable,\n      showedPropsInFullView: computed,\n      showedPropsInPopoverView: computed,\n      setShowedPropsInFullView: action,\n      setShowedPropsInPopoverView: action,\n      addShowedPropsInFullView: action,\n      addShowedPropsInPopoverView: action,\n      removeShowedPropsInFullView: action,\n      removeShowedPropsInPopoverView: action,\n    });\n  }\n\n  get showedPropsInFullView() {\n    return Array.from(this._showedPropsInFullView);\n  }\n\n  get showedPropsInPopoverView() {\n    return Array.from(this._showedPropsInPopoverView);\n  }\n\n  setShowedPropsInFullView = (props: Set<string>) => {\n    this._showedPropsInFullView = props;\n  };\n\n  setShowedPropsInPopoverView = (props: Set<string>) => {\n    this._showedPropsInPopoverView = props;\n  };\n\n  addShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.add(prop);\n  };\n\n  addShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.add(prop);\n  };\n\n  removeShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.delete(prop);\n  };\n\n  removeShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.delete(prop);\n  };\n}\n","import { AxiosError } from \"axios\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\nimport { EntitySettings } from \"./EntitySettings\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  public settings: EntitySettings;\n\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n    this.settings = new EntitySettings();\n\n    makeObservable(this, {\n      settings: observable,\n    });\n  }\n\n  public deserialize = (record: any): Entity => {\n    record.readableLabel = record.readable_label;\n    delete record.readable_label;\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Property {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class PropertyStore extends RStore<string, Property> {\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Property>;\n  }\n\n  getPropertyByURI = (uri: string): Property | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Class {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class ClassStore extends RStore<string, Class> {\n  constructor() {\n    super(`${SERVER}/api/classes`, { readableLabel: \"readable_label\" }, false, [\n      new SingleKeyUniqueIndex(\"uri\"),\n    ]);\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Class>;\n  }\n\n  getClassByURI = (uri: string): Class | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { SERVER } from \"../env\";\nimport { RStore, Record } from \"rma-baseapp\";\nimport { action, flow, makeObservable, observable } from \"mobx\";\nimport { Table, TableRowStore, TableStore } from \"./table\";\nimport { DraftSemanticModel, SemanticModelStore } from \"./sm\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\n\ninterface AssistantRecord extends Record<number> {}\n\ninterface Prediction {\n  [algorithm: string]: {\n    sm: any;\n    rows: any[];\n  };\n}\n\nexport class AssistantService extends RStore<number, AssistantRecord> {\n  protected tables: TableStore;\n  protected rows: TableRowStore;\n  protected smStore: SemanticModelStore;\n\n  constructor(\n    tableStore: TableStore,\n    tableRowStore: TableRowStore,\n    smStore: SemanticModelStore\n  ) {\n    super(`${SERVER}/api/assistant`, undefined, false, []);\n\n    this.tables = tableStore;\n    this.rows = tableRowStore;\n    this.smStore = smStore;\n\n    makeObservable(this, {\n      predict: action,\n    });\n  }\n\n  /**\n   * Predict\n   * */\n  predict: (table: Table) => CancellablePromise<void> = flow(function* (\n    this: AssistantService,\n    table: Table\n  ) {\n    // send request to the server to get some suggestions\n    let resp: AxiosResponse<Prediction>;\n\n    try {\n      this.state.value = \"updating\";\n      resp = yield axios.get(`${this.remoteURL}/predict/${table.id}`, {\n        params: { algorithm: \"mtab\" },\n      });\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n\n    // deserialzie the results and put it back to the store\n    const rawsm = resp.data.mtab.sm;\n    const rawrows = resp.data.mtab.rows;\n\n    const draftId = this.smStore.getNewCreateDraftId(table);\n    const graph = this.smStore.deserialize({\n      data: rawsm,\n      id: \"\",\n    }).graph;\n\n    // before set a new draft, check if an empty draft is there (as default) and remove it\n    const prevDrafts = this.smStore.getCreateDraftsByTable(table);\n    if (prevDrafts.length === 1 && prevDrafts[0].graph.isEmpty()) {\n      this.smStore.deleteCreateDraft(prevDrafts[0].draftID);\n    }\n\n    const name = this.smStore.getNewSemanticModelName(table);\n    this.smStore.setCreateDraft(\n      new DraftSemanticModel(draftId, name, \"\", 0, graph, table.id)\n    );\n\n    const rows = rawrows.map(this.rows.deserialize);\n    for (const row of rows) {\n      this.rows.set(row);\n    }\n    return;\n  });\n}\n","import { Project, ProjectStore } from \"./project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableStore, TableRowStore } from \"./table\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  SemanticModelStore,\n  SMNode,\n} from \"./sm\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { ClassStore } from \"./ontology/ClassStore\";\nimport { AssistantService } from \"./AssistantService\";\n\nconst tableStore = new TableStore();\nconst semanticModelStore = new SemanticModelStore();\nconst tableRowStore = new TableRowStore();\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore,\n  tableRowStore,\n  semanticModelStore,\n  entityStore: new EntityStore(),\n  propertyStore: new PropertyStore(),\n  classStore: new ClassStore(),\n  assistantService: new AssistantService(\n    tableStore,\n    tableRowStore,\n    semanticModelStore\n  ),\n};\n\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  ClassStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n};\nexport type { Property } from \"./ontology/PropertyStore\";\nexport type { Table, TableRow } from \"./table\";\nexport type { SMEdge, SMNode } from \"./sm/SMGraph\";\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal } from \"antd\";\nimport { DraftCreateProject } from \"../../../models/project\";\n\nconst styles = {};\n\nexport const NewProjectForm = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [form] = Form.useForm();\n    const [nameValidation, setNameValidation] = useState({\n      name: \"\",\n      status: \"success\",\n    });\n\n    const onSave = () => {\n      const project = new DraftCreateProject(\"\");\n      project.name = form.getFieldValue(\"name\");\n      project.description = form.getFieldValue(\"description\");\n\n      projectStore\n        .create(project)\n        .then(() => {\n          Modal.destroyAll();\n        })\n        .catch(() => {\n          setNameValidation({ name: project.name, status: \"error\" });\n        });\n    };\n\n    return (\n      <>\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          form={form}\n          onFinish={onSave}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"name\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            validateStatus={\n              nameValidation.name === form.getFieldValue(\"name\") &&\n              nameValidation.status === \"error\"\n                ? \"error\"\n                : undefined\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"description\"\n            label=\"description\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 20,\n              offset: 4,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Create\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  })\n);\n\nexport const openNewProjectForm = (zIndex?: number) => {\n  const content = <NewProjectForm />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        New Project\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { Avatar, Button, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\n\nimport {\n  red,\n  volcano,\n  orange,\n  gold,\n  yellow,\n  lime,\n  green,\n  cyan,\n  blue,\n  geekblue,\n  purple,\n  magenta,\n} from \"@ant-design/colors\";\nimport { openNewProjectForm } from \"../project/forms/NewProjectForm\";\n\n// const colorWheels = [\"#f56a00\", \"#7265e6\", \"#1890ff\", \"#00a2ae\"];\nconst colorWheels = [\n  red[5],\n  volcano[5],\n  blue[5],\n  gold[5],\n  orange[5],\n  yellow[5],\n  lime[5],\n  green[5],\n  cyan[5],\n  geekblue[5],\n  purple[5],\n  magenta[5],\n];\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={16}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n        </Col>\n        <Col className=\"gutter-row\" span={8}>\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            onClick={() => openNewProjectForm()}\n          >\n            New Project\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor:\n                          colorWheels[\n                            project.name.charCodeAt(0) % colorWheels.length\n                          ],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal, Space } from \"antd\";\nimport { Project, DraftUpdateProject } from \"../../../models/project\";\nimport { routes } from \"../../../routes\";\n\nconst styles = {};\n\nexport const UpdateProjectForm = withStyles(styles)(\n  observer(\n    ({\n      project,\n      classes,\n    }: { project: Project } & WithStyles<typeof styles>) => {\n      const { projectStore } = useStores();\n      const [form] = Form.useForm();\n      const [nameValidation, setNameValidation] = useState({\n        name: \"\",\n        status: \"success\",\n      });\n\n      const onSave = () => {\n        const draft = DraftUpdateProject.fromProject(project);\n        draft.name = form.getFieldValue(\"name\");\n        draft.description = form.getFieldValue(\"description\");\n        projectStore\n          .update(draft)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .catch(() => {\n            setNameValidation({ name: draft.name, status: \"error\" });\n          });\n      };\n\n      const onDelete = () => {\n        projectStore\n          .delete(project.id)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .then(() => {\n            routes.home.path().open();\n          });\n      };\n\n      return (\n        <>\n          <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            onFinish={onSave}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"name\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n              initialValue={project.name}\n              validateStatus={\n                nameValidation.name === form.getFieldValue(\"name\") &&\n                nameValidation.status === \"error\"\n                  ? \"error\"\n                  : undefined\n              }\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"description\"\n              label=\"description\"\n              rules={[{ required: true }]}\n              initialValue={project.description}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              wrapperCol={{\n                span: 20,\n                offset: 4,\n              }}\n            >\n              <Space style={{ width: \"100%\" }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Update\n                </Button>\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  Delete\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </>\n      );\n    }\n  )\n);\n\nexport const openUpdateProjectForm = (project: Project, zIndex?: number) => {\n  const content = <UpdateProjectForm project={project} />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Update Project {project.name}\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { InboxOutlined } from \"@ant-design/icons\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormInstance,\n  Input,\n  message,\n  Modal,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Upload,\n} from \"antd\";\nimport { ModalStaticFunctions } from \"antd/lib/modal/confirm\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { TableComponent } from \"../../../../components\";\nimport { useStores } from \"../../../../models\";\nimport {\n  Project,\n  ProjectStore,\n  CSVParserOpts,\n  JSONParserOpts,\n  ParserOpts,\n  UploadingTable,\n  Format,\n  formats,\n  RawTable,\n} from \"../../../../models/project\";\n\nexport const CSVParserForm = ({\n  opt,\n  form,\n}: {\n  form: FormInstance<any>;\n  opt: CSVParserOpts;\n}) => {\n  return (\n    <>\n      <Form.Item\n        name=\"delimiter\"\n        label=\"delimiter\"\n        rules={[{ required: true }]}\n      >\n        <Input\n          onChange={(e) => {\n            form.setFieldsValue({\n              delimiter: e.target.value\n                .replace(\"\\\\t\", \"\\t\")\n                .replace(\"\\\\n\", \"\\n\"),\n            });\n          }}\n          style={{ width: 60 }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"first_row_is_header\"\n        label=\"Is first row header\"\n        rules={[{ required: true }]}\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n    </>\n  );\n};\n\nexport const escapeDelimiter = (delimiter?: string) => {\n  switch (delimiter) {\n    case \"\\t\":\n      return \"\\\\t\";\n    case \"\\n\":\n      return \"\\\\n\";\n    default:\n      return delimiter;\n  }\n};\n\nexport const ParserOptsForm = (props: { parserOpts: ParserOpts }) => {\n  const [form] = Form.useForm();\n  let additionalProps;\n\n  if (props.parserOpts.format === \"csv\") {\n    additionalProps = <CSVParserForm opt={props.parserOpts} form={form} />;\n  } else {\n    additionalProps = null;\n  }\n\n  return (\n    <Form\n      layout=\"inline\"\n      initialValues={{\n        ...props.parserOpts,\n        delimiter:\n          props.parserOpts.format === \"csv\"\n            ? escapeDelimiter(props.parserOpts.delimiter)\n            : undefined,\n      }}\n    >\n      <Form.Item name=\"format\" label=\"File Type\" rules={[{ required: true }]}>\n        <Select\n          onChange={(value) => {\n            form.setFieldsValue({ format: value });\n          }}\n        >\n          {formats.map((value) => (\n            <Select.Option key={value} value={value}>\n              {value}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      {additionalProps}\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { InboxOutlined } from \"@ant-design/icons\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormInstance,\n  Input,\n  message,\n  Modal,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Upload,\n} from \"antd\";\nimport { ModalStaticFunctions } from \"antd/lib/modal/confirm\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { TableComponent } from \"../../../../components\";\nimport { useStores } from \"../../../../models\";\nimport {\n  Project,\n  ProjectStore,\n  CSVParserOpts,\n  JSONParserOpts,\n  ParserOpts,\n  UploadingTable,\n  Format,\n  formats,\n  RawTable,\n} from \"../../../../models/project\";\nimport { ParserOptsForm } from \"./ParserOptsComponent\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const RawTableComponent = withStyles(styles)(\n  ({ table, classes }: { table: RawTable } & WithStyles<typeof styles>) => {\n    return (\n      <ProTable\n        className={classes.table}\n        defaultSize=\"small\"\n        bordered={true}\n        toolBarRender={false}\n        search={false}\n        pagination={{\n          pageSize: 5,\n          pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n        }}\n        rowKey=\"id\"\n        columns={table.header.map((header, index) => ({\n          dataIndex: [\"data\", index],\n          title: header,\n        }))}\n        request={async (params, sort, filter) => {\n          const start = (params.current! - 1) * params.pageSize!;\n          const end = start + params.pageSize!;\n          return {\n            data: table.rows\n              .slice(start, end)\n              .map((row, index) => ({ data: row, id: index + start })),\n            success: true,\n            total: table.rows.length,\n          };\n        }}\n      />\n    );\n  }\n);\n","import { InboxOutlined } from \"@ant-design/icons\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  Carousel,\n  Col,\n  Form,\n  FormInstance,\n  Input,\n  message,\n  Modal,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Typography,\n  Upload,\n} from \"antd\";\nimport { ModalStaticFunctions } from \"antd/lib/modal/confirm\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { TableComponent } from \"../../../../components\";\nimport { useStores } from \"../../../../models\";\nimport {\n  Project,\n  ProjectStore,\n  CSVParserOpts,\n  JSONParserOpts,\n  ParserOpts,\n  UploadingTable,\n  Format,\n  formats,\n  RawTable,\n} from \"../../../../models/project\";\nimport { ParserOptsForm } from \"./ParserOptsComponent\";\nimport { RawTableComponent } from \"./RawTableComponent\";\n\nconst styles = {\n  upload: {\n    \"& > .ant-upload\": {\n      padding: \"8px 0 !important\",\n    },\n  },\n  carouselDot: {\n    zIndex: 2000,\n    backgroundColor: \"black\",\n    opacity: 0,\n  },\n};\n\nexport const UploadPhase1 = withStyles(styles)(\n  ({\n    classes,\n    projectId,\n    setUploadTable,\n  }: {\n    setUploadTable: (item: UploadingTable, file: File) => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n\n    const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n      const file = e.dataTransfer.files[0];\n      projectStore.uploadTable(projectId, file).then((tbl) => {\n        if (Array.isArray(tbl)) {\n          throw new Error(\"Error\");\n        }\n        setUploadTable(tbl, file);\n      });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Upload.Dragger\n          name=\"file\"\n          multiple={false}\n          onDrop={onDrop}\n          beforeUpload={() => false}\n          className={classes.upload}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-hint\">\n            Click or drag file to this area to upload\n          </p>\n        </Upload.Dragger>\n\n        <Form layout=\"inline\">\n          <Form.Item\n            name=\"url\"\n            label=\"URL\"\n            rules={[{ required: true }]}\n            style={{ width: \"calc(100% - 94px)\" }}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item style={{ margin: 0 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Space>\n    );\n  }\n);\n\nexport const UploadPhase2 = withStyles(styles)(\n  ({\n    uploadingTable,\n    classes,\n    projectId,\n    destroy,\n    onDone,\n  }: {\n    uploadingTable: { table: UploadingTable; file: File };\n    destroy: () => void;\n    onDone: () => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [selectedTables, setSelectedTables] = useState(\n      uploadingTable.table.tables.map(() => true)\n    );\n    let tables;\n\n    if (uploadingTable.table.tables.length == 1) {\n      tables = <RawTableComponent table={uploadingTable.table.tables[0]} />;\n    } else {\n      tables = uploadingTable.table.tables.map((table, index) => {\n        return (\n          <Space\n            direction=\"vertical\"\n            style={{ width: \"100%\" }}\n            key={`table-${index}-wrap`}\n          >\n            <Typography.Text>\n              Select:&nbsp;\n              <Switch\n                checked={selectedTables[index]}\n                onChange={(checked) => {\n                  const lst = selectedTables.slice();\n                  lst[index] = checked;\n                  setSelectedTables(lst);\n                }}\n              />\n            </Typography.Text>\n            <RawTableComponent table={table} />,\n          </Space>\n        );\n      });\n    }\n\n    const finishUpload = () => {\n      const tableIndex: number[] = [];\n      selectedTables.forEach((flag, index) => {\n        if (flag) tableIndex.push(index);\n      });\n\n      return projectStore\n        .uploadTable(\n          projectId,\n          uploadingTable.file,\n          uploadingTable.table.parser_opts,\n          tableIndex\n        )\n        .then((result) => {\n          destroy();\n          onDone();\n        });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <ParserOptsForm parserOpts={uploadingTable.table.parser_opts} />\n        {tables}\n        <Space>\n          <Button type=\"primary\" onClick={finishUpload}>\n            Confirm\n          </Button>\n          {/* <Button\n            type=\"primary\"\n            onClick={() => {\n              finishUpload().then(() => {\n                // TODO: re-open the upload form\n              });\n            }}\n          >\n            Confirm & Upload\n          </Button> */}\n        </Space>\n      </Space>\n    );\n  }\n);\n\nexport const UploadTableForm = ({\n  project,\n  destroy,\n  onDone,\n}: {\n  project: Project;\n  destroy: () => void;\n  onDone?: () => void;\n}) => {\n  const { projectStore } = useStores();\n  const [phase, setPhase] = useState<\"phase1\" | \"phase2\">(\"phase1\");\n  const [uploadingTable, setUploadingTable] = useState<\n    { table: UploadingTable; file: File } | undefined\n  >(undefined);\n\n  if (phase === \"phase1\") {\n    return (\n      <UploadPhase1\n        projectId={project.id}\n        setUploadTable={(table, file) => {\n          setUploadingTable({ table, file });\n          setPhase(\"phase2\");\n        }}\n      />\n    );\n  }\n\n  if (phase === \"phase2\") {\n    return (\n      <UploadPhase2\n        projectId={project.id}\n        uploadingTable={uploadingTable!}\n        destroy={destroy}\n        onDone={onDone || (() => {})}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport const openUploadTableForm = (\n  project: Project,\n  cfg?: {\n    zIndex?: number;\n    modal?: Omit<ModalStaticFunctions, \"warn\">;\n    onDone?: () => void;\n  }\n) => {\n  const modal = cfg?.modal === undefined ? Modal : cfg.modal;\n  const ref = modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Upload Tables\n      </span>\n    ),\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: cfg?.zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n  ref.update({\n    content: (\n      <UploadTableForm\n        project={project}\n        destroy={ref.destroy}\n        onDone={cfg?.onDone}\n      />\n    ),\n  });\n};\n","import { EditOutlined } from \"@ant-design/icons\";\nimport ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useRef } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { openUpdateProjectForm } from \"./forms/UpdateProjectForm\";\nimport { openUploadTableForm } from \"./forms/upload\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n    const [modal, contextHolder] = Modal.useModal();\n    const actionRef = useRef<ActionType>();\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project {_.upperFirst(project.name)}\n          &nbsp;\n          <a\n            style={{ fontSize: \"0.8em\", fontWeight: 400 }}\n            onClick={() => openUpdateProjectForm(project)}\n          >\n            <EditOutlined />\n          </a>\n        </Typography.Title>\n        <Typography.Text>\n          <b>Description:</b>{\" \"}\n          <Typography.Text type=\"secondary\">\n            {project.description}\n          </Typography.Text>\n        </Typography.Text>\n        <ProTable<ReturnType<typeof table2row>>\n          actionRef={actionRef}\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          toolBarRender={() => {\n            return [\n              <Button\n                key=\"upload\"\n                type=\"primary\"\n                onClick={() =>\n                  openUploadTableForm(project, {\n                    modal,\n                    onDone: () => {\n                      actionRef.current?.reload();\n                    },\n                  })\n                }\n              >\n                Upload\n              </Button>,\n            ];\n          }}\n          search={false}\n          pagination={{\n            pageSize: 500,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n        {contextHolder}\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.batch.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  onCtrlClick,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n  onCtrlClick?: () => void;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return <span {...restprops}>{entity.readableLabel}</span>;\n  }\n\n  return (\n    <ExternalLink\n      href={Entity.id2uri(entity.id)}\n      openInNewPage={true}\n      onCtrlClick={onCtrlClick}\n      {...restprops}\n    >\n      {entity.readableLabel}\n    </ExternalLink>\n  );\n};\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingPage } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    renderLoading,\n    renderNotFound,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity, settings: EntitySettings) => React.ReactElement;\n    renderLoading?: () => React.ReactElement;\n    renderNotFound?: () => React.ReactElement;\n  }) => {\n    const { entityStore } = useStores();\n\n    useEffect(() => {\n      entityStore.batch.fetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        if (renderLoading !== undefined) {\n          return renderLoading();\n        }\n        return <LoadingPage />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      if (renderNotFound !== undefined) {\n        return renderNotFound();\n      }\n\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity, entityStore.settings);\n  }\n);\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  showId = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  showId?: boolean;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  const label = showId ? `${property.label} (${property.id})` : property.label;\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop } from \".\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      showId = false,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      showId?: boolean;\n      filteredProps: string[];\n    } & WithStyles<typeof styles>) => {\n      if (filteredProps.length === 0) {\n        filteredProps = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of filteredProps) {\n        // we have undefined when entity does not have this property `pid`\n        if (entity.properties[pid] === undefined) continue;\n\n        const stmts = entity.properties[pid];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent\n                  property={id2prop[pid]}\n                  showId={showId}\n                />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      enable,\n      setEnable,\n      id2prop,\n      filteredProps,\n      addFilteredProp,\n      removeFilteredProp,\n      classes,\n    }: {\n      enable: boolean;\n      setEnable: (enable: boolean) => void;\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      addFilteredProp: (prop: string) => void;\n      removeFilteredProp: (prop: string) => void;\n    } & WithStyles<typeof styles>) => {\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={addFilteredProp as any}\n            onDeselect={removeFilteredProp as any}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { observer } from \"mobx-react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      settings,\n    }: { entity: Entity; settings: EntitySettings } & WithStyles<\n      typeof styles\n    >) => {\n      const id2prop = useEntityProperties(entity);\n      const [enable, setEnable] = useState<boolean>(true);\n\n      return (\n        <div>\n          <Space style={{ float: \"right\" }}>\n            <PropertyFilterComponent\n              enable={enable}\n              setEnable={setEnable}\n              entity={entity}\n              id2prop={id2prop}\n              filteredProps={settings.showedPropsInFullView}\n              addFilteredProp={settings.addShowedPropsInFullView}\n              removeFilteredProp={settings.removeShowedPropsInFullView}\n            />\n          </Space>\n          <h2>\n            <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            entity={entity}\n            id2prop={id2prop}\n            showId={true}\n            filteredProps={enable ? settings.showedPropsInFullView : []}\n          />\n        </div>\n      );\n    }\n  )\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  args: { entity: Entity; settings: EntitySettings } | string,\n  zIndex?: number\n) {\n  // avoid using instanceof Entity because it's going to be proxy object due to mobx\n  const isEntity = typeof args !== \"string\";\n  let content;\n  if (isEntity) {\n    content = (\n      <PageEntityComponent entity={args.entity} settings={args.settings} />\n    );\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={args}\n        render={(entity, settings) => (\n          <PageEntityComponent entity={entity} settings={settings} />\n        )}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  ({\n    entity,\n    children,\n    classes,\n    zIndex,\n    settings,\n    ...restprops\n  }: {\n    entity: Entity;\n    settings: EntitySettings;\n    zIndex?: number;\n  } & React.HTMLProps<HTMLDivElement> &\n    WithStyles<typeof styles>) => {\n    // TODO: find a way to remove this hard code\n    const id2prop = useEntityProperties(entity);\n    const content = (\n      <div {...restprops} className={`${classes.root} ${restprops.className}`}>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n            {entity.label.lang2value[entity.label.lang]}\n          </ExternalLink>\n          &nbsp;\n          <Typography.Text\n            italic={true}\n            strong={false}\n            style={{ fontSize: 14, fontWeight: 400 }}\n            copyable={{ text: entity.id }}\n          >\n            ({entity.id})\n          </Typography.Text>\n          <UnfoldMoreIcon\n            style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              openPageEntityComponent(\n                { entity, settings },\n                zIndex !== undefined ? zIndex + 1 : undefined\n              );\n            }}\n          />\n        </h2>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description.lang2value[entity.description.lang]}</p>\n        <hr />\n        <PropertyComponent\n          id2prop={id2prop}\n          entity={entity}\n          filteredProps={settings.showedPropsInPopoverView}\n        />\n      </div>\n    );\n\n    return (\n      <Popover content={content} zIndex={zIndex}>\n        {children}\n      </Popover>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: 1,\n    border: \"1px solid\",\n    borderRadius: 2,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n      setStateSelected(!stateSelected);\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { faCheck, faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport * as RTable from \"./RelationalTable\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\nexport const CandidateEntityListComponent = withStyles(styles)(\n  ({\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const [showAllCandidateModals, setShowAllCandidateModals] = useState(false);\n\n    const links = record.links[index] || [];\n    const candidateLst = [];\n    if (links.length > 0) {\n      for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n        const className =\n          candidateEntity.entityId === links[0].entityId\n            ? classes.correctCandidateEntity\n            : classes.candidateEntity;\n\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <PopoverEntityComponent entity={entity} settings={settings}>\n                    <InlineEntityComponent\n                      nolink={true}\n                      entity={entity}\n                      className={className}\n                    />\n                  </PopoverEntityComponent>\n                )}\n              />\n              <span className={className}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      // if there is a correct entity in top K, no need to highlight, otherwise,\n      // add them to the list\n      const idx = links[0].candidateEntities.findIndex(\n        (candidate) => candidate.entityId === links[0].entityId\n      );\n      if (idx !== -1 && idx >= topK) {\n        const candidateEntity = links[0].candidateEntities[idx];\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <span className={classes.correctCandidateEntity}>\n                    ({idx})&nbsp;\n                    <PopoverEntityComponent entity={entity} settings={settings}>\n                      <InlineEntityComponent nolink={true} entity={entity} />\n                    </PopoverEntityComponent>\n                  </span>\n                )}\n              />\n              <span className={classes.correctCandidateEntity}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      if (links[0].candidateEntities.length > topK) {\n        candidateLst.push(\n          <div key=\"see-more\">\n            <Typography.Text\n              className={classes.candidateEntitySeeMore}\n              onClick={() => setShowAllCandidateModals(!showAllCandidateModals)}\n            >\n              See more\n            </Typography.Text>\n          </div>\n        );\n      }\n    }\n\n    const columns: any = [\n      {\n        dataIndex: \"id\",\n        title: \"Entity\",\n        render: (entityId: string) => {\n          return (\n            <FetchEntityComponent\n              entityId={entityId}\n              render={(entity, settings) => (\n                <PopoverEntityComponent entity={entity} settings={settings}>\n                  <InlineEntityComponent nolink={true} entity={entity} />\n                </PopoverEntityComponent>\n              )}\n            />\n          );\n        },\n      },\n      {\n        dataIndex: \"score\",\n        title: \"Score\",\n        render: (score: number) => {\n          return <Number value={score} fractionDigits={5} />;\n        },\n      },\n      {\n        title: \"action\",\n        render: () => {\n          return (\n            <Space size={4}>\n              <Button>Select</Button>\n            </Space>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {candidateLst}\n        <Modal\n          title=\"Candidate Entities\"\n          visible={showAllCandidateModals}\n          style={{ top: 20 }}\n          bodyStyle={{ padding: 0 }}\n          width={\"60%\"}\n          onOk={() => setShowAllCandidateModals(false)}\n          onCancel={() => setShowAllCandidateModals(false)}\n        >\n          <ProTable\n            defaultSize=\"small\"\n            bordered={true}\n            search={false}\n            pagination={{\n              pageSize: 20,\n              pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n            }}\n            rowKey=\"id\"\n            columns={columns}\n            request={async (params, sort, filter) => {\n              return Promise.resolve({\n                total: links.length > 0 ? links[0].candidateEntities.length : 0,\n                success: true,\n                data:\n                  links.length === 0\n                    ? []\n                    : links[0].candidateEntities\n                        .slice(\n                          (params.current! - 1) * params.pageSize!,\n                          params.current! * params.pageSize!\n                        )\n                        .map((candidateEntity, index) => ({\n                          id: candidateEntity.entityId,\n                          score: candidateEntity.probability,\n                        })),\n              });\n            }}\n          ></ProTable>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n);\n","import * as RTable from \"./RelationalTable\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"rma-baseapp\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  noEntityLink: {\n    color: grey[5],\n    \"&:hover\": {\n      color: grey[5],\n    },\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  ({\n    cell,\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    cell: string;\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const links = record.links[index] || [];\n    let components = links.flatMap((link, index) => {\n      let prefix =\n        index === 0\n          ? cell.substring(0, link.start)\n          : cell.substring(links[index - 1].end, link.start);\n      let linksurface = cell.substring(link.start, link.end);\n      let onCtrlClick = undefined;\n      if (link.entityId !== undefined) {\n        onCtrlClick = () => {\n          openPageEntityComponent(link.entityId!);\n        };\n      }\n      const infix = (\n        <ExternalLink\n          key={index}\n          href={link.url}\n          openInNewPage={true}\n          dangerouslySetInnerHTML={{\n            __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n          }}\n          className={\n            classes.link +\n            (link.entityId === undefined ? \" \" + classes.noEntityLink : \"\")\n          }\n          style={link.entityId === null ? { color: \"#aaa\" } : {}}\n          onCtrlClick={onCtrlClick}\n        />\n      );\n\n      if (link.entityId === undefined) {\n        return [prefix, infix];\n      }\n\n      // reassign to infix somehow killing the application\n      const wrappedInfix = (\n        <FetchEntityComponent\n          key={index}\n          entityId={link.entityId}\n          render={(entity, settings) => (\n            <PopoverEntityComponent\n              entity={entity}\n              zIndex={500}\n              settings={settings}\n            >\n              {infix}\n            </PopoverEntityComponent>\n          )}\n          renderNotFound={() => (\n            <span className={classes.noEntityLink}>{infix}</span>\n          )}\n        />\n      );\n\n      return [prefix, wrappedInfix];\n    });\n\n    if (links.length === 0) {\n      components.push(cell);\n    } else {\n      components.push(cell.substring(links[links.length - 1].end));\n    }\n\n    return (\n      <div>\n        {components}\n        <CandidateEntityListComponent\n          record={record}\n          index={index}\n          topK={topK}\n        />\n      </div>\n    );\n  }\n);\n","import ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions, Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport React, { useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { isLineBreak, LineBreak, Text } from \"../../models/table/TableContext\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { CellComponent } from \"./CellComponent\";\nimport * as RTable from \"./RelationalTable\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport interface TableComponentFunc {\n  reload: () => void;\n}\n\nexport const TableComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        table,\n        query,\n        classes,\n        toolBarRender,\n        showRowIndex = false,\n      }: {\n        table: RTable.Table;\n        query: (limit: number, offset: number) => Promise<RTable.Row[]>;\n        toolBarRender?: false;\n        showRowIndex?: boolean;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const actionRef = useRef<ActionType>();\n      useImperativeHandle(\n        ref,\n        (): TableComponentFunc => ({\n          reload: () => {\n            actionRef.current?.reload();\n          },\n        })\n      );\n\n      const columns = table.columns.map((col, columnIndex) => ({\n        dataIndex: [\"row\", columnIndex, \"value\"],\n        title: col,\n        render: ((value: string, record: RTable.Row) => {\n          return (\n            <CellComponent cell={value} record={record} index={columnIndex} />\n          );\n        }) as any,\n      }));\n\n      if (showRowIndex) {\n        columns.splice(0, 0, {\n          title: (\n            <Typography.Text type=\"secondary\" disabled={true}>\n              #\n            </Typography.Text>\n          ),\n          dataIndex: \"index\",\n        } as any);\n      }\n\n      return (\n        <>\n          <ProTable\n            actionRef={actionRef}\n            className={classes.table}\n            defaultSize=\"small\"\n            bordered={true}\n            request={async (params, sort, filter) => {\n              let records = await query(\n                params.pageSize!,\n                (params.current! - 1) * params.pageSize!\n              );\n              return {\n                data: records,\n                success: true,\n                total: table.size,\n              };\n            }}\n            search={false}\n            pagination={{\n              pageSize: 5,\n              pageSizeOptions: [\n                \"5\",\n                \"10\",\n                \"20\",\n                \"50\",\n                \"100\",\n                \"200\",\n                \"500\",\n                \"1000\",\n              ],\n            }}\n            headerTitle={\n              table.context.webpage !== undefined ? (\n                <ExternalLink href={table.context.webpage} openInNewPage={true}>\n                  {table.name}\n                </ExternalLink>\n              ) : (\n                table.name\n              )\n            }\n            toolBarRender={toolBarRender}\n            rowKey=\"index\"\n            columns={columns}\n          />\n          <TableInformation table={table} />\n        </>\n      );\n    }\n  )\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: RTable.Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.context.webpage !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.context.webpage} openInNewPage={true}>\n        {table.context.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.context.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.context.entityId}\n        render={(entity, settings) => (\n          <PopoverEntityComponent\n            entity={entity}\n            zIndex={500}\n            settings={settings}\n          >\n            <InlineEntityComponent\n              entity={entity}\n              onCtrlClick={() => {\n                openPageEntityComponent({ entity, settings });\n              }}\n            />\n          </PopoverEntityComponent>\n        )}\n        renderNotFound={() => (\n          <span>`Entity ${table.context.entityId} does not exist`</span>\n        )}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.context.contentHierarchy || []).flatMap(\n    (hierarchy, index) => {\n      if (hierarchy.level === 0 && hierarchy.heading.trim().length === 0) {\n        if (\n          hierarchy.contentBefore.every(isLineBreak) &&\n          hierarchy.contentAfter.length === 0\n        ) {\n          return [];\n        }\n      }\n      const output = [\n        <p key={`${index}-head`}>\n          <b>\n            {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n          </b>\n        </p>,\n      ];\n      return output\n        .concat(ContentComponent(`${index}-before`, hierarchy.contentBefore))\n        .concat(ContentComponent(`${index}-after`, hierarchy.contentAfter));\n    }\n  );\n  info.push([\n    \"Content Hierarchy\",\n    content.length > 0 ? <div>{content}</div> : \"N/A\",\n  ]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n\nconst ContentComponent = (key: string, lines: (Text | LineBreak)[]) => {\n  const comps: string[][] = [[]];\n  for (const line of lines) {\n    if (isLineBreak(line)) {\n      comps.push([]);\n    } else {\n      comps[comps.length - 1].push(line.value);\n    }\n  }\n  return comps\n    .filter((lst) => lst.length > 0)\n    .map((lst, i) => <p key={`${key}-${i}`}>{lst}</p>);\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","/** A utility to discard responses out of order */\nexport class SequentialFuncInvoker {\n  private timer: number = 0;\n\n  public exec<T>(fn: () => Promise<T>): Promise<T | undefined> {\n    this.timer += 1;\n    let calledAt = this.timer;\n\n    return fn().then((result: any) => {\n      if (calledAt < this.timer) {\n        return undefined;\n      }\n\n      return result;\n    });\n  }\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { useStores } from \"../../models\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n};\n\ntype SearchProps = {\n  value?: string | string[];\n  onDeselect?: (value: string) => void;\n  onSelect?: (value: string) => void;\n  mode?: \"multiple\" | \"tags\";\n} & WithStyles<typeof styles>;\n\nexport const OntPropSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"propertyStore\", props);\n  })\n);\n\nexport const OntClassSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"classStore\", props);\n  })\n);\n\nexport const EntitySearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"entityStore\", props);\n  })\n);\n\nfunction useSearchComponent(\n  storeName: \"propertyStore\" | \"classStore\" | \"entityStore\",\n  props: SearchProps\n) {\n  const store = useStores()[storeName];\n  const seqInvoker = new SequentialFuncInvoker();\n\n  // when the provided value is not in the store, fetch it\n  useEffect(() => {\n    if (props.value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(props.value)) {\n      // leverage the fact that the three stores are not re-fetched\n      if (!store.refetch) {\n        store.fetchByIds(props.value);\n      } else {\n        store.fetchByIds(props.value.filter((id) => !store.records.has(id)));\n      }\n    } else if (store.get(props.value) === undefined) {\n      store.fetchById(props.value);\n    }\n  }, [props.value]);\n\n  // gather all options already in the store, leverage the fact\n  // that property store is readonly\n  const options = useMemo(() => {\n    const options = [];\n    for (const r of store.iter()) {\n      options.push({\n        value: r.id,\n        label: r.readableLabel,\n      });\n    }\n    return options;\n  }, [store.records.size]);\n\n  // search for additional properties if it's not in the list\n  const onSearch = (query: string) => {\n    if (query === \"\") return;\n    seqInvoker.exec(() => {\n      return store.fetchById(query).then(() => 1);\n    });\n  };\n\n  return (\n    <Select\n      mode={props.mode}\n      allowClear={true}\n      options={options}\n      optionFilterProp=\"label\"\n      className={props.classes.selection}\n      showSearch={true}\n      onSearch={onSearch}\n      value={props.value}\n      onSelect={props.onSelect as any}\n      onDeselect={props.onDeselect as any}\n    />\n  );\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { useStores } from \"../../models\";\nimport { OntPropSearchComponent } from \"./OntSearchComponent\";\n\nconst styles = {};\n\nexport const EntitySettingComponent = withStyles(styles)(\n  observer(({ classes }: {} & WithStyles<typeof styles>) => {\n    const { entityStore } = useStores();\n\n    return (\n      <Descriptions title=\"Entity Settings\" size=\"small\" column={1}>\n        <Descriptions.Item label=\"Properties (full view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInFullView}\n            onSelect={entityStore.settings.addShowedPropsInFullView}\n            onDeselect={entityStore.settings.removeShowedPropsInFullView}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Properties (popover view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInPopoverView}\n            onSelect={entityStore.settings.addShowedPropsInPopoverView as any}\n            onDeselect={\n              entityStore.settings.removeShowedPropsInPopoverView as any\n            }\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  })\n);\n","import { WordWrap } from \"./wordwrap\";\nimport G6, {\n  ModelConfig,\n  ShapeStyle,\n  IGroup,\n  IShape,\n  LabelStyle,\n} from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: LabelStyle;\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n): IShape[] {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.map(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"bg-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  return units.map(({ text, x, y }) => {\n    return group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  label: string;\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n  labelCfg?: { style: LabelStyle };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n  // TODO: fix x and y as well as position of the text\n  const draw = (cfg: RectConfig, group: IGroup): IShape => {\n    const wp = cfg.style.paddingWidth || 0;\n    const hp = cfg.style.paddingHeight || 0;\n    const { units, width, height } = wordwrap.wrapText(\n      cfg.label,\n      cfg.size || defaultWidth,\n      \"center\"\n    );\n\n    // draw shape\n    const shape = group!.addShape(\"rect\", {\n      attrs: {\n        // x,\n        // y,\n        width: width + wp * 2,\n        height: height + hp * 2,\n        ...cfg.style,\n      },\n      name: \"rect\",\n    });\n\n    // draw text\n    drawText(group, wordwrap, units, {\n      xoffset: wp,\n      yoffset: hp,\n      cfg: cfg.labelCfg?.style,\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup) => {\n        return draw(cfg! as RectConfig, group!);\n      },\n\n      // call everything state is changed so we can update the shape\n      // currently clear and re-draw it, but we could do better\n      setState(name, value, node) {\n        const cfg = node!._cfg!;\n        const model = cfg.model!;\n        const states = cfg.states!;\n        let styles: any = {};\n        let labelStyles = { ...model.labelCfg?.style };\n\n        for (const [name, prop] of Object.entries(model.style!)) {\n          if (typeof prop === \"object\") {\n            continue;\n          }\n          styles[name] = prop;\n        }\n        for (const state of states) {\n          for (const [name, prop] of Object.entries(\n            cfg.styles![state] as object\n          )) {\n            if (name === \"label\") {\n              Object.assign(labelStyles, prop);\n            } else {\n              styles[name] = prop;\n            }\n          }\n        }\n\n        const group = cfg.group!;\n        group.clear();\n        draw(\n          {\n            label: model.label as string,\n            size: model.size as number,\n            style: styles,\n            labelCfg: { style: labelStyles },\n          },\n          group\n        );\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import G6, {\n  IGroup,\n  ILabelConfig,\n  IShape,\n  LabelStyle,\n  ModelConfig,\n  ShapeStyle,\n} from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig {\n  label: string;\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n  labelCfg?: { offset: number; style: LabelStyle };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  const draw = (cfg: CircleConfig, group: IGroup): IShape => {\n    const padding = cfg.style.padding || 8;\n    const labelPosition: string = \"below\";\n    const labelOffset = cfg.labelCfg?.offset || 0;\n\n    if (labelPosition === \"inside\") {\n      // render text inside circle\n      const { units, radius } = wordwrap.wrapTextCircle(cfg.label, 256);\n      const shape = group!.addShape(\"circle\", {\n        attrs: {\n          // x: cfg.x,\n          // y: cfg.y,\n          r: radius + padding,\n          ...cfg.style,\n        },\n        name: \"circle\",\n      });\n      drawText(group, wordwrap, units, {\n        xoffset: 0,\n        yoffset: 0,\n        cfg: cfg.labelCfg?.style,\n      });\n      return shape;\n    }\n\n    // render text below circle\n    const { units, width } = wordwrap.wrapText(\n      cfg.label as string,\n      defaultWidth,\n      \"center\"\n    );\n    const defaultRadius = 10;\n    const shape = group!.addShape(\"circle\", {\n      attrs: {\n        // x: cfg.x,\n        // y: cfg.y,\n        r: defaultRadius,\n        ...cfg.style,\n      },\n      name: \"circle\",\n    });\n\n    drawText(group, wordwrap, units, {\n      xoffset: -width / 2,\n      yoffset: defaultRadius + labelOffset,\n      cfg: cfg?.labelCfg?.style,\n      stroke: { color: \"white\", width: 4 },\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup): IShape => {\n        return draw(cfg! as CircleConfig, group!);\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\nimport { testNodeWrap } from \"./TestNodeWrap\";\nimport _ from \"lodash\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units -- default 0\n  leftOffset?: number;\n  // shift the node in the graph by `topOffset` units -- default 0\n  topOffset?: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n  // highlight the node and its related nodes and edges when the mouse enter the node;\n  // default is false\n  enableActivateRelations?: boolean;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  public props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    const modes: any[] = [\"drag-canvas\", \"drag-node\"];\n\n    if (props.enableActivateRelations) {\n      modes.push({\n        type: \"activate-relations\",\n        resetSelected: true,\n      });\n    }\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: modes,\n        edit: [\"click-select\"],\n      },\n      // these control styles of nodes & edges at different states\n      // currently define active & inactive for the activate-relations mode\n      nodeStateStyles: {\n        active: {\n          opacity: 1,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 1,\n          },\n        },\n        inactive: {\n          opacity: 0.2,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 0.2,\n          },\n        },\n      },\n      edgeStateStyles: {\n        active: {\n          stroke: \"black\",\n          opacity: 1,\n        },\n        inactive: {\n          opacity: 0.2,\n          text: {\n            opacity: 0.2,\n          },\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        this.props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        this.props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Try to hot-swap the properties of this graph and returns whether it's success or not */\n  hotswapProps = (props: G6GraphProps) => {\n    if (!_.isEqual(this.props.layout, props.layout)) {\n      return false;\n    }\n\n    if (this.props.enableActivateRelations !== props.enableActivateRelations) {\n      return false;\n    }\n\n    this.props = props;\n    return true;\n  };\n\n  destroy = () => {\n    this.graph.destroy();\n  };\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // const { nodes: x, edges: y } = testNodeWrap(\"rect\");\n    // nodes = x;\n    // edges = y;\n\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: {\n          ...u.style,\n          radius: 4,\n          paddingHeight: 2,\n          paddingWidth: 4,\n        },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    if (_.uniq(edges.map((u) => u.id)).length !== edges.length) {\n      console.error(\n        \"Edges must have unique ids. However, we get:\",\n        edges.map((u) => u.id)\n      );\n    }\n\n    let newEdges = edges.map((e) => ({\n      id: e.id,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /**\n   * Adjust the canvas size to fit with the graph\n   *\n   * For fit-graph mode, the extraHeight mode is used to add top & bottom padding so that it's not too close (e.g., 20px)\n   * For fit-remaining-window, the offsetHeight is used to reserved some pixels at the bottom of the window so that it's not overflow (e.g., minus 1px for the border)\n   * For keep-as-is, we use the initial height\n   */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height:\n      | { type: \"fit-graph\"; extraHeight: number }\n      | { type: \"fit-remaining-window\"; offsetHeight: number }\n      | { type: \"keep-as-is\" };\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      let graphHeight;\n      switch (height.type) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + height.extraHeight;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight -\n            (viewportOffset + documentScrollY) -\n            height.offsetHeight;\n          break;\n        case \"keep-as-is\":\n          graphHeight = this.props.initHeight;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n      if (center === true) {\n        this.graph.moveTo(\n          graphWidth / 2 - bbox.width / 2,\n          graphHeight / 2 - bbox.height / 2\n        );\n      } else {\n        this.graph.moveTo(\n          this.props.leftOffset || 0,\n          this.props.topOffset || 0\n        );\n      }\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  bordered: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n  },\n  container: {\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n  recenter: () => boolean;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = { type: \"fit-graph\", extraHeight: 8 },\n        toolbar = false,\n        bordered = true,\n        layouts = GraphLayout,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        bordered?: boolean;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?:\n          | { type: \"fit-graph\"; extraHeight: number }\n          | { type: \"fit-remaining-window\"; offsetHeight: number }\n          | { type: \"keep-as-is\" };\n        className?: string;\n        layouts?: typeof GraphLayout;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n          recenter: () => {\n            if (graph.current === undefined) return false;\n            graph.current.updateContainerSize({\n              center: true,\n              height: renderingAdjustedHeight,\n            });\n            return true;\n          },\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n            }\n          );\n        }\n\n        let g = graph.current;\n        if (props !== undefined) {\n          const success = g.hotswapProps(props);\n          if (!success) {\n            g.destroy();\n            graph.current = new G6Graph(\n              container.current,\n              props || {\n                initHeight: 500,\n              }\n            );\n            g = graph.current;\n          }\n        }\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar\n            autoHide={toolbar === \"auto-hide\"}\n            graph={graph}\n            layouts={layouts}\n          />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div\n              ref={container}\n              className={\n                classes.container + (bordered ? \" \" + classes.bordered : \"\")\n              }\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n    layouts,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n    layouts: typeof GraphLayout;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (name: keyof typeof GraphLayout) => {\n      setLayout(name);\n      graph.current?.updateLayout(layouts[name]);\n      graph.current?.untilLayoutStable(20, 50, centerGraph, [], () => {});\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4} align=\"start\">\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { SemanticModel, useStores } from \"../../models\";\nimport { SMNodeType } from \"../../models/sm\";\nimport { gold, green, purple, yellow } from \"@ant-design/colors\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n  class_node: {\n    backgroundColor: green[2],\n    \"&:hover\": {\n      backgroundColor: green[8],\n      color: \"white\",\n    },\n  },\n  literal_node: {\n    backgroundColor: purple[2],\n    \"&:hover\": {\n      backgroundColor: purple[8],\n      color: \"white\",\n    },\n  },\n  data_node: {\n    backgroundColor: gold[2],\n    \"&:hover\": {\n      backgroundColor: gold[8],\n      color: \"white\",\n    },\n  },\n};\n\nexport type SearchValue = { type: SMNodeType | \"class\"; id: string };\n\nexport const NodeSearchComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      value,\n      onDeselect,\n      onSelect,\n      classes,\n    }: {\n      sm: SemanticModel;\n      value?: SearchValue;\n      onDeselect: (value: SearchValue) => void;\n      onSelect: (value: SearchValue) => void;\n    } & WithStyles<typeof styles>) => {\n      const { classStore } = useStores();\n      const seqInvoker = new SequentialFuncInvoker();\n\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        const options: ({\n          value: string;\n          label: string;\n        } & SearchValue)[] = [];\n        for (const r of classStore.iter()) {\n          options.push({\n            type: \"class\",\n            id: r.id,\n            value: `class:${r.id}`,\n            label: sm.graph.uriCount.nextLabel(r.uri, r.readableLabel),\n          });\n        }\n\n        for (const u of sm.graph.nodes) {\n          options.push({\n            type: u.nodetype,\n            id: u.id,\n            value: `${u.nodetype}:${u.id}`,\n            label: sm.graph.uriCount.label(u),\n            className: classes[u.nodetype],\n          } as any);\n        }\n        return options;\n      }, [classStore.records.size]);\n\n      // search for additional values if it's not in the list\n      const onSearch = (query: string) => {\n        if (query === \"\") return;\n        seqInvoker.exec(() => {\n          return classStore.fetchById(query).then(() => 1);\n        });\n      };\n\n      return (\n        <Select\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          showSearch={true}\n          onSearch={onSearch}\n          value={value === undefined ? undefined : `${value.type}:${value.id}`}\n          onSelect={(value, option) => {\n            onSelect({ type: option.type, id: option.id });\n          }}\n          onDeselect={(value, option) => {\n            onDeselect({ type: option.type, id: option.id });\n          }}\n        />\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Select, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SemanticModel, SMEdge, useStores } from \"../../../models\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport { OntPropSearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  table: {\n    width: \"100%\",\n    textAlign: \"left\",\n    borderSpacing: 0,\n    borderRadius: \"2px 2px 0 0\",\n\n    \"& tr\": {\n      verticalAlign: \"middle\",\n    },\n    \"& th, td\": {\n      padding: \"0 4px\",\n    },\n  },\n  selection: {\n    width: \"100%\",\n  },\n} as const;\n\nexport const NodeSelectionComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      classes,\n      value,\n      onSelect,\n      onDeselect,\n    }: {\n      sm: SemanticModel;\n      value?: string;\n      onDeselect?: (value: string) => void;\n      onSelect?: (value: string) => void;\n    } & WithStyles<typeof styles>) => {\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        return sm.graph.nodes.map((node) => {\n          return {\n            value: node.id,\n            label: node.label,\n          };\n        });\n      }, [sm]);\n\n      return (\n        <Select\n          showSearch={true}\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          value={value}\n          onSelect={onSelect as any}\n          onDeselect={onDeselect as any}\n        />\n      );\n    }\n  )\n);\n\nexport type EdgeFormProps = {\n  sm: SemanticModel;\n  edge?: SMEdge;\n};\n\nexport const EdgeForm = withStyles(styles)(\n  observer(\n    ({ sm, edge, classes }: EdgeFormProps & WithStyles<typeof styles>) => {\n      const { classStore, propertyStore } = useStores();\n      const [source, setSource] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.source).nodetype, id: edge.source }\n          : undefined\n      );\n      const [target, setTarget] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.target).nodetype, id: edge.target }\n          : undefined\n      );\n      const [uri, setURI] = useState<string | undefined>(edge?.uri);\n      const [approximation, setApproximation] = useState(false);\n\n      // whether there exists an edge between source & target\n      // if yes, we can't insert because we assume only one relationship\n      // between two nodes\n      const dupEdge = useMemo(() => {\n        if (source === undefined || source.type === \"class\") return false;\n        if (target === undefined || target.type === \"class\") return false;\n        return (\n          sm.graph.hasEdge(source.id, target.id) &&\n          (edge === undefined ||\n            source.id !== edge.source ||\n            target.id !== edge.target)\n        );\n      }, [sm.graph.version, source?.id, target?.id]);\n\n      useEffect(() => {\n        if (edge === undefined) return;\n        if (propertyStore.getPropertyByURI(edge.uri) !== undefined) return;\n\n        propertyStore.fetchOne({ conditions: { uri: edge.uri } });\n      }, [propertyStore, edge, uri]);\n\n      const onSave = () => {\n        if (uri === undefined || source === undefined || target === undefined)\n          return;\n        if (dupEdge) return;\n\n        const prop = propertyStore.getPropertyByURI(uri)!;\n        let sourceId, targetId;\n\n        if (source.type === \"class\") {\n          const cls = classStore.get(source.id)!;\n          sourceId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: sourceId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          sourceId = source.id;\n        }\n\n        if (target.type === \"class\") {\n          const cls = classStore.get(target.id)!;\n          targetId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: targetId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          targetId = target.id;\n        }\n\n        const newEdge = {\n          source: sourceId,\n          target: targetId,\n          uri: prop.uri,\n          approximation,\n          label: prop.readableLabel,\n        };\n        if (edge !== undefined) {\n          if (edge.source === sourceId && edge.target === targetId) {\n            sm.graph.updateEdge(edge.source, edge.target, newEdge);\n          } else {\n            sm.graph.removeEdge(edge.source, edge.target);\n            sm.graph.addEdge(newEdge);\n          }\n        } else {\n          sm.graph.addEdge(newEdge);\n        }\n\n        Modal.destroyAll();\n      };\n\n      const onDelete = () => {\n        if (edge === undefined) return;\n        sm.graph.removeEdge(edge.source, edge.target);\n        Modal.destroyAll();\n      };\n\n      const isModified = () => {\n        return (\n          edge === undefined ||\n          source?.id !== edge.source ||\n          target?.id !== edge.target ||\n          uri !== edge.uri ||\n          approximation !== edge.approximation\n        );\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  source !== undefined ? { text: source.id } : undefined\n                }\n              >\n                Source\n              </Typography.Text>\n            }\n            validateStatus={dupEdge ? \"error\" : undefined}\n            help={\n              dupEdge\n                ? \"Cannot have more than one edge between two nodes\"\n                : undefined\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={source}\n              onSelect={setSource}\n              onDeselect={() => setSource(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  target !== undefined ? { text: target.id } : undefined\n                }\n              >\n                Target\n              </Typography.Text>\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={target}\n              onSelect={setTarget}\n              onDeselect={() => setTarget(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  uri !== undefined\n                    ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                    : undefined\n                }\n              >\n                Predicate\n              </Typography.Text>\n            }\n          >\n            <OntPropSearchComponent\n              value={\n                uri !== undefined\n                  ? propertyStore.getPropertyByURI(uri)?.id\n                  : undefined\n              }\n              onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n              onDeselect={(value) => setURI(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Approximation\">\n            <Switch\n              checked={approximation}\n              onChange={(val) => setApproximation(val)}\n            />\n          </Form.Item>\n          <Form.Item label=\"&nbsp;\" colon={false}>\n            <Space>\n              <Button\n                type=\"primary\"\n                onClick={onSave}\n                disabled={\n                  source === undefined ||\n                  target === undefined ||\n                  uri === undefined ||\n                  !isModified() ||\n                  dupEdge\n                }\n              >\n                Save\n              </Button>\n              {edge !== undefined ? (\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Radio, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport {\n  ClassNode,\n  DataNode,\n  LiteralNode,\n  SemanticModel,\n  SMEdge,\n  SMNode,\n  SMNodeType,\n} from \"../../../models/sm\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport {\n  EntitySearchComponent,\n  OntClassSearchComponent,\n  OntPropSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {} as const;\n\nexport interface NodeFormProps {\n  sm: SemanticModel;\n  node?: SMNode;\n}\n\n/**\n * Form for adding/editing a node in the graph. There are two cases:\n *\n * 1. Create new node -- when node is undefined\n * 2. Delete or update existing node data without modifying its edges -- when the node is provided\n */\nexport const ClassNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: ClassNode; onDone: () => void }) => {\n    const { classStore } = useStores();\n    const [uri, setURI] = useState<string | undefined>(props.node?.uri);\n    const [approximation, setApproximation] = useState(\n      props.node?.approximation || false\n    );\n\n    // fetch class id associated with the node uri\n    useEffect(() => {\n      if (props.node === undefined) return;\n      if (classStore.getClassByURI(props.node.uri) !== undefined) return;\n\n      classStore.fetchOne({ conditions: { uri: props.node.uri } });\n    }, [props.node?.uri]);\n\n    const onSave = () => {\n      if (uri === undefined) return;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addClassNode({\n          id: props.sm.graph.nextNodeId(),\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          nodetype: \"class_node\",\n          approximation: approximation,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateClassNode(props.node.id, {\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          approximation: approximation,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.uri !== uri ||\n        props.node.approximation !== approximation\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? {\n                      text: classStore.getClassByURI(uri)?.id,\n                    }\n                  : undefined\n              }\n            >\n              Class\n            </Typography.Text>\n          }\n        >\n          <OntClassSearchComponent\n            value={\n              uri !== undefined ? classStore.getClassByURI(uri)?.id : undefined\n            }\n            onSelect={(id) => setURI(classStore.get(id)?.uri)}\n            onDeselect={() => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={uri === undefined || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const LiteralNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: LiteralNode; onDone: () => void }) => {\n    const { entityStore } = useStores();\n    const [id, setId] = useState<string | undefined>(\n      props.node?.value?.type === \"entity-id\" ? props.node.value.id : undefined\n    );\n    const [isInContext, setIsInContext] = useState(\n      props.node !== undefined && props.node.nodetype === \"literal_node\"\n        ? props.node.isInContext\n        : false\n    );\n\n    const duplicatedId = useMemo(\n      () =>\n        id !== undefined &&\n        ((props.node === undefined &&\n          props.sm.graph.nodeByEntityId(id) !== undefined) ||\n          (props.node !== undefined &&\n            props.sm.graph.nodeByEntityId(id)?.id !== props.node.id)),\n      [props.sm.graph.version, id]\n    );\n\n    if (props.node !== undefined && props.node.value.type === \"string\") {\n      return <div>Not Implemented Yet</div>;\n    }\n\n    const onSave = () => {\n      if (id === undefined) return;\n      if (duplicatedId) return;\n\n      const ent = entityStore.get(id)!;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addLiteralNode({\n          id: props.sm.graph.nextNodeId(),\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateLiteralNode(props.node.id, {\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.isInContext !== isInContext ||\n        (props.node.value.type === \"entity-id\" && props.node.value.id !== id)\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={id !== undefined ? { text: id } : undefined}\n            >\n              Entity\n            </Typography.Text>\n          }\n          validateStatus={duplicatedId ? \"error\" : undefined}\n          help={duplicatedId ? \"Entity's already in the graph\" : undefined}\n        >\n          <EntitySearchComponent\n            value={id}\n            onSelect={setId}\n            onDeselect={() => setId(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Is In Context?\">\n          <Switch\n            checked={isInContext}\n            onChange={(val) => setIsInContext(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={id === undefined || duplicatedId || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const DataNodeSubForm = observer(\n  ({\n    sm,\n    node,\n    inedge,\n    onDone,\n  }: {\n    sm: SemanticModel;\n    node: DataNode;\n    inedge?: SMEdge;\n    onDone: () => void;\n  }) => {\n    const { classStore, propertyStore } = useStores();\n    const [source, setSource] = useState<SearchValue | undefined>(\n      inedge !== undefined\n        ? {\n            type: sm.graph.node(inedge.source).nodetype,\n            id: inedge.source,\n          }\n        : undefined\n    );\n    const [uri, setURI] = useState<string | undefined>(inedge?.uri);\n    const [approximation, setApproximation] = useState(false);\n\n    const onSave = () => {\n      if (source === undefined || uri === undefined) return;\n\n      const prop = propertyStore.getPropertyByURI(uri)!;\n      let sourceId;\n\n      if (source.type === \"class\") {\n        const cls = classStore.get(source.id)!;\n        sourceId = sm.graph.nextNodeId();\n        sm.graph.addClassNode({\n          id: sourceId,\n          uri: cls.uri,\n          label: cls.readableLabel,\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n      } else {\n        sourceId = source.id;\n      }\n\n      const newEdge = {\n        source: sourceId,\n        target: node.id,\n        uri: prop.uri,\n        approximation,\n        label: prop.readableLabel,\n      };\n      if (inedge !== undefined) {\n        if (inedge.source === sourceId) {\n          sm.graph.updateEdge(inedge.source, inedge.target, newEdge);\n        } else {\n          sm.graph.removeEdge(inedge.source, inedge.target);\n          sm.graph.addEdge(newEdge);\n        }\n      } else {\n        sm.graph.addEdge(newEdge);\n      }\n      onDone();\n    };\n\n    const isModified = () => {\n      return (\n        source?.id !== inedge?.source ||\n        uri !== inedge?.uri ||\n        approximation !== inedge?.approximation\n      );\n    };\n\n    const onDelete = () => {\n      if (inedge === undefined) return;\n      sm.graph.removeEdge(inedge.source, inedge.target);\n      onDone();\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={source !== undefined ? { text: source.id } : undefined}\n            >\n              Source\n            </Typography.Text>\n          }\n        >\n          <NodeSearchComponent\n            sm={sm}\n            value={source}\n            onSelect={setSource}\n            onDeselect={() => setSource(undefined)}\n          />\n        </Form.Item>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                  : undefined\n              }\n            >\n              Predicate\n            </Typography.Text>\n          }\n        >\n          <OntPropSearchComponent\n            value={\n              uri !== undefined\n                ? propertyStore.getPropertyByURI(uri)?.id\n                : undefined\n            }\n            onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n            onDeselect={(value) => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Target\">\n          <Typography.Text>\n            {node.label} ({node.columnIndex})\n          </Typography.Text>\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={\n                source === undefined || uri === undefined || !isModified()\n              }\n            >\n              Save\n            </Button>\n            {inedge !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const NodeForm = withStyles(styles)(\n  observer(\n    ({ sm, node, classes }: NodeFormProps & WithStyles<typeof styles>) => {\n      const [nodetype, setNodeType] = useState<SMNodeType>(\n        node?.nodetype || \"class_node\"\n      );\n      const onDone = () => Modal.destroyAll();\n\n      if (node !== undefined && node.nodetype === \"data_node\") {\n        if (sm.graph.incomingEdges(node.id).length > 1) {\n          return (\n            <p>\n              This form can't be used for data node that has more than one\n              incoming edge. Please click on individual edge and edit it there\n            </p>\n          );\n        }\n      }\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          {node === undefined ? (\n            <Form.Item label=\"Node Type\">\n              <Radio.Group\n                value={nodetype}\n                onChange={(event) => setNodeType(event.target.value)}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"class_node\">Class Node</Radio.Button>\n                <Radio.Button value=\"literal_node\">Literal Node</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          ) : null}\n          {nodetype === \"class_node\" ? (\n            <ClassNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"class_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : nodetype === \"literal_node\" ? (\n            <LiteralNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"literal_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : (\n            <DataNodeSubForm\n              sm={sm}\n              node={node as DataNode}\n              inedge={sm.graph.incomingEdges(node!.id)[0]}\n              onDone={onDone}\n            />\n          )}\n        </Form>\n      );\n    }\n  )\n);\n","import { Modal } from \"antd\";\nimport { EdgeForm, EdgeFormProps } from \"./EdgeForm\";\nimport { NodeForm, NodeFormProps } from \"./NodeForm\";\n\ninterface TypedEdgeFormProps extends EdgeFormProps {\n  type: \"edge\";\n}\n\ninterface TypedNodeFormProps extends NodeFormProps {\n  type: \"node\";\n}\n\nexport function openForm(\n  args: TypedEdgeFormProps | TypedNodeFormProps,\n  zIndex?: number\n) {\n  let title;\n  let content;\n  switch (args.type) {\n    case \"edge\":\n      content = <EdgeForm {...args} />;\n      title = args.edge === undefined ? \"Add Edge\" : \"Update Edge\";\n      break;\n    case \"node\":\n      content = <NodeForm {...args} />;\n      title = args.node === undefined ? \"Add Node\" : \"Update Node\";\n      break;\n  }\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>{title}</span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { gold, green, purple, yellow } from \"@ant-design/colors\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Divider, Popconfirm, Space } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { ReactElement, useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  GraphComponent,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport { routes } from \"../../routes\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { SMNode } from \"../../models/sm\";\nimport { openForm } from \"./forms\";\nimport { ReactComponent } from \"rma-baseapp\";\nimport { toJS } from \"mobx\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    marginTop: 8,\n  },\n  draft: {\n    border: `1px dashed ${yellow[7]} !important`,\n    \"&:hover\": {\n      color: `${gold[5]} !important`,\n    },\n  },\n  selectedDraft: {\n    backgroundColor: `${gold[5]} !important`,\n  },\n};\n\nexport const SemanticModelComponent = withStyles(styles)(\n  observer(\n    ({\n      classes,\n      table,\n      leftMenu,\n    }: { table: Table; leftMenu: ReactElement } & WithStyles<\n      typeof styles\n    >) => {\n      const graphRef = useRef<GraphComponentFunc | undefined>(undefined);\n      const [currentIndex, setCurrentIndex] = useState(0);\n      const { semanticModelStore, assistantService } = useStores();\n      const sms = semanticModelStore.findByTable(table.id);\n      const drafts = semanticModelStore.getCreateDraftsByTable(table);\n      if (currentIndex >= sms.length + drafts.length) {\n        // there is no semantic model & no draft for this table, create a new draft\n        const id = semanticModelStore.getNewCreateDraftId(table);\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          `sm-${sms.length}`,\n          table\n        );\n        semanticModelStore.setCreateDraft(draft);\n        drafts.push(draft);\n      }\n\n      const sm =\n        currentIndex < sms.length\n          ? sms[currentIndex]\n          : drafts[currentIndex - sms.length];\n\n      const [nodes, edges] = useMemo(() => {\n        const nodes = sm.graph.nodes.map((node) => {\n          let shape: GraphNode[\"shape\"], style;\n          switch (node.nodetype) {\n            case \"class_node\":\n              shape = \"circle\";\n              style = { fill: green[2], stroke: green[8] };\n              break;\n            case \"data_node\":\n              shape = \"rect\";\n              style = { fill: gold[3], stroke: gold[8] };\n              break;\n            case \"literal_node\":\n              if (node.value.type === \"entity-id\") {\n                shape = \"circle\";\n              } else {\n                shape = \"rect\";\n              }\n              if (node.isInContext) {\n                style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n              } else {\n                style = { fill: purple[2], stroke: \"#c41d7f\" };\n              }\n              break;\n            default:\n              throw new Error(`Unreachable!`);\n          }\n\n          return {\n            id: node.id,\n            label: getNodeLabel(sm, node),\n            style,\n            shape,\n          };\n        });\n        const edges = sm.graph.edges.map((edge) => {\n          return {\n            id: `${edge.source}-${edge.target}-${edge.uri}`,\n            source: edge.source,\n            target: edge.target,\n            label: edge.label,\n          };\n        });\n\n        return [nodes, edges];\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [\n        SemanticModel.isDraft(sm) ? sm.draftID : null,\n        sm.id,\n        sm.graph.version,\n      ]);\n\n      // center the graph\n      const centering = () => {\n        if (graphRef.current === undefined) {\n          return;\n        }\n        graphRef.current.recenter();\n      };\n      useHotkeys(\"c\", centering, [sm.id, graphRef !== undefined]);\n\n      // add model\n      const cloneNewModel = () => {\n        const id = semanticModelStore.getNewCreateDraftId(table);\n        const nSms = sms.length + drafts.length;\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          semanticModelStore.getNewSemanticModelName(table),\n          table\n        );\n        draft.graph = sm.graph.clone();\n        draft.graph.id = id;\n        semanticModelStore.setCreateDraft(draft);\n        setCurrentIndex(nSms);\n      };\n\n      const onExport = () => {\n        routes.tableExport\n          .path({ tableId: table.id })\n          .mouseClickNavigationHandler(undefined, true);\n      };\n\n      const smLists = [];\n      for (let idx = 0; idx < sms.length + drafts.length; idx++) {\n        const item = idx < sms.length ? sms[idx] : drafts[idx - sms.length];\n        const isSelected = idx === currentIndex;\n        smLists.push(\n          <Button\n            size=\"small\"\n            key={item.id}\n            type={isSelected ? \"primary\" : \"default\"}\n            onClick={() => setCurrentIndex(idx)}\n            className={\n              item.graph.stale || SemanticModel.isDraft(item)\n                ? classes.draft +\n                  (isSelected ? ` ${classes.selectedDraft}` : \"\")\n                : \"\"\n            }\n          >\n            {item.name}\n          </Button>\n        );\n      }\n\n      // only show the list of semantic models when we have more than one semantic model\n      // or when we have some drafts or when the only semantic model is modified\n      let smListComponent = undefined;\n      smListComponent = (\n        <Space style={{ float: \"right\" }}>\n          {smLists.length !== 1 || drafts.length > 0 || sms[0].graph.stale ? (\n            <React.Fragment>\n              <span>Semantic Models:</span>\n              {smLists}\n              <Divider type=\"vertical\" />\n            </React.Fragment>\n          ) : null}\n          {/* reset is nice to have, but we didn't have the original copy... */}\n          {/* {!sm.isDraft && sm.graph.stale ? (\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Reset\n            </Button>\n          ) : null} */}\n          {sms.length + drafts.length > 1 ? (\n            <Popconfirm\n              title=\"Are you sure to delete this model?\"\n              onConfirm={() => {\n                if (SemanticModel.isDraft(sm)) {\n                  semanticModelStore.deleteCreateDraft(sm.draftID);\n                } else {\n                  semanticModelStore.delete(sm.id);\n                }\n                setCurrentIndex(0);\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button size=\"small\" danger={true}>\n                Delete model\n              </Button>\n            </Popconfirm>\n          ) : null}\n          {SemanticModel.isDraft(sm) || sm.graph.stale ? (\n            <Button\n              size=\"small\"\n              onClick={() =>\n                SemanticModel.isDraft(sm)\n                  ? semanticModelStore.create(sm)\n                  : semanticModelStore.update(sm)\n              }\n            >\n              Save model\n            </Button>\n          ) : null}\n\n          <Button size=\"small\" onClick={cloneNewModel}>\n            Add model\n          </Button>\n\n          <Button size=\"small\" type=\"primary\" disabled={true}>\n            Import\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            style={{ background: green[6], borderColor: green[6] }}\n            onClick={onExport}\n          >\n            Export\n          </Button>\n        </Space>\n      );\n\n      return (\n        <div>\n          {smListComponent}\n          <Space>\n            <Button size=\"small\" onClick={centering}>\n              Center graph (C)\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"node\", sm })}>\n              Add node\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Add edge\n            </Button>\n            {leftMenu}\n          </Space>\n          <GraphComponent\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.graph.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight={{ type: \"fit-graph\", extraHeight: 20 }}\n            props={{\n              initHeight: 300,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                openForm({\n                  type: \"node\",\n                  sm,\n                  node: sm.graph.node(nodeId),\n                });\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                openForm({\n                  type: \"edge\",\n                  sm,\n                  edge: sm.graph.edge(edge.source, edge.target),\n                });\n              },\n            }}\n          />\n        </div>\n      );\n    }\n  )\n);\n\nconst getNodeLabel = (sm: SemanticModel, node: SMNode) => {\n  switch (node.nodetype) {\n    case \"data_node\":\n      return node.label;\n    case \"literal_node\":\n      return node.label;\n    case \"class_node\":\n      return sm.graph.uriCount.label(node);\n  }\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { TableComponent } from \"../../components/table\";\nimport * as RTable from \"../../components/table/RelationalTable\";\nimport { TableComponentFunc } from \"../../components/table/TableComponent\";\nimport {\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { EntitySettingComponent } from \"./EntitySettingComponent\";\nimport { SemanticModelComponent } from \"./SemanticModelComponent\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const {\n      projectStore,\n      tableStore,\n      tableRowStore,\n      semanticModelStore,\n      assistantService,\n    } = useStores();\n    const [hasFetchSemanticModel, setHashFetchSemanticModel] = useState(false);\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      tableStore,\n      tableId\n    );\n    const tableRef = useRef<TableComponentFunc>();\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n\n      // fetch its semantic model\n      if (!semanticModelStore.hasByTable(tableId)) {\n        semanticModelStore\n          .fetch({\n            limit: 1000,\n            offset: 0,\n            conditions: {\n              table: tableId,\n            },\n          })\n          .then(() => setHashFetchSemanticModel(true));\n      }\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = tableStore.get(tableId);\n    const rtable: RTable.Table | undefined = useMemo(() => {\n      const table = tableStore.get(tableId);\n      if (table === undefined || table === null) {\n        return undefined;\n      }\n\n      return {\n        name: table.name,\n        description: table.description,\n        columns: table.columns,\n        size: table.size,\n        context: {\n          webpage: table.contextPage?.url,\n          title: table.contextPage?.title,\n          entityId: table.contextPage?.entityId,\n          contentHierarchy: table.contextTree,\n        },\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableId, table !== undefined]);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined) {\n      return <LoadingPage />;\n    }\n\n    let semComponent = null;\n    if (!semanticModelStore.hasByTable(tableId) && !hasFetchSemanticModel) {\n      semComponent = <LoadingPage bordered={true} />;\n    } else {\n      semComponent = (\n        <SemanticModelComponent\n          key={tableId}\n          table={table}\n          leftMenu={\n            <>\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  assistantService.predict(table).then(() => {\n                    tableRef.current?.reload();\n                  });\n                }}\n              >\n                Predict\n              </Button>\n            </>\n          }\n        />\n      );\n    }\n\n    const queryRow = async (limit: number, offset: number) => {\n      let records = await tableRowStore.fetchByTable(table, offset, limit);\n      return records.map((row) => ({\n        index: row.index,\n        row: row.row.map((v) => ({ value: v })),\n        links: row.links,\n      }));\n    };\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={projectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            {semComponent}\n            <TableComponent\n              ref={tableRef}\n              key={tableId}\n              toolBarRender={false}\n              table={rtable!}\n              query={queryRow}\n              showRowIndex={true}\n            />\n            <EntitySettingComponent />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [TableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nconst TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <AutoHideTooltip title=\"copied\" ms={500}>\n            <span\n              style={{\n                color: \"#237804\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => navigator.clipboard.writeText(props.table.name)}\n            >\n              {props.table.name}\n            </span>\n          </AutoHideTooltip>\n        </Space>\n      }\n      subTitle={\n        <Space>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </Space>\n      }\n      extra={props.btns}\n    />\n  );\n};\n\nconst AutoHideTooltip: React.FC<{ title: string; ms: number }> = ({\n  children,\n  title,\n  ms,\n}) => {\n  const [visible, setVisible] = useState(false);\n  const autoHide = (visible: boolean) => {\n    if (visible) {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n      }, ms);\n    }\n  };\n\n  return (\n    <Tooltip\n      title={title}\n      visible={visible}\n      onVisibleChange={autoHide}\n      trigger=\"click\"\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the application\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\nconst None = () => <h1>Not supposed to see this page</h1>;\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    component: ProjectPage,\n    urlSchema: { projectId: \"number\" },\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    component: TablePage,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    pathDef: \"/tables/:tableId\",\n  }),\n  tableExport: new NoQueryArgsPathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    pathDef: \"/api/table/:tableId/export?attachment=true\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={true} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}