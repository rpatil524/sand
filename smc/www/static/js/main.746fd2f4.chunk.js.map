{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","env.ts","models/Project.ts","models/table/TableRowStore.ts","models/table/TableStore.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/entity/Entity.ts","models/entity/EntityStore.ts","models/index.ts","pages/HomePage.tsx","pages/ProjectPage.tsx","components/entity/Entity.ts","components/entity/InlineEntityComponent.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PopoverEntityComponent.tsx","components/entity/FetchEntityComponent.tsx","components/entity/PageEntityComponent.tsx","components/element/Number.tsx","components/element/Button.tsx","components/table/CandidateEntityListComponent.tsx","components/table/CellComponent.tsx","components/table/TableComponent.tsx","components/table/styles.ts","components/graph/RectNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/CircleNode.ts","components/graph/GraphComponent.tsx","pages/table/SemanticModelComponent.tsx","pages/table/TablePage.tsx","logo.png","routes.tsx","pages/SettingPage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","Object","entries","key","name2field","fromEntries","undefined","action","fetchOne","fetchById","list","limit","length","runInAction","response","status","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","item","order","groupBy","group_by","items","m","values","from","iter","fn","output","r","push","groupedFields","condition","btoa","JSON","stringify","encodedCondition","parse","atob","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","draft","discardDraft","post","serializeCreateDraft","delete","draftID","update","serializeUpdateDraft","toModel","markSaved","deindex","listener","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","keys","clear","SingleKeyIndex","idField","fkField","add","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","callback","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","x","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","preventDefault","ctrlKey","metaKey","window","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","openInNewPage","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","app","Router","Switch","Route","ConfigProvider","locale","enUSIntl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","Project","description","ProjectStore","TableRowStore","tableIndex","findByTable","tableId","start","no","rowId","links","forEach","link","entity","entityId","candidate_entities","ce","candidateEntities","entity_id","TableStore","projectIndex","findByProject","projectId","contextPage","context_page","contextValues","context_values","contextTree","context_tree","URICount","nodes","counter","id2num","label","node","nextLabel","uri","unlabel","substring","lastIndexOf","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","onSave","hasNode","nodesByURI","filter","nodeByColumnIndex","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","toJS","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","graph","table","project","SemanticModelStore","column_index","is_in_context","Entity","aliases","properties","id2uri","EntityStore","fetchByIdQueue","catch","stmts","stmt","qualifiersOrder","qualifiers_order","stores","projectStore","tableStore","tableRowStore","semanticModelStore","entityStore","_stores","StoreContext","createContext","useStores","useContext","HomePage","observer","useEffect","Fragment","gutter","span","Title","level","itemLayout","dataSource","renderItem","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","ProjectPage","borderLeft","fontWeight","LoadingPage","columns","dataIndex","renderText","text","tbl","encodeWhereQuery","_","upperFirst","defaultSize","request","sort","a","pageSize","current","table2row","success","options","headerTitle","pagination","pageSizeOptions","rowKey","isEntityComplete","doesNotExist","InlineEntityComponent","nolink","ValueComponent","FetchEntityComponent","render","StatementComponent","qualifiers","marginLeft","qid","valueIndex","PropertyComponent","visibleProperties","components","pid","Text","strong","idx","PopoverEntityComponent","margin","minWidth","content","serializeFetchById","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","padding","icon","selected","onChange","colorSelected","blue","colorUnselected","grey","useState","stateSelected","setStateSelected","correctSelected","color","styles","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","cursor","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","candidateLst","slice","faCheck","faCheckDouble","probability","findIndex","candidate","score","visible","top","bodyStyle","width","textDecoration","noEntityLink","CellComponent","cell","flatMap","prefix","end","linksurface","infix","dangerouslySetInnerHTML","__html","trim","verticalAlign","TableComponent","toolBarRender","col","context","webpage","TableInformation","info","contentHierarchy","hierarchy","repeat","heading","contentBefore","contentAfter","drawText","group","wordwrap","units","xoffset","yoffset","cfg","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","cacheFn","cache","args","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","concat","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","lines","line","unit","layout","lineHeight","cssLineHeight","fontSize","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","Math","max","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","b","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","wrapText","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","nLines","deltaX","deltaY","getApproximateWidth","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","fitCenter","setDataAndRender","onFinish","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","moveTo","leftOffset","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","changeSize","untilLayoutStable","maxTries","delay","significantChange","prevBBox","setTimeout","nextBBox","defaultWidth","G6","registerNode","draw","wp","paddingWidth","hp","paddingHeight","labelCfg","registerRectNode","labelOffset","registerCircleNode","Graph","scrollWidth","initHeight","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","modes","default","edit","nodeStateStyles","hover","onNodeClick","on","event","_cfg","model","onEdgeClick","newNodes","u","labelStyle","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","hide","display","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","ref","renderingAdjustedHeight","useRef","useImperativeHandle","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","changeLayout","FullscreenOutlined","overlay","LayoutOutlined","DownOutlined","SemanticGraphComponent","graphContainer","sm","graphRef","green","gold","datatype","purple","centering","useHotkeys","log","TablePage","marginRight","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","setState","sortedIndex","all","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","hasByTable","rtable","semComponent","sms","queryRow","row","btns","disabled","extraSubTitle","direction","TableNavBar","onBack","settings","upload","projects","home","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.746fd2f4.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Deserialize the data sent from the server to a record\n     */\n    deserialize(record) {\n        if (this.nameAndField.length > 0) {\n            for (const [name, field] of this.nameAndField) {\n                record[field] = record[name];\n                delete record[name];\n            }\n        }\n        return record;\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) { }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, makeObservable, runInAction, action } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch) {\n        super(remoteURL, field2name, refetch);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        /**\n         * Create the record, will sync with remote server.\n         */\n        this.create = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                let record = this.deserialize(resp.data);\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft) {\n                    this.createDrafts.delete(draft.draftID);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Update the record, with sync with remote server\n         */\n        this.update = flow(function* (draft) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                let record = draft.toModel() || this.deserialize(resp.data);\n                draft.markSaved();\n                this.records.set(record.id, record);\n                this.index(record);\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Remove a record, will sync with remote server\n         */\n        this.delete = flow(function* (id) {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}/${id}`);\n                this.deindex(id);\n                this.records.delete(id);\n                for (let listener of this.onDeleteListeners) {\n                    listener(id);\n                }\n                this.state.value = \"updated\";\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (let id of this.records.keys()) {\n                        this.deindex(id);\n                        for (let listener of this.onDeleteListeners) {\n                            listener(id);\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(id) { }\n}\n","import { action, makeObservable, observable } from \"mobx\";\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index.get(key1).get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3.get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (e !== undefined && (e.ctrlKey || e.metaKey)) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        props.path\n            .path(props.urlArgs, props.queryArgs)\n            .mouseClickNavigationHandler(e);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\"]);\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    const app = (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0));\n    if (enUSLocale === true) {\n        return _jsx(ConfigProvider, Object.assign({ locale: enUSIntl }, { children: app }), void 0);\n    }\n    return app;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  public deserialize(record: any): Project {\n    return new Project(record.id, record.name, record.description);\n  }\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.name,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { SERVER } from \"../../env\";\nimport { PairKeysUniqueIndex, RStore } from \"rma-baseapp\";\nimport { TableRow } from \"./Table\";\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  protected tableIndex: PairKeysUniqueIndex<number, number, number> =\n    new PairKeysUniqueIndex(\"table\", \"index\");\n\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false);\n  }\n\n  /**\n   * Find rows of the table\n   *\n   * @param tableId\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  findByTable = (tableId: number, start: number, no: number): TableRow[] => {\n    const map = this.tableIndex.index.get(tableId);\n    if (map === undefined) return [];\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n    return output;\n  };\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize(record: any): TableRow {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity !== null) {\n          link.entityId = link.entity;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity;\n          delete ce.entity;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  }\n}\n","import { SERVER } from \"../../env\";\nimport { SingleKeyIndex, RStore } from \"rma-baseapp\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends RStore<number, Table> {\n  protected projectIndex: SingleKeyIndex<number, number> = new SingleKeyIndex(\n    \"project\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false);\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize(record: any): Table {\n    record.contextPage = record.context_page;\n    if (\n      record.contextPage !== null &&\n      record.contextPage !== undefined &&\n      record.contextPage.entity !== null\n    ) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n    record.contextValues = record.context_values;\n    record.contextTree = record.context_tree;\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  }\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * ID for entity, otherwise string literal\n   */\n  value: string;\n  // column name\n  label: string;\n  /**\n   * DataType of the literal node\n   */\n  datatype: LiteralDataType;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface GraphEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    return `${label} ${this.counter[uri] || 1}`;\n  };\n\n  unlabel = (label: string) => {\n    return label.substring(0, label.lastIndexOf(\" \"));\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: GraphEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: GraphEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [GraphEdge, GraphEdge?][] => {\n    let matchPaths: [GraphEdge, GraphEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [GraphEdge, GraphEdge?][] => {\n    let outprops: [GraphEdge, GraphEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        target.uri === \"http://wikiba.se/ontology#Statement\"\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<GraphEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: GraphEdge) {\n    if (\n      this.edges.filter(\n        (e) => e.source === edge.source && e.target === edge.target\n      ).length > 0\n    ) {\n      throw new Error(\"Cannot have more than one edge between two classes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<GraphEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { SMGraph, SMNodeType } from \"./SMGraph\";\n\n// id of a semantic model is actually the combination of table & name\n// const parseKey = (id: string) => {\n//   const ptr = id.indexOf(\":\");\n//   return { table: parseInt(id.substring(0, ptr)), name: id.substring(ptr) };\n// };\nconst getKey = (name: string, table: number) => `${table}:${name}`;\n\nexport class SemanticModel\n  implements Record<string>, DraftUpdateRecord<string, SemanticModel>\n{\n  id: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n  project: number;\n\n  constructor(\n    id: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number,\n    project: number\n  ) {\n    this.id = id;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n    this.project = project;\n  }\n\n  get isDraft() {\n    return false;\n  }\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number,\n    project: number\n  ) {\n    super(draftID, description, version, graph, table, project);\n    this.draftID = draftID;\n  }\n\n  get isDraft() {\n    return true;\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  string,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  protected tableIndex: SingleKeyIndex<string, number> = new SingleKeyIndex(\n    \"table\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false);\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize(record: any): SemanticModel {\n    let id = getKey(record.name, record.table);\n    let nodes = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    let graph = new SMGraph(id, nodes, record.data.edges);\n    return new SemanticModel(\n      id,\n      record.description,\n      record.version,\n      graph,\n      record.table,\n      record.project\n    );\n  }\n\n  public serializeUpdateDraft(record: any): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  protected index(record: SemanticModel): void {\n    this.tableIndex.add(record);\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public label: MultiLingualString;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    label: MultiLingualString,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.label = label;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n\n  /**\n   * Mapping from entity id to url to external KG\n   * @param entityId\n   */\n  static id2uri = (entityId: string): string => {\n    switch (entityId[0]) {\n      case \"Q\":\n        return `https://www.wikidata.org/wiki/${entityId}`;\n      case \"P\":\n        return `https://www.wikidata.org/wiki/Property:${entityId}`;\n      case \"L\":\n        return `https://www.wikidata.org/wiki/Lexeme:${entityId}`;\n      default:\n        return entityId;\n    }\n  };\n}\n\nexport type MultiLingualString = { [lang: string]: string };\nexport type MultiLingualStringList = { [lang: string]: string[] };\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport interface DataValue {\n  type:\n    | \"string\"\n    | \"time\"\n    | \"quantity\"\n    | \"globecoordinate\"\n    | \"monolingualtext\"\n    | \"entityid\";\n  value: string | number | object;\n}\n","import { AxiosError } from \"axios\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  protected fetchByIdQueue: Map<\n    string,\n    ((entity?: Entity, error?: AxiosError<any>) => void)[]\n  >;\n\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n    this.fetchByIdQueue = new Map();\n  }\n\n  /**\n   * Fetch entity from server. However, only one request is sent out and the rest\n   * if coming too fast is going to use the response of the previous request\n   *\n   * @param id entity id\n   * @returns\n   */\n  public serializeFetchById(id: string): Promise<Entity | undefined> {\n    return new Promise((resolve, reject) => {\n      if (!this.fetchByIdQueue.has(id)) {\n        this.fetchByIdQueue.set(id, []);\n        return this.fetchById(id)\n          .catch((error) => {\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(undefined, error);\n            }\n            this.fetchByIdQueue.delete(id);\n            throw error;\n          })\n          .then((entity) => {\n            // release the rest of the queued requests\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(entity);\n            }\n            this.fetchByIdQueue.delete(id);\n            return entity;\n          });\n      } else {\n        this.fetchByIdQueue.get(id)!.push((entity, error) => {\n          if (error !== undefined) {\n            reject(error);\n          } else {\n            resolve(entity);\n          }\n        });\n      }\n    });\n  }\n\n  public deserialize(record: any): Entity {\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  }\n}\n","import { Project, ProjectStore } from \"./Project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableStore, TableRowStore } from \"./table\";\nimport { SMGraph, URICount, SemanticModelStore } from \"./sm\";\nimport { Entity, EntityStore } from \"./entity\";\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore: new TableStore(),\n  tableRowStore: new TableRowStore(),\n  semanticModelStore: new SemanticModelStore(),\n  entityStore: new EntityStore(),\n};\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  SMGraph,\n  URICount,\n  Entity,\n};\nexport type { Table, TableRow } from \"./table\";\nexport type { SemanticModel } from \"./sm/SemanticModelStore\";\nexport type { GraphEdge, SMNode as GraphNode } from \"./sm/SMGraph\";\n","import { Avatar, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor: [\n                          \"#f56a00\",\n                          \"#7265e6\",\n                          \"#1890ff\",\n                          \"#00a2ae\",\n                        ][project.name.charCodeAt(0) % 4],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project: {_.upperFirst(project.name)}\n        </Typography.Title>\n        <ProTable<ReturnType<typeof table2row>>\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          // toolBarRender={false}\n          search={false}\n          pagination={{\n            pageSize: 10,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n","import { Entity, IncompleteEntity, isEntityComplete } from \"./Entity\";\nimport { ExternalLink } from \"rma-baseapp\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  ...restprops\n}: {\n  entity: Entity | IncompleteEntity;\n  nolink?: boolean;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (!isEntityComplete(entity)) {\n    if (entity.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Entity {entity.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({entity.id})</span>;\n    } else {\n      return (\n        <ExternalLink\n          href={Entity.id2uri(entity.id)}\n          openInNewPage={true}\n          {...restprops}\n        >\n          ({entity.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {entity.label[\"en\"]} ({entity.id})\n      </span>\n    );\n  }\n\n  return (\n    <ExternalLink\n      href={Entity.id2uri(entity.id)}\n      openInNewPage={true}\n      {...restprops}\n    >\n      {entity.label[\"en\"]} ({entity.id})\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { FetchEntityComponent, InlineEntityComponent } from \".\";\nimport { DataValue } from \"../../models/entity\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value as string}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row } from \"antd\";\nimport { Statement } from \"../../models/entity\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 8,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({ stmt, classes }: { stmt: Statement } & WithStyles<typeof styles>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>{qid}</Col>\n          <Col span={18}>\n            {stmt.qualifiers[qid].map((value, valueIndex) => {\n              return (\n                <div key={valueIndex}>\n                  <ValueComponent value={value} />\n                </div>\n              );\n            })}\n          </Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { Entity } from \"../../models/entity\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {};\n\nexport const PropertyComponent = withStyles(styles)(\n  ({\n    entity,\n    visibleProperties,\n    classes,\n  }: { entity: Entity; visibleProperties?: string[] } & WithStyles<\n    typeof styles\n  >) => {\n    if (visibleProperties === undefined) {\n      visibleProperties = Object.keys(entity.properties);\n    }\n\n    const components = [];\n    for (const pid of visibleProperties) {\n      // we have undefined when entity does not have this property `pid`\n      const stmts = entity.properties[pid] || [];\n      components.push(\n        <Row gutter={8} key={pid}>\n          <Col span={6}>\n            <Typography.Text strong={true}>{pid}</Typography.Text>\n          </Col>\n          <Col span={18}>\n            {stmts.map((stmt, idx) => {\n              return <StatementComponent key={idx} stmt={stmt} />;\n            })}\n          </Col>\n        </Row>\n      );\n    }\n\n    return <div>{components}</div>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink, LoadingPage } from \"rma-baseapp\";\nimport { Entity, IncompleteEntity, isEntityComplete } from \".\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PopoverEntityComponent = withStyles(styles)(\n  ({\n    entity,\n    children,\n    classes,\n    ...restprops\n  }: { entity: Entity | IncompleteEntity } & React.HTMLProps<HTMLDivElement> &\n    WithStyles<typeof styles>) => {\n    let content;\n\n    if (!isEntityComplete(entity)) {\n      if (entity.doesNotExist) {\n        content = (\n          <span>\n            <i>Entity {entity.id} doesn't exist</i>\n          </span>\n        );\n      } else {\n        content = <LoadingPage />;\n      }\n    } else {\n      content = (\n        <div\n          {...restprops}\n          className={`${classes.root} ${restprops.className}`}\n        >\n          <h2>\n            <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n              {\" \"}\n              {entity.label[\"en\"]}\n            </ExternalLink>\n          </h2>\n          <p>\n            <i>({entity.id})</i>\n          </p>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases[\"en\"].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description[\"en\"]}</p>\n          <hr />\n          <PropertyComponent entity={entity} visibleProperties={[\"P31\"]} />\n        </div>\n      );\n    }\n\n    return <Popover content={content}>{children}</Popover>;\n  }\n);\n","import { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { useStores } from \"../../models\";\nimport { Entity, IncompleteEntity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n  }: {\n    entityId: string;\n    render: (entity: Entity | IncompleteEntity) => React.ReactElement;\n  }) => {\n    const { entityStore } = useStores();\n\n    useEffect(() => {\n      entityStore.serializeFetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n    if (entity === undefined || entity === null) {\n      return render({\n        id: entityId,\n        doesNotExist: entity === null,\n      });\n    }\n\n    return render(entity);\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \".\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  ({ entity }: { entity: Entity } & WithStyles<typeof styles>) => {\n    return (\n      <div>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)}>\n            {\" \"}\n            {entity.label[\"en\"]}\n          </ExternalLink>\n        </h2>\n        <p>\n          <i>({entity.id})</i>\n        </p>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases[\"en\"].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description[\"en\"]}</p>\n        <hr />\n        <PropertyComponent entity={entity} />\n      </div>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: 1,\n    border: \"1px solid\",\n    borderRadius: 2,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n      setStateSelected(!stateSelected);\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { faCheck, faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport * as RTable from \"./RelationalTable\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\nexport const CandidateEntityListComponent = withStyles(styles)(\n  ({\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const [showAllCandidateModals, setShowAllCandidateModals] = useState(false);\n\n    const links = record.links[index] || [];\n    const candidateLst = [];\n    if (links.length > 0) {\n      for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n        const className =\n          candidateEntity.entityId === links[0].entityId\n            ? classes.correctCandidateEntity\n            : classes.candidateEntity;\n\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity) => (\n                  <PopoverEntityComponent entity={entity}>\n                    <InlineEntityComponent\n                      nolink={true}\n                      entity={entity}\n                      className={className}\n                    />\n                  </PopoverEntityComponent>\n                )}\n              />\n              <span className={className}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      // if there is a correct entity in top K, no need to highlight, otherwise,\n      // add them to the list\n      const idx = links[0].candidateEntities.findIndex(\n        (candidate) => candidate.entityId === links[0].entityId\n      );\n      if (idx !== -1 && idx >= topK) {\n        const candidateEntity = links[0].candidateEntities[idx];\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity) => (\n                  <span className={classes.correctCandidateEntity}>\n                    ({idx})&nbsp;\n                    <PopoverEntityComponent entity={entity}>\n                      <InlineEntityComponent nolink={true} entity={entity} />\n                    </PopoverEntityComponent>\n                  </span>\n                )}\n              />\n              <span className={classes.correctCandidateEntity}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      if (links[0].candidateEntities.length > topK) {\n        candidateLst.push(\n          <div key=\"see-more\">\n            <Typography.Text\n              className={classes.candidateEntitySeeMore}\n              onClick={() => setShowAllCandidateModals(!showAllCandidateModals)}\n            >\n              See more\n            </Typography.Text>\n          </div>\n        );\n      }\n    }\n\n    const columns: any = [\n      {\n        dataIndex: \"id\",\n        title: \"Entity\",\n        render: (entityId: string) => {\n          return (\n            <FetchEntityComponent\n              entityId={entityId}\n              render={(entity) => (\n                <PopoverEntityComponent entity={entity}>\n                  <InlineEntityComponent nolink={true} entity={entity} />\n                </PopoverEntityComponent>\n              )}\n            />\n          );\n        },\n      },\n      {\n        dataIndex: \"score\",\n        title: \"Score\",\n        render: (score: number) => {\n          return <Number value={score} fractionDigits={5} />;\n        },\n      },\n      {\n        title: \"action\",\n        render: () => {\n          return (\n            <Space size={4}>\n              <Button>Select</Button>\n            </Space>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {candidateLst}\n        <Modal\n          title=\"Candidate Entities\"\n          visible={showAllCandidateModals}\n          style={{ top: 20 }}\n          bodyStyle={{ padding: 0 }}\n          width={\"60%\"}\n          onOk={() => setShowAllCandidateModals(false)}\n          onCancel={() => setShowAllCandidateModals(false)}\n        >\n          <ProTable\n            defaultSize=\"small\"\n            bordered={true}\n            search={false}\n            pagination={{\n              pageSize: 20,\n              pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n            }}\n            rowKey=\"id\"\n            columns={columns}\n            request={async (params, sort, filter) => {\n              return Promise.resolve({\n                total: links.length > 0 ? links[0].candidateEntities.length : 0,\n                success: true,\n                data:\n                  links.length === 0\n                    ? []\n                    : links[0].candidateEntities\n                        .slice(\n                          (params.current! - 1) * params.pageSize!,\n                          params.current! * params.pageSize!\n                        )\n                        .map((candidateEntity, index) => ({\n                          id: candidateEntity.entityId,\n                          score: candidateEntity.probability,\n                        })),\n              });\n            }}\n          ></ProTable>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n);\n","import * as RTable from \"./RelationalTable\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { FetchEntityComponent, PopoverEntityComponent } from \"../entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n  },\n  noEntityLink: {\n    color: grey[5],\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  ({\n    cell,\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    cell: string;\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const links = record.links[index] || [];\n    let components = links.flatMap((link, index) => {\n      let prefix =\n        index === 0\n          ? cell.substring(0, link.start)\n          : cell.substring(links[index - 1].end, link.start);\n      let linksurface = cell.substring(link.start, link.end);\n      const infix = (\n        <a\n          key={index}\n          href={link.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          dangerouslySetInnerHTML={{\n            __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n          }}\n          className={\n            classes.link +\n            (link.entityId === undefined ? \" \" + classes.noEntityLink : \"\")\n          }\n          style={link.entityId === null ? { color: \"#aaa\" } : {}}\n        />\n      );\n\n      if (link.entityId === undefined) {\n        return [prefix, infix];\n      }\n\n      // reassign to infix somehow killing the application\n      const wrappedInfix = (\n        <FetchEntityComponent\n          key={index}\n          entityId={link.entityId}\n          render={(entity) => (\n            <PopoverEntityComponent entity={entity}>\n              {infix}\n            </PopoverEntityComponent>\n          )}\n        />\n      );\n\n      return [prefix, wrappedInfix];\n    });\n\n    if (links.length === 0) {\n      components.push(cell);\n    } else {\n      components.push(cell.substring(links[links.length - 1].end));\n    }\n\n    return (\n      <div>\n        {components}\n        <CandidateEntityListComponent\n          record={record}\n          index={index}\n          topK={topK}\n        />\n      </div>\n    );\n  }\n);\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent, InlineEntityComponent } from \"../entity\";\nimport { CellComponent } from \"./CellComponent\";\nimport * as RTable from \"./RelationalTable\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport const TableComponent = withStyles(styles)(\n  ({\n    table,\n    query,\n    classes,\n    toolBarRender,\n  }: {\n    table: RTable.Table;\n    query: (limit: number, offset: number) => Promise<RTable.Row[]>;\n    toolBarRender?: false;\n  } & WithStyles<typeof styles>) => {\n    const columns = table.columns.map((col, columnIndex) => ({\n      dataIndex: [\"row\", columnIndex, \"value\"],\n      title: col,\n      render: ((value: string, record: RTable.Row) => {\n        return (\n          <CellComponent cell={value} record={record} index={columnIndex} />\n        );\n      }) as any,\n    }));\n\n    return (\n      <React.Fragment>\n        <ProTable\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let records = await query(\n              params.pageSize!,\n              (params.current! - 1) * params.pageSize!\n            );\n            return {\n              data: records,\n              success: true,\n              total: table.size,\n            };\n          }}\n          search={false}\n          pagination={{\n            pageSize: 5,\n            pageSizeOptions: [\n              \"5\",\n              \"10\",\n              \"20\",\n              \"50\",\n              \"100\",\n              \"200\",\n              \"500\",\n              \"1000\",\n            ],\n          }}\n          headerTitle={\n            table.context.webpage !== undefined ? (\n              <ExternalLink href={table.context.webpage} openInNewPage={true}>\n                {table.name}\n              </ExternalLink>\n            ) : (\n              table.name\n            )\n          }\n          toolBarRender={toolBarRender}\n          rowKey=\"index\"\n          columns={columns}\n        />\n        <TableInformation table={table} />\n      </React.Fragment>\n    );\n  }\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: RTable.Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.context.webpage !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.context.webpage} openInNewPage={true}>\n        {table.context.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.context.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.context.entityId}\n        render={(entity) => <InlineEntityComponent entity={entity} />}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.context.contentHierarchy || []).map(\n    (hierarchy, index) => {\n      return (\n        <div key={index}>\n          <b>\n            {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n          </b>\n          <p>{hierarchy.contentBefore}</p>\n          <p>{hierarchy.contentAfter}</p>\n        </div>\n      );\n    }\n  );\n  info.push([\"Content Hierarchy\", content.length > 0 ? content : \"N/A\"]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","import { WordWrap } from \"./wordwrap\";\nimport G6, { ModelConfig, ShapeStyle, IGroup, IShape } from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: { [key: string]: any };\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n) {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.forEach(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"wrapped-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  units.forEach(({ text, x, y }) => {\n    group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"wrapped-text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: ((cfg: RectConfig, group: IGroup): IShape => {\n        const wp = cfg.style.paddingWidth || 0;\n        const hp = cfg.style.paddingHeight || 0;\n        const { units, width, height } = wordwrap.wrapText(\n          cfg.label as string,\n          cfg.size || defaultWidth,\n          \"center\"\n        );\n\n        const shape = group!.addShape(\"rect\", {\n          attrs: {\n            x: cfg.x,\n            y: cfg.y,\n            width: width + wp * 2,\n            height: height + hp * 2,\n            ...cfg.style,\n          },\n          name: \"rect-soft-wrap-shape\",\n        });\n\n        drawText(group, wordwrap, units, {\n          xoffset: wp,\n          yoffset: hp,\n          cfg: cfg?.labelCfg?.style,\n        });\n        return shape;\n      }) as (cfg?: ModelConfig, group?: IGroup) => IShape,\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units\n  leftOffset: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  private props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: [\"drag-canvas\", \"drag-node\"],\n        edit: [\"click-select\"],\n      },\n      nodeStateStyles: {\n        hover: {\n          fill: \"lightsteelblue\",\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: { ...u.style, radius: 4, paddingHeight: 2, paddingWidth: 4 },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    let newEdges = edges.map((e) => ({\n      id: `${e.source}-${e.target}-${e.id}`,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /** Adjust the canvas size to fit with the graph */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height: \"fit-graph\" | \"fit-remaining-window\";\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      if (center === true) {\n        this.graph.moveTo(graphWidth / 2 - bbox.width / 2, 10);\n      } else {\n        this.graph.moveTo(this.props.leftOffset, 10);\n      }\n\n      let graphHeight;\n      switch (height) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + 20;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight - (viewportOffset + documentScrollY) - 10;\n          break;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import G6, { IGroup, IShape, ModelConfig, ShapeStyle } from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig extends ModelConfig {\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: ((cfg: CircleConfig, group: IGroup): IShape => {\n        const padding = cfg.style.padding || 8;\n        // const wp = cfg.style.paddingWidth || 0;\n        // const hp = cfg.style.paddingHeight || 0;\n        const labelPosition: string = \"below\";\n        const labelOffset = cfg.labelCfg?.offset || 0;\n\n        if (labelPosition === \"inside\") {\n          // render text inside circle\n          const { units, radius } = wordwrap.wrapTextCircle(\n            cfg.label as string,\n            256\n          );\n          const shape = group!.addShape(\"circle\", {\n            attrs: {\n              x: cfg.x,\n              y: cfg.y,\n              r: radius + padding,\n              ...cfg.style,\n            },\n            name: \"circle-soft-wrap-shape\",\n          });\n          drawText(group, wordwrap, units, {\n            xoffset: 0,\n            yoffset: 0,\n            cfg: cfg?.labelCfg?.style,\n          });\n          return shape;\n        }\n\n        // render text below circle\n        const { units, width } = wordwrap.wrapText(\n          cfg.label as string,\n          defaultWidth,\n          \"center\"\n        );\n        const defaultRadius = 10;\n        const shape = group!.addShape(\"circle\", {\n          attrs: {\n            x: cfg.x,\n            y: cfg.y,\n            r: defaultRadius,\n            ...cfg.style,\n          },\n          name: \"circle-soft-wrap-shape\",\n        });\n\n        drawText(group, wordwrap, units, {\n          xoffset: -width / 2,\n          yoffset: defaultRadius + labelOffset,\n          cfg: cfg?.labelCfg?.style,\n          stroke: { color: \"white\", width: 4 },\n        });\n        return shape;\n      }) as (cfg?: ModelConfig, group?: IGroup) => IShape,\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  container: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = \"fit-graph\",\n        toolbar = false,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?: \"fit-graph\" | \"fit-remaining-window\";\n        className?: string;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n              leftOffset: 0,\n            }\n          );\n        }\n\n        const g = graph.current;\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar autoHide={toolbar === \"auto-hide\"} graph={graph} />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div ref={container} className={classes.container}></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (layout: keyof typeof GraphLayout) => {\n      setLayout(layout);\n      graph.current?.updateLayout(GraphLayout[layout]);\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4}>\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Space } from \"antd\";\nimport { useMemo, useRef } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { SemanticModel } from \"../../models\";\nimport {\n  GraphComponent as GC,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport { gold, green, purple } from \"@ant-design/colors\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    marginTop: 8,\n  },\n};\n\nexport const SemanticGraphComponent = withStyles(styles)(\n  ({ sm, classes }: { sm: SemanticModel } & WithStyles<typeof styles>) => {\n    const graphRef = useRef<GraphComponentFunc | undefined>(undefined);\n\n    const [nodes, edges] = useMemo(() => {\n      const nodes = sm.graph.nodes.map((node) => {\n        let shape: GraphNode[\"shape\"], style;\n        switch (node.nodetype) {\n          case \"class_node\":\n            shape = \"circle\";\n            style = { fill: green[2], stroke: green[8] };\n            break;\n          case \"data_node\":\n            shape = \"rect\";\n            style = { fill: gold[3], stroke: gold[8] };\n            break;\n          case \"literal_node\":\n            if (node.datatype === \"entity-id\") {\n              shape = \"circle\";\n            } else {\n              shape = \"rect\";\n            }\n            if (node.isInContext) {\n              style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n            } else {\n              style = { fill: purple[2], stroke: \"#c41d7f\" };\n            }\n            break;\n          default:\n            throw new Error(`Unreachable!`);\n        }\n\n        return {\n          id: node.id,\n          label: node.label,\n          style,\n          shape,\n        };\n      });\n      const edges = sm.graph.edges.map((edge) => {\n        return {\n          id: `${edge.source}-${edge.target}-${edge.uri}`,\n          source: edge.source,\n          target: edge.target,\n          label: edge.label,\n        };\n      });\n\n      return [nodes, edges];\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sm.id, sm.version]);\n\n    const centering = () => {\n      if (graphRef.current === undefined) {\n        return;\n      }\n      const graph = graphRef.current.graph();\n      if (graph === undefined) {\n        return;\n      }\n      graph.updateContainerSize({ center: true, height: \"fit-graph\" });\n    };\n    useHotkeys(\"c\", centering, [sm.id, graphRef !== undefined]);\n\n    return (\n      <div>\n        <Space>\n          <Button size=\"small\" onClick={centering}>\n            Center graph (C)\n          </Button>\n          <Button size=\"small\">Add node</Button>\n          <Button size=\"small\">Add edge</Button>\n        </Space>\n        <GC\n          ref={graphRef}\n          className={classes.graphContainer}\n          id={sm.id}\n          version={sm.version}\n          nodes={nodes}\n          edges={edges}\n          toolbar={false}\n          renderingAdjustedHeight=\"fit-graph\"\n          props={{\n            initHeight: 300,\n            leftOffset: 0,\n            layout: {\n              type: \"dagre\",\n              rankdir: \"TB\",\n              nodesep: 70,\n              ranksep: 30,\n            },\n            onNodeClick: (nodeId: string) => {\n              console.log(\"click node\", nodeId);\n            },\n            onEdgeClick: (edge: GraphEdge) => {\n              console.log(\"click edge\", edge);\n            },\n          }}\n        />\n      </div>\n    );\n  }\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\n// import { TableComponent } from \"./TableComponent\";\nimport { TableComponent } from \"../../components/table\";\nimport * as RTable from \"../../components/table/RelationalTable\";\nimport {\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { SemanticGraphComponent } from \"./SemanticModelComponent\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const { projectStore, tableStore, tableRowStore, semanticModelStore } =\n      useStores();\n\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      tableStore,\n      tableId\n    );\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n\n      // fetch its semantic model\n      if (!semanticModelStore.hasByTable(tableId)) {\n        semanticModelStore.fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        });\n      }\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = tableStore.get(tableId);\n    const rtable: RTable.Table | undefined = useMemo(() => {\n      const table = tableStore.get(tableId);\n      if (table === undefined || table === null) {\n        return undefined;\n      }\n\n      return {\n        name: table.name,\n        description: table.description,\n        columns: table.columns,\n        size: table.size,\n        context: {\n          webpage: table.contextPage?.url,\n          title: table.contextPage?.title,\n          entityId: table.contextPage?.entityId,\n          contentHierarchy: table.contextTree,\n        },\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableId, table !== undefined]);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined) {\n      return <LoadingPage />;\n    }\n\n    let semComponent = null;\n    if (!semanticModelStore.hasByTable(tableId)) {\n      semComponent = <LoadingPage bordered={true} />;\n    } else {\n      const sms = semanticModelStore.findByTable(tableId);\n      semComponent = <SemanticGraphComponent sm={sms[0]} />;\n    }\n\n    const queryRow = async (limit: number, offset: number) => {\n      let result = await tableRowStore.fetch({\n        limit,\n        offset,\n        conditions: { table: table.id },\n      });\n      return result.records.map((row) => ({\n        index: row.index,\n        row: row.row.map((v) => ({ value: v })),\n        links: row.links,\n      }));\n    };\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={projectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            {semComponent}\n            <TableComponent\n              key={tableId}\n              toolBarRender={false}\n              table={rtable!}\n              query={queryRow}\n            />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [TableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nconst TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {props.table.name}\n          </span>\n        </Space>\n      }\n      subTitle={\n        <Space>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </Space>\n      }\n      extra={props.btns}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the applications\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\n// export const RouteURLArgs_project = { projectId: \"number\" };\n// export const RouteURLArgs_table = { tableId: \"number\" };\n// export const RouteQueryArgs_table = { query?: \"string\" };\n\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    urlSchema: { projectId: \"number\" },\n    component: ProjectPage,\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    component: TablePage,\n    pathDef: \"/tables/:tableId\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={true} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}