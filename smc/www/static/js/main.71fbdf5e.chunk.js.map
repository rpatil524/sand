{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","env.ts","models/Project.ts","models/table/TableRowStore.ts","models/table/TableStore.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/entity/Entity.ts","models/entity/EntityStore.ts","models/ontology/PropertyStore.ts","models/index.ts","pages/HomePage.tsx","pages/ProjectPage.tsx","components/entity/Entity.ts","components/entity/InlineEntityComponent.tsx","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","components/element/Number.tsx","components/element/Button.tsx","components/table/CandidateEntityListComponent.tsx","components/table/CellComponent.tsx","components/table/TableComponent.tsx","components/table/styles.ts","components/graph/RectNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/CircleNode.ts","components/graph/GraphComponent.tsx","pages/table/SemanticModelComponent.tsx","pages/table/TablePage.tsx","logo.png","routes.tsx","pages/SettingPage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","Object","entries","key","name2field","fromEntries","undefined","action","fetchOne","fetchById","list","limit","length","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","condition","btoa","JSON","stringify","encodedCondition","parse","atob","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","draft","discardDraft","serializeCreateDraft","delete","draftID","update","serializeUpdateDraft","toModel","markSaved","deindex","listener","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","keys","clear","SingleKeyIndex","idField","fkField","add","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","callback","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","x","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","preventDefault","ctrlKey","metaKey","window","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","openInNewPage","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","app","Router","Switch","Route","ConfigProvider","locale","enUSIntl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","Project","description","ProjectStore","TableRowStore","tableIndex","findByTable","tableId","start","no","rowId","links","forEach","link","entity","entityId","candidate_entities","ce","candidateEntities","entity_id","TableStore","projectIndex","findByProject","projectId","contextPage","context_page","contextValues","context_values","contextTree","context_tree","URICount","nodes","counter","id2num","label","node","nextLabel","uri","unlabel","substring","lastIndexOf","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","onSave","hasNode","nodesByURI","nodeByColumnIndex","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","toJS","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","graph","table","DraftSemanticModel","SemanticModelStore","column_index","is_in_context","Entity","aliases","properties","id2uri","EntityStore","fetchByIdQueue","catch","stmts","stmt","qualifiersOrder","qualifiers_order","PropertyStore","readableLabel","stores","projectStore","tableStore","tableRowStore","semanticModelStore","entityStore","propertyStore","_stores","StoreContext","createContext","useStores","useContext","HomePage","observer","useEffect","Fragment","gutter","span","Title","level","itemLayout","dataSource","renderItem","project","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","ProjectPage","borderLeft","fontWeight","LoadingPage","columns","dataIndex","renderText","text","tbl","encodeWhereQuery","_","upperFirst","defaultSize","request","sort","a","pageSize","current","table2row","success","options","headerTitle","pagination","pageSizeOptions","rowKey","useEntityProperties","propIds","pid","qualifiers","qid","fetchByIds","doesNotExist","InlineEntityComponent","nolink","FetchEntityComponent","render","forceWaiting","serializeFetchById","InlinePropertyComponent","property","CollapsibleComponent","hide","display","useState","visible","setVisible","toggleVisible","btn","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","unit","amount","language","globe","latitude","longitude","StatementComponent","marginLeft","id2prop","qval","Text","italic","valueIndex","PropertyComponent","propDivider","color","visibleProperties","components","strong","direction","width","idx","PropertyFilterComponent","filteredProps","setFilteredProps","enable","setEnable","onChange","checked","allowClear","optionFilterProp","onSelect","concat","onDeselect","PageEntityComponent","margin","minWidth","float","openPageEntityComponent","zIndex","content","info","icon","bodyStyle","maskClosable","mask","top","PopoverEntityComponent","marginBottom","cursor","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","padding","selected","colorSelected","blue","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","styles","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","candidateLst","slice","faCheck","faCheckDouble","probability","findIndex","candidate","score","textDecoration","noEntityLink","CellComponent","cell","flatMap","prefix","end","linksurface","infix","dangerouslySetInnerHTML","__html","trim","verticalAlign","TableComponent","toolBarRender","col","context","webpage","TableInformation","contentHierarchy","hierarchy","repeat","heading","contentBefore","contentAfter","drawText","group","wordwrap","units","xoffset","yoffset","cfg","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","cacheFn","cache","args","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","lines","line","layout","lineHeight","cssLineHeight","fontSize","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","Math","max","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","b","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","wrapText","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","nLines","deltaX","deltaY","getApproximateWidth","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","fitCenter","setDataAndRender","onFinish","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","moveTo","leftOffset","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","changeSize","untilLayoutStable","maxTries","delay","significantChange","prevBBox","setTimeout","nextBBox","defaultWidth","G6","registerNode","draw","wp","paddingWidth","hp","paddingHeight","labelCfg","registerRectNode","labelOffset","registerCircleNode","Graph","scrollWidth","initHeight","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","modes","default","edit","nodeStateStyles","hover","onNodeClick","on","event","_cfg","model","onEdgeClick","newNodes","u","labelStyle","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","ref","renderingAdjustedHeight","useRef","useImperativeHandle","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","changeLayout","FullscreenOutlined","overlay","LayoutOutlined","DownOutlined","SemanticGraphComponent","graphContainer","sms","graphRef","currentIndex","setCurrentIndex","sm","draftModel","getCreateDraft","column","green","gold","datatype","purple","centering","useHotkeys","smLists","borderColor","smListComponent","log","TablePage","marginRight","fetchedSms","setFetchedSms","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","setState","sortedIndex","all","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","hasByTable","rtable","semComponent","queryRow","row","btns","disabled","extraSubTitle","TableNavBar","onBack","settings","upload","projects","home","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.71fbdf5e.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Deserialize the data sent from the server to a record\n     */\n    deserialize(record) {\n        if (this.nameAndField.length > 0) {\n            for (const [name, field] of this.nameAndField) {\n                record[field] = record[name];\n                delete record[name];\n            }\n        }\n        return record;\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) { }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, makeObservable, runInAction, action } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch) {\n        super(remoteURL, field2name, refetch);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        /**\n         * Create the record, will sync with remote server.\n         */\n        this.create = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                let record = this.deserialize(resp.data);\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft) {\n                    this.createDrafts.delete(draft.draftID);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Update the record, with sync with remote server\n         */\n        this.update = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                let record = draft.toModel() || this.deserialize(resp.data);\n                draft.markSaved();\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft) {\n                    this.updateDrafts.delete(draft.id);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Remove a record, will sync with remote server\n         */\n        this.delete = flow(function* (id) {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}/${id}`);\n                this.deindex(id);\n                this.records.delete(id);\n                for (let listener of this.onDeleteListeners) {\n                    listener(id);\n                }\n                this.state.value = \"updated\";\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (let id of this.records.keys()) {\n                        this.deindex(id);\n                        for (let listener of this.onDeleteListeners) {\n                            listener(id);\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(id) { }\n}\n","import { action, makeObservable, observable } from \"mobx\";\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index.get(key1).get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3.get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (e !== undefined && (e.ctrlKey || e.metaKey)) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        props.path\n            .path(props.urlArgs, props.queryArgs)\n            .mouseClickNavigationHandler(e);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    const app = (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0));\n    if (enUSLocale === true) {\n        return _jsx(ConfigProvider, Object.assign({ locale: enUSIntl }, { children: app }), void 0);\n    }\n    return app;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  public deserialize(record: any): Project {\n    return new Project(record.id, record.name, record.description);\n  }\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.name,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { SERVER } from \"../../env\";\nimport { PairKeysUniqueIndex, RStore } from \"rma-baseapp\";\nimport { TableRow } from \"./Table\";\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  protected tableIndex: PairKeysUniqueIndex<number, number, number> =\n    new PairKeysUniqueIndex(\"table\", \"index\");\n\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false);\n  }\n\n  /**\n   * Find rows of the table\n   *\n   * @param tableId\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  findByTable = (tableId: number, start: number, no: number): TableRow[] => {\n    const map = this.tableIndex.index.get(tableId);\n    if (map === undefined) return [];\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n    return output;\n  };\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize(record: any): TableRow {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity !== null) {\n          link.entityId = link.entity;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity;\n          delete ce.entity;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  }\n}\n","import { SERVER } from \"../../env\";\nimport { SingleKeyIndex, RStore } from \"rma-baseapp\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends RStore<number, Table> {\n  protected projectIndex: SingleKeyIndex<number, number> = new SingleKeyIndex(\n    \"project\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false);\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize(record: any): Table {\n    record.contextPage = record.context_page;\n    if (\n      record.contextPage !== null &&\n      record.contextPage !== undefined &&\n      record.contextPage.entity !== null\n    ) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n    record.contextValues = record.context_values;\n    record.contextTree = record.context_tree;\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  }\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * ID for entity, otherwise string literal\n   */\n  value: string;\n  // column name\n  label: string;\n  /**\n   * DataType of the literal node\n   */\n  datatype: LiteralDataType;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface GraphEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    return `${label} ${this.counter[uri] || 1}`;\n  };\n\n  unlabel = (label: string) => {\n    return label.substring(0, label.lastIndexOf(\" \"));\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: GraphEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: GraphEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [GraphEdge, GraphEdge?][] => {\n    let matchPaths: [GraphEdge, GraphEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [GraphEdge, GraphEdge?][] => {\n    let outprops: [GraphEdge, GraphEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        target.uri === \"http://wikiba.se/ontology#Statement\"\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<GraphEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: GraphEdge) {\n    if (\n      this.edges.filter(\n        (e) => e.source === edge.source && e.target === edge.target\n      ).length > 0\n    ) {\n      throw new Error(\"Cannot have more than one edge between two classes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<GraphEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { SMGraph, SMNodeType } from \"./SMGraph\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  get isDraft() {\n    return false;\n  }\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  get isDraft() {\n    return true;\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  protected tableIndex: SingleKeyIndex<number, number> = new SingleKeyIndex(\n    \"table\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false);\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize(record: any): SemanticModel {\n    let nodes = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    let graph = new SMGraph(record.id.toString(), nodes, record.data.edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  }\n\n  public serializeUpdateDraft(record: any): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  protected index(record: SemanticModel): void {\n    this.tableIndex.add(record);\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public label: MultiLingualString;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    label: MultiLingualString,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.label = label;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n\n  /**\n   * Mapping from entity id to url to external KG\n   * @param entityId\n   */\n  static id2uri = (entityId: string): string => {\n    switch (entityId[0]) {\n      case \"Q\":\n        return `https://www.wikidata.org/wiki/${entityId}`;\n      case \"P\":\n        return `https://www.wikidata.org/wiki/Property:${entityId}`;\n      case \"L\":\n        return `https://www.wikidata.org/wiki/Lexeme:${entityId}`;\n      default:\n        return entityId;\n    }\n  };\n}\n\nexport type MultiLingualString = { [lang: string]: string };\nexport type MultiLingualStringList = { [lang: string]: string[] };\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport type DataValue =\n  | DataValueString\n  | DataValueTime\n  | DataValueQuantity\n  | DataValueGlobeCoordinate\n  | DataValueMonolingualText\n  | DataValueEntity;\n\nexport interface DataValueTime {\n  readonly type: \"time\";\n  value: {\n    time: string;\n    timezone: number;\n    before: number;\n    after: number;\n    precision: number;\n    calendarmodel: string;\n  };\n}\n\nexport interface DataValueQuantity {\n  readonly type: \"quantity\";\n  value: {\n    amount: string;\n    upperBound: string;\n    lowerBound: string;\n    unit: string;\n  };\n}\n\nexport interface DataValueMonolingualText {\n  readonly type: \"monolingualtext\";\n  value: {\n    text: string;\n    language: string;\n  };\n}\n\nexport interface DataValueGlobeCoordinate {\n  readonly type: \"globecoordinate\";\n  value: {\n    latitude: number;\n    longitude: number;\n    precision: number;\n    altitude: null;\n    globe: string;\n  };\n}\n\nexport interface DataValueEntity {\n  readonly type: \"entityid\";\n  value: string;\n}\n\nexport interface DataValueString {\n  readonly type: \"string\";\n  value: string;\n}\n","import { AxiosError } from \"axios\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  protected fetchByIdQueue: Map<\n    string,\n    ((entity?: Entity, error?: AxiosError<any>) => void)[]\n  >;\n\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n    this.fetchByIdQueue = new Map();\n  }\n\n  /**\n   * Fetch entity from server. However, only one request is sent out and the rest\n   * if coming too fast is going to use the response of the previous request\n   *\n   * @param id entity id\n   * @returns\n   */\n  public serializeFetchById(id: string): Promise<Entity | undefined> {\n    return new Promise((resolve, reject) => {\n      if (!this.fetchByIdQueue.has(id)) {\n        this.fetchByIdQueue.set(id, []);\n        return this.fetchById(id)\n          .catch((error) => {\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(undefined, error);\n            }\n            this.fetchByIdQueue.delete(id);\n            throw error;\n          })\n          .then((entity) => {\n            // release the rest of the queued requests\n            for (const listener of this.fetchByIdQueue.get(id) || []) {\n              listener(entity);\n            }\n            this.fetchByIdQueue.delete(id);\n            return entity;\n          });\n      } else {\n        this.fetchByIdQueue.get(id)!.push((entity, error) => {\n          if (error !== undefined) {\n            reject(error);\n          } else {\n            resolve(entity);\n          }\n        });\n      }\n    });\n  }\n\n  public deserialize(record: any): Entity {\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  }\n}\n","import { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Property {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class PropertyStore extends RStore<string, Property> {\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false\n    );\n  }\n}\n","import { Project, ProjectStore } from \"./Project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableStore, TableRowStore } from \"./table\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  SemanticModelStore,\n} from \"./sm\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore: new TableStore(),\n  tableRowStore: new TableRowStore(),\n  semanticModelStore: new SemanticModelStore(),\n  entityStore: new EntityStore(),\n  propertyStore: new PropertyStore(),\n};\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n};\nexport type { Property } from \"./ontology/PropertyStore\";\nexport type { Table, TableRow } from \"./table\";\nexport type { GraphEdge, SMNode as GraphNode } from \"./sm/SMGraph\";\n","import { Avatar, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor: [\n                          \"#f56a00\",\n                          \"#7265e6\",\n                          \"#1890ff\",\n                          \"#00a2ae\",\n                        ][project.name.charCodeAt(0) % 4],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project: {_.upperFirst(project.name)}\n        </Typography.Title>\n        <ProTable<ReturnType<typeof table2row>>\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          // toolBarRender={false}\n          search={false}\n          pagination={{\n            pageSize: 10,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {entity.label[\"en\"]} ({entity.id})\n      </span>\n    );\n  }\n\n  return (\n    <ExternalLink\n      href={Entity.id2uri(entity.id)}\n      openInNewPage={true}\n      {...restprops}\n    >\n      {entity.label[\"en\"]} ({entity.id})\n    </ExternalLink>\n  );\n};\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingPage } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity) => React.ReactElement;\n  }) => {\n    const { entityStore } = useStores();\n\n    useEffect(() => {\n      entityStore.serializeFetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        return <LoadingPage />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity);\n  }\n);\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {property.label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Divider, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop, IncompleteProperty, useEntityProperties } from \".\";\nimport { Property } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      visibleProperties,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      visibleProperties?: string[];\n    } & WithStyles<typeof styles>) => {\n      if (visibleProperties === undefined) {\n        visibleProperties = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of visibleProperties) {\n        // we have undefined when entity does not have this property `pid`\n        const stmts = entity.properties[pid] || [];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent property={id2prop[pid]} />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      setFilteredProps,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      setFilteredProps: (props: string[]) => void;\n    } & WithStyles<typeof styles>) => {\n      const [enable, setEnable] = useState(true);\n\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      const onSelect = (value: string) => {\n        setFilteredProps(filteredProps.concat([value]));\n      };\n\n      const onDeselect = (value: string) => {\n        setFilteredProps(filteredProps.filter((pid) => pid !== value));\n      };\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={onSelect}\n            onDeselect={onDeselect}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  ({ entity }: { entity: Entity } & WithStyles<typeof styles>) => {\n    const id2prop = useEntityProperties(entity);\n    const [filteredProps, setFilteredProps] = useState<string[]>([]);\n\n    return (\n      <div>\n        <Space style={{ float: \"right\" }}>\n          <PropertyFilterComponent\n            entity={entity}\n            id2prop={id2prop}\n            filteredProps={filteredProps}\n            setFilteredProps={setFilteredProps}\n          />\n        </Space>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)}>\n            {\" \"}\n            {entity.label[\"en\"]}\n          </ExternalLink>\n        </h2>\n        <p>\n          <i>({entity.id})</i>\n        </p>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases[\"en\"].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description[\"en\"]}</p>\n        <hr />\n        <PropertyComponent\n          entity={entity}\n          id2prop={id2prop}\n          visibleProperties={\n            filteredProps.length > 0 ? filteredProps : undefined\n          }\n        />\n      </div>\n    );\n  }\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  entity: Entity | string,\n  zIndex?: number\n) {\n  let content;\n  if (entity instanceof Entity) {\n    content = <PageEntityComponent entity={entity} />;\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={entity}\n        render={(entity: Entity) => <PageEntityComponent entity={entity} />}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 64px)\",\n    style: { top: 32 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  ({\n    entity,\n    children,\n    classes,\n    zIndex,\n    ...restprops\n  }: {\n    entity: Entity;\n    zIndex?: number;\n  } & React.HTMLProps<HTMLDivElement> &\n    WithStyles<typeof styles>) => {\n    // TODO: find a way to remove this hard code\n    const instanceOf = \"P31\";\n    const id2prop = useEntityProperties(entity);\n    const content = (\n      <div {...restprops} className={`${classes.root} ${restprops.className}`}>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n            {\" \"}\n            {entity.label[\"en\"]}\n          </ExternalLink>\n          <UnfoldMoreIcon\n            style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              openPageEntityComponent(\n                entity,\n                zIndex !== undefined ? zIndex + 1 : undefined\n              );\n            }}\n          />\n        </h2>\n        <p>\n          <i>({entity.id})</i>\n        </p>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases[\"en\"].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description[\"en\"]}</p>\n        <hr />\n        <PropertyComponent\n          id2prop={id2prop}\n          entity={entity}\n          visibleProperties={[instanceOf]}\n        />\n      </div>\n    );\n\n    return (\n      <Popover content={content} zIndex={zIndex}>\n        {children}\n      </Popover>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: 1,\n    border: \"1px solid\",\n    borderRadius: 2,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n      setStateSelected(!stateSelected);\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { faCheck, faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport * as RTable from \"./RelationalTable\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\nexport const CandidateEntityListComponent = withStyles(styles)(\n  ({\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const [showAllCandidateModals, setShowAllCandidateModals] = useState(false);\n\n    const links = record.links[index] || [];\n    const candidateLst = [];\n    if (links.length > 0) {\n      for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n        const className =\n          candidateEntity.entityId === links[0].entityId\n            ? classes.correctCandidateEntity\n            : classes.candidateEntity;\n\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity) => (\n                  <PopoverEntityComponent entity={entity}>\n                    <InlineEntityComponent\n                      nolink={true}\n                      entity={entity}\n                      className={className}\n                    />\n                  </PopoverEntityComponent>\n                )}\n              />\n              <span className={className}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      // if there is a correct entity in top K, no need to highlight, otherwise,\n      // add them to the list\n      const idx = links[0].candidateEntities.findIndex(\n        (candidate) => candidate.entityId === links[0].entityId\n      );\n      if (idx !== -1 && idx >= topK) {\n        const candidateEntity = links[0].candidateEntities[idx];\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity) => (\n                  <span className={classes.correctCandidateEntity}>\n                    ({idx})&nbsp;\n                    <PopoverEntityComponent entity={entity}>\n                      <InlineEntityComponent nolink={true} entity={entity} />\n                    </PopoverEntityComponent>\n                  </span>\n                )}\n              />\n              <span className={classes.correctCandidateEntity}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      if (links[0].candidateEntities.length > topK) {\n        candidateLst.push(\n          <div key=\"see-more\">\n            <Typography.Text\n              className={classes.candidateEntitySeeMore}\n              onClick={() => setShowAllCandidateModals(!showAllCandidateModals)}\n            >\n              See more\n            </Typography.Text>\n          </div>\n        );\n      }\n    }\n\n    const columns: any = [\n      {\n        dataIndex: \"id\",\n        title: \"Entity\",\n        render: (entityId: string) => {\n          return (\n            <FetchEntityComponent\n              entityId={entityId}\n              render={(entity) => (\n                <PopoverEntityComponent entity={entity}>\n                  <InlineEntityComponent nolink={true} entity={entity} />\n                </PopoverEntityComponent>\n              )}\n            />\n          );\n        },\n      },\n      {\n        dataIndex: \"score\",\n        title: \"Score\",\n        render: (score: number) => {\n          return <Number value={score} fractionDigits={5} />;\n        },\n      },\n      {\n        title: \"action\",\n        render: () => {\n          return (\n            <Space size={4}>\n              <Button>Select</Button>\n            </Space>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {candidateLst}\n        <Modal\n          title=\"Candidate Entities\"\n          visible={showAllCandidateModals}\n          style={{ top: 20 }}\n          bodyStyle={{ padding: 0 }}\n          width={\"60%\"}\n          onOk={() => setShowAllCandidateModals(false)}\n          onCancel={() => setShowAllCandidateModals(false)}\n        >\n          <ProTable\n            defaultSize=\"small\"\n            bordered={true}\n            search={false}\n            pagination={{\n              pageSize: 20,\n              pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n            }}\n            rowKey=\"id\"\n            columns={columns}\n            request={async (params, sort, filter) => {\n              return Promise.resolve({\n                total: links.length > 0 ? links[0].candidateEntities.length : 0,\n                success: true,\n                data:\n                  links.length === 0\n                    ? []\n                    : links[0].candidateEntities\n                        .slice(\n                          (params.current! - 1) * params.pageSize!,\n                          params.current! * params.pageSize!\n                        )\n                        .map((candidateEntity, index) => ({\n                          id: candidateEntity.entityId,\n                          score: candidateEntity.probability,\n                        })),\n              });\n            }}\n          ></ProTable>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n);\n","import * as RTable from \"./RelationalTable\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"rma-baseapp\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n  },\n  noEntityLink: {\n    color: grey[5],\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  ({\n    cell,\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    cell: string;\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const links = record.links[index] || [];\n    let components = links.flatMap((link, index) => {\n      let prefix =\n        index === 0\n          ? cell.substring(0, link.start)\n          : cell.substring(links[index - 1].end, link.start);\n      let linksurface = cell.substring(link.start, link.end);\n      let onCtrlClick = undefined;\n      if (link.entityId !== undefined) {\n        onCtrlClick = () => {\n          openPageEntityComponent(link.entityId!);\n        };\n      }\n      const infix = (\n        <ExternalLink\n          key={index}\n          href={link.url}\n          openInNewPage={true}\n          dangerouslySetInnerHTML={{\n            __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n          }}\n          className={\n            classes.link +\n            (link.entityId === undefined ? \" \" + classes.noEntityLink : \"\")\n          }\n          style={link.entityId === null ? { color: \"#aaa\" } : {}}\n          onCtrlClick={onCtrlClick}\n        />\n      );\n\n      if (link.entityId === undefined) {\n        return [prefix, infix];\n      }\n\n      // reassign to infix somehow killing the application\n      const wrappedInfix = (\n        <FetchEntityComponent\n          key={index}\n          entityId={link.entityId}\n          render={(entity) => (\n            <PopoverEntityComponent entity={entity} zIndex={500}>\n              {infix}\n            </PopoverEntityComponent>\n          )}\n        />\n      );\n\n      return [prefix, wrappedInfix];\n    });\n\n    if (links.length === 0) {\n      components.push(cell);\n    } else {\n      components.push(cell.substring(links[links.length - 1].end));\n    }\n\n    return (\n      <div>\n        {components}\n        <CandidateEntityListComponent\n          record={record}\n          index={index}\n          topK={topK}\n        />\n      </div>\n    );\n  }\n);\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent, InlineEntityComponent } from \"../entity\";\nimport { CellComponent } from \"./CellComponent\";\nimport * as RTable from \"./RelationalTable\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport const TableComponent = withStyles(styles)(\n  ({\n    table,\n    query,\n    classes,\n    toolBarRender,\n  }: {\n    table: RTable.Table;\n    query: (limit: number, offset: number) => Promise<RTable.Row[]>;\n    toolBarRender?: false;\n  } & WithStyles<typeof styles>) => {\n    const columns = table.columns.map((col, columnIndex) => ({\n      dataIndex: [\"row\", columnIndex, \"value\"],\n      title: col,\n      render: ((value: string, record: RTable.Row) => {\n        return (\n          <CellComponent cell={value} record={record} index={columnIndex} />\n        );\n      }) as any,\n    }));\n\n    return (\n      <React.Fragment>\n        <ProTable\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let records = await query(\n              params.pageSize!,\n              (params.current! - 1) * params.pageSize!\n            );\n            return {\n              data: records,\n              success: true,\n              total: table.size,\n            };\n          }}\n          search={false}\n          pagination={{\n            pageSize: 5,\n            pageSizeOptions: [\n              \"5\",\n              \"10\",\n              \"20\",\n              \"50\",\n              \"100\",\n              \"200\",\n              \"500\",\n              \"1000\",\n            ],\n          }}\n          headerTitle={\n            table.context.webpage !== undefined ? (\n              <ExternalLink href={table.context.webpage} openInNewPage={true}>\n                {table.name}\n              </ExternalLink>\n            ) : (\n              table.name\n            )\n          }\n          toolBarRender={toolBarRender}\n          rowKey=\"index\"\n          columns={columns}\n        />\n        <TableInformation table={table} />\n      </React.Fragment>\n    );\n  }\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: RTable.Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.context.webpage !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.context.webpage} openInNewPage={true}>\n        {table.context.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.context.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.context.entityId}\n        render={(entity) => <InlineEntityComponent entity={entity} />}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.context.contentHierarchy || []).map(\n    (hierarchy, index) => {\n      return (\n        <div key={index}>\n          <b>\n            {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n          </b>\n          <p>{hierarchy.contentBefore}</p>\n          <p>{hierarchy.contentAfter}</p>\n        </div>\n      );\n    }\n  );\n  info.push([\"Content Hierarchy\", content.length > 0 ? content : \"N/A\"]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","import { WordWrap } from \"./wordwrap\";\nimport G6, { ModelConfig, ShapeStyle, IGroup, IShape } from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: { [key: string]: any };\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n) {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.forEach(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"wrapped-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  units.forEach(({ text, x, y }) => {\n    group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"wrapped-text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: ((cfg: RectConfig, group: IGroup): IShape => {\n        const wp = cfg.style.paddingWidth || 0;\n        const hp = cfg.style.paddingHeight || 0;\n        const { units, width, height } = wordwrap.wrapText(\n          cfg.label as string,\n          cfg.size || defaultWidth,\n          \"center\"\n        );\n\n        const shape = group!.addShape(\"rect\", {\n          attrs: {\n            x: cfg.x,\n            y: cfg.y,\n            width: width + wp * 2,\n            height: height + hp * 2,\n            ...cfg.style,\n          },\n          name: \"rect-soft-wrap-shape\",\n        });\n\n        drawText(group, wordwrap, units, {\n          xoffset: wp,\n          yoffset: hp,\n          cfg: cfg?.labelCfg?.style,\n        });\n        return shape;\n      }) as (cfg?: ModelConfig, group?: IGroup) => IShape,\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units\n  leftOffset: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  private props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: [\"drag-canvas\", \"drag-node\"],\n        edit: [\"click-select\"],\n      },\n      nodeStateStyles: {\n        hover: {\n          fill: \"lightsteelblue\",\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: { ...u.style, radius: 4, paddingHeight: 2, paddingWidth: 4 },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    let newEdges = edges.map((e) => ({\n      id: `${e.source}-${e.target}-${e.id}`,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /** Adjust the canvas size to fit with the graph */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height: \"fit-graph\" | \"fit-remaining-window\";\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      if (center === true) {\n        this.graph.moveTo(graphWidth / 2 - bbox.width / 2, 10);\n      } else {\n        this.graph.moveTo(this.props.leftOffset, 10);\n      }\n\n      let graphHeight;\n      switch (height) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + 20;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight - (viewportOffset + documentScrollY) - 10;\n          break;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import G6, { IGroup, IShape, ModelConfig, ShapeStyle } from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig extends ModelConfig {\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: ((cfg: CircleConfig, group: IGroup): IShape => {\n        const padding = cfg.style.padding || 8;\n        // const wp = cfg.style.paddingWidth || 0;\n        // const hp = cfg.style.paddingHeight || 0;\n        const labelPosition: string = \"below\";\n        const labelOffset = cfg.labelCfg?.offset || 0;\n\n        if (labelPosition === \"inside\") {\n          // render text inside circle\n          const { units, radius } = wordwrap.wrapTextCircle(\n            cfg.label as string,\n            256\n          );\n          const shape = group!.addShape(\"circle\", {\n            attrs: {\n              x: cfg.x,\n              y: cfg.y,\n              r: radius + padding,\n              ...cfg.style,\n            },\n            name: \"circle-soft-wrap-shape\",\n          });\n          drawText(group, wordwrap, units, {\n            xoffset: 0,\n            yoffset: 0,\n            cfg: cfg?.labelCfg?.style,\n          });\n          return shape;\n        }\n\n        // render text below circle\n        const { units, width } = wordwrap.wrapText(\n          cfg.label as string,\n          defaultWidth,\n          \"center\"\n        );\n        const defaultRadius = 10;\n        const shape = group!.addShape(\"circle\", {\n          attrs: {\n            x: cfg.x,\n            y: cfg.y,\n            r: defaultRadius,\n            ...cfg.style,\n          },\n          name: \"circle-soft-wrap-shape\",\n        });\n\n        drawText(group, wordwrap, units, {\n          xoffset: -width / 2,\n          yoffset: defaultRadius + labelOffset,\n          cfg: cfg?.labelCfg?.style,\n          stroke: { color: \"white\", width: 4 },\n        });\n        return shape;\n      }) as (cfg?: ModelConfig, group?: IGroup) => IShape,\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  container: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = \"fit-graph\",\n        toolbar = false,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?: \"fit-graph\" | \"fit-remaining-window\";\n        className?: string;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n              leftOffset: 0,\n            }\n          );\n        }\n\n        const g = graph.current;\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar autoHide={toolbar === \"auto-hide\"} graph={graph} />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div ref={container} className={classes.container}></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (layout: keyof typeof GraphLayout) => {\n      setLayout(layout);\n      graph.current?.updateLayout(GraphLayout[layout]);\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4}>\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Space } from \"antd\";\nimport { useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  SemanticModel,\n  Table,\n  DraftSemanticModel,\n  SMGraph,\n  useStores,\n} from \"../../models\";\nimport {\n  GraphComponent as GC,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport { gold, green, orange, purple, yellow } from \"@ant-design/colors\";\nimport { observer } from \"mobx-react\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    marginTop: 8,\n  },\n};\n\nexport const SemanticGraphComponent = withStyles(styles)(\n  observer(\n    ({\n      sms,\n      classes,\n      table,\n    }: { sms: SemanticModel[]; table: Table } & WithStyles<typeof styles>) => {\n      const graphRef = useRef<GraphComponentFunc | undefined>(undefined);\n      const [currentIndex, setCurrentIndex] = useState(0);\n      const { semanticModelStore } = useStores();\n      let sm = sms[currentIndex];\n\n      if (currentIndex >= sms.length) {\n        // sm is undefined, we need to create a draft semantic model\n        // currently only support one draft\n        const id = `${table.id}:draft`;\n        let draftModel = semanticModelStore.getCreateDraft(id);\n        if (draftModel === undefined) {\n          draftModel = new DraftSemanticModel(\n            id,\n            `sm-${sms.length}`,\n            \"\",\n            0,\n            new SMGraph(\n              id,\n              table.columns.map((column, index) => ({\n                id: `col-${index}`,\n                label: column,\n                columnIndex: index,\n                nodetype: \"data_node\",\n              })),\n              []\n            ),\n            table.id\n          );\n          semanticModelStore.setCreateDraft(draftModel);\n        }\n        sm = draftModel;\n      }\n\n      const [nodes, edges] = useMemo(() => {\n        const nodes = sm.graph.nodes.map((node) => {\n          let shape: GraphNode[\"shape\"], style;\n          switch (node.nodetype) {\n            case \"class_node\":\n              shape = \"circle\";\n              style = { fill: green[2], stroke: green[8] };\n              break;\n            case \"data_node\":\n              shape = \"rect\";\n              style = { fill: gold[3], stroke: gold[8] };\n              break;\n            case \"literal_node\":\n              if (node.datatype === \"entity-id\") {\n                shape = \"circle\";\n              } else {\n                shape = \"rect\";\n              }\n              if (node.isInContext) {\n                style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n              } else {\n                style = { fill: purple[2], stroke: \"#c41d7f\" };\n              }\n              break;\n            default:\n              throw new Error(`Unreachable!`);\n          }\n\n          return {\n            id: node.id,\n            label: node.label,\n            style,\n            shape,\n          };\n        });\n        const edges = sm.graph.edges.map((edge) => {\n          return {\n            id: `${edge.source}-${edge.target}-${edge.uri}`,\n            source: edge.source,\n            target: edge.target,\n            label: edge.label,\n          };\n        });\n\n        return [nodes, edges];\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [sm.id, sm.version]);\n\n      const centering = () => {\n        if (graphRef.current === undefined) {\n          return;\n        }\n        const graph = graphRef.current.graph();\n        if (graph === undefined) {\n          return;\n        }\n        graph.updateContainerSize({ center: true, height: \"fit-graph\" });\n      };\n      useHotkeys(\"c\", centering, [sm.id, graphRef !== undefined]);\n\n      const smLists = [];\n      for (const [idx, item] of sms.entries()) {\n        smLists.push(\n          <Button\n            size=\"small\"\n            key={item.id}\n            type={item.id === sm.id ? \"primary\" : \"default\"}\n            onClick={() => setCurrentIndex(idx)}\n          >\n            {item.name}\n          </Button>\n        );\n      }\n\n      if (sm instanceof DraftSemanticModel) {\n        smLists.push(\n          <Button\n            size=\"small\"\n            key=\"draft\"\n            type=\"primary\"\n            style={{ backgroundColor: gold[5], borderColor: gold[7] }}\n          >\n            {sm.name}\n          </Button>\n        );\n      }\n\n      // only show the list of semantic models when we have more than one\n      // or nothing and we are in the draft\n      let smListComponent = undefined;\n      if (smLists.length !== 1 || sm instanceof DraftSemanticModel) {\n        smListComponent = (\n          <Space style={{ float: \"right\" }}>\n            <span>Semantic Models:</span>\n            {smLists}\n          </Space>\n        );\n      }\n\n      return (\n        <div>\n          {smListComponent}\n          <Space>\n            <Button size=\"small\" onClick={centering}>\n              Center graph (C)\n            </Button>\n            <Button size=\"small\">Add model</Button>\n            <Button size=\"small\">Add node</Button>\n            <Button size=\"small\">Add edge</Button>\n          </Space>\n          <GC\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight=\"fit-graph\"\n            props={{\n              initHeight: 300,\n              leftOffset: 0,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                console.log(\"click node\", nodeId);\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                console.log(\"click edge\", edge);\n              },\n            }}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\n// import { TableComponent } from \"./TableComponent\";\nimport { TableComponent } from \"../../components/table\";\nimport * as RTable from \"../../components/table/RelationalTable\";\nimport {\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { SemanticGraphComponent } from \"./SemanticModelComponent\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const { projectStore, tableStore, tableRowStore, semanticModelStore } =\n      useStores();\n    const [fetchedSms, setFetchedSms] = useState(false);\n\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      tableStore,\n      tableId\n    );\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n\n      // fetch its semantic model\n      if (!semanticModelStore.hasByTable(tableId)) {\n        semanticModelStore.fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        });\n        setFetchedSms(true);\n      }\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = tableStore.get(tableId);\n    const rtable: RTable.Table | undefined = useMemo(() => {\n      const table = tableStore.get(tableId);\n      if (table === undefined || table === null) {\n        return undefined;\n      }\n\n      return {\n        name: table.name,\n        description: table.description,\n        columns: table.columns,\n        size: table.size,\n        context: {\n          webpage: table.contextPage?.url,\n          title: table.contextPage?.title,\n          entityId: table.contextPage?.entityId,\n          contentHierarchy: table.contextTree,\n        },\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableId, table !== undefined]);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined) {\n      return <LoadingPage />;\n    }\n\n    let semComponent = null;\n    if (!semanticModelStore.hasByTable(tableId) && !fetchedSms) {\n      semComponent = <LoadingPage bordered={true} />;\n    } else {\n      const sms = semanticModelStore.findByTable(tableId);\n      semComponent = <SemanticGraphComponent sms={sms} table={table} />;\n    }\n\n    const queryRow = async (limit: number, offset: number) => {\n      let result = await tableRowStore.fetch({\n        limit,\n        offset,\n        conditions: { table: table.id },\n      });\n      return result.records.map((row) => ({\n        index: row.index,\n        row: row.row.map((v) => ({ value: v })),\n        links: row.links,\n      }));\n    };\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={projectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            {semComponent}\n            <TableComponent\n              key={tableId}\n              toolBarRender={false}\n              table={rtable!}\n              query={queryRow}\n            />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [TableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nconst TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {props.table.name}\n          </span>\n        </Space>\n      }\n      subTitle={\n        <Space>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </Space>\n      }\n      extra={props.btns}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the applications\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\n// export const RouteURLArgs_project = { projectId: \"number\" };\n// export const RouteURLArgs_table = { tableId: \"number\" };\n// export const RouteQueryArgs_table = { query?: \"string\" };\n\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    urlSchema: { projectId: \"number\" },\n    component: ProjectPage,\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    component: TablePage,\n    pathDef: \"/tables/:tableId\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={true} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}