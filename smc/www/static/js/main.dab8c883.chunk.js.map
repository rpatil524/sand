{"version":3,"sources":["env.ts","models/base/RStore.ts","models/base/CRUDStore.ts","models/Project.ts","models/base/StoreIndex.ts","models/Table.ts","models/sm/Graph.ts","models/sm/SemanticModelStore.ts","models/index.ts","components/NavBar.tsx","pages/HomePage.tsx","pages/LoadingPage.tsx","pages/ProjectPage.tsx","components/sm/G6Graph.ts","components/sm/Graph.tsx","components/SemanticModel.tsx","components/Table.tsx","pages/TablePage.tsx","routing/route.ts","routing/Link.tsx","routing/index.ts","pages/NotFound404.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PLATFORM","process","REACT_APP_PLATFORM","SERVER","REACT_APP_API_SERVER","StoreState","_value","forbiddenStates","Set","makeObservable","this","observable","value","computed","v","has","RStore","remoteURL","state","records","Map","ajaxErrorHandler","fetchSome","flow","query","result","record","set","id","index","f","a","params","limit","offset","undefined","fields","join","conditions","Object","entries","field","op_or_val","op","axios","get","resp","data","items","map","deserialize","total","queryByName","name","q","fetch","action","list","runInAction","response","status","m","values","Array","from","fn","output","r","push","condition","btoa","JSON","stringify","encodedCondition","parse","atob","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","draft","discardDraft","post","serializeCreateDraft","delete","draftID","update","serializeUpdateDraft","toModel","markSaved","listener","Project","description","ProjectStore","PairKeysUniqueIndex","field1","field2","key1","key2","SingleKeyIndex","key","TableStore","projectIndex","findByProject","projectId","start","no","contextPage","context_page","index_record","TableRowStore","tableIndex","findByTable","tableId","i","rowId","mlinks","links","ci","forEach","link","candidateEntities","candidate_entities","parseInt","URICount","nodes","counter","id2num","label","node","nextLabel","uri","unlabel","substring","lastIndexOf","add","isDataNode","Graph","edges","version","stale","dataNodePositions","nodeId2Index","column2nodeIndex","uriCount","onSave","hasNode","nodesByURI","filter","nodeByColumnIndex","edge","source","target","e","hasEdge","length","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateNode","addEdge","removeEdge","updateEdge","toJS","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","isClassNode","isLiteralNode","datatype","props","size","SemanticModel","graph","table","project","SemanticModelStore","stores","error","message","console","window","_stores","StoreContext","createContext","useStores","React","useContext","HomeNavBar","title","className","ProjectNavBar","onBack","history","RouteConf","home","getURL","Fragment","style","fontWeight","color","textDecoration","_","upperFirst","TableNavBar","toString","subTitle","extraSubTitle","extra","btns","HomePage","observer","projects","useEffect","gutter","span","bordered","itemLayout","dataSource","renderItem","Item","Meta","avatar","shape","marginTop","backgroundColor","charCodeAt","toUpperCase","path","urlArgs","queryArgs","withStyles","root","paddingTop","paddingBottom","textAlign","border","borderRadius","classes","tip","ProjectPage","borderLeft","useParams","useState","invalidID","setInvalidID","then","LoadingPage","columns","dataIndex","renderText","text","tbl","encodeWhereQuery","request","sort","pageSize","current","table2row","success","options","search","headerTitle","pagination","pageSizeOptions","rowKey","GraphNodeColors","fill","stroke","G6Graph","container","setDataAndRender","onFinish","clear","render","refreshPositions","fitToCanvas","center","group","resetMatrix","bbox","getCanvasBBox","width","height","graphWidth","clientWidth","moveTo","leftOffset","changeSize","untilLayoutStable","maxTries","delay","args","significantChange","prevBBox","Math","abs","setTimeout","nextBBox","subgraphLayoutForce","onLayoutEnd","sublayout","G6","Layout","force","scrollWidth","linkDistance","preventOverlap","nodeSize","tick","init","subNodes","subEdges","execute","initHeight","linkCenter","layout","type","rankdir","nodesep","ranksep","defaultEdge","endArrow","Arrow","triangle","d","labelCfg","background","padding","radius","defaultNode","modes","default","edit","nodeStateStyles","hover","onNodeClick","on","event","item","_cfg","model","onEdgeClick","wrapTextPreserveWord","s","maxWidth","fontSize","Util","getTextSize","words","split","lines","currentWidth","word","wordWidth","pop","ws","transformData","u","hide","display","graphContainer","sm","loading","setLoading","useRef","g","useG6Graph","centering","useHotkeys","onClick","ref","SemanticModelComponent","semanticmodels","sms","TableComponent","useMemo","lst","cell","components","flatMap","prefix","end","linksurface","href","url","rel","dangerouslySetInnerHTML","__html","trim","entity","content","renderCell","unshift","toolBarRender","TablePage","PREFETCH_LIMIT","location","useLocation","b64query","temp","URLSearchParams","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","setState","idx","sortedIndex","Promise","all","gtr","ltr","concat","newState","move","nextTableId","open","toPreviousTable","toNextTable","navState","useTableNavigation","fetchIfMissing","disabled","Table","getUserConfirmation","callback","Modal","confirm","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","createMemoryHistory","createBrowserHistory","PathDef","component","pathDef","exact","strict","routeDef","replace","pathname","hash","Path","matchPath","NoArgsPathDef","_path","NoQueryArgsPathDef","mouseClickNavigationHandler","preventDefault","ctrlKey","metaKey","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","InternalLink","onContextMenu","onMouseDown","onTouchStart","onMouseEnter","onMouseLeave","onFocus","onBlur","children","Component","_RouteConf","NotFound404","App","locale","enUSIntl","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.dab8c883.chunk.js","sourcesContent":["export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import axios, { AxiosError } from \"axios\";\nimport {\n  observable,\n  flow,\n  action,\n  runInAction,\n  computed,\n  makeObservable,\n} from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport { Record } from \"./Record\";\n\nexport class StoreState {\n  public _value: \"updating\" | \"updated\" | \"error\" = \"updated\";\n  public forbiddenStates: Set<\"updating\" | \"updated\" | \"error\"> = new Set();\n\n  constructor() {\n    makeObservable(this, {\n      _value: observable,\n      value: computed,\n    });\n  }\n\n  public get value() {\n    return this._value;\n  }\n\n  public set value(v: \"updating\" | \"updated\" | \"error\") {\n    if (this.forbiddenStates.has(v)) {\n      return;\n    }\n    this._value = v;\n  }\n}\n\nexport type QueryConditions = {\n  [field: string]:\n    | string\n    | number\n    | { op: \"gt\" | \"lt\" | \"gte\" | \"lte\"; value: string | number };\n};\n\nexport interface Query {\n  limit: number;\n  offset: number;\n  fields?: string[];\n  conditions?: QueryConditions;\n}\n\nexport type FetchResult<M> = { records: M[]; total: number };\n\nexport abstract class RStore<ID extends string | number, M extends Record<ID>> {\n  public state: StoreState = new StoreState();\n  public records: Map<ID, M> = new Map();\n  public ajaxErrorHandler: (error: AxiosError<any>) => void = () => {};\n\n  protected remoteURL: string;\n\n  constructor(remoteURL: string) {\n    this.remoteURL = remoteURL;\n    makeObservable(this, {\n      state: observable,\n      records: observable,\n      fetch: action,\n      set: action,\n      list: computed,\n    });\n  }\n\n  /**\n   * Get a record from the store. If the record doesn't exist, try to fetch it\n   * from the server in background.\n   */\n  public fetchIfMissing(id: ID): M | undefined {\n    if (!this.records.has(id)) {\n      this.fetch(id);\n    }\n    return this.records.get(id);\n  }\n\n  /**\n   * Fetch a record from remote server.\n   *\n   * Use async instead of flow as we may want to override the function and call super.\n   */\n  async fetch(id: ID): Promise<M | undefined> {\n    try {\n      this.state.value = \"updating\";\n\n      let resp = await axios.get(`${this.remoteURL}/${id}`);\n\n      return runInAction(() => {\n        let record = this.deserialize(resp.data);\n        this.records.set(record.id, record);\n        this.index(record);\n        this.state.value = \"updated\";\n\n        return record;\n      });\n    } catch (error: any) {\n      if (error.response && error.response.status === 404) {\n        // entity does not exist\n        runInAction(() => {\n          this.state.value = \"updated\";\n        });\n        return undefined;\n      }\n\n      runInAction(() => {\n        this.state.value = \"error\";\n      });\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch mutliple records from remote server\n   */\n  public fetchSome: (query: Query) => CancellablePromise<FetchResult<M>> = flow(\n    function* (this: RStore<ID, M>, query: Query) {\n      try {\n        this.state.value = \"updating\";\n        const result = yield this.query(query);\n\n        for (const record of result.records) {\n          this.records.set(record.id, record);\n          this.index(record);\n        }\n\n        this.state.value = \"updated\";\n        return result;\n      } catch (error: any) {\n        this.state.value = \"error\";\n        throw error;\n      }\n    }\n  );\n\n  /** Query records (not store the result) */\n  public query = async (query: Query): Promise<FetchResult<M>> => {\n    let params: any = { limit: query.limit, offset: query.offset };\n    if (query.fields !== undefined) {\n      params.fields = query.fields.join(\",\");\n    }\n\n    if (query.conditions !== undefined) {\n      for (const [field, op_or_val] of Object.entries(query.conditions)) {\n        if (typeof op_or_val === \"object\") {\n          params[`${field}[${op_or_val.op}]`] = op_or_val.value;\n        } else {\n          params[`${field}`] = op_or_val;\n        }\n      }\n    }\n\n    let resp: any;\n    try {\n      resp = await axios.get(`${this.remoteURL}`, { params });\n    } catch (error: any) {\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n\n    return {\n      records: resp.data.items.map(this.deserialize),\n      total: resp.data.total,\n    };\n  };\n\n  /**\n   * Query records by name (not store the result)\n   */\n  public queryByName = async (name: string): Promise<FetchResult<M>> => {\n    let resp: any;\n    try {\n      resp = await axios.get(`${this.remoteURL}`, {\n        params: {\n          q: name,\n        },\n      });\n    } catch (error: any) {\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n\n    return { records: resp.data.map(this.deserialize), total: resp.data.total };\n  };\n\n  /**\n   * Test if we store a local copy of a record\n   */\n  public has(id: ID): boolean {\n    return this.records.has(id);\n  }\n\n  /**\n   * Get a local copy of a record\n   */\n  public get(id: ID): M | undefined {\n    return this.records.get(id);\n  }\n\n  /**\n   * Save a record to the store\n   *\n   * @param m the record\n   */\n  public set(m: M) {\n    this.records.set(m.id, m);\n  }\n\n  /**\n   * Iter through list of local copy of records in the store\n   */\n  public iter(): IterableIterator<M> {\n    return this.records.values();\n  }\n\n  /**\n   * Get a list of local copy of records in the store\n   */\n  get list(): M[] {\n    return Array.from(this.records.values());\n  }\n\n  /**\n   * Filter records according to the filter function\n   */\n  public filter(fn: (r: M) => boolean): M[] {\n    let output = [];\n    for (let r of this.records.values()) {\n      if (fn(r)) {\n        output.push(r);\n      }\n    }\n    return output;\n  }\n\n  /**\n   * Deserialize the data sent from the server to a record\n   */\n  public deserialize(record: any): M {\n    return record;\n  }\n\n  /**\n   * A function to build a custom index\n   */\n  protected index(record: M): void {}\n\n  /** Encode a query condition so its can be shared through URL */\n  public encodeWhereQuery(condition: QueryConditions) {\n    return btoa(JSON.stringify(condition));\n  }\n\n  /** Decode a query back to its original form */\n  public decodeWhereQuery(encodedCondition: string): QueryConditions {\n    return JSON.parse(atob(encodedCondition));\n  }\n}\n","import axios from \"axios\";\nimport { observable, flow, makeObservable } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport { DraftCreateRecord, DraftUpdateRecord, Record } from \"./Record\";\nimport { RStore } from \"./RStore\";\n\n/**\n * A CRUD store use Map to store records\n */\nexport abstract class CRUDStore<\n  ID extends string | number,\n  C extends DraftCreateRecord,\n  U extends DraftUpdateRecord<ID, M>,\n  M extends Record<ID>\n> extends RStore<ID, M> {\n  public createDrafts: Map<string, C> = new Map();\n  public updateDrafts: Map<ID, U> = new Map();\n\n  protected createAJAXParams = { URL: undefined as any, config: {} };\n  protected onDeleteListeners: ((id: ID) => void)[] = [];\n\n  constructor(remoteURL: string) {\n    super(remoteURL);\n    makeObservable(this, {\n      createDrafts: observable,\n      updateDrafts: observable,\n    });\n  }\n\n  public addOnDeleteListener(listener: (id: ID) => void) {\n    this.onDeleteListeners.push(listener);\n  }\n\n  /**\n   * Create the record, will sync with remote server.\n   */\n  public create: (draft: C, discardDraft?: boolean) => CancellablePromise<M> =\n    flow(function* (\n      this: CRUDStore<ID, C, U, M>,\n      draft: C,\n      discardDraft: boolean = true\n    ) {\n      try {\n        this.state.value = \"updating\";\n\n        let resp = yield axios.post(\n          this.createAJAXParams.URL || this.remoteURL,\n          this.serializeCreateDraft(draft),\n          this.createAJAXParams.config\n        );\n        let record = this.deserialize(resp.data);\n\n        this.records.set(record.id, record);\n\n        if (discardDraft) {\n          this.createDrafts.delete(draft.draftID);\n        }\n\n        this.state.value = \"updated\";\n        return record;\n      } catch (error: any) {\n        this.state.value = \"error\";\n        this.ajaxErrorHandler(error);\n        throw error;\n      }\n    });\n\n  /**\n   * Update the record, with sync with remote server\n   */\n  public update = flow(function* (this: CRUDStore<ID, C, U, M>, draft: U) {\n    try {\n      this.state.value = \"updating\";\n\n      let resp = yield axios.post(\n        `${this.remoteURL}/${draft.id}`,\n        this.serializeUpdateDraft(draft)\n      );\n      let record = draft.toModel() || this.deserialize(resp.data);\n      draft.markSaved();\n      this.records.set(record.id, record);\n\n      this.state.value = \"updated\";\n      return record;\n    } catch (error: any) {\n      this.state.value = \"error\";\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n  });\n\n  /**\n   * Remove a record, will sync with remote server\n   */\n  public delete = flow(function* (this: CRUDStore<ID, C, U, M>, id: ID) {\n    try {\n      this.state.value = \"updating\";\n\n      yield axios.delete(`${this.remoteURL}/${id}`);\n      this.records.delete(id);\n      for (let listener of this.onDeleteListeners) {\n        listener(id);\n      }\n\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      this.ajaxErrorHandler(error);\n      throw error;\n    }\n  });\n\n  /**\n   * Get a create draft from the store. Return undefined if does not exist\n   */\n  public getCreateDraft(draftID: string): C | undefined {\n    return this.createDrafts.get(draftID);\n  }\n\n  public setCreateDraft(draft: C) {\n    this.createDrafts.set(draft.draftID, draft);\n  }\n\n  public deleteCreateDraft(draftID: string) {\n    this.createDrafts.delete(draftID);\n  }\n\n  public getUpdateDraft(id: ID): U | undefined {\n    return this.updateDrafts.get(id);\n  }\n\n  public setUpdateDraft(draft: U) {\n    this.updateDrafts.set(draft.id, draft);\n  }\n\n  public deleteUpdateDraft(id: ID) {\n    this.updateDrafts.delete(id);\n  }\n\n  /**\n   * Serialize the update to send to the server\n   */\n  public abstract serializeUpdateDraft(record: U): object;\n\n  /**\n   * Serialize the create object to send to the server\n   */\n  public abstract serializeCreateDraft(record: C): object;\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../env\";\nimport { Record, DraftUpdateRecord, DraftCreateRecord, CRUDStore } from \"./base\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(\n    id: number,\n    name: string,\n    description: string,\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable\n    })\n  }\n}\n\nexport class DraftUpdateProject extends Project\n  implements DraftUpdateRecord<number, Project> {\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description,\n    );\n  }\n\n  markSaved() { }\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n\n\nexport class ProjectStore extends CRUDStore<number, DraftCreateProject, DraftUpdateProject, Project> {\n  constructor() {\n    super(`${SERVER}/api/project`);\n  }\n\n  public deserialize(record: any): Project {\n    return new Project(record.id, record.name, record.description);\n  }\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return { id: record.name, name: record.name, description: record.description };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}","import { makeObservable, observable } from \"mobx\";\n\nexport class PairKeysUniqueIndex<\n  ID extends string | number,\n  F1 extends string | number,\n  F2 extends string | number\n> {\n  public index: Map<F1, Map<F2, ID>> = new Map();\n\n  protected field1: string;\n  protected field2: string;\n\n  constructor(field1: string, field2: string) {\n    this.field1 = field1;\n    this.field2 = field2;\n    makeObservable(this, {\n      index: observable,\n    });\n  }\n\n  /**\n   * Index record\n   */\n  public index_record(m: any) {\n    const key1 = m[this.field1];\n    const key2 = m[this.field2];\n\n    if (!this.index.has(key1)) {\n      this.index.set(key1, new Map());\n    }\n\n    let map = this.index.get(key1)!;\n    if (!map.has(key2)) {\n      map.set(key2, m.id);\n    }\n  }\n}\n\nexport class SingleKeyIndex<\n  ID extends string | number,\n  F extends string | number\n> {\n  public index: Map<F, ID[]> = new Map();\n\n  protected field: string;\n\n  constructor(field: string) {\n    this.field = field;\n    makeObservable(this, {\n      index: observable,\n    });\n  }\n\n  public index_record(m: any) {\n    const key = m[this.field];\n\n    if (!this.index.has(key)) {\n      this.index.set(key, []);\n    }\n\n    this.index.get(key)!.push(m.id);\n  }\n}\n\nexport class SingleKeyOrderedIndex<\n  ID extends string | number,\n  F extends string | number\n> {\n  public index: Map<F, ID[]> = new Map();\n\n  protected field: string;\n\n  constructor(field: string) {\n    this.field = field;\n    makeObservable(this, {\n      index: observable,\n    });\n  }\n\n  public index_record(m: any) {\n    const key = m[this.field];\n\n    if (!this.index.has(key)) {\n      this.index.set(key, []);\n    }\n\n    this.index.get(key)!.push(m.id);\n  }\n}\n","import { SERVER } from \"../env\";\nimport { Record, RStore } from \"./base\";\nimport { PairKeysUniqueIndex, SingleKeyIndex } from \"./base/StoreIndex\";\n\nexport interface Table extends Record<number> {\n  name: string;\n  description: string;\n  columns: string[];\n  project: number;\n  size: number;\n  contextPage: { url: string; title: string } | null;\n}\n\nexport interface Link {\n  start: number;\n  end: number;\n  url: string;\n  entity?: string;\n  candidateEntities: { uri: string; probability: number }[];\n}\n\nexport interface TableRow extends Record<number> {\n  table: number;\n  index: number;\n  row: (string | number)[];\n  links: Map<number, Link[]>;\n}\n\nexport class TableStore extends RStore<number, Table> {\n  protected projectIndex: SingleKeyIndex<number, number> = new SingleKeyIndex(\n    \"project\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/table`);\n  }\n\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return (this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize(record: any): Table {\n    record.contextPage = record.context_page;\n    delete record.context_page;\n    return record;\n  }\n\n  protected index(record: Table) {\n    this.projectIndex.index_record(record);\n  }\n}\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  protected tableIndex: PairKeysUniqueIndex<number, number, number> =\n    new PairKeysUniqueIndex(\"table\", \"index\");\n\n  constructor() {\n    super(`${SERVER}/api/tablerow`);\n  }\n\n  findByTable = (tableId: number, start: number, no: number): TableRow[] => {\n    const map = this.tableIndex.index.get(tableId);\n    if (map === undefined) return [];\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n    return output;\n  };\n\n  protected index(record: TableRow) {\n    this.tableIndex.index_record(record);\n  }\n\n  public deserialize(record: any): TableRow {\n    const mlinks = new Map();\n    for (const [ci, links] of Object.entries(record.links)) {\n      (links as any).forEach((link: any) => {\n        link.candidateEntities = link.candidate_entities;\n        delete link.candidate_entities;\n      });\n      mlinks.set(parseInt(ci), links);\n    }\n    record.links = mlinks;\n    return record;\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../Entity\";\n\n\nexport interface GraphClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n}\n\nexport interface GraphDataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface GraphLiteralNode {\n  id: string;\n  /**\n   * URI for QNode only. Otherwise, will be an empty string\n   */\n  uri: string;\n  // column name\n  label: string;\n  /**\n   * DataType of the literal node\n   */\n  datatype: LiteralDataType;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n}\n\nexport interface GraphNode extends GraphClassNode, GraphDataNode, GraphLiteralNode {\n  // whether this is a class node; this is useful to distinguish between a literal values\n  readonly isClassNode: boolean;\n  // whether this is a data node\n  readonly isDataNode: boolean;\n  // whether this is a literal node\n  readonly isLiteralNode: boolean;\n}\n\nexport interface GraphEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: GraphNode[]) {\n    for (let node of (nodes || [])) {\n      if (node.isDataNode) continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: GraphNode) => {\n    return `${node.label} ${this.id2num[node.id]}`;\n  }\n\n  nextLabel = (uri: string, label: string) => {\n    return `${label} ${this.counter[uri] || 1}`;\n  }\n\n  unlabel = (label: string) => {\n    return label.substring(0, label.lastIndexOf(\" \"));\n  }\n\n  add = (node: GraphClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  }\n}\n\nexport class Graph {\n  public id: string;\n  public version: number;\n  public nodes: GraphNode[];\n  public edges: GraphEdge[];\n  public stale: boolean; // if it is stale\n  public dataNodePositions?: { left: number; centerLeft: number }[];\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: GraphNode[], edges: GraphEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      dataNodePositions: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action\n    })\n  }\n\n  onSave = () => {\n    this.stale = false;\n  }\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) => this.nodes.filter(node => node.uri === uri);\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n\n  edge = (source: string, target: string) => this.edges.filter(e => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) => this.edges.filter(e => e.source === source && e.target === target).length > 0;\n  incomingEdges = (target: string) => this.edges.filter(e => e.target === target);\n  outgoingEdges = (source: string) => this.edges.filter(e => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  }\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index)\n    }\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (sourceId: string, targetId: string): [GraphEdge, GraphEdge?][] => {\n    let matchPaths: [GraphEdge, GraphEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  }\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns \n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\"Invalid semantic model. An entity column has two incoming edges\");\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  }\n\n  getOutgoingProperties = (id: string): [GraphEdge, GraphEdge?][] => {\n    let outprops: [GraphEdge, GraphEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (target.uri === 'http://wikiba.se/ontology#Statement') {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  }\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n  */\n\n  /**\n   * Add a link between two columns\n   * \n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(sourceColumnIndex: number, targetColumnIndex: number, edgeData: Omit<GraphEdge, \"source\" | \"target\">) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\"The source column connects to multiple class nodes! Don't know the exact class node to choose\");\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\"The target column connects to multiple class nodes! Don't know the exact class node to choose\");\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget = targetIncomingEdges.length === 0 ? target.id : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<GraphClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\"The column connects to multiple class nodes! Don't know the exact class node to choose\");\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   * \n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   * \n   * @param sourceId \n   * @param targetId \n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(sourceId: string, targetId: string, pred1: Resource, pred2: Resource) {\n    let source = this.node(sourceId);\n    let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: 'http://wikiba.se/ontology#Statement',\n          label: 'wikibase:Statement',\n          approximation: false,\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\"There are more one path between two nodes. Don't know which path to update it\");\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: GraphClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push({\n      ...node,\n      isClassNode: true,\n      isDataNode: false,\n      isLiteralNode: false,\n      isInContext: false,\n      datatype: \"string\",\n      columnIndex: -1,\n    });\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: GraphLiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push({\n      ...node,\n      approximation: false,\n      isClassNode: false,\n      isDataNode: false,\n      isLiteralNode: true,\n      columnIndex: -1,\n    });\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter(n => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateNode(nodeId: string, props: Partial<GraphNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    this.nodes[nodeIndex] = { ...this.nodes[nodeIndex], ...props };\n\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public addEdge(edge: GraphEdge) {\n    if (this.edges.filter(e => e.source === edge.source && e.target === edge.target).length > 0) {\n      throw new Error(\"Cannot have more than one edge between two classes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter(n => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<GraphEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (this.nodeId2Index[nodeId] === undefined || this.nodes[this.nodeId2Index[nodeId]] === undefined) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    if (this.nodes[nodeIndex].isDataNode || this.nodes[nodeIndex].isInContext) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(edge => edge.source === nodeId || edge.target === nodeId);\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  }\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  }\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  }\n}","import { SERVER } from \"../../env\";\nimport {\n  Record,\n  CRUDStore,\n  RStore,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n} from \"../base\";\nimport { SingleKeyIndex } from \"../base/StoreIndex\";\nimport { Graph } from \"./Graph\";\n\n// id of a semantic model is actually the combination of table & name\nconst parseKey = (id: string) => {\n  const ptr = id.indexOf(\":\");\n  return { table: parseInt(id.substring(0, ptr)), name: id.substring(ptr) };\n};\nconst getKey = (name: string, table: number) => `${table}:${name}`;\n\nexport class SemanticModel\n  implements Record<string>, DraftUpdateRecord<string, SemanticModel>\n{\n  id: string;\n  description: string;\n  version: number;\n  graph: Graph;\n  table: number;\n  project: number;\n\n  constructor(\n    id: string,\n    description: string,\n    version: number,\n    graph: Graph,\n    table: number,\n    project: number\n  ) {\n    this.id = id;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n    this.project = project;\n  }\n\n  get isDraft() {\n    return false;\n  }\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    description: string,\n    version: number,\n    graph: Graph,\n    table: number,\n    project: number\n  ) {\n    super(draftID, description, version, graph, table, project);\n    this.draftID = draftID;\n  }\n\n  get isDraft() {\n    return true;\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  string,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  protected tableIndex: SingleKeyIndex<string, number> = new SingleKeyIndex(\n    \"table\"\n  );\n\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`);\n  }\n\n  public findByTable(tableId: number): SemanticModel[] {\n    return (this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  public deserialize(record: any): SemanticModel {\n    let id = getKey(record.name, record.table);\n    let graph = new Graph(id, record.data.nodes, record.data.edges);\n    return new SemanticModel(\n      id,\n      record.description,\n      record.version,\n      graph,\n      record.table,\n      record.project\n    );\n  }\n\n  public serializeUpdateDraft(record: any): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  protected index(record: SemanticModel): void {\n    this.tableIndex.index_record(record);\n  }\n}\n","import { message } from \"antd\";\nimport { AxiosError } from \"axios\";\nimport { Project, ProjectStore } from \"./Project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableRowStore, TableStore } from \"./Table\";\nimport { SemanticModelStore } from \"./sm/SemanticModelStore\";\nimport { Graph, URICount } from \"./sm/Graph\";\n\nconst projects = new ProjectStore();\nconst tables = new TableStore();\nconst tablerows = new TableRowStore();\nconst semanticmodels = new SemanticModelStore();\n\nexport const stores = {\n  ProjectStore: projects,\n  TableStore: tables,\n  TableRowStore: tablerows,\n  SemanticModelStore: semanticmodels,\n};\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nfunction ajaxErrorHandler(error: AxiosError<any>) {\n  message.error(\n    \"Error while talking with the server. Check console for more details.\",\n    10\n  );\n  console.error(error);\n}\n\nfor (let store of Object.values(stores)) {\n  store.ajaxErrorHandler = ajaxErrorHandler;\n}\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  Graph,\n  URICount,\n};\nexport type { Table, TableRow } from \"./Table\";\nexport type { SemanticModel } from \"./sm/SemanticModelStore\";\nexport type { GraphEdge, GraphNode } from \"./sm/Graph\";\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\nimport { RouteConf, history } from \"../routing\";\nimport _ from \"lodash\";\nimport { Project, Table } from \"../models\";\n\nexport const HomeNavBar = () => {\n  return <PageHeader title=\"Home\" className=\"site-page-header\" />;\n};\n\nexport const ProjectNavBar = (props: { project?: Project }) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() => history.push(RouteConf.home.getURL())}\n      title={\n        <React.Fragment>\n          <span style={{ fontWeight: 500 }}>Project </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {_.upperFirst(project.name)}\n          </span>\n        </React.Fragment>\n      }\n      className=\"site-page-header\"\n    />\n  );\n};\n\nexport const TableNavBar = (props: {\n  project?: Project;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          RouteConf.project.getURL({\n            projectId: props.table.project.toString(),\n          })\n        )\n      }\n      title={\n        <React.Fragment>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {props.table.name}\n          </span>\n        </React.Fragment>\n      }\n      subTitle={\n        <React.Fragment>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </React.Fragment>\n      }\n      className=\"site-page-header\"\n      extra={props.btns}\n    />\n  );\n};\n","import { Avatar, Col, List, Row } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { HomeNavBar } from \"../components/NavBar\";\nimport { useStores } from \"../models\";\nimport { InternalLink, RouteConf } from \"../routing\";\n\nconst HomePage = observer(() => {\n  const { ProjectStore: projects } = useStores();\n\n  useEffect(() => {\n    projects.fetchSome({ limit: 100, offset: 0 });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <HomeNavBar />\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <h2>Projects</h2>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projects.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor: [\n                          \"#f56a00\",\n                          \"#7265e6\",\n                          \"#1890ff\",\n                          \"#00a2ae\",\n                        ][project.name.charCodeAt(0) % 4],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={RouteConf.project}\n                      urlArgs={{ projectId: project.id.toString() }}\n                      queryArgs={null}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n\nexport default HomePage;\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\n\nconst styles = {\n  root: {\n    paddingTop: 12,\n    paddingBottom: 4,\n    textAlign: \"center\" as \"center\",\n  },\n  bordered: {\n    border: \"1px solid #ddd\",\n    borderRadius: 4,\n  },\n};\n\nconst LoadingComponent = ({\n  classes,\n  size = \"default\",\n  bordered = false,\n}: { size?: \"large\" | \"default\" | \"small\"; bordered?: boolean } & WithStyles<\n  typeof styles\n>) => {\n  let className = classes.root;\n  if (bordered) {\n    className += ` ${classes.bordered}`;\n  }\n\n  return (\n    <div className={className}>\n      <Spin tip=\"Loading...\" size={size} />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(LoadingComponent);\n","import { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Project, Table, useStores } from \"../models\";\nimport { useParams } from \"react-router-dom\";\nimport { InternalLink, RouteConf, RouteURLArgs_project } from \"../routing\";\nimport React from \"react\";\nimport { ProjectNavBar } from \"../components/NavBar\";\nimport NotFound404 from \"./NotFound404\";\nimport LoadingPage from \"./LoadingPage\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\n\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n};\n\nconst ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = parseInt(useParams<RouteURLArgs_project>().projectId);\n\n    const { ProjectStore, TableStore } = useStores();\n    const [invalidID, setInvalidID] = useState(false);\n\n    useEffect(() => {\n      if (ProjectStore.get(projectId) === undefined) {\n        ProjectStore.fetch(projectId).then((project) => {\n          if (project === undefined) {\n            setInvalidID(true);\n            return;\n          }\n        });\n      }\n    }, [projectId]);\n\n    const project = ProjectStore.get(projectId);\n    if (project === undefined) {\n      if (invalidID) return <NotFound404 />;\n      return <LoadingPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={RouteConf.table}\n              urlArgs={{ tableId: tbl.id.toString() }}\n              queryArgs={{\n                query: ProjectStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <ProjectNavBar project={ProjectStore.get(projectId)} />\n        <ProTable<ReturnType<typeof table2row>>\n          className={classes.table}\n          size=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await TableStore.fetchSome({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<h2>Tables</h2>}\n          // toolBarRender={false}\n          search={false}\n          pagination={{\n            pageSize: 10,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n      </React.Fragment>\n    );\n  })\n);\n\nexport default ProjectPage;\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import G6 from \"@antv/g6\";\nimport { THEME } from \"../../env\";\nimport { GraphEdge, GraphNode, URICount } from \"../../models\";\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units\n  leftOffset: number;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n}\n\nexport const GraphNodeColors = {\n  DataNode: {\n    fill: \"#ffd666\",\n    stroke: \"#874d00\",\n  },\n  ClassNode: {\n    fill: \"#b7eb8f\",\n    stroke: \"#135200\",\n    // fill: \"#d9d9d9\",\n    // stroke: \"#434343\",\n  },\n  // literal nodes that are in the context\n  LiteralContextNode: {\n    fill: \"#C6E5FF\",\n    stroke: \"#5B8FF9\",\n  },\n  // literal nodes that are not in the context\n  LiteralNonContextNode: {\n    fill: \"#d3adf7\",\n    stroke: \"#c41d7f\",\n  },\n};\n\nexport interface G6GraphNode extends GraphNode {\n  x?: number;\n  y?: number;\n  type?: string;\n  labelCfg?: object;\n  style?: any;\n  size?: number | number[];\n}\n\ninterface G6GraphData {\n  nodes: G6GraphNode[];\n  edges: GraphEdge[];\n  subNodes?: G6GraphNode[];\n  subEdges?: GraphEdge[];\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: any;\n  private data: G6GraphData;\n  private props: G6GraphProps;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      linkCenter: true,\n      layout: {\n        type: \"dagre\",\n        rankdir: \"TB\",\n        nodesep: 70,\n        ranksep: 30,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: THEME === \"dark\" ? \"white\" : \"black\",\n          endArrow: {\n            fill: THEME === \"dark\" ? \"white\" : \"black\",\n            path: G6.Arrow.triangle(6, 8, 15),\n            d: 15,\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      defaultNode: {\n        // labelCfg: {\n        //   style: {\n        //     fill: 'black',\n        //     background: {\n        //       fill: \"#bfbfbf\",\n        //       stroke: \"#5b8ef9\",\n        //       padding: [2, 2, 2, 2],\n        //       radius: 2,\n        //     },\n        //   },\n        // },\n      },\n      modes: {\n        default: [\"drag-canvas\", \"drag-node\"],\n        edit: [\"click-select\"],\n      },\n      nodeStateStyles: {\n        hover: {\n          fill: \"lightsteelblue\",\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  static transformData = (\n    nodes: GraphNode[],\n    edges: GraphEdge[],\n    uriCount: URICount\n  ): G6GraphData => {\n    // get new nodes\n    let newNodes = nodes.map((u) => {\n      let n: G6GraphNode = { ...u };\n      if (u.isDataNode) {\n        n.labelCfg = {\n          style: {\n            fill: \"black\",\n            background: {\n              ...GraphNodeColors.DataNode,\n              padding: [4, 4, 4, 4],\n              radius: 3,\n            },\n          },\n        };\n        n.type = \"rect\";\n        n.size = [1, 1];\n        n.style = {\n          radius: 3,\n          ...GraphNodeColors.DataNode,\n        };\n        if (n.label === \"\") {\n          n.label = \" \";\n        }\n      } else if (n.isClassNode) {\n        // n.type = 'ellipse';\n        // n.size = [n.label.length * 6, 25];\n        n.labelCfg = {\n          style: {\n            fill: \"black\",\n            background: {\n              ...GraphNodeColors.ClassNode,\n              padding: [4, 4, 4, 4],\n              radius: 3,\n            },\n          },\n        };\n        n.style = {\n          radius: 3,\n          ...GraphNodeColors.ClassNode,\n        };\n        n.size = [30, 30];\n        n.label = uriCount.label(n);\n      } else if (n.isInContext) {\n        n.labelCfg = {\n          style: {\n            fill: \"black\",\n            background: {\n              ...GraphNodeColors.LiteralContextNode,\n              padding: [4, 4, 4, 4],\n              radius: 3,\n            },\n          },\n        };\n        n.style = {\n          radius: 3,\n          ...GraphNodeColors.LiteralContextNode,\n        };\n        n.size = [30, 30];\n      } else {\n        n.labelCfg = {\n          style: {\n            fill: \"black\",\n            background: {\n              ...GraphNodeColors.LiteralNonContextNode,\n              padding: [4, 4, 4, 4],\n              radius: 3,\n            },\n          },\n        };\n        n.style = {\n          radius: 3,\n          ...GraphNodeColors.LiteralNonContextNode,\n        };\n        n.size = [30, 30];\n      }\n      return n;\n    });\n\n    // get new edges\n    let newEdges = edges.map((e) => ({\n      ...e,\n      label: wrapTextPreserveWord(e.label, 120, 14),\n    }));\n\n    return { nodes: newNodes, edges: newEdges };\n  };\n\n  setDataAndRender = (data: G6GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  refreshPositions = () => {\n    this.graph.refreshPositions();\n  };\n\n  /** Adjust the canvas size to fit with the graph */\n  fitToCanvas = (center?: boolean): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      if (center === true) {\n        this.graph.moveTo(graphWidth / 2 - bbox.width / 2, 10);\n      } else {\n        this.graph.moveTo(this.props.leftOffset, 10);\n      }\n      this.graph.changeSize(graphWidth, bbox.height + 20);\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = (\n    maxTries: number,\n    delay: number,\n    fn: (...args: any[]) => void,\n    args: any[],\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n\n  /** Render the subgraph with the force layout as we fixed the data node in place\n   *\n   * @deprecated\n   */\n  subgraphLayoutForce = (\n    version: number,\n    data: G6GraphData,\n    onFinish: () => void\n  ) => {\n    let onLayoutEnd = false;\n    const sublayout = new G6.Layout.force({\n      center: [this.container.scrollWidth / 2, 0],\n      linkDistance: 100,\n      preventOverlap: true,\n      nodeSize: 10,\n      // leave an empty function here, just to mark that the correct function is tick\n      // not onTick\n      tick: () => {},\n      onLayoutEnd: () => {\n        onLayoutEnd = true;\n        if (this.version === version) {\n          // run for the last time\n          onFinish();\n        }\n      },\n    });\n    sublayout.init({ nodes: data.subNodes, edges: data.subEdges });\n    sublayout.execute();\n\n    // update position every 50ms, to make it looks smooth,\n    // unless the layout is finished rendering\n    let fn = () => {\n      // console.log('update position');\n      if (this.version > version) {\n        // console.log('detect newer code - stop previous code');\n        return;\n      }\n      onFinish();\n      if (!onLayoutEnd) {\n        setTimeout(fn, 50);\n      }\n    };\n    fn();\n  };\n}\n\nexport function wrapTextPreserveWord(\n  s: string,\n  maxWidth: number,\n  fontSize: number\n) {\n  let width = G6.Util.getTextSize(s, fontSize)[0];\n  if (width <= maxWidth) {\n    return s;\n  }\n\n  let words = s.split(\" \");\n  let lines: string[][] = [[]];\n  let currentWidth = 0;\n\n  for (let word of words) {\n    let wordWidth = G6.Util.getTextSize(word, fontSize)[0];\n    if (currentWidth + wordWidth > maxWidth) {\n      lines.push([]);\n      currentWidth = wordWidth;\n    } else {\n      currentWidth += wordWidth;\n    }\n\n    lines[lines.length - 1].push(word);\n  }\n\n  if (lines[lines.length - 1].length === 0) {\n    lines.pop();\n  }\n\n  return lines.map((ws) => ws.join(\" \")).join(\"\\n\");\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button } from \"antd\";\nimport { MutableRefObject, useEffect, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { Graph, SemanticModel } from \"../../models\";\nimport { G6Graph, G6GraphProps } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    marginTop: 8,\n  },\n};\n\nconst GraphComponent = ({\n  sm,\n  classes,\n}: { sm: SemanticModel } & WithStyles<typeof styles>) => {\n  const [graph, graphLoading, container] = useG6Graph(sm.graph, {\n    initHeight: 300,\n    leftOffset: 35,\n  });\n\n  const centering = () => {\n    graph !== undefined && graph!.fitToCanvas(true);\n  };\n  useHotkeys(\"c\", centering, [graph !== undefined]);\n\n  return (\n    <div>\n      <Button size=\"small\" onClick={centering}>\n        Center graph (C)\n      </Button>\n      <Button size=\"small\" className=\"ml-2\">\n        Add node\n      </Button>\n      <Button size=\"small\" className=\"ml-2\">\n        Add edge\n      </Button>\n      <div className={classes.hide}>{sm.graph.version}</div>\n      <div ref={container} className={classes.graphContainer}></div>\n    </div>\n  );\n};\n\nfunction useG6Graph(\n  data: Graph,\n  props: G6GraphProps\n): [G6Graph | undefined, boolean, MutableRefObject<any>] {\n  const [loading, setLoading] = useState(true);\n  const container = useRef(null);\n  const graph = useRef<G6Graph | undefined>(undefined);\n\n  useEffect(() => {\n    if (container.current === null) return;\n    if (graph.current === undefined) {\n      graph.current = new G6Graph(container.current, props);\n    }\n\n    const g = graph.current;\n    g.setDataAndRender(\n      G6Graph.transformData(data.nodes, data.edges, data.uriCount),\n      () => {\n        // let maxHeight = Math.max.apply(\n        //   null,\n        //   data.subNodes.map((n: any) => n.y!)\n        // );\n        // for (let n of data.nodes) {\n        //   if (n.isDataNode) {\n        //     n.x = this.props.graph!.dataNodePositions![n.columnIndex!].left + this.nodeOffset;\n        //     n.y = maxHeight + 70;\n        //   }\n        // }\n        // this.graph!.refreshPositions();\n        // this.graph!.fitToCanvas(false);\n        (window as any).g = g;\n        // maximum wait is 1 second\n        g.untilLayoutStable(20, 50, g.fitToCanvas, [true], () => {\n          setLoading(false);\n        });\n      }\n    );\n  }, [data.id, data.version]);\n\n  return [graph.current, loading, container];\n}\n\nexport default withStyles(styles)(GraphComponent);\n","import { observer } from \"mobx-react\";\nimport { useEffect } from \"react\";\nimport { Table, useStores } from \"../models\";\nimport LoadingPage from \"../pages/LoadingPage\";\nimport GraphComponent from \"./sm/Graph\";\n\nconst SemanticModelComponent = observer(({ table }: { table: Table }) => {\n  const { SemanticModelStore: semanticmodels } = useStores();\n\n  useEffect(() => {\n    semanticmodels.fetchSome({\n      limit: 1000,\n      offset: 0,\n      conditions: {\n        table: table.id,\n      },\n    });\n  }, [table.id]);\n  const sms = semanticmodels.findByTable(table.id);\n\n  if (sms.length === 0) {\n    return <LoadingPage bordered={true} />;\n  }\n\n  return (\n    <div>\n      <GraphComponent sm={sms[0]} />\n    </div>\n  );\n});\n\nexport default SemanticModelComponent;\n","import ProTable from \"@ant-design/pro-table\";\nimport { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Popover } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useMemo } from \"react\";\nimport { Table, TableRow, useStores } from \"../models\";\n\nconst styles = {\n  root: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n};\n\nconst TableComponent = withStyles(styles)(\n  observer(\n    ({ table, classes }: { table: Table } & WithStyles<typeof styles>) => {\n      const { TableRowStore } = useStores();\n      const columns = useMemo(() => {\n        let lst: any = table.columns.map((name, index) => ({\n          title: name,\n          dataIndex: [\"row\", index],\n          render: (cell: string, record: TableRow) =>\n            renderCell(cell, record, index),\n        }));\n        lst.unshift({ title: \"\", dataIndex: \"index\" });\n        return lst;\n      }, [table.id]);\n\n      return (\n        <div className={classes.root}>\n          <ProTable\n            size=\"small\"\n            bordered={true}\n            request={async (params, sort, filter) => {\n              let result = await TableRowStore.fetchSome({\n                limit: params.pageSize!,\n                offset: (params.current! - 1) * params.pageSize!,\n                conditions: { table: table.id },\n              });\n              return {\n                data: result.records,\n                success: true,\n                total: result.total,\n              };\n            }}\n            rowKey={\"index\"}\n            toolBarRender={false}\n            search={false}\n            pagination={{\n              pageSize: 5,\n              pageSizeOptions: [\n                \"5\",\n                \"10\",\n                \"20\",\n                \"50\",\n                \"100\",\n                \"200\",\n                \"500\",\n                \"1000\",\n              ],\n            }}\n            columns={columns}\n          />\n        </div>\n      );\n    }\n  )\n);\n\nexport default TableComponent;\n\nfunction renderCell(cell: string, record: TableRow, index: number) {\n  const links = record.links.get(index) || [];\n  let components = links.flatMap((link, index) => {\n    let prefix =\n      index === 0\n        ? cell.substring(0, link.start)\n        : cell.substring(links[index - 1].end, link.start);\n    let linksurface = cell.substring(link.start, link.end);\n    let infix = (\n      <a\n        key={index}\n        href={link.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        dangerouslySetInnerHTML={{\n          __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n        }}\n        style={link.entity === null ? { color: \"#aaa\" } : {}}\n      />\n    );\n    return [prefix, infix];\n  });\n  if (links.length === 0) {\n    components.push(cell);\n  } else {\n    components.push(cell.substring(links[links.length - 1].end));\n  }\n\n  let content = (\n    <div className=\"popover-table\">\n      <table className=\"lightweight-table\">\n        <thead>\n          <tr>\n            <th>KG Entity</th>\n            <th>Class</th>\n          </tr>\n        </thead>\n        <tbody>\n          {links\n            .filter((link) => link.entity !== null)\n            .map((link) => {\n              // let entity = cell.metadata.entities[link.entity!];\n              // let action = <EntityComponentExternalOpener\n              //   entityURI={entity.uri} open={this.shouldOpenEntityNewPage ? undefined : this.modalViewEntity}\n              //   autoHighlight={true} />\n              return (\n                <tr key={link.entity}>\n                  <td>\n                    {/* <ExternalLink url={link.url} action={action}> */}\n                    {link.url}\n                    {/* </ExternalLink> */}\n                  </td>\n                  {/* <td>\n                    <ul>\n                      {entity.types.map((type) => {\n                        return (\n                          <li key={type.uri}>\n                            <ExternalLink url={type.uri}>\n                              {getIndentIndicator(type.depth)} {type.label}\n                            </ExternalLink>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </td> */}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return (\n    <div>\n      <Popover\n        content={content}\n        // getPopupContainer={(trigger) => this.container.current!}\n      >\n        <span>{components}</span>\n      </Popover>\n    </div>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStores, TableStore as TableStoreType, TableRow } from \"../models\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { RouteConf, RouteURLArgs_table } from \"../routing\";\nimport React from \"react\";\nimport LoadingPage from \"./LoadingPage\";\nimport NotFound404 from \"./NotFound404\";\nimport { TableNavBar } from \"../components/NavBar\";\nimport SemanticModelComponent from \"../components/SemanticModel\";\nimport { Button, Popover } from \"antd\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport _ from \"lodash\";\nimport { toJS } from \"mobx\";\nimport TableComponent from \"../components/Table\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n};\n\nconst TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const { ProjectStore, TableStore, TableRowStore } = useStores();\n\n    // parse necessary route parameters\n    const tableId = parseInt(useParams<RouteURLArgs_table>().tableId);\n\n    // define states\n    const [invalidID, setInvalidID] = useState(false);\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      TableStore,\n      tableId\n    );\n\n    useEffect(() => {\n      // fetch the tables\n      if (TableStore.get(tableId) === undefined) {\n        TableStore.fetch(tableId).then((tbl) => {\n          if (tbl === undefined) {\n            setInvalidID(true);\n            return;\n          }\n          ProjectStore.fetchIfMissing(tbl.project);\n        });\n      }\n    }, [tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = TableStore.get(tableId);\n    if (table === undefined) {\n      if (invalidID) return <NotFound404 />;\n      return <LoadingPage />;\n    }\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={ProjectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <SemanticModelComponent table={table} />\n        <TableComponent table={table} />\n      </React.Fragment>\n    );\n  })\n);\n\nexport default TablePage;\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const location = useLocation();\n  const b64query = useMemo(() => {\n    let temp = new URLSearchParams(location.search).get(\"query\");\n    return temp === null ? \"\" : temp;\n  }, [location.search]);\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      RouteConf.table\n        .path({ tableId: nextTableId.toString() }, { query: b64query })\n        .open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n","import { Location } from \"history\";\nimport { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, RouteComponentProps } from \"react-router\";\nimport React from \"react\";\n\nfunction getUserConfirmation(\n  message: string,\n  callback: (result: boolean) => void\n) {\n  Modal.confirm({\n    title: message,\n    okText: \"Leave\",\n    okType: \"primary\",\n    okButtonProps: { danger: true },\n    cancelText: \"Stay\",\n    onOk() {\n      callback(true);\n    },\n    onCancel() {\n      // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n      callback(false);\n    },\n  });\n}\n\nexport const history =\n  PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n      })\n    : createBrowserHistory({\n        getUserConfirmation,\n      });\n\ntype ReactComponent =\n  | React.ComponentType<RouteComponentProps<any>>\n  | React.ComponentType<any>;\n\nexport class PathDef<URLArgs, QueryArgs> {\n  // definition of a path in react-router styles. e.g., /accounts/:id\n  public pathDef: string;\n  // is equivalent to the `exact` property of the Route component in react-router (whether it should match with its descendant)\n  public exact: boolean;\n  // equivalent to `strict`: when true, a path that has a trailing slash will only match a location.pathname with a trailing slash. This has no effect when there are additional URL segments in the location.pathname.\n  public strict: boolean;\n  // hold properties of Route component in react-router\n  public routeDef: {\n    path: string;\n    exact: boolean;\n    strict: boolean;\n    component: ReactComponent;\n  };\n\n  public constructor(\n    component: ReactComponent,\n    pathDef: string,\n    exact: boolean = false,\n    strict: boolean = false\n  ) {\n    this.pathDef = pathDef;\n    this.exact = exact;\n    this.strict = strict;\n    this.routeDef = { path: pathDef, exact, strict, component };\n  }\n\n  /**\n   * Create a path based on the given arguments.\n   *\n   * Note: this function should be used only when we build a link for <a> element\n   * since it won't follow the semantic of react-router but more like when you open a link\n   * at the first time in the browser (that's why for hash history, we have to add `#`)\n   */\n  public getURL(urlArgs: URLArgs, queryArgs: QueryArgs): string {\n    let path = this.pathDef;\n\n    if (urlArgs !== null) {\n      for (let v in urlArgs) {\n        path = path.replace(`:${v}`, urlArgs[v] as any as string);\n      }\n    }\n\n    if (queryArgs !== null) {\n      path = `${path}?${new URLSearchParams(queryArgs as any).toString()}`;\n    }\n\n    return path;\n  }\n\n  /**\n   * Create a location that the history object can be pushed\n   */\n  public location(urlArgs: URLArgs, queryArgs: QueryArgs): Location<any> {\n    let path = this.pathDef;\n    if (urlArgs !== null) {\n      for (let v in urlArgs) {\n        path = path.replace(`:${v}`, urlArgs[v] as any as string);\n      }\n    }\n\n    return {\n      pathname: path,\n      search:\n        queryArgs === null || queryArgs === undefined\n          ? \"\"\n          : \"?\" + new URLSearchParams(queryArgs as any).toString(),\n      hash: \"\",\n      state: undefined,\n    };\n  }\n\n  /**\n   * Build a path that can be used to navigate to a link\n   */\n  public path(\n    urlArgs: URLArgs,\n    queryArgs: QueryArgs\n  ): Path<URLArgs, QueryArgs> {\n    return new Path(this, urlArgs, queryArgs);\n  }\n\n  /**\n   * Get URL params of this route\n   */\n  public getURLArgs(location: Location<any>): URLArgs | undefined {\n    const m = matchPath(location.pathname, this.routeDef);\n    if (m === null) {\n      return undefined;\n    }\n    return m.params as URLArgs;\n  }\n}\n\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef<null, null> {\n  private _path: Path<null, null>;\n\n  public constructor(\n    component: ReactComponent,\n    pathDef: string,\n    exact: boolean = false,\n    strict: boolean = false\n  ) {\n    super(component, pathDef, exact, strict);\n    this._path = new Path(this, null, null);\n  }\n\n  public getURL(): string {\n    return super.getURL(null, null);\n  }\n\n  public location(): Location<any> {\n    return super.location(null, null);\n  }\n\n  public path(): Path<null, null> {\n    return this._path;\n  }\n}\n\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef<URLArgs> extends PathDef<URLArgs, null> {\n  public constructor(\n    component: ReactComponent,\n    pathDef: string,\n    exact: boolean = false,\n    strict: boolean = false\n  ) {\n    super(component, pathDef, exact, strict);\n  }\n\n  public getURL(urlArgs: URLArgs): string {\n    return super.getURL(urlArgs, null);\n  }\n\n  public location(urlArgs: URLArgs): Location<any> {\n    return super.location(urlArgs, null);\n  }\n\n  public path(urlArgs: URLArgs): Path<URLArgs, null> {\n    return new Path(this, urlArgs, null);\n  }\n}\n\nclass Path<URLArgs, QueryArgs> {\n  private pathDef: PathDef<URLArgs, QueryArgs>;\n  private urlArgs: URLArgs;\n  private queryArgs: QueryArgs;\n\n  public constructor(\n    pathDef: PathDef<URLArgs, QueryArgs>,\n    urlArgs: URLArgs,\n    queryArgs: QueryArgs\n  ) {\n    this.pathDef = pathDef;\n    this.urlArgs = urlArgs;\n    this.queryArgs = queryArgs;\n  }\n\n  /**\n   * Open this path\n   */\n  public open() {\n    history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n  }\n\n  /**\n   * Handler for a mouse event navigation (e.g., linking on an <a> element)\n   */\n  public mouseClickNavigationHandler = (e?: React.MouseEvent) => {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n\n    if (e !== undefined && (e.ctrlKey || e.metaKey)) {\n      // holding ctrl or cmd key, we should open in new windows\n      window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n      // keep the focus on this page\n      window.focus();\n    } else {\n      history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n  };\n}\n\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n  internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n  history: history,\n  internalHTMLLinkClick: (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n\n    let href = (e.target as any).getAttribute(\"href\");\n    if (e.ctrlKey || e.metaKey) {\n      // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n      window.open(href, \"_blank\");\n      window.focus();\n    } else {\n      history.push(href);\n    }\n  },\n  goBack: () => history.goBack(),\n  goForward: () => history.goForward(),\n  openInternalLink: (href: string) => {\n    history.push(href);\n  },\n};\n(window as any)._routeAPIs = routeAPIs;\n","import React from \"react\";\nimport { PLATFORM } from \"../env\";\nimport { PathDef, routeAPIs } from \"./route\";\n\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\n\ninterface InternalLinkProps<URLArgs, QueryArgs> {\n  path: PathDef<URLArgs, QueryArgs>;\n  urlArgs: URLArgs;\n  queryArgs: QueryArgs;\n  className?: string;\n  style?: object;\n  // other properties are for passing down dynamically from parent to <a> element\n  onContextMenu?: any;\n  onMouseDown?: any;\n  onTouchStart?: any;\n  onMouseEnter?: any;\n  onMouseLeave?: any;\n  onFocus?: any;\n  onBlur?: any;\n}\ninterface InternalLinkState { }\n\nexport class InternalLink<URLArgs, QueryArgs> extends React.Component<\n  InternalLinkProps<URLArgs, QueryArgs>,\n  InternalLinkState\n  > {\n  public state: InternalLinkState = {};\n\n  onClick = (e: any) => {\n    this.props.path\n      .path(this.props.urlArgs, this.props.queryArgs)\n      .mouseClickNavigationHandler(e);\n  };\n\n  render() {\n    return (\n      <a\n        href={this.props.path.getURL(this.props.urlArgs, this.props.queryArgs)}\n        onClick={this.onClick}\n        style={this.props.style}\n        className={this.props.className}\n        onContextMenu={this.props.onContextMenu}\n        onMouseDown={this.props.onMouseDown}\n        onTouchStart={this.props.onTouchStart}\n        onMouseEnter={this.props.onMouseEnter}\n        onMouseLeave={this.props.onMouseLeave}\n        onFocus={this.props.onFocus}\n        onBlur={this.props.onBlur}\n      >\n        {this.props.children}\n      </a>\n    );\n  }\n}\n\ninterface ExternalLinkProps {\n  href: string;\n  openInNewPage?: boolean;\n}\n\nexport const ExternalLink: React.FunctionComponent<ExternalLinkProps> = ({\n  href,\n  openInNewPage = false,\n  children,\n}) => {\n  return (\n    <a\n      href={href}\n      target={openInNewPage ? \"_blank\" : undefined}\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </a>\n  );\n};\n\nexport function InternalHTMLLink(\n  href: string,\n  text: string,\n  className?: string\n) {\n  if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n    // relative link in the samepage does not work in native mode, so we have to fake it...\n    return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n  }\n  return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { Location } from \"history\";\nimport { matchPath } from \"react-router\";\nimport HomePage from \"../pages/HomePage\";\nimport ProjectPage from \"../pages/ProjectPage\";\nimport TablePage from \"../pages/TablePage\";\nimport { NoArgsPathDef, NoQueryArgsPathDef, PathDef } from \"./route\";\nexport { ExternalLink, InternalHTMLLink, InternalLink } from \"./Link\";\nexport { history, PathDef, routeAPIs } from \"./route\";\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport type RouteURLArgs_project = { projectId: string };\nexport type RouteURLArgs_table = { tableId: string };\nexport type RouteQueryArgs_table = { query?: string };\n\nexport const RouteConf = {\n  project: new NoQueryArgsPathDef<RouteURLArgs_project>(\n    ProjectPage,\n    \"/projects/:projectId\"\n  ),\n  table: new PathDef<RouteURLArgs_table, RouteQueryArgs_table>(\n    TablePage,\n    \"/tables/:tableId\"\n  ),\n  home: new NoArgsPathDef(HomePage, \"/\", true),\n};\n(window as any)._RouteConf = RouteConf;\n\n/*************************************************************************************\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(\n  location: Location<any>\n): string | undefined {\n  for (let [name, route] of Object.entries(RouteConf)) {\n    if (matchPath(location.pathname, route.routeDef) !== null) {\n      return name;\n    }\n  }\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { routeAPIs, RouteConf } from \"../routing\";\n\nconst NotFound404: React.FunctionComponent<{}> = () => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>404 Resource Not Found</h1>\n      <div>\n        <Button type=\"link\" size=\"large\" onClick={routeAPIs.goBack}>\n          Go Back\n        </Button>\n        <Button\n          type=\"link\"\n          size=\"large\"\n          onClick={RouteConf.home.path().mouseClickNavigationHandler}\n        >\n          Home\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound404;","import { ConfigProvider } from \"antd\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NotFound404 from \"./pages/NotFound404\";\nimport { RouteConf, history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\n\nexport default function App() {\n  return (\n    <Router history={history}>\n      <ConfigProvider locale={enUSIntl}>\n        <div className=\"app-body\">\n          <Switch>\n            {Object.entries(RouteConf).map(([key, route]) => (\n              <Route key={key} {...route.routeDef} />\n            ))}\n            <Route component={NotFound404} />\n          </Switch>\n        </div>\n      </ConfigProvider>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}