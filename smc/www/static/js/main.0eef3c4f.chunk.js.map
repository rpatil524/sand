{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","env.ts","models/Project.ts","models/table/TableContext.ts","models/table/TableRowStore.ts","models/table/TableStore.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/entity/Entity.ts","models/entity/EntitySettings.ts","models/entity/EntityStore.ts","models/ontology/PropertyStore.ts","models/ontology/ClassStore.ts","models/index.ts","pages/HomePage.tsx","pages/ProjectPage.tsx","components/entity/Entity.ts","components/entity/InlineEntityComponent.tsx","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","components/element/Number.tsx","components/element/Button.tsx","components/table/CandidateEntityListComponent.tsx","components/table/CellComponent.tsx","components/table/TableComponent.tsx","components/table/styles.ts","misc/SequentialFuncInvoker.ts","pages/table/OntSearchComponent.tsx","pages/table/EntitySettingComponent.tsx","components/graph/RectNode.ts","components/graph/CircleNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/GraphComponent.tsx","pages/table/NodeSearchComponent.tsx","pages/table/forms/EdgeForm.tsx","pages/table/forms/NodeForm.tsx","pages/table/forms/index.tsx","pages/table/SemanticModelComponent.tsx","pages/table/TablePage.tsx","logo.png","routes.tsx","pages/SettingPage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","length","Object","entries","key","name2field","fromEntries","undefined","batch","BatchFetchRequests","action","fetchOne","fetchById","list","limit","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","store","window","requests","executingRequests","callback","clearTimeout","setTimeout","promise","exec","catch","pendingPromises","all","x","reqs","fetchByIds","req","delete","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","update","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","listener","draft","discardDraft","serializeCreateDraft","draftID","put","serializeUpdateDraft","toModel","markSaved","prevRecord","deindex","clear","remove","SingleKeyUniqueIndex","idField","fkField","SingleKeyIndex","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","openInNewPage","preventDefault","ctrlKey","metaKey","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","app","Router","Switch","Route","ConfigProvider","locale","enUSIntl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","Project","description","ProjectStore","isLineBreak","nLines","TableRowStore","findByTable","tableId","start","no","tableIndex","rowId","links","forEach","link","entity","entityId","candidate_entities","ce","candidateEntities","entity_id","TableStore","findByProject","projectId","projectIndex","contextPage","context_page","contextValues","context_values","context_tree","contextTree","contentBefore","content_before","n_lines","contentAfter","content_after","URICount","nodes","counter","id2num","label","node","nextLabel","uri","getNum","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","clone","toJS","onSave","hasNode","nodesByURI","nodeByColumnIndex","nodeByEntityId","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","Error","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","graph","table","isDraft","sm","DraftSemanticModel","columns","column","SemanticModelStore","getNewDraftId","getCreateDraft","column_index","is_in_context","sms","drafts","getDraftsByTable","idx","concat","parseInt","Math","max","Entity","readableLabel","aliases","properties","id2uri","uri2id","entityURI","startsWith","slice","EntitySettings","_showedPropsInFullView","_showedPropsInPopoverView","setShowedPropsInFullView","setShowedPropsInPopoverView","addShowedPropsInFullView","addShowedPropsInPopoverView","removeShowedPropsInFullView","removeShowedPropsInPopoverView","showedPropsInFullView","showedPropsInPopoverView","EntityStore","settings","readable_label","stmts","stmt","qualifiersOrder","qualifiers_order","PropertyStore","getPropertyByURI","uriIndex","ClassStore","getClassByURI","stores","projectStore","tableStore","tableRowStore","semanticModelStore","entityStore","propertyStore","classStore","_stores","StoreContext","createContext","useStores","useContext","HomePage","observer","useEffect","Fragment","gutter","span","Title","level","itemLayout","dataSource","renderItem","project","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","ProjectPage","borderLeft","fontWeight","LoadingPage","dataIndex","renderText","text","tbl","encodeWhereQuery","_","upperFirst","defaultSize","request","sort","a","pageSize","current","table2row","success","options","headerTitle","pagination","pageSizeOptions","rowKey","useEntityProperties","propIds","pid","qualifiers","qid","doesNotExist","InlineEntityComponent","nolink","FetchEntityComponent","render","renderLoading","renderNotFound","forceWaiting","InlinePropertyComponent","property","showId","CollapsibleComponent","hide","display","useState","visible","setVisible","toggleVisible","btn","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","unit","amount","language","globe","latitude","longitude","StatementComponent","marginLeft","id2prop","qval","Text","italic","valueIndex","PropertyComponent","propDivider","color","filteredProps","components","strong","direction","width","PropertyFilterComponent","enable","setEnable","addFilteredProp","removeFilteredProp","onChange","checked","allowClear","optionFilterProp","onSelect","onDeselect","PageEntityComponent","margin","minWidth","float","lang2value","lang","fontSize","copyable","lang2values","openPageEntityComponent","args","zIndex","content","info","icon","bodyStyle","maskClosable","mask","top","PopoverEntityComponent","marginBottom","cursor","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","padding","selected","colorSelected","blue","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","styles","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","candidateLst","faCheck","faCheckDouble","probability","findIndex","candidate","score","textDecoration","noEntityLink","CellComponent","cell","flatMap","prefix","substring","end","linksurface","infix","dangerouslySetInnerHTML","__html","trim","verticalAlign","TableComponent","toolBarRender","showRowIndex","col","disabled","context","webpage","TableInformation","contentHierarchy","hierarchy","heading","repeat","ContentComponent","lines","comps","line","lst","SequentialFuncInvoker","timer","calledAt","selection","OntPropSearchComponent","useSearchComponent","OntClassSearchComponent","EntitySearchComponent","storeName","seqInvoker","showSearch","onSearch","EntitySettingComponent","drawText","group","wordwrap","units","xoffset","yoffset","cfg","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","registerCircleNode","defaultWidth","getApproximateWidth","G6","registerNode","draw","labelOffset","labelCfg","wrapText","cacheFn","cache","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","layout","lineHeight","cssLineHeight","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","b","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","deltaX","deltaY","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","hotswapProps","isEqual","enableActivateRelations","destroy","fitCenter","setDataAndRender","onFinish","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","extraHeight","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","offsetHeight","initHeight","changeSize","moveTo","leftOffset","topOffset","untilLayoutStable","maxTries","delay","significantChange","prevBBox","nextBBox","wp","paddingWidth","hp","paddingHeight","setState","_cfg","model","states","labelStyles","registerRectNode","modes","resetSelected","Graph","scrollWidth","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","default","edit","nodeStateStyles","active","opacity","inactive","edgeStateStyles","onNodeClick","on","event","onEdgeClick","newNodes","u","labelStyle","uniq","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","ref","renderingAdjustedHeight","layouts","useRef","useImperativeHandle","recenter","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","centerGraph","changeLayout","FullscreenOutlined","overlay","LayoutOutlined","DownOutlined","class_node","green","literal_node","purple","data_node","gold","NodeSearchComponent","option","borderSpacing","EdgeForm","setSource","setTarget","setURI","setApproximation","dupEdge","labelCol","wrapperCol","labelWrap","validateStatus","help","val","cls","destroyAll","ClassNodeSubForm","onDone","LiteralNodeSubForm","setId","setIsInContext","duplicatedId","ent","NodeForm","setNodeType","Group","buttonStyle","openForm","graphContainer","yellow","selectedDraft","SemanticModelComponent","graphRef","currentIndex","setCurrentIndex","getDefaultDraftSemanticModel","getNodeLabel","centering","useHotkeys","smLists","isSelected","smListComponent","onConfirm","nSms","getNewSemanticModelName","borderColor","tableExport","TablePage","marginRight","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","sortedIndex","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","hasByTable","rtable","semComponent","queryRow","row","btns","extraSubTitle","TableNavBar","onBack","upload","projects","home","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"0OAAIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAMzDO,EAAb,WACI,aAAc,oBACVC,KAAKC,OAAS,UACdD,KAAKE,gBAAkB,IAAIC,IAC3BC,YAAeJ,KAAM,CACjBC,OAAQI,IACRf,MAAOgB,MANnB,uCASI,WACI,OAAON,KAAKC,QAVpB,IAYI,SAAUM,GACFP,KAAKE,gBAAgBM,IAAID,KAG7BP,KAAKC,OAASM,OAhBtB,KAmBaE,EAAb,WAQI,WAAYC,EAAWC,EAAYC,EAASC,GAAS,+BACjDb,KAAKc,MAAQ,IAAIf,EAEjBC,KAAKe,QAAU,IAAIC,IACnBhB,KAAKiB,iBAAmB,SAACC,GACrBC,IAAQD,MAAM,uEAAwE,IACtFE,QAAQF,MAAMA,IAGlBlB,KAAKY,SAAU,EACfZ,KAAKa,QAAU,GAIfb,KAAKqB,MAAQC,YAAI,UAAC,WAAWC,GAAX,6EAGK,OAHL,SAEVvB,KAAKc,MAAMxB,MAAQ,WAFT,SAGWU,KAAKuB,MAAMA,GAHtB,OAGJ5B,EAHI,qBAIWA,EAAOoB,SAJlB,IAIV,2BAAWS,EAA0B,QACjCxB,KAAKe,QAAQU,IAAID,EAAOE,GAAIF,GAC5BxB,KAAK2B,MAAMH,GANL,0BAAAI,IAAA,OAQV5B,KAAKc,MAAMxB,MAAQ,UART,kBASHK,GATG,wCAYVK,KAAKc,MAAMxB,MAAQ,QAZT,+DAmBlBU,KAAK6B,YAAc,SAACC,GAAD,OAAUjD,EAAU,OAAM,OAAQ,EAAf,UAAuB,oFAG9C,OAH8C,kBAGxCkD,IAAMC,IAAN,UAAahC,KAAKU,WAAa,CACxCuB,OAAQ,CACJC,EAAGJ,KAL0C,OAGrDK,EAHqD,6DAUrDnC,KAAKiB,iBAAL,MAVqD,sCAalD,CAAEF,QAASoB,EAAKC,KAAKC,IAAIrC,KAAKsC,aAAcC,MAAOJ,EAAKC,KAAKG,QAbX,0DAkB7DvC,KAAKsC,YAAc,SAACd,GAChB,GAAI,EAAKgB,aAAaC,OAAS,EAAG,qBACF,EAAKD,cADH,IAC9B,2BAA+C,8BAAnCV,EAAmC,KAC3CN,EAD2C,MAC3BA,EAAOM,UAChBN,EAAOM,IAHY,+BAMlC,OAAON,GAEXxB,KAAKU,UAAYA,EACjBV,KAAKW,WAAaA,GAAc,GAChCX,KAAKwC,aAAeE,OAAOC,QAAQ3C,KAAKW,YAAY0B,KAAI,mCAAEO,EAAF,WAAkB,CAAlB,KAA0BA,MAClF5C,KAAK6C,WAAaH,OAAOI,YAAY9C,KAAKwC,mBAC1BO,IAAZnC,IACAZ,KAAKY,QAAUA,GAEnBZ,KAAKa,QAAUA,GAAW,GAC1Bb,KAAKgD,MAAQ,IAAIC,EAAmBjD,KAAM,IAC1CI,YAAeJ,KAAM,CACjBc,MAAOT,IACPU,QAASV,IACTgB,MAAO6B,IACPC,SAAUD,IACVE,UAAWF,IACXzB,IAAKyB,IACLG,KAAM/C,MApFlB,8CA0FI,WACI,OAAOzB,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,8EAC3B,OAD2B,SACrBA,KAAKuB,MAAM,CAAE+B,MAAO,IADC,uCACKf,OADL,kDA3F/C,sBAgGI,SAAShB,GACL,OAAO1C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,6FAIhB,OAJgB,SAE/BA,KAAKc,MAAMxB,MAAQ,WACnBiC,EAAM+B,MAAQ,EAHiB,SAIVtD,KAAKuB,MAAMA,GAJD,UAKD,KADxB5B,EAJyB,QAKpBoB,QAAQ0B,OALY,uBAO3Bc,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,aARI,uBAUpByD,GAVoB,cAY3BvB,EAAS7B,EAAOoB,QAAQ,GAZG,kBAaxBwC,aAAY,WAIf,OAHA,EAAKxC,QAAQU,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACX,EAAKV,MAAMxB,MAAQ,UACZkC,MAjBoB,sCAqB3B,KAAMgC,UAAsC,MAA1B,KAAMA,SAASC,OArBN,wBAuB3BF,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,aAxBI,uBA0BpByD,GA1BoB,cA4B/BQ,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MA/B+B,iEAjG/C,uBA4II,SAAUS,GACN,OAAO7C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,gGAC9BA,KAAKY,UAAWZ,KAAKQ,IAAIkB,GADK,mBAGhB,QADTF,EAASxB,KAAKe,QAAQiB,IAAIN,IAFD,yCAIpBxC,QAAQC,aAAQ4D,IAJI,gCAKxB7D,QAAQC,QAAQqC,IALQ,OASpB,OAToB,SAQ/BxB,KAAKc,MAAMxB,MAAQ,WARY,SASdyC,IAAMC,IAAN,UAAahC,KAAKU,UAAlB,YAA+BgB,IATjB,cAS3BS,EAT2B,yBAUxBoB,aAAY,WACf,IAAI/B,EAAS,EAAKc,YAAYH,EAAKC,MAInC,OAHA,EAAKrB,QAAQU,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACX,EAAKV,MAAMxB,MAAQ,UACZkC,MAfoB,sCAmB3B,KAAMgC,UAAsC,MAA1B,KAAMA,SAASC,OAnBN,wBAqB3BF,aAAY,WACR,EAAKxC,QAAQU,IAAIC,EAAI,MACrB,EAAKZ,MAAMxB,MAAQ,aAvBI,uBAyBpByD,GAzBoB,cA2B/BQ,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MA9B+B,iEA7I/C,wBAuLI,SAAWyC,GACP,OAAO7E,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,0GAC/B2D,EAAaD,EACZ1D,KAAKY,QAFyB,mBAI/B+C,EAAaA,EAAWC,QAAO,SAAClC,GAAD,OAAS,EAAKlB,IAAIkB,MACvB,IAAtBiC,EAAWlB,OALgB,gBAMrBoB,EAAS,GANY,cAOVH,GAPU,IAO3B,2BAAWhC,EAAW,QAEH,QADTF,EAASxB,KAAKe,QAAQiB,IAAIN,UACEqB,IAAXvB,IACnBqC,EAAOnC,GAAMF,GAVM,0BAAAI,IAAA,yBAapB1C,QAAQC,QAAQ0E,IAbI,OAkBpB,OAlBoB,SAiB/B7D,KAAKc,MAAMxB,MAAQ,WAjBY,UAkBdyC,IAAM+B,KAAN,UAAc9D,KAAKU,UAAnB,gBAA4C,CACzDgD,IAAKC,IAnBsB,eAkB3BxB,EAlB2B,yBAqBxBoB,aAAY,WACf,cAAmBb,OAAOqB,OAAO5B,EAAKC,KAAK4B,OAA3C,eAAmD,CAA9C,IAAMC,EAAI,KACLzC,EAAS,EAAKc,YAAY2B,GAChC,EAAKlD,QAAQU,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GAEf,IANqB,EAMfqC,EAAS,GANM,cAOJH,GAPI,IAOrB,2BAAsB,KAAXhC,EAAW,QACZF,EAAS,EAAKT,QAAQiB,IAAIN,QACjBqB,IAAXvB,EACA,EAAKT,QAAQU,IAAIC,EAAI,MAEL,OAAXF,IACLqC,EAAOnC,GAAMF,IAbA,8BAiBrB,OADA,EAAKV,MAAMxB,MAAQ,UACZuE,MAtCoB,wCA0C/BN,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MA7C+B,iEAxL/C,mBA2OI,SAAMM,GACF,OAAO1C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,yGAWnC,GAVIiC,EAAS,CACTqB,MAAO/B,EAAM+B,MACbY,OAAQ3C,EAAM2C,OACdC,OAAQ5C,EAAM4C,aAEGpB,IAAjBxB,EAAM6C,SACNnC,EAAOmC,OAAS7C,EAAM6C,OACjB/B,KAAI,SAACgC,GAAD,OAAW,EAAK1D,WAAW0D,IAAUA,KACzCC,KAAK,WAEWvB,IAArBxB,EAAMgD,WACN,UAA+B7B,OAAOC,QAAQpB,EAAMgD,YAApD,eAAiE,sBAAvDF,EAAuD,KAAhDG,EAAgD,KAC7DH,EAAQrE,KAAKW,WAAW0D,IAAUA,EACT,kBAAdG,EACc,QAAjBA,EAAUC,GACVxC,EAAO,GAAD,OAAIoC,EAAJ,YAAaG,EAAUC,GAAvB,MAAgCD,EAAUlF,MAAMgF,KAAK,KAG3DrC,EAAO,GAAD,OAAIoC,EAAJ,YAAaG,EAAUC,GAAvB,MAAgCC,MAAMC,QAAQH,EAAUlF,OACxDkF,EAAUlF,MAAMgF,KAAK,KACrBE,EAAUlF,MAIpB2C,EAAO,GAAD,OAAIoC,IAAWG,EA0BtB,OAtBPE,MAAMC,QAAQpD,EAAMqD,UACpB3C,EAAO4C,UAAYtD,EAAMqD,SACpBvC,KAAI,SAAC4B,GACN,IAAMI,EAAQ,EAAK1D,WAAWsD,EAAKI,QAAUJ,EAAKI,MAClD,MAAsB,QAAfJ,EAAKa,MAAkBT,EAAvB,WAAmCA,MAEzCC,KAAK,KAEqB,kBAAnB/C,EAAMqD,UACZP,EAAQrE,KAAKW,WAAWY,EAAMqD,SAASP,QAAU9C,EAAMqD,SAASP,MACtEpC,EAAO4C,UAAqC,QAAzBtD,EAAMqD,SAASE,MAAkBT,EAAjC,WAA6CA,IAGhEpC,EAAO4C,UAAY7E,KAAKW,WAAWY,EAAMqD,WAAarD,EAAMqD,cAE1C7B,IAAlBxB,EAAMwD,UACN9C,EAAO+C,SAAWzD,EAAMwD,QACnB1C,KAAI,SAACgC,GAAD,OAAW,EAAK1D,WAAW0D,IAAUA,KACzCC,KAAK,MA/CqB,kBAmDlBvC,IAAMC,IAAN,UAAahC,KAAKU,WAAa,CAAEuB,WAnDf,OAmD/BE,EAnD+B,+DAsD/BnC,KAAKiB,iBAAL,MAtD+B,sCAyD5B,CACHF,QAASoB,EAAKC,KAAK4B,MAAM3B,IAAIrC,KAAKsC,aAClCC,MAAOJ,EAAKC,KAAKG,QA3Dc,4DA5O/C,iBA8SI,SAAIb,GACA,OAAO1B,KAAKe,QAAQP,IAAIkB,KA/ShC,iBAoTI,SAAIA,GACA,OAAO1B,KAAKe,QAAQiB,IAAIN,KArThC,iBA4TI,SAAIuD,GACAjF,KAAKe,QAAQU,IAAIwD,EAAEvD,GAAIuD,KA7T/B,4BAkUI,sGACoBjF,KAAKe,QAAQgD,UADjC,4DAEkB,QADHkB,EADf,yBAGY,OAHZ,SAGkBA,EAHlB,sMAlUJ,gBA4UI,WACI,OAAOP,MAAMQ,KAAKlF,KAAKmF,UA7U/B,oBAkVI,SAAOC,GACH,IADO,EACHvB,EAAS,GADN,cAES7D,KAAKe,QAAQgD,UAFtB,IAEP,2BAAuC,KAA5BsB,EAA4B,QACzB,OAANA,GAAcD,EAAGC,IACjBxB,EAAOyB,KAAKD,IAJb,8BAOP,OAAOxB,IAzVf,qBA8VI,SAAQ0B,EAAexE,GACnB,IAD4B,EACxB8C,EAAS,GADe,cAEZ9C,GAFY,yBAEjBsE,EAFiB,QAGlBzC,EAAM2C,EAAclD,KAAI,SAACgC,GAAD,OAAWgB,EAAEhB,MAAQC,KAAK,UACpCvB,IAAhBc,EAAOjB,GACPiB,EAAOjB,GAAO,CAACyC,GAGfxB,EAAOjB,GAAK0C,KAAKD,IANzB,2BAAyB,IAFG,8BAW5B,OAAO3C,OAAOqB,OAAOF,KAzW7B,mBA8WI,SAAMrC,GAAQ,oBACUxB,KAAKa,SADf,IACV,2BAAkC,KAAvBc,EAAuB,QAC9BA,EAAM6D,IAAIhE,IAFJ,iCA9WlB,8BAoXI,SAAiBiE,GACb,OAAOC,KAAKC,KAAKC,UAAUH,MArXnC,8BAwXI,SAAiBI,GACb,OAAOF,KAAKG,MAAMC,KAAKF,QAzX/B,KA4XM5C,E,WACF,WAAY+C,EAAOC,GAAQ,oBACvBjG,KAAKgG,MAAQA,EACbhG,KAAKiG,OAASA,EACdjG,KAAKkG,SAAW,IAAI/F,IACpBH,KAAKmG,kBAAoB,IAAInF,I,6CAEjC,SAAUU,GAAI,WAKV,OAJA1B,KAAKkG,SAASV,IAAI9D,QACIqB,IAAlB/C,KAAKoG,UACLC,aAAarG,KAAKoG,UAEf,IAAIlH,SAAQ,SAACC,EAASC,GACzB,EAAKgH,SAAWE,YAAW,WACvB,IAAMC,EAAU,EAAKC,OACrBD,EAAQE,MAAMrH,GACdmH,EAAQ1G,MAAK,WAET,IAAMoF,EAAI,EAAKkB,kBAAkBnE,IAAIN,GACrC,QAAUqB,IAANkC,EAEAA,EAAEpF,MAAK,WACH,IAAMwF,EAAI,EAAKW,MAAMjF,QAAQiB,IAAIN,GACjCvC,EAAc,OAANkG,OAAatC,EAAYsC,UAGpC,CACD,IAAMA,EAAI,EAAKW,MAAMjF,QAAQiB,IAAIN,GACjCvC,EAAc,OAANkG,OAAatC,EAAYsC,SAG1C,EAAKY,a,wBAGhB,SAAWvC,GAAK,2BACKA,GADL,IACZ,gCAAWhC,EAAX,QACI1B,KAAKkG,SAASV,IAAI9D,IAFV,8BAMZ,YAHsBqB,IAAlB/C,KAAKoG,UACLC,aAAarG,KAAKoG,UAEf,IAAIlH,SAAQ,SAACC,EAASC,GACzB,EAAKgH,SAAWE,YAAW,WACvB,IAAMC,EAAU,EAAKC,OACrBD,EAAQE,MAAMrH,GACdmH,EAAQ1G,MAAK,WACT,IADe,EACTgE,EAAS,GACT6C,EAAkB,GAFT,cAGEhD,GAHF,IAGf,2BAAsB,KAAXhC,EAAW,QACZuD,EAAI,EAAKkB,kBAAkBnE,IAAIN,GACrC,QAAUqB,IAANkC,EAEAyB,EAAgBpB,KAAK,CAACL,EAAGvD,QAExB,CACD,IAAMF,EAAS,EAAKwE,MAAMjF,QAAQiB,IAAIN,GACvB,OAAXF,QAA8BuB,IAAXvB,IACnBqC,EAAOnC,GAAMF,KAZV,8BAgBXkF,EAAgBjE,OAAS,EAEzBvD,QAAQyH,IAAID,EAAgBrE,KAAI,SAACuE,GAAD,OAAOA,EAAE,OAAK/G,MAAK,WAAM,oBAC/B6G,GAD+B,IACrD,2BAAuC,8BAAxBhF,GAAwB,WAC7BF,EAAS,EAAKwE,MAAMjF,QAAQiB,IAAIN,GACvB,OAAXF,QAA8BuB,IAAXvB,IACnBqC,EAAOnC,GAAMF,IAJgC,8BAOrDrC,EAAQ0E,MAIZ1E,EAAQ0E,QAGjB,EAAKoC,a,kBAGhB,WAAO,WAEHjG,KAAKoG,cAAWrD,EAEhB,IAAM8D,EAAOnC,MAAMQ,KAAKlF,KAAKkG,UAAUtC,QAAO,SAAClC,GAAD,OAAS,EAAKyE,kBAAkB3F,IAAIkB,MAElF1B,KAAKkG,SAAW,IAAI/F,IACpB,IAPG,EAOGoG,EAAUvG,KAAKgG,MAAMc,WAAWD,GAPnC,cASeA,GATf,IASH,gCAAWE,EAAX,QACI/G,KAAKmG,kBAAkB1E,IAAIsF,EAAKR,IAVjC,8BAWH,OAAOA,EAAQ1G,MAAK,SAACF,GAAW,oBAEVkH,GAFU,IAE5B,gCAAWE,EAAX,QACI,EAAKZ,kBAAkBa,OAAOD,IAHN,8BAI5B,OAAOpH,S,+CCzffd,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YASzDyH,EAAb,kDAQI,WAAYvG,EAAWC,EAAYC,EAASC,GAAS,kCACjD,cAAMH,EAAWC,EAAYC,EAASC,IACjCqG,aAAe,IAAIlG,IACxB,EAAKmG,aAAe,IAAInG,IACxB,EAAKoG,iBAAmB,CAAEC,SAAKtE,EAAWuE,OAAQ,IAClD,EAAKC,kBAAoB,GACzBnH,YAAe,eAAM,CACjB8G,aAAc7G,IACd8G,aAAc9G,IACdmH,OAAQtE,IACRuE,OAAQvE,IACR8D,OAAQ9D,IACRwE,SAAUxE,IACVyE,eAAgBzE,IAChB0E,kBAAmB1E,IACnB2E,eAAgB3E,IAChB4E,kBAAmB5E,MAhB0B,EARzD,uDAiCI,SAAoB6E,GAChB/H,KAAKuH,kBAAkBjC,KAAKyC,KAlCpC,oBAuCI,SAAOC,GAA4B,IAArBC,IAAqB,yDAC/B,OAAOpJ,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,2FAGpB,OAHoB,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGdyC,IAAM+B,KAAK9D,KAAKoH,iBAAiBC,KAAOrH,KAAKU,UAAWV,KAAKkI,qBAAqBF,GAAQhI,KAAKoH,iBAAiBE,QAHlG,cAG3BnF,EAH2B,yBAIxBoB,aAAY,WACf,IAAI/B,EAAS,EAAKc,YAAYH,EAAKC,MAOnC,OANA,EAAKrB,QAAQU,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACPyG,GACA,EAAKf,aAAaF,OAAOgB,EAAMG,SAEnC,EAAKrH,MAAMxB,MAAQ,UACZkC,MAZoB,sCAgB/B+B,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MAnB+B,gEAxC/C,oBAmEI,SAAO+G,GAA4B,IAArBC,IAAqB,yDAC/B,OAAOpJ,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,2FAGpB,OAHoB,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGdyC,IAAMqG,IAAN,UAAapI,KAAKU,UAAlB,YAA+BsH,EAAMtG,IAAM1B,KAAKqI,qBAAqBL,IAHvD,cAG3B7F,EAH2B,yBAIxBoB,aAAY,WACf,IAAI/B,EAASwG,EAAMM,WAAa,EAAKhG,YAAYH,EAAKC,MACtD4F,EAAMO,YAEN,IAAMC,EAAa,EAAKzH,QAAQiB,IAAIgG,EAAMtG,IAU1C,YATmBqB,IAAfyF,GAA2C,OAAfA,GAC5B,EAAKC,QAAQD,GAEjB,EAAKzH,QAAQU,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACPyG,GAAgB,EAAKd,aAAa3G,IAAIwH,EAAMtG,KAC5C,EAAKyF,aAAaH,OAAOgB,EAAMtG,IAEnC,EAAKZ,MAAMxB,MAAQ,UACZkC,MAlBoB,sCAsB/B+B,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MAzB+B,gEApE/C,oBAqGI,SAAOS,GACH,OAAO7C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,uGAEpB+C,KADTvB,EAASxB,KAAKe,QAAQiB,IAAIN,IADG,6DAK/B1B,KAAKc,MAAMxB,MAAQ,WACnBU,KAAKe,QAAQiG,OAAOtF,GACL,OAAXF,EAP2B,iBAQ3BxB,KAAKyI,QAAQjH,GARc,cASNxB,KAAKuH,mBATC,IAS3B,4BAASQ,EAAoC,SAChCvG,GAVc,0BAAAI,IAc3B,OAd2B,UAcrBG,IAAMiF,OAAN,UAAgBhH,KAAKU,UAArB,YAAkCgB,IAdb,QAgB/B6B,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,aAjBQ,wDAqB/BiE,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MAxB+B,iEAtG/C,sBAsII,WACI,OAAOpC,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,yFAG/B,OAH+B,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGzByC,IAAMiF,OAAN,UAAgBhH,KAAKU,YAHI,OAI/B6C,aAAY,WAAM,oBACO,EAAKxC,QAAQgD,UADpB,IACd,2BAA4C,KAAjCvC,EAAiC,QACxC,GAAe,OAAXA,EAAiB,CACjB,EAAKiH,QAAQjH,GADI,oBAEI,EAAK+F,mBAFT,IAEjB,2BAA6C,EACzCQ,EADyC,SAChCvG,IAHI,iCAFX,8BASd,EAAKT,QAAQ2H,QACb,EAAK5H,MAAMxB,MAAQ,aAdQ,sDAkB/BiE,aAAY,WACR,EAAKzC,MAAMxB,MAAQ,WAEvBU,KAAKiB,iBAAL,MArB+B,gEAvI/C,4BAoKI,SAAekH,GACX,OAAOnI,KAAKkH,aAAalF,IAAImG,KArKrC,4BAuKI,SAAeH,GACXhI,KAAKkH,aAAazF,IAAIuG,EAAMG,QAASH,KAxK7C,+BA0KI,SAAkBG,GACdnI,KAAKkH,aAAaF,OAAOmB,KA3KjC,4BA6KI,SAAezG,GACX,OAAO1B,KAAKmH,aAAanF,IAAIN,KA9KrC,4BAgLI,SAAesG,GACXhI,KAAKmH,aAAa1F,IAAIuG,EAAMtG,GAAIsG,KAjLxC,+BAmLI,SAAkBtG,GACd1B,KAAKmH,aAAaH,OAAOtF,KApLjC,qBAyLI,SAAQF,GAAQ,oBACQxB,KAAKa,SADb,IACZ,2BAAkC,SACxB8H,OAAOnH,IAFL,mCAzLpB,GAA+Bf,GCdlBmI,G,MAAb,WACI,WAAYvE,EAAOwE,GAAS,oBACxB7I,KAAK2B,MAAQ,IAAIX,IACjBhB,KAAK8I,QAAUzE,EACfrE,KAAK6I,QAAUA,GAAW,KAC1BzI,YAAeJ,KAAM,CACjB2B,MAAOtB,IACPmF,IAAKtC,IACLyF,OAAQzF,MARpB,uCAWI,SAAI1B,GACA,IAAMoB,EAAMpB,EAAOxB,KAAK8I,SACxB9I,KAAK2B,MAAMF,IAAImB,EAAKpB,EAAOxB,KAAK6I,YAbxC,oBAeI,SAAOrH,GACH,IAAMoB,EAAMpB,EAAOxB,KAAK8I,SACxB9I,KAAK2B,MAAMqF,OAAOpE,OAjB1B,MAuBamG,EAAb,WACI,WAAY1E,EAAOwE,GAAS,oBACxB7I,KAAK2B,MAAQ,IAAIX,IACjBhB,KAAK8I,QAAUzE,EACfrE,KAAK6I,QAAUA,GAAW,KAC1BzI,YAAeJ,KAAM,CACjB2B,MAAOtB,IACPmF,IAAKtC,IACLyF,OAAQzF,MARpB,uCAWI,SAAI1B,GACA,IAAMoB,EAAMpB,EAAOxB,KAAK8I,SACnB9I,KAAK2B,MAAMnB,IAAIoC,IAChB5C,KAAK2B,MAAMF,IAAImB,EAAK,IAAIzC,KAE5BH,KAAK2B,MAAMK,IAAIY,GAAK4C,IAAIhE,EAAOxB,KAAK6I,YAhB5C,oBAkBI,SAAOrH,GACH,IAAIwH,EACEpG,EAAMpB,EAAOxB,KAAK8I,SACO,QAA9BE,EAAKhJ,KAAK2B,MAAMK,IAAIY,UAAyB,IAAPoG,GAAyBA,EAAGhC,OAAOxF,EAAOxB,KAAK6I,cArB9F,KAoEaI,EAAb,WACI,WAAYC,EAAUC,EAAUN,GAAS,oBACrC7I,KAAK2B,MAAQ,IAAIX,IACjBhB,KAAKkJ,SAAWA,EAChBlJ,KAAKmJ,SAAWA,EAChBnJ,KAAK6I,QAAUA,GAAW,KAC1BzI,YAAeJ,KAAM,CACjB2B,MAAOtB,IACPmF,IAAKtC,IACLyF,OAAQzF,MATpB,uCAeI,SAAI1B,GACA,IAAM4H,EAAO5H,EAAOxB,KAAKkJ,UACnBG,EAAO7H,EAAOxB,KAAKmJ,UACpBnJ,KAAK2B,MAAMnB,IAAI4I,IAChBpJ,KAAK2B,MAAMF,IAAI2H,EAAM,IAAIpI,KAEnBhB,KAAK2B,MAAMK,IAAIoH,GACrB3H,IAAI4H,EAAM7H,EAAOxB,KAAK6I,YAtBlC,oBAwBI,SAAOrH,GACH,IAAM4H,EAAO5H,EAAOxB,KAAKkJ,UACnBG,EAAO7H,EAAOxB,KAAKmJ,UACrBnJ,KAAK2B,MAAMnB,IAAI4I,IACfpJ,KAAK2B,MAAMK,IAAIoH,GAAMpC,OAAOqC,OA5BxC,K,yBCvEeC,cAlBA,CACXC,KAAM,CACFC,WAAY,GACZC,cAAe,EACfC,UAAW,UAEfC,SAAU,CACNC,OAAQ,iBACRC,aAAc,IAUPP,EAPU,SAAC,GAAqD,IAAnDQ,EAAmD,EAAnDA,QAAmD,IAA1CC,YAA0C,MAAnC,UAAmC,MAAxBJ,gBAAwB,SACvEK,EAAYF,EAAQP,KAIxB,OAHII,IACAK,GAAa,IAAJ,OAAQF,EAAQH,WAErBM,cAAK,MAAOvH,OAAOwH,OAAO,CAAEF,UAAWA,GAAa,CAAEG,SAAUF,cAAKG,IAAM,CAAEC,IAAK,aAAcN,KAAMA,QAAQ,UAAY,M,kCClBzHO,EAA8C,WAAnCC,mIAAYC,mBAAkC,SAAW,M,GAExB,WAAnCD,mIAAYC,oBAC5BD,mIAAYE,qB,iCCClB,SAASC,EAAoBvJ,EAASiF,GAClCuE,IAAMC,QAAQ,CACVC,MAAO1J,EACP2J,OAAQ,QACRC,OAAQ,UACRC,cAAe,CAAEC,QAAQ,GACzBC,WAAY,OACZC,KANU,WAON/E,GAAS,IAEbgF,SATU,WAWNhF,GAAS,MAId,IAAMiF,EAAuB,WAAbf,EACjBgB,YAAoB,CAClBZ,wBAEFa,YAAqB,CACnBb,wBAEKc,EAAb,WACI,cAAsG,QAAxFC,iBAAwF,MAA5E,GAA4E,MAAxEC,mBAAwE,MAA1D,GAA0D,EAAtDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,QAA2C,IAAlCC,aAAkC,aAAnBC,cAAmB,6BAClG9L,KAAKyL,UAAYA,EACjBzL,KAAK0L,YAAcA,EACnB1L,KAAK4L,QAAUA,EACf5L,KAAK6L,MAAQA,EACb7L,KAAK8L,OAASA,EACd9L,KAAK+L,SAAW,CAAEC,KAAMJ,EAASC,QAAOC,SAAQH,aAChD3L,KAAK2L,UAAYA,EARzB,0CAiBI,SAAOM,EAASC,GACZ,IAAIF,EAAOhM,KAAK4L,QAChB,GAAgB,OAAZK,EACA,IAAK,IAAI1L,KAAK0L,EACVD,EAAOA,EAAKG,QAAL,WAAiB5L,GAAK0L,EAAQ1L,IAG7C,IAAMgB,EAAQ,IAAI6K,gBAAgBF,GAAWG,WAI7C,OAHI9K,EAAMkB,OAAS,IACfuJ,EAAO,GAAH,OAAMA,EAAN,YAAczK,IAEfyK,IA5Bf,sBAiCI,SAASC,EAASC,GACd,IAAIF,EAAOhM,KAAK4L,QAChB,IAAK,IAAIrL,KAAK0L,EACVD,EAAOA,EAAKG,QAAL,WAAiB5L,GAAK0L,EAAQ1L,IAEzC,IAAIgB,EAAQ,IAAI6K,gBAAgBF,GAAWG,WAE3C,MAAO,CACHC,SAAUN,EACVO,OAHJhL,EAAQA,EAAMkB,OAAS,EAAf,WAAuBlB,GAAUA,EAIrCiL,KAAM,GACN1L,WAAOiC,KA5CnB,kBAkDI,SAAKkJ,EAASC,GACV,OAAO,IAAIO,EAAKzM,KAAMiM,EAASC,KAnDvC,0BAsDI,WAAe,WAELQ,EAAWC,cAEjB,OAAOC,mBAAQ,kBAAM,EAAKC,WAAWH,KAAW,CAACA,EAASJ,aA1DlE,4BA6DI,WAAiB,WAEPI,EAAWC,cAEjB,OAAOC,mBAAQ,kBAAM,EAAKE,aAAaJ,KAAW,CAACA,EAASH,WAjEpE,uBAoEI,WACI,MAAO,CAAEQ,IAAK/M,KAAKgN,eAAgBzL,MAAOvB,KAAKiN,oBArEvD,wBA2EI,SAAWP,GACP,IAAMzH,EAAIiI,YAAUR,EAASJ,SAAUtM,KAAK+L,UAC5C,OAAU,OAAN9G,EACO,KAEJjF,KAAK8F,MAAMb,EAAEhD,OAAQjC,KAAKyL,aAhFzC,0BAsFI,SAAaiB,GACT,IAAMzK,EAAS,IAAImK,gBAAgBM,EAASH,QACtChL,EAAQvB,KAAK8F,MAAMpD,OAAOI,YAAYb,EAAOU,WAAY3C,KAAK0L,aACpE,OAAc,OAAVnK,GAAkBmB,OAAOqB,OAAOxC,GAAO4L,OAAM,SAACvG,GAAD,YAAa7D,IAAN6D,KAC7C,KAEJrF,IA5Ff,mBAqGI,SAAM6L,EAAQC,GAEV,IADA,IAAMxJ,EAAS,GACf,MAA+BnB,OAAOC,QAAQ0K,GAA9C,eAAuD,CAAlD,0BAAOC,EAAP,KAAaC,EAAb,KACKjO,EAAQ8N,EAAOE,GACrB,OAAQC,GACJ,IAAK,SACD,QAAcxK,IAAVzD,EACA,OAAO,KAGX,GADAuE,EAAOyJ,GAAQE,WAAWlO,IACrBmO,OAAOC,SAAS7J,EAAOyJ,IACxB,OAAO,KAEX,MACJ,IAAK,UACD,QAAcvK,IAAVzD,GAAiC,SAAVA,GAA8B,UAAVA,EAC3C,OAAO,KAEXuE,EAAOyJ,GAAkB,SAAVhO,EACf,MACJ,IAAK,SACD,QAAcyD,IAAVzD,EACA,OAAO,KAEXuE,EAAOyJ,GAAQhO,EACf,MACJ,IAAK,iBACD,QAAcyD,IAAVzD,EACA,SAGJ,GADAuE,EAAOyJ,GAAQE,WAAWlO,IACrBmO,OAAOC,SAAS7J,EAAOyJ,IACxB,OAAO,KAEX,MACJ,IAAK,kBACD,QAAcvK,IAAVzD,EACA,SAEJ,GAAc,SAAVA,GAA8B,UAAVA,EACpB,OAAO,KAEXuE,EAAOyJ,GAAkB,SAAVhO,EACf,MACJ,IAAK,iBACD,QAAcyD,IAAVzD,EACA,SAEJuE,EAAOyJ,GAAQhO,GAI3B,OAAOuE,MAzJf,KA+Ja8J,EAAb,4JACI,WACI,qEAAoB,GAAI,MAFhC,sBAII,WACI,uEAAsB,GAAI,MALlC,kBAOI,WACI,mEAAkB,GAAI,QAR9B,GAAmCnC,GActBoC,EAAb,4JACI,SAAO3B,GACH,qEAAoBA,EAAS,MAFrC,sBAII,SAASA,GACL,uEAAsBA,EAAS,MALvC,kBAOI,SAAKA,GACD,mEAAkBA,EAAS,QARnC,GAAwCT,GAiClCiB,E,WACF,WAAYb,EAASK,EAASC,GAAW,+BAIrClM,KAAK6N,4BAA8B,SAACpO,EAAGqO,QACzB/K,IAANtD,GACAA,EAAEsO,iBAEFD,QAAwB/K,IAANtD,IAAoBA,EAAEuO,SAAWvO,EAAEwO,UAErDhI,OAAOiI,KAAK,EAAKtC,QAAQuC,OAAO,EAAKlC,QAAS,EAAKC,WAAY,UAE/DjG,OAAOmI,SAGP/C,EAAQ/F,KAAK,EAAKsG,QAAQc,SAAS,EAAKT,QAAS,EAAKC,aAG9DlM,KAAK4L,QAAUA,EACf5L,KAAKiM,QAAUA,EACfjM,KAAKkM,UAAYA,E,wCAKrB,WACIb,EAAQ/F,KAAKtF,KAAK4L,QAAQc,SAAS1M,KAAKiM,QAASjM,KAAKkM,gB,KAMjDmC,EAAY,CACrBC,0BAA2B,0CAC3BjD,QAASA,EACTkD,sBAAuB,SAAC9O,GACpBA,EAAEsO,iBACF,IAAIS,EAAO/O,EAAEgP,OAAOC,aAAa,QAC7BjP,EAAEuO,SAAWvO,EAAEwO,SAEfhI,OAAOiI,KAAKM,EAAM,UAClBvI,OAAOmI,SAGP/C,EAAQ/F,KAAKkJ,IAGrBG,OAAQ,kBAAMtD,EAAQsD,UACtBC,UAAW,kBAAMvD,EAAQuD,aACzBC,iBAAkB,SAACL,GACfnD,EAAQ/F,KAAKkJ,KAGrBvI,OAAO6I,WAAaT,EChSpB,IAAIU,EAAkC,SAAUC,EAAGvP,GAC/C,IAAIwP,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAOtM,OAAOyM,UAAUC,eAAeC,KAAKL,EAAGE,IAAMzP,EAAE6P,QAAQJ,GAAK,IAC9ED,EAAEC,GAAKF,EAAEE,IACb,GAAS,MAALF,GAAqD,oBAAjCtM,OAAO6M,sBACtB,KAAIC,EAAI,EAAb,IAAgBN,EAAIxM,OAAO6M,sBAAsBP,GAAIQ,EAAIN,EAAEzM,OAAQ+M,IAC3D/P,EAAE6P,QAAQJ,EAAEM,IAAM,GAAK9M,OAAOyM,UAAUM,qBAAqBJ,KAAKL,EAAGE,EAAEM,MACvEP,EAAEC,EAAEM,IAAMR,EAAEE,EAAEM,KAE1B,OAAOP,GASES,EAAe,SAACC,GACzB,IAAQ3D,EAAuC2D,EAAvC3D,KAAMC,EAAiC0D,EAAjC1D,QAASC,EAAwByD,EAAxBzD,UAAW/B,EAAawF,EAAbxF,SAAoByF,EAAYb,EAAOY,EAAO,CAAC,OAAQ,UAAW,YAAa,aAIjH,OAAQ1F,cAAK,IAAKvH,OAAOwH,OAAO,CAAEsE,KAAMxC,EAAKmC,OAAOlC,EAASC,GAAY2D,QAHzD,SAACpQ,GACbuM,EAAKA,KAAKC,EAASC,GAAW2B,4BAA4BpO,KAE+BmQ,EAAW,CAAEzF,SAAUA,SAAa,IASxH2F,EAAe,SAAC9G,GACzB,IAAMwF,EAAuDxF,EAAvDwF,KAAN,EAA6DxF,EAAjD8E,qBAAZ,SAAmC3D,EAA0BnB,EAA1BmB,SAAU4F,EAAgB/G,EAAhB+G,YAAoBH,EAAYb,EAAO/F,EAAI,CAAC,OAAQ,gBAAiB,WAAY,gBAW9H,YAHoBjG,IAAhBgN,IACAH,EAAUC,QARE,SAACpQ,IACRA,EAAEuO,SAAWvO,EAAEwO,UAAY8B,IAE5BtQ,EAAEsO,iBACFgC,OAMA9F,cAAK,IAAKvH,OAAOwH,OAAO,CAAEsE,KAAMA,EAAMC,OAAQX,EAAgB,cAAW/K,EAAWiN,IAAK,uBAAyBJ,EAAW,CAAEzF,SAAUA,SAAa,ICtC3J,SAAS8F,EAAmBvD,EAAUwD,GACzC,cAA0BxN,OAAOC,QAAQuN,GAAzC,eAAkD,CAA7C,0BAAKpO,EAAL,KAAWqO,EAAX,KACD,GAAqD,OAAjDjD,YAAUR,EAASJ,SAAU6D,EAAMpE,UACnC,OAAOjK,GCLnB,IAAMsO,EAAgB,IAAIzC,EAAc,CACpChC,UAAW,kBAAM,MACjBC,QAAS,MACVI,OAAO6B,4BAIKwC,GAHM,WACjB,OAAQpG,cAAKqG,IAAQ,CAAE7M,OAAQ,MAAOoH,MAAO,MAAO0F,SAAU,8CAA+CC,MAAOC,eAAMC,IAAO,CAAEvG,SAAU,CAACF,cAAK0G,IAAQjO,OAAOwH,OAAO,CAAE2F,QAASxB,EAAUM,QAAU,CAAExE,SAAU,cAAW,GAASF,cAAK0G,IAAQjO,OAAOwH,OAAO,CAAE0G,KAAM,UAAWf,QAASO,GAAiB,CAAEjG,SAAU,cAAW,UAAY,SAAW,I,UCT9V4E,GAAkC,SAAUC,EAAGvP,GAC/C,IAAIwP,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAOtM,OAAOyM,UAAUC,eAAeC,KAAKL,EAAGE,IAAMzP,EAAE6P,QAAQJ,GAAK,IAC9ED,EAAEC,GAAKF,EAAEE,IACb,GAAS,MAALF,GAAqD,oBAAjCtM,OAAO6M,sBACtB,KAAIC,EAAI,EAAb,IAAgBN,EAAIxM,OAAO6M,sBAAsBP,GAAIQ,EAAIN,EAAEzM,OAAQ+M,IAC3D/P,EAAE6P,QAAQJ,EAAEM,IAAM,GAAK9M,OAAOyM,UAAUM,qBAAqBJ,KAAKL,EAAGE,EAAEM,MACvEP,EAAEC,EAAEM,IAAMR,EAAEE,EAAEM,KAE1B,OAAOP,GAQL4B,GAAM,CACRC,aAAc,CACVC,eAAgB,SAChBC,UAAW,qBAEfC,WAAY,CACR,iBAAkB,CACdC,aAAc,kBACdC,WAAY,mBAEhB,uBAAwB,CACpBD,aAAc,kBACdC,WAAY,mBAEhB,cAAe,CACXC,OAAQ,GACRvH,aAAc,EACdwH,WAAY,GAEhBC,YAAa,GACbC,aAAc,GACdP,UAAW,sBAgBNQ,IAbelI,YAAWuH,GAAXvH,EAAgB,YAAoE,IAAjEQ,EAAiE,EAAjEA,QAAS2H,EAAwD,EAAxDA,MAAOvB,EAAiD,EAAjDA,OAAQlG,EAAyC,EAAzCA,UAAW0H,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,gBAC/EjF,EAAWC,cAIX3I,EAAQtB,OAAOkP,KAAKH,GAAOpP,KAAI,SAACwP,EAAWlQ,GAE7C,OAAOmQ,GAAYD,GADmB,IAApBF,GAAsC,IAAVhQ,EAAc,OAAS,GAC5B8P,EAAMI,OAE7CE,EAAkB9B,EAAmBvD,EAAUwD,GACrD,OAAQjG,cAAK+H,KAAMtP,OAAOwH,OAAO,CAAE+H,KAAM,aAAcjI,UAAWF,EAAQgH,mBACnD/N,IAAdiH,EAA0B,IAAMA,EAAY,IAAK0H,MAAOA,EAAO7B,QATvD,SAACpQ,GACdyQ,EAAOzQ,EAAEmD,KAAKoJ,KAAK,GAAI,IAAIkC,QAQ4DgE,kBAAkCnP,IAApBgP,EAAgC,CAACA,QAAmBhP,GAAa,CAAEoH,SAAUnG,SAAU,MAE1KsF,YAAWuH,GAAXvH,EAAgB,YAAoE,IAAjEQ,EAAiE,EAAjEA,QAAS2H,EAAwD,EAAxDA,MAAOvB,EAAiD,EAAjDA,OAAQlG,EAAyC,EAAzCA,UAAW0H,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,gBAC7EjF,EAAWC,cAIX3I,EAAQtB,OAAOkP,KAAKH,GAAOpP,KAAI,SAACwP,EAAWlQ,GAE7C,OAAOmQ,GAAYD,GADmB,IAApBF,GAAsC,IAAVhQ,EAAc,OAAS,GAC5B8P,EAAMI,OAE7CE,EAAkB9B,EAAmBvD,EAAUwD,GACrD,OAAQjG,cAAK+H,KAAMtP,OAAOwH,OAAO,CAAE+H,KAAM,aAAcjI,UAAWF,EAAQmH,iBAA4BlO,IAAdiH,EAA0B,IAAMA,EAAY,IAAK0H,MAAOA,EAAO7B,QARtI,SAACpQ,GACdyQ,EAAOzQ,EAAEmD,KAAKoJ,KAAK,GAAI,IAAIkC,QAO2IgE,kBAAkCnP,IAApBgP,EAAgC,CAACA,QAAmBhP,GAAa,CAAEoH,SAAUnG,SAAU,OAEnR,SAAS8N,GAAYlP,EAAKoH,EAAW2F,GACjC,IAAIxF,EAAUgI,EACd,GAAqB,kBAAVxC,EACPxF,EAAWwF,OAEV,GAAIyC,IAAMC,eAAe1C,GAC1BxF,EAAWwF,MAEV,CACK,IAAA3G,EAAK2G,EACXxF,EAD4CnB,EAAxBmB,SAEpBgI,EAF6DpD,GAAO/F,EAAI,CAAC,aAI7E,OAAQiB,cAAK+H,KAAKM,KAAM5P,OAAOwH,OAAO,CAAEF,UAAWA,GAAamI,EAAW,CAAEhI,SAAUA,IAAavH,G,kCCzEzF,SAAS2P,GAAT,GAAsC,IAAvBC,EAAuB,EAAvBA,WAAYtC,EAAW,EAAXA,OAChCuC,EAAOxI,cAAKyI,IAAQhQ,OAAOwH,OAAO,CAAEmB,QAASA,GAAW,CAAElB,SAAUF,cAAK,MAAOvH,OAAOwH,OAAO,CAAEF,UAAW,YAAc,CAAEG,SAAUsG,eAAMkC,IAAQ,CAAExI,SAAU,CAACzH,OAAOC,QAAQuN,GAAQ7N,KAAI,mCAAEO,EAAF,KAAOuN,EAAP,YAAmBlG,cAAK2I,IAAOlQ,OAAOwH,OAAO,GAAIiG,EAAMpE,UAAWnJ,MAAQqH,cAAK2I,IAAO,CAAEjH,UAAW0E,SAAgB,UAAY,UAAY,UAAY,GACxV,OAAmB,IAAfmC,EACOvI,cAAK4I,KAAgBnQ,OAAOwH,OAAO,CAAE4I,OAAQC,MAAY,CAAE5I,SAAUsI,SAAQ,GAEjFA,ECTX,IAYeO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrT,MAAK,YAAkD,IAA/CsT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHDO,IAHXjJ,mIAAYC,mBAIuB,WAAnCD,mIAAYC,mBACPD,mIAAYE,qBACb,ICAOgJ,GAOX,WAAmB/R,EAAYI,EAAc4R,GAAsB,yBANnEhS,QAMkE,OAJlEI,UAIkE,OAFlE4R,iBAEkE,EAChE1T,KAAK0B,GAAKA,EACV1B,KAAK8B,KAAOA,EACZ9B,KAAK0T,YAAcA,EAEnBtT,YAAeJ,KAAM,CACnB0B,GAAIrB,IACJyB,KAAMzB,IACNqT,YAAarT,OAiCNsT,GAAb,kDAME,aAAe,IAAD,8BACZ,wBAASH,GAAT,qBAA+BzQ,GAAW,IAGrCT,YAAc,SAACd,GACpB,OAAO,IAAIiS,GAAQjS,EAAOE,GAAIF,EAAOM,KAAMN,EAAOkS,cALtC,EANhB,wDAcE,SAA4BlS,GAC1B,MAAO,CACLE,GAAIF,EAAOM,KACXA,KAAMN,EAAOM,KACb4R,YAAalS,EAAOkS,eAlB1B,kCAsBE,SAA4BlS,GAC1B,MAAO,CAAEM,KAAMN,EAAOM,KAAM4R,YAAalS,EAAOkS,iBAvBpD,GAAkCzM,GCtC3B,SAAS2M,GAAY3P,GAC1B,YAAsClB,IAA9BkB,EAAmB4P,OChBtB,IAAMC,GAAb,kDACE,aAAe,IAAD,8BACZ,wBAASN,GAAT,sBAAgCzQ,GAAW,EAAO,CAChD,IAAIkG,EAAoB,QAAS,YAqBrC8K,YAAc,SAACC,EAAiBC,EAAeC,GAC7C,IAAM7R,EAAM,EAAK8R,WAAWxS,MAAMK,IAAIgS,GACtC,QAAYjR,IAARV,EAAmB,MAAO,GAG9B,IADA,IAAMwB,EAAS,GACN2L,EAAI,EAAGA,EAAI0E,EAAI1E,IAAK,CAC3B,IAAM4E,EAAQ/R,EAAIL,IAAIwN,EAAIyE,GAC1B,QAAclR,IAAVqR,EACF,MAEFvQ,EAAOyB,KAAK,EAAKvE,QAAQiB,IAAIoS,IAE/B,OAAOvQ,GAnCK,EA0CPvB,YAAc,SAACd,GAepB,OAdAkB,OAAOqB,OAAOvC,EAAO6S,OAAOC,SAAQ,SAACD,GACnCA,EAAMC,SAAQ,SAACC,GACO,OAAhBA,EAAKC,SACPD,EAAKE,SAAWF,EAAKC,QAEvBD,EAAKG,mBAAmBJ,SAAQ,SAACK,GAC/BA,EAAGF,SAAWE,EAAGH,cACVG,EAAGH,UAEZD,EAAKK,kBAAoBL,EAAKG,0BACvBH,EAAKM,iBACLN,EAAKG,yBAGTlT,GAzDK,EADhB,4CAOE,WACE,OAAOxB,KAAKa,QAAQ,KARxB,mBAuCE,SAAgBW,GACdxB,KAAKmU,WAAW3O,IAAIhE,OAxCxB,GAAmCf,GCAtBqU,GAAb,kDACE,aAAe,IAAD,8BACZ,wBAAStB,GAAT,mBAA6BzQ,GAAW,EAAO,CAC7C,IAAIgG,EAAe,cAevBgM,cAAgB,SAACC,EAAmBf,EAAgBC,GAClD,OAAOxP,MAAMQ,KAAK,EAAK+P,aAAatT,MAAMK,IAAIgT,IAAc,IAAI3S,KAC9D,SAACX,GAAD,OAAQ,EAAKX,QAAQiB,IAAIN,OAnBf,EAuBPY,YAAc,SAACd,GAoCpB,OAnCAA,EAAO0T,YAAc1T,EAAO2T,aAEH,OAAvB3T,EAAO0T,kBACgBnS,IAAvBvB,EAAO0T,aACuB,OAA9B1T,EAAO0T,YAAYV,SAEnBhT,EAAO0T,YAAYT,SAAWjT,EAAO0T,YAAYV,cAC1ChT,EAAO0T,YAAYV,QAE5BhT,EAAO4T,cAAgB5T,EAAO6T,oBACFtS,IAAxBvB,EAAO8T,eACT9T,EAAO+T,YAAc/T,EAAO8T,aAAajT,KAAI,SAAC4B,GAiB5C,OAhBAA,EAAKuR,cAAgBvR,EAAKwR,eAAepT,KAAI,SAACuE,GAK5C,YAJkB7D,IAAd6D,EAAE8O,UACJ9O,EAAEiN,OAASjN,EAAE8O,eACN9O,EAAE8O,SAEJ9O,KAET3C,EAAK0R,aAAe1R,EAAK2R,cAAcvT,KAAI,SAACuE,GAK1C,YAJkB7D,IAAd6D,EAAE8O,UACJ9O,EAAEiN,OAASjN,EAAE8O,eACN9O,EAAE8O,SAEJ9O,YAEF3C,EAAKwR,sBACLxR,EAAK2R,cACL3R,YAEFzC,EAAO8T,qBAET9T,EAAO8T,oBACP9T,EAAO6T,sBACP7T,EAAO2T,aACP3T,GA3DK,EADhB,8CAOE,WACE,OAAOxB,KAAKa,QAAQ,KARxB,mBA+DE,SAAgBW,GACdxB,KAAKiV,aAAazP,IAAIhE,OAhE1B,GAAgCf,G,SCoDnBoV,GAKX,WAAYC,GAAmB,IAAD,gCAHtBC,QAAqC,GAGf,KAFtBC,OAAmC,GAEb,KAY9BC,MAAQ,SAACC,GACP,YAA6BnT,IAAzB,EAAKiT,OAAOE,EAAKxU,KAA8C,IAAzB,EAAKsU,OAAOE,EAAKxU,IAClDwU,EAAKD,MAER,GAAN,OAAUC,EAAKD,MAAf,YAAwB,EAAKD,OAAOE,EAAKxU,MAhBb,KAmB9ByU,UAAY,SAACC,EAAaH,GACxB,YAA0BlT,IAAtB,EAAKgT,QAAQK,GACRH,EAEH,GAAN,OAAUA,EAAV,YAAmB,EAAKF,QAAQK,KAvBJ,KA0B9B5Q,IAAM,SAAC0Q,QAC0BnT,IAA3B,EAAKgT,QAAQG,EAAKE,OACpB,EAAKL,QAAQG,EAAKE,KAAO,GAE3B,EAAKJ,OAAOE,EAAKxU,IAAM,EAAKqU,QAAQG,EAAKE,KACzC,EAAKL,QAAQG,EAAKE,MAAQ,GA/BE,KAkC9BC,OAAS,SAACH,GACR,OAAO,EAAKF,OAAOE,EAAKxU,KAnCI,oBACXoU,GAAS,IADE,IAC5B,2BAA8B,CAAC,IAAtBI,EAAqB,QACN,eAAlBA,EAAKI,gBAEsBvT,IAA3B/C,KAAK+V,QAAQG,EAAKE,OACpBpW,KAAK+V,QAAQG,EAAKE,KAAO,GAE3BpW,KAAKgW,OAAOE,EAAKxU,IAAM1B,KAAK+V,QAAQG,EAAKE,KACzCpW,KAAK+V,QAAQG,EAAKE,MAAQ,IARA,gCAuCnBG,GAAb,WAUE,WAAY7U,EAAYoU,EAAiBU,GAAkB,IAAD,gCATnD9U,QASmD,OARnD+U,aAQmD,OAPnDX,WAOmD,OANnDU,WAMmD,OALnDE,WAKmD,OAJnDC,aAAyC,GAIU,KAHnDC,iBAAsD,GAGH,KAFnDC,cAEmD,OAiC1DC,MAAQ,WACN,IAAMtV,EAAS,EAAKuV,OACpB,OAAO,IAAIR,EAAQ,EAAK7U,GAAIF,EAAOsU,MAAOtU,EAAOgV,QAnCO,KAsC1DQ,OAAS,WACP,EAAKN,OAAQ,GAvC2C,KA0C1DR,KAAO,SAACxU,GAAD,OAAgB,EAAKoU,MAAM,EAAKa,aAAajV,KA1CM,KA2C1DuV,QAAU,SAACvV,GAAD,YAA0CqB,IAA1B,EAAK4T,aAAajV,IA3Cc,KA4C1DwV,WAAa,SAACd,GAAD,OACX,EAAKN,MAAMlS,QACT,SAACsS,GAAD,MAA4B,eAAlBA,EAAKI,UAA6BJ,EAAKE,MAAQA,MA9CH,KAgD1De,kBAAoB,SAACzV,GAAD,OAAgB,EAAKoU,MAAM,EAAKc,iBAAiBlV,KAhDX,KAiD1D0V,eAAiB,SAAC1V,GAAD,OACf,EAAKoU,MAAMlS,QACT,SAACsS,GAAD,MACoB,iBAAlBA,EAAKI,UACe,cAApBJ,EAAK5W,MAAMsR,MACXsF,EAAK5W,MAAMoC,KAAOA,KACpB,IAvDsD,KAyD1D2V,KAAO,SAACC,EAAgB7I,GAAjB,OACL,EAAK+H,MAAM5S,QAAO,SAACnE,GAAD,OAAOA,EAAE6X,SAAWA,GAAU7X,EAAEgP,SAAWA,KAAQ,IA1Db,KA2D1D8I,QAAU,SAACD,EAAgB7I,GAAjB,OACR,EAAK+H,MAAM5S,QAAO,SAACnE,GAAD,OAAOA,EAAE6X,SAAWA,GAAU7X,EAAEgP,SAAWA,KAC1DhM,OAAS,GA7D4C,KA8D1D+U,cAAgB,SAAC/I,GAAD,OACd,EAAK+H,MAAM5S,QAAO,SAACnE,GAAD,OAAOA,EAAEgP,SAAWA,MA/DkB,KAgE1DgJ,cAAgB,SAACH,GAAD,OACd,EAAKd,MAAM5S,QAAO,SAACnE,GAAD,OAAOA,EAAE6X,SAAWA,MAjEkB,KAmE1DI,WAAa,WACX,IAAK,IAAIlI,EAAI,EAAGA,EAAwB,IAApB,EAAKsG,MAAMrT,OAAc+M,IAAK,CAChD,IAAImI,EAAG,YAAQnI,GACf,QAA+BzM,IAA3B,EAAK4T,aAAagB,GACpB,OAAOA,EAGX,MAAM,IAAIC,MAAM,kCA1EwC,KAsF1DC,iBAAmB,SACjBC,EACAC,GAEA,IADwB,EACpBC,EAAkC,GAClCC,EAAW,EAAKR,cAAcK,GAFV,cAGJG,GAHI,IAGxB,2BAA8B,CAAC,IAAtBC,EAAqB,QAC5B,GAAIA,EAAQzJ,SAAWsJ,EAAvB,CAD4B,oBAMP,EAAKN,cAAcS,EAAQzJ,SANpB,IAM5B,2BAAyD,CAAC,IAAjD0J,EAAgD,QACnDA,EAAS1J,SAAWsJ,GACtBC,EAAW1S,KAAK,CAAC4S,EAASC,KARF,oCAE1BH,EAAW1S,KAAK,CAAC4S,OAASnV,KALN,8BAgBxB,OAAOiV,GAzGiD,KAiH1DI,wBAA0B,SAACC,GACzB,IADqE,EACjEC,EAAU,EAAKd,cAAc,EAAKL,kBAAkBkB,GAAa3W,IADA,cAElD4W,GAFkD,IAErE,2BAA4B,CAAC,IAApBC,EAAmB,QAC1B,GAAmB,+CAAfA,EAAOnC,IAAsD,CAC/D,GAAIkC,EAAQ7V,OAAS,EACnB,MAAM,IAAImV,MACR,mEAGJ,OAAOW,EAAOjB,SATmD,gCAjHb,KAgI1DkB,sBAAwB,SAAC9W,GACvB,IAD2D,EACvD+W,EAAgC,GADuB,cAEvC,EAAKhB,cAAc/V,IAFoB,IAE3D,2BAA4C,CAAC,IAApCwW,EAAmC,QACtCzJ,EAAS,EAAKyH,KAAKgC,EAAQzJ,QAC/B,GACsB,eAApBA,EAAO6H,UACQ,wCAAf7H,EAAO2H,IACP,CAAC,IAAD,gBACqB,EAAKqB,cAAcS,EAAQzJ,SADhD,IACA,2BAAyD,CAAC,IAAjDiK,EAAgD,QACvDD,EAASnT,KAAK,CAAC4S,EAASQ,KAF1B,oCAKAD,EAASnT,KAAK,CAAC4S,OAASnV,KAZ+B,8BAe3D,OAAO0V,GA/IiD,KA8blDE,YAAc,SAACC,GACrB,QACgC7V,IAA9B,EAAK4T,aAAaiC,SACwB7V,IAA1C,EAAK+S,MAAM,EAAKa,aAAaiC,IAF/B,CAOA,IAAIC,EAAY,EAAKlC,aAAaiC,GAC9B1C,EAAO,EAAKJ,MAAM+C,GAEtB,KACoB,cAAlB3C,EAAKI,UACc,iBAAlBJ,EAAKI,UAA+BJ,EAAK4C,aAF5C,CASC,EAAKhD,MAAM+C,QAAqB9V,EAGjC,IAvBwC,EAuBpCyT,EAAQ,EAAKA,MAAM5S,QACrB,SAACyT,GAAD,OAAUA,EAAKC,SAAWsB,GAAUvB,EAAK5I,SAAWmK,KAxBd,cA0BvBpC,GA1BuB,IA0BxC,2BAAwB,CAAC,IAAhBa,EAAe,QACtB,EAAK0B,YAAY1B,EAAKC,OAAQD,EAAK5I,SA3BG,kCA9bgB,KAgelDsK,YAAc,SAACjB,EAAkBC,GAKvC,IAJA,IAAIiB,OAAYjW,EACZkW,EAAe,EACfC,EAAe,EAEV1J,EAAI,EAAGA,EAAI,EAAKgH,MAAM/T,OAAQ+M,IAAK,CAC1C,IAAI6H,EAAO,EAAKb,MAAMhH,GAClB6H,EAAKC,SAAWQ,GAAYT,EAAK5I,SAAWsJ,IAC9CiB,EAAYxJ,GAEV6H,EAAKC,SAAWQ,GAAYT,EAAK5I,SAAWqJ,IAC9CmB,GAAgB,GAEd5B,EAAKC,SAAWS,GAAYV,EAAK5I,SAAWsJ,IAC9CmB,GAAgB,QAIFnW,IAAdiW,IAKJ,EAAKxC,MAAM2C,OAAOH,EAAW,GAIR,IAAjBC,GACF,EAAKN,YAAYb,GAEE,IAAjBoB,GACF,EAAKP,YAAYZ,KA/fqC,KAmgBlDqB,WAAa,WACnB,EAAKzC,aAAe,GACpB,EAAKC,iBAAmB,GAExB,IAAK,IAAIpH,EAAI,EAAGA,EAAI,EAAKsG,MAAMrT,OAAQ+M,IAAK,CAC1C,IAAI6J,EAAI,EAAKvD,MAAMtG,GACnB,EAAKmH,aAAa0C,EAAE3X,IAAM8N,EACP,cAAf6J,EAAE/C,UAA8C,OAAlB+C,EAAEhB,cAClC,EAAKzB,iBAAiByC,EAAEhB,aAAe7I,KA1gB3CxP,KAAK0B,GAAKA,EACV1B,KAAKyW,QAAU,EACfzW,KAAK8V,MAAQA,EACb9V,KAAKwW,MAAQA,EACbxW,KAAK0W,OAAQ,EAEb1W,KAAKoZ,aACLpZ,KAAK6W,SAAW,IAAIhB,GAAS7V,KAAK8V,OAElC1V,YAAeJ,KAAM,CACnByW,QAASpW,IACTyV,MAAOzV,IACPmW,MAAOnW,IACPqW,MAAOrW,IACPsW,aAActW,IACduW,iBAAkBvW,IAClBwW,SAAUxW,IACViZ,sBAAuBpW,IACvBqW,iBAAkBrW,IAClBsW,mBAAoBtW,IACpBuW,aAAcvW,IACdwW,eAAgBxW,IAChByW,WAAYzW,IACZ0W,gBAAiB1W,IACjB2W,eAAgB3W,IAChB4W,kBAAmB5W,IACnB6W,QAAS7W,IACT8W,WAAY9W,IACZ+W,WAAY/W,MAvClB,wCAuFE,WACE,MAAO,CACL4S,MAAOiB,YAAK/W,KAAK8V,OACjBU,MAAOO,YAAK/W,KAAKwW,OACjBG,aAAcI,YAAK/W,KAAK2W,iBA3F9B,mCA0KE,SACEuD,EACAC,EACAC,GAEA,IAAI9C,EAAStX,KAAKmX,kBAAkB+C,GAChCzL,EAASzO,KAAKmX,kBAAkBgD,GAEhCE,EAAsBra,KAAKwX,cAAcF,EAAO5V,IACpD,GAAmC,IAA/B2Y,EAAoB5X,OACtB,MAAM,IAAImV,MAAM,oDAElB,GAAmC,IAA/ByC,EAAoB5X,OACtB,MAAM,IAAImV,MACR,iGAIJ,IAAI0C,EAAsBta,KAAKwX,cAAc/I,EAAO/M,IACpD,GAAI4Y,EAAoB7X,OAAS,EAC/B,MAAM,IAAImV,MACR,iGAIJ,IAAI2C,EAAaF,EAAoB,GAAG/C,OACpCkD,EAC6B,IAA/BF,EAAoB7X,OAChBgM,EAAO/M,GACP4Y,EAAoB,GAAGhD,OAE7BtX,KAAK+Z,QAAL,6BACKK,GADL,IAEE9C,OAAQiD,EACR9L,OAAQ+L,OA5Md,8BAuNE,SAAwBnC,EAAqBf,GAC3C,IAAI7I,EAASzO,KAAKmX,kBAAkBkB,GAChCiC,EAAsBta,KAAKwX,cAAc/I,EAAO/M,IAEpD,GAAI4Y,EAAoB7X,OAAS,EAC/B,MAAM,IAAImV,MACR,0FAIJ,GAAmC,IAA/B0C,EAAoB7X,OAAc,CACpC,IAAIqV,EAAW9X,KAAK0X,aACpB1X,KAAKyZ,aAAL,6BACKnC,GADL,IAEE5V,GAAIoW,KAGN9X,KAAK+Z,QAAQ,CACXzC,OAAQQ,EACRrJ,OAAQA,EAAO/M,GACf0U,IAAK,6CACLH,MAAO,aACPwE,eAAe,QAEZ,CACL,IAAIpD,EAAOiD,EAAoB,GAC/Bta,KAAK4Z,gBAAgBvC,EAAKC,OAAQA,GACjB,+CAAbD,EAAKjB,KAEPpW,KAAKia,WAAW5C,EAAKC,OAAQD,EAAK5I,OAAQ,CACxC2H,IAAK,6CACLH,MAAO,aACPwE,cAAepD,EAAKoD,mBAvP9B,gCAyQE,SACE3C,EACAC,EACA2C,EACAC,GAKA,IAAI3C,EAAahY,KAAK6X,iBAAiBC,EAAUC,GAEjD,GAA0B,IAAtBC,EAAWvV,OAAf,CAsCA,GAAIuV,EAAWvV,OAAS,EACtB,MAAM,IAAImV,MACR,iFAIJ,kBAAqBI,EAAW,GAAhC,GAAK4C,EAAL,KAAYC,EAAZ,KACA7a,KAAKia,WAAWW,EAAMtD,OAAQsD,EAAMnM,OAAQ,CAC1C2H,IAAKsE,EAAMtE,IACXH,MAAOyE,EAAMzE,MACbwE,eAAe,SAEH1X,IAAV8X,GAEF7a,KAAKia,WAAWY,EAAMvD,OAAQuD,EAAMpM,OAAQ,CAC1C2H,IAAKuE,EAAMvE,IACXH,MAAO0E,EAAM1E,MACbwE,eAAe,SArDjB,GAAIC,EAAMtE,MAAQuE,EAAMvE,IAEtBpW,KAAK+Z,QAAQ,CACXzC,OAAQQ,EACRrJ,OAAQsJ,EACR3B,IAAKsE,EAAMtE,IACXH,MAAOyE,EAAMzE,MACbwE,eAAe,QAEZ,CACL,IAAIK,EAAS9a,KAAK0X,aAClB1X,KAAKyZ,aAAa,CAChB/X,GAAIoZ,EACJ1E,IAAK,sCACLH,MAAO,qBACPwE,eAAe,EACfnE,SAAU,eAEZtW,KAAK+Z,QAAQ,CACXzC,OAAQQ,EACRrJ,OAAQqM,EACR1E,IAAKsE,EAAMtE,IACXH,MAAOyE,EAAMzE,MACbwE,eAAe,IAEjBza,KAAK+Z,QAAQ,CACXzC,OAAQwD,EACRrM,OAAQsJ,EACR3B,IAAKuE,EAAMvE,IACXH,MAAO0E,EAAM1E,MACbwE,eAAe,OApTzB,0BAmVE,SAAoBvE,GAClB,QAAmCnT,IAA/B/C,KAAK2W,aAAaT,EAAKxU,IACzB,MAAM,IAAIkW,MAAM,iBAElB5X,KAAK2W,aAAaT,EAAKxU,IAAM1B,KAAK8V,MAAMrT,OACxCzC,KAAK8V,MAAMxQ,KAAK4Q,GAChBlW,KAAK6W,SAASrR,IAAI0Q,GAClBlW,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IA3VjB,4BAiWE,SAAsBR,GACpB,QAAmCnT,IAA/B/C,KAAK2W,aAAaT,EAAKxU,IACzB,MAAM,IAAIkW,MAAM,iBAElB5X,KAAK2W,aAAaT,EAAKxU,IAAM1B,KAAK8V,MAAMrT,OACxCzC,KAAK8V,MAAMxQ,KAAK4Q,GAChBlW,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IAxWjB,wBA2WE,SAAkBkC,GAChB5Y,KAAK2Y,YAAYC,GACjB5Y,KAAK8V,MAAQ9V,KAAK8V,MAAMlS,QAAO,SAACyV,GAAD,YAAatW,IAANsW,KACtCrZ,KAAKoZ,aACLpZ,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,EACb1W,KAAK6W,SAAW,IAAIhB,GAAS7V,KAAK8V,SAjXtC,6BAoXE,SAAuB8C,EAAgBjJ,GACrC,IAAIkJ,EAAY7Y,KAAK2W,aAAaiC,GAC9B1C,EAAOlW,KAAK8V,MAAM+C,GAEtB,GAAsB,eAAlB3C,EAAKI,SACP,MAAM,IAAIsB,MAAJ,yDAC8C1B,EAAKI,WAG3D5T,OAAOwH,OAAOgM,EAAMvG,GACpB3P,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,OACK3T,IAAd4M,EAAMyG,MACRpW,KAAK6W,SAAW,IAAIhB,GAAS7V,KAAK8V,UAjYxC,+BAqYE,SAAyB8C,EAAgBjJ,GACvC,IAAIkJ,EAAY7Y,KAAK2W,aAAaiC,GAC9B1C,EAAOlW,KAAK8V,MAAM+C,GAEtB,GAAsB,iBAAlB3C,EAAKI,SACP,MAAM,IAAIsB,MAAJ,2DACgD1B,EAAKI,WAG7D5T,OAAOwH,OAAOgM,EAAMvG,GACpB3P,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IAhZjB,4BAmZE,SAAsBkC,EAAgBjJ,GACpC,IAAIkJ,EAAY7Y,KAAK2W,aAAaiC,GAC9B1C,EAAOlW,KAAK8V,MAAM+C,GAEtB,GAAsB,cAAlB3C,EAAKI,SACP,MAAM,IAAIsB,MAAJ,wDAC6C1B,EAAKI,WAG1D5T,OAAOwH,OAAOgM,EAAMvG,GACpB3P,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IA9ZjB,qBAiaE,SAAeW,GACb,GAAIrX,KAAKuX,QAAQF,EAAKC,OAAQD,EAAK5I,QACjC,MAAM,IAAImJ,MAAM,oDAGlB5X,KAAKwW,MAAMlR,KAAK+R,GAChBrX,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IAxajB,wBA2aE,SAAkBoB,EAAkBC,GAClC,IAAIhO,EAAO/J,KAAK8V,MAAMrT,OACtBzC,KAAK+Y,YAAYjB,EAAUC,GAC3B/X,KAAK8V,MAAQ9V,KAAK8V,MAAMlS,QAAO,SAACyV,GAAD,YAAatW,IAANsW,KAElCrZ,KAAK8V,MAAMrT,SAAWsH,IACxB/J,KAAKoZ,aACLpZ,KAAK6W,SAAW,IAAIhB,GAAS7V,KAAK8V,QAEpC9V,KAAKyW,SAAW,EAChBzW,KAAK0W,OAAQ,IArbjB,wBAwbE,SAAkBY,EAAgB7I,EAAgBkB,GAChD,IAAK,IAAIH,EAAI,EAAGA,EAAIxP,KAAKwW,MAAM/T,OAAQ+M,IAAK,CAC1C,IAAI6H,EAAOrX,KAAKwW,MAAMhH,GAClB6H,EAAKC,SAAWA,GAAUD,EAAK5I,SAAWA,IAC5CzO,KAAKwW,MAAMhH,GAAX,6BAAqBxP,KAAKwW,MAAMhH,IAAOG,IAG3C3P,KAAKyW,SAAWzW,KAAKyW,SAAW,GAAK,EACrCzW,KAAK0W,OAAQ,MAhcjB,KCzFaqE,GAAb,WAUE,WACErZ,EACAI,EACA4R,EACA+C,EACAuE,EACAC,GACC,yBAdHvZ,QAcE,OAbFI,UAaE,OAZF4R,iBAYE,OAXF+C,aAWE,OAVFuE,WAUE,OATFC,WASE,EACAjb,KAAK0B,GAAKA,EACV1B,KAAK8B,KAAOA,EACZ9B,KAAK0T,YAAcA,EACnB1T,KAAKyW,QAAUA,EACfzW,KAAKgb,MAAQA,EACbhb,KAAKib,MAAQA,EAvBjB,6CAgCE,WACEjb,KAAKgb,MAAMhE,WAjCf,qBAoCE,WACE,OAAOhX,SArCX,KAAa+a,GA0BJG,QAAU,SACfC,GAEA,YAA8CpY,IAAtCoY,EAA0BhT,SAY/B,IAAMiT,GAAb,kDAME,WACEjT,EACArG,EACA4R,EACA+C,EACAuE,EACAC,GACC,IAAD,8BACA,eAAO,EAAGnZ,EAAM4R,EAAa+C,EAASuE,EAAOC,IAV/C9S,aASE,EAEA,EAAKA,QAAUA,EAFf,EAbJ,qEAqBE,SACEzG,EACAI,EACAmZ,GAEqB,IADrBvH,EACoB,uDADN,GAERsH,EAAQ,IAAIzE,GAChB7U,EACAuZ,EAAMI,QAAQhZ,KAAI,SAACiZ,EAAQ3Z,GAAT,MAAoB,CACpCD,GAAG,OAAD,OAASC,GACXsU,MAAOqF,EACPjD,YAAa1W,EACb2U,SAAU,gBAEZ,IAGF,OADA0E,EAAMtE,OAAQ,EACP,IAAI0E,EAAmB1Z,EAAII,EAAM4R,EAAa,EAAGsH,EAAOC,EAAMvZ,QAtCzE,GACUqZ,IAyCGQ,GAAb,kDAME,aAAe,IAAD,8BACZ,wBAAS/H,GAAT,2BAAqCzQ,GAAW,EAAO,CACrD,IAAIgG,EAAe,YASvByS,cAAgB,SAACP,GAEf,IADA,IAAIzL,EAAI,IACK,CACX,IAAM9N,EAAE,gBAAY8N,EAAZ,YAAiByL,EAAMvZ,IAC/B,QAAgCqB,IAA5B,EAAK0Y,eAAe/Z,GACtB,OAAOA,EAET8N,MAlBU,EA6EPlN,YAAc,SAACd,GACpB,IAAMsU,EAAkBtU,EAAOY,KAAK0T,MAAMzT,KAAI,SAAC6T,GAC7C,IAAMtF,EAAmBsF,EAAKtF,KAU9B,cATOsF,EAAKtF,KACZsF,EAAKI,SAAW1F,EACH,cAATA,GACFsF,EAAKmC,YAAcnC,EAAKwF,oBACjBxF,EAAKwF,cACM,iBAAT9K,IACTsF,EAAK4C,YAAc5C,EAAKyF,qBACjBzF,EAAKyF,eAEPzF,KAEHM,EAAkBhV,EAAOY,KAAKoU,MAEhCwE,EAAQ,IAAIzE,GAAQ/U,EAAOE,GAAG2K,WAAYyJ,EAAOU,GACrD,OAAO,IAAIuE,GACTvZ,EAAOE,GACPF,EAAOM,KACPN,EAAOkS,YACPlS,EAAOiV,QACPuE,EACAxZ,EAAOyZ,QApGG,EANhB,4CAYE,WACE,OAAOjb,KAAKa,QAAQ,KAbxB,qCA6BE,SAAwBoa,GACtB,IAD4C,EACtCW,EAAM5b,KAAK+T,YAAYkH,EAAMvZ,IAC7Bma,EAAS7b,KAAK8b,iBAAiBb,GAEjCc,GAAO,EAJiC,cAK3BH,EAAII,OAAOH,IALgB,IAK5C,2BAAqC,CAAC,IAA3BV,EAA0B,QAC7BlW,EAAI,WAAWuB,KAAK2U,EAAGrZ,MACnB,OAANmD,IACAgX,SAAShX,EAAE,KAAO8W,IACpBA,EAAMG,KAAKC,IAAIJ,EAAKE,SAAShX,EAAE,QATS,8BAY5C,MAAM,MAAN,OAAa8W,EAAM,KAzCvB,8BA6CE,SAAiBd,GAGf,IAFA,IAAMY,EAAS,GACXrM,EAAI,IACK,CACX,IAAM9N,EAAE,gBAAY8N,EAAZ,YAAiByL,EAAMvZ,IACzBsG,EAAQhI,KAAKyb,eAAe/Z,GAClC,QAAcqB,IAAViF,EACF,MAEF6T,EAAOvW,KAAK0C,GACZwH,IAEF,OAAOqM,IAzDX,yBA+DE,SAAmB7H,GAAmC,IAAD,OACnD,OAAOtP,MAAMQ,KAAKlF,KAAKmU,WAAWxS,MAAMK,IAAIgS,IAAY,IAAI3R,KAC1D,SAACX,GAAD,OAAQ,EAAKX,QAAQiB,IAAIN,QAjE/B,qBAwEE,SAAkBF,GAA8B,IAAD,gBACzBxB,KAAKa,SADoB,IAC7C,2BAAkC,SAC1B8H,OAAOnH,IAF8B,iCAxEjD,wBA+EE,SAAkBwS,GAChB,OAAOhU,KAAKmU,WAAWxS,MAAMnB,IAAIwT,KAhFrC,kCA8GE,SAA4BxS,GAE1B,OADAA,EAAOiV,SAAW,EACX,CACLwE,MAAOzZ,EAAOyZ,MACdnZ,KAAMN,EAAOM,KACb4R,YAAalS,EAAOkS,YACpB+C,QAASjV,EAAOiV,QAChBrU,KAAM,CACJ0T,MAAOtU,EAAOwZ,MAAMlF,MAAMzT,KAAI,SAAC6T,GAC7B,OAAQA,EAAKI,UACX,IAAK,aACH,MAAO,CACL5U,GAAIwU,EAAKxU,GACT0U,IAAKF,EAAKE,IACVqE,cAAevE,EAAKuE,cACpBxE,MAAOC,EAAKD,MACZrF,KAAMsF,EAAKI,UAEf,IAAK,YACH,MAAO,CACL5U,GAAIwU,EAAKxU,GACTuU,MAAOC,EAAKD,MACZyF,aAAcxF,EAAKmC,YACnBzH,KAAMsF,EAAKI,UAEf,IAAK,eACH,MAAO,CACL5U,GAAIwU,EAAKxU,GACTpC,MAAO4W,EAAK5W,MACZ2W,MAAOC,EAAKD,MACZ0F,cAAezF,EAAK4C,YACpBlI,KAAMsF,EAAKI,cAInBE,MAAOhV,EAAOwZ,MAAMxE,MAAMnU,KAAI,SAACgV,GAC7B,MAAO,CACLC,OAAQD,EAAKC,OACb7I,OAAQ4I,EAAK5I,OACb2H,IAAKiB,EAAKjB,IACVqE,cAAepD,EAAKoD,cACpBxE,MAAOoB,EAAKpB,cAvJxB,kCA8JE,SAA4BzU,GAC1B,OAAOxB,KAAKqI,qBAAqB7G,OA/JrC,GAAwCyF,GC3F3BmV,GASX,WACE1a,EACA0U,EACAH,EACAoG,EACAC,EACA5I,EACA/D,GACC,yBAhBIjO,QAgBL,OAfK0U,SAeL,OAdKH,WAcL,OAbKoG,mBAaL,OAZKC,aAYL,OAXK5I,iBAWL,OAVK6I,gBAUL,EACAvc,KAAK0B,GAAKA,EACV1B,KAAKoW,IAAMA,EACXpW,KAAKiW,MAAQA,EACbjW,KAAKqc,cAAgBA,EACrBrc,KAAKsc,QAAUA,EACftc,KAAK0T,YAAcA,EACnB1T,KAAKuc,WAAa5M,EAElBvP,YAAeJ,KAAM,CACnB0B,GAAIrB,IACJ4V,MAAO5V,IACPic,QAASjc,IACTqT,YAAarT,IACbkc,WAAYlc,OA/BL+b,GAuCJI,OAAS,SAAC/H,GACf,OAAQA,EAAS,IACf,IAAK,IACH,MAAM,iCAAN,OAAwCA,GAC1C,IAAK,IACH,MAAM,0CAAN,OAAiDA,GACnD,IAAK,IACH,MAAM,wCAAN,OAA+CA,GACjD,QACE,OAAOA,IAhDF2H,GAoDJK,OAAS,SAACC,GACf,OAAIA,EAAUC,WAAW,2CAChBD,EAAUE,MAAM,0CAA0Cna,QAE/Dia,EAAUC,WAAW,yCAChBD,EAAUE,MAAM,wCAAwCna,QAE7Dia,EAAUC,WAAW,kCAChBD,EAAUE,MAAM,iCAAiCna,QAEnDia,GC/DJ,IAAMG,GAAb,WAOE,aAAe,IAAD,gCALPC,uBAAsC,IAAI3c,IAKnC,KAFP4c,0BAAyC,IAAI5c,IAEtC,KAyBd6c,yBAA2B,SAACrN,GAC1B,EAAKmN,uBAAyBnN,GA1BlB,KA6BdsN,4BAA8B,SAACtN,GAC7B,EAAKoN,0BAA4BpN,GA9BrB,KAiCduN,yBAA2B,SAAC5P,GAC1B,EAAKwP,uBAAuBtX,IAAI8H,IAlCpB,KAqCd6P,4BAA8B,SAAC7P,GAC7B,EAAKyP,0BAA0BvX,IAAI8H,IAtCvB,KAyCd8P,4BAA8B,SAAC9P,GAC7B,EAAKwP,uBAAuB9V,OAAOsG,IA1CvB,KA6Cd+P,+BAAiC,SAAC/P,GAChC,EAAKyP,0BAA0B/V,OAAOsG,IA7CtCtN,KAAK+c,0BAA0BvX,IAAI,OAEnCpF,YAAeJ,KAAM,CACnB8c,uBAAwBzc,IACxB0c,0BAA2B1c,IAC3Bid,sBAAuBhd,IACvBid,yBAA0Bjd,IAC1B0c,yBAA0B9Z,IAC1B+Z,4BAA6B/Z,IAC7Bga,yBAA0Bha,IAC1Bia,4BAA6Bja,IAC7Bka,4BAA6Bla,IAC7Bma,+BAAgCna,MApBtC,uDAwBE,WACE,OAAOwB,MAAMQ,KAAKlF,KAAK8c,0BAzB3B,oCA4BE,WACE,OAAOpY,MAAMQ,KAAKlF,KAAK+c,+BA7B3B,KCKaS,GAAb,kDAGE,aAAe,IAAD,8BACZ,wBAAShK,GAAT,sBAAgCzQ,GAAW,IAHtC0a,cAEO,IASPnb,YAAc,SAACd,GACpBA,EAAO6a,cAAgB7a,EAAOkc,sBACvBlc,EAAOkc,eACd,cAAoBhb,OAAOqB,OAAOvC,EAAO+a,YAAzC,eAAsD,CAAjD,IAAiD,EAA3CoB,EAAK,KAAsC,cACnCA,GADmC,IACpD,2BAAiC,CAAC,IAAzBC,EAAwB,QAC/BA,EAAKC,gBAAkBD,EAAKE,wBACrBF,EAAKE,kBAHsC,+BAMtD,OAAOtc,GAhBP,EAAKic,SAAW,IAAIZ,GAEpBzc,YAAe,eAAM,CACnBqd,SAAUpd,MALA,EAHhB,UAAiCI,GCMpBsd,GAAb,kDACE,aAAe,IAAD,8BACZ,wBACKvK,GADL,mBAEE,CAAE6I,cAAe,mBACjB,EACA,CAAC,IAAIzT,EAAqB,UAQ9BoV,iBAAmB,SAAC5H,GAClB,IAAM1U,EAAK,EAAKuc,SAAStc,MAAMK,IAAIoU,GACnC,YAAcrT,IAAPrB,EAAmB,EAAKM,IAAIN,QAAOqB,GAf9B,EADhB,0CAUE,WACE,OAAO/C,KAAKa,QAAQ,OAXxB,GAAmCJ,GCAtByd,GAAb,kDACE,aAAe,IAAD,8BACZ,wBAAS1K,GAAT,gBAA+B,CAAE6I,cAAe,mBAAoB,EAAO,CACzE,IAAIzT,EAAqB,UAQ7BuV,cAAgB,SAAC/H,GACf,IAAM1U,EAAK,EAAKuc,SAAStc,MAAMK,IAAIoU,GACnC,YAAcrT,IAAPrB,EAAmB,EAAKM,IAAIN,QAAOqB,GAZ9B,EADhB,0CAOE,WACE,OAAO/C,KAAKa,QAAQ,OARxB,GAAgCJ,GCInB2d,GAAS,CACpBC,aAAc,IAAI1K,GAClB2K,WAAY,IAAIxJ,GAChByJ,cAAe,IAAIzK,GACnB0K,mBAAoB,IAAIjD,GACxBkD,YAAa,IAAIjB,GACjBkB,cAAe,IAAIX,GACnBY,WAAY,IAAIT,IAEjBjY,OAAe2Y,QAAUR,GAGnB,IAAMS,GAAeC,wBAAsBV,IAE3C,SAASW,KACd,OAAO3M,IAAM4M,WAAWH,I,+DCzBbI,GAAWC,cAAS,WAC/B,IAAQb,EAAiBU,KAAjBV,aAMR,OAJAc,qBAAU,WACRd,EAAahd,MAAM,CAAEiC,MAAO,IAAKY,OAAQ,MACxC,CAACma,IAGF,cAAC,IAAMe,SAAP,UACE,cAAC,KAAD,CAAKC,OAAQ,GAAb,SACE,eAAC,KAAD,CAAKrV,UAAU,aAAasV,KAAM,GAAlC,UACE,cAAC,KAAWC,MAAZ,CAAkBC,MAAO,EAAzB,sBACA,cAAC,KAAD,CACEzV,KAAK,QACLJ,UAAU,EACV8V,WAAW,aACXC,WAAYrB,EAAahb,KACzBsc,WAAY,SAACC,EAASpQ,GAAV,OACV,cAAC,KAAK8C,KAAN,UACE,cAAC,KAAKA,KAAKuN,KAAX,CACEC,OACE,cAAC,KAAD,CACEC,MAAM,SACNhW,KAAK,QACL2H,MAAO,CACLL,UAAW,EACX2O,gBAAiB,CACf,UACA,UACA,UACA,WACAJ,EAAQ9d,KAAKme,WAAW,GAAK,IAVnC,SAaGL,EAAQ9d,KAAK,GAAGoe,gBAGrBrV,MACE,cAAC,EAAD,CACEmB,KAAMkE,GAAO0P,QACb3T,QAAS,CAAE+I,UAAW4K,EAAQle,IAC9BwK,UAAW,GAHb,SAKG0T,EAAQ9d,OAGb4R,YAAakM,EAAQlM,6B,yCC1B1ByM,GAAc7W,YAjBZ,CACb2R,MAAO,CACL,4BAA6B,CAC3BrR,OAAQ,iBACRC,aAAc,EACduW,WAAY,6BAEd,sBAAuB,CACrB9O,YAAa,EACbC,aAAc,GAEhB,OAAQ,CACN8O,WAAY,OAKS/W,CACzB4V,cAAS,YAA6C,IAA1CpV,EAAyC,EAAzCA,QACJkL,EAAY9E,GAAO0P,QAAQ5S,eAAgBgI,UAEjD,EAAqC+J,KAA7BV,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtBa,qBAAU,WACRd,EAAajb,UAAU4R,KACtB,CAACqJ,EAAcrJ,IAElB,IAAM4K,EAAUvB,EAAarc,IAAIgT,GACjC,QAAgBjS,IAAZ6c,EACF,OAAO,cAACU,EAAD,IACF,GAAgB,OAAZV,EACT,OAAO,cAAC,GAAD,IAGT,IAAMvE,EAAU,CACd,CAAEkF,UAAW,KAAM1V,MAAO,MAC1B,CACE0V,UAAW,OACX1V,MAAO,OACP2V,WAAY,SAACC,EAAcC,GACzB,OACE,cAAC,EAAD,CACE1U,KAAMkE,GAAO+K,MACbhP,QAAS,CAAE+H,QAAS0M,EAAIhf,IACxBwK,UAAW,CACT3K,MAAO+c,EAAWqC,iBAAiB,CAAEf,QAAS5K,KAJlD,SAOG0L,EAAI5e,SAKb,CAAEye,UAAW,cAAe1V,MAAO,gBAGrC,OACE,eAAC,IAAMuU,SAAP,WACE,eAAC,KAAWG,MAAZ,CAAkBC,MAAO,EAAzB,sBACYoB,KAAEC,WAAWjB,EAAQ9d,SAEjC,cAAC,KAAD,CACEkI,UAAWF,EAAQmR,MACnB6F,YAAY,QACZnX,UAAU,EACVoX,QAAO,wCAAE,WAAO9e,EAAQ+e,EAAMpd,GAArB,eAAAqd,EAAA,sEACY3C,EAAWjd,MAAM,CAClCiC,MAAOrB,EAAOif,SACdhd,QAASjC,EAAOkf,QAAW,GAAKlf,EAAOif,SACvC3c,WAAY,CAAEqb,QAAS5K,KAJlB,cACHrV,EADG,yBAMA,CACLyC,KAAMzC,EAAOoB,QAAQsB,IAAI+e,IACzBC,SAAS,EACT9e,MAAO5C,EAAO4C,QATT,2CAAF,0DAYP+e,QAAS,CACP/U,QAAQ,GAEVgV,YAAa,cAAC,KAAWhC,MAAZ,CAAkBC,MAAO,EAAzB,oBAEbjT,QAAQ,EACRiV,WAAY,CACVN,SAAU,IACVO,gBAAiB,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,SAE3DC,OAAO,KACPrG,QAASA,WAOnB,SAAS+F,GAAUV,GACjB,MAAO,CACLhf,GAAIgf,EAAIhf,GACRI,KAAM4e,EAAI5e,KACV4R,YAAagN,EAAIhN,a,4CC5Dd,SAASiO,GAAoBnN,GAClC,IAAMoN,EAAUhV,mBAAQ,WAEtB,IADA,IAAMlJ,EAAmB,IAAIvD,IAC7B,MAA2BuC,OAAOC,QAAQ6R,EAAO+H,YAAjD,eAA8D,CAAzD,0BAAOsF,EAAP,KAAYlE,EAAZ,KACHja,EAAI8B,IAAIqc,GADoD,oBAEzClE,GAFyC,IAE5D,2BACE,IADyB,IAAhBC,EAAe,QACxB,MAAkBlb,OAAOkP,KAAKgM,EAAKkE,YAAnC,eAAgD,CAA3C,IAAMC,EAAG,KACZre,EAAI8B,IAAIuc,IAJgD,+BAQ9D,OAAOrd,MAAMQ,KAAKxB,KACjB,CAAC8Q,EAAO9S,KAEHgd,EAAkBK,KAAlBL,cAMR,OAJAS,qBAAU,WACRT,EAAc1b,MAAM8D,WAAW8a,KAC9B,CAACpN,EAAO9S,KAEJgB,OAAOI,YACZ8e,EAAQvf,KAAI,SAACX,GACX,IAAMF,EAASkd,EAAc1c,IAAIN,GACjC,OAAIF,EACK,CAACE,EAAIF,GAEP,CAACE,EAAI,CAAEA,KAAIsgB,aAAyB,OAAXxgB,Q,yCCjEzBygB,GAAwB,SAAC,GASuC,IAR3EzN,EAQ0E,EAR1EA,OAQ0E,IAP1E0N,cAO0E,SAN1EnS,EAM0E,EAN1EA,YACGH,EAKuE,mBAC1E,OAAIsS,EACK,kDAAUtS,GAAV,aAAsB4E,EAAO6H,iBAIpC,cAAC,EAAD,2BACE7N,KAAM4N,GAAOI,OAAOhI,EAAO9S,IAC3BoM,eAAe,EACfiC,YAAaA,GACTH,GAJN,aAMG4E,EAAO6H,kB,+BCtBD8F,GAAuBjD,cAClC,YAYO,IAXLzK,EAWI,EAXJA,SACA2N,EAUI,EAVJA,OACAC,EASI,EATJA,cACAC,EAQI,EARJA,eAQI,IAPJC,oBAOI,SACI9D,EAAgBM,KAAhBN,YAERU,qBAAU,WACRV,EAAYzb,MAAMI,UAAUqR,KAC3B,CAACgK,EAAahK,IAEjB,IAAMD,EAASiK,EAAYzc,IAAIyS,GAE/B,YAAe1R,IAAXyR,EACE+N,OACoBxf,IAAlBsf,EACKA,IAEF,cAAC/B,EAAD,IAGF,+BAAO7L,IAGD,OAAXD,OACqBzR,IAAnBuf,EACKA,IAIP,cAAC,IAAD,CACE7e,OAAO,MACPoH,MAAM,MACN0F,SAAQ,iBAAYkE,EAAZ,qBAKP2N,EAAO5N,EAAQiK,EAAYhB,a,kCC7CzB+E,GAA0B,SAAC,GAYjC,IAXLC,EAWI,EAXJA,SAWI,IAVJP,cAUI,aATJQ,cASI,SARD9S,EAQC,mBACJ,QHiBqD7M,IGjB7B0f,EHiBYT,aGhBlC,OAAIS,EAAST,aAET,kDAAUpS,GAAV,aACE,0CAAa6S,EAAS/gB,GAAtB,uBAGKwgB,EACF,mDAAUtS,GAAV,kBAAuB6S,EAAS/gB,GAAhC,QAKL,eAAC,EAAD,2BAAc8M,KAAM,GAAIV,eAAe,GAAU8B,GAAjD,kBACI6S,EAAS/gB,GADb,QAON,GAAIwgB,EACF,OACE,mDAAUtS,GAAV,cACG6S,EAASxM,MADZ,KACqBwM,EAAS/gB,GAD9B,QAMJ,IAAMuU,EAAQyM,EAAM,UAAMD,EAASxM,MAAf,aAAyBwM,EAAS/gB,GAAlC,KAA0C+gB,EAASxM,MAEvE,OACE,cAAC,EAAD,2BAAczH,KAAMiU,EAASrM,IAAKtI,eAAe,GAAU8B,GAA3D,aACGqG,M,oBC7CM0M,GAAuBrZ,YALrB,CACbsZ,KAAM,CACJC,QAAS,SAGuBvZ,EAClC,SACEqG,GAIA,MAA8BmT,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAgB,WACpBD,GAAYD,IAERG,EAAMH,EACV,cAACI,GAAA,EAAD,CAAsBtT,QAASoT,IAE/B,cAACG,GAAA,EAAD,CAAavT,QAASoT,IAGxB,OACE,gCACE,eAAC,IAAD,CAAOlZ,KAAM,EAAb,UACG4F,EAAMxF,SACN+Y,KAEH,qBAAKlZ,UAAW+Y,EAAU,GAAKpT,EAAM7F,QAAQ8Y,KAA7C,SACGjT,EAAM0T,oBCtBJC,GAAiBha,YAFf,GAEeA,EAC5B,YAAkE,IAA/DhK,EAA8D,EAA9DA,MACD,MAAmB,aAAfA,EAAMsR,KAEN,cAACuR,GAAD,CACE1N,SAAUnV,EAAMA,MAChB8iB,OAAQ,SAAC5N,GACP,OAAO,cAAC,GAAD,CAAuBA,OAAQA,OAM3B,SAAflV,EAAMsR,KAEN,cAAC+R,GAAD,CACEU,YACE,+BACE,+BACE,0CADF,IACoB/jB,EAAMA,MAAMikB,YAEhC,+BACE,sCADF,IACgBjkB,EAAMA,MAAMkkB,OAD5B,MACuClkB,EAAMA,MAAMmkB,SAEnD,+BACE,2CADF,IACqBnkB,EAAMA,MAAMokB,aAEjC,+BACE,gDAAuB,IACvB,cAAC,EAAD,CACElV,KAAMlP,EAAMA,MAAMqkB,cAClB7V,eAAe,EAFjB,SAIGxO,EAAMA,MAAMqkB,sBAlBvB,SAwBGrkB,EAAMA,MAAMskB,OAKA,aAAftkB,EAAMsR,KAEN,cAAC+R,GAAD,CACEU,YACE,+BACE,+BACE,uCADF,IACiB/jB,EAAMA,MAAMukB,WAD7B,KAC2C,IACxCvkB,EAAMA,MAAMwkB,cAEf,+BACE,sCADF,IACgBxkB,EAAMA,MAAMykB,WARlC,SAaGzkB,EAAMA,MAAM0kB,SAKA,oBAAf1kB,EAAMsR,KAEN,iCACGtR,EAAMA,MAAMmhB,KADf,IACqB,kCAAKnhB,EAAMA,MAAM2kB,eAKvB,oBAAf3kB,EAAMsR,KAEN,cAAC+R,GAAD,CACEU,YACE,+BACE,+BACE,2CADF,IACqB/jB,EAAMA,MAAMokB,aAEjC,+BACE,uCAAc,IACd,cAAC,EAAD,CAAclV,KAAMlP,EAAMA,MAAM4kB,MAAOpW,eAAe,EAAtD,SACGxO,EAAMA,MAAM4kB,cATvB,SAeE,eAAC,EAAD,CACE1V,KAAI,wCAAmClP,EAAMA,MAAM6kB,SAA/C,YAA2D7kB,EAAMA,MAAM8kB,WAC3EtW,eAAe,EAFjB,UAIGxO,EAAMA,MAAM6kB,SAJf,MAI4B7kB,EAAMA,MAAM8kB,UAJxC,UAWqB,kBAAhB9kB,EAAMA,MACR,+BAAOqG,KAAKC,UAAUtG,EAAMA,SAG9B,+BAAOA,EAAMA,W,gCCtGX+kB,GAAqB/a,YANnB,CACbwY,WAAY,CACVwC,WAAY,KAIkBhb,EAChC,YASuC,IAAD,EARpCsU,EAQoC,EARpCA,KACA9T,EAOoC,EAPpCA,QACAya,EAMoC,EANpCA,QACG3U,EAKiC,mBAC9BkS,EAAa,GADiB,cAElBlE,EAAKC,iBAFa,IAEpC,2BAAwC,CAAC,IAA9BkE,EAA6B,QAClCyC,OAAI,EAENA,EADkC,IAAhC5G,EAAKkE,WAAWC,GAAKtf,OAErB,cAAC,KAAWgiB,KAAZ,CAAiB7T,KAAK,YAAY8T,QAAQ,EAA1C,sBAKK9G,EAAKkE,WAAWC,GAAK1f,KAAI,SAAC/C,EAAOqlB,GACtC,OACE,8BACE,cAACrB,GAAD,CAAgBhkB,MAAOA,KADfqlB,MAOhB7C,EAAWxc,KACT,eAAC,KAAD,CAAK+Z,OAAQ,EAAb,UACE,cAAC,KAAD,CAAKC,KAAM,EAAX,SACE,cAAC,GAAD,CAAyBmD,SAAU8B,EAAQxC,OAE7C,cAAC,KAAD,CAAKzC,KAAM,GAAX,SAAgBkF,MAJGzC,KArBW,8BA8BpC,OACE,kDAASnS,GAAT,cACE,8BACE,cAAC0T,GAAD,CAAgBhkB,MAAOse,EAAKte,UAE9B,qBAAK0K,UAAWF,EAAQgY,WAAxB,SAAqCA,WCzChC8C,GAAoBtb,YATlB,CACbub,YAAa,CACXzT,OAAQ,EACRxH,OAAQ,OACRkb,MAAO,OACP9E,gBAAiB,SAIY1W,CAC/B4V,cACE,YAWmC,IAVjC1K,EAUgC,EAVhCA,OACA+P,EASgC,EAThCA,QACAQ,EAQgC,EARhCA,cAQgC,IAPhCrC,cAOgC,SANhC5Y,EAMgC,EANhCA,QAO6B,IAAzBib,EAActiB,SAChBsiB,EAAgBriB,OAAOkP,KAAK4C,EAAO+H,aAGrC,IALgC,EAK1ByI,EAAa,GALa,cAMdD,GANc,IAMhC,2BAAiC,CAAC,IAAvBlD,EAAsB,QAE/B,QAA+B9e,IAA3ByR,EAAO+H,WAAWsF,GAAtB,CAEA,IAAMlE,EAAQnJ,EAAO+H,WAAWsF,GAC5BmD,EAAWviB,OAAS,GACtBuiB,EAAW1f,KACT,oBAA2B0E,UAAWF,EAAQ+a,aAA9C,kBAAoBhD,KAGxBmD,EAAW1f,KACT,eAAC,KAAD,CAAK+Z,OAAQ,EAAb,UACE,cAAC,KAAD,CAAKC,KAAM,EAAX,SACE,cAAC,KAAWmF,KAAZ,CAAiBQ,QAAQ,EAAzB,SACE,cAAC,GAAD,CACExC,SAAU8B,EAAQ1C,GAClBa,OAAQA,QAId,cAAC,KAAD,CAAKpD,KAAM,GAAX,SACE,cAAC,IAAD,CAAO4F,UAAU,WAAWxT,MAAO,CAAEyT,MAAO,QAA5C,SACGxH,EAAMtb,KAAI,SAACub,EAAM7B,GAChB,OACE,cAACsI,GAAD,CAEEzG,KAAMA,EACN2G,QAASA,GAFJxI,YAdI8F,MAjBO,8BA2ChC,OACE,cAAC,IAAD,CAAOqD,UAAU,WAAWxT,MAAO,CAAEyT,MAAO,QAAUpb,KAAM,EAA5D,SACGib,Q,oBC/DEI,GAA0B9b,YANxB,CACbC,KAAM,CACJ4b,MAAO,MAI4B7b,CACrC4V,cACE,YAiBmC,IAhBjC1K,EAgBgC,EAhBhCA,OACA6Q,EAegC,EAfhCA,OACAC,EAcgC,EAdhCA,UACAf,EAagC,EAbhCA,QACAQ,EAYgC,EAZhCA,cACAQ,EAWgC,EAXhCA,gBACAC,EAUgC,EAVhCA,mBACA1b,EASgC,EAThCA,QAUM6F,EAAQ/C,mBAAQ,WACpB,OAAOlK,OAAOkP,KAAK4C,EAAO+H,YAAYla,KAAI,SAACwf,GAAD,MAAU,CAClD5L,MAAM,GAAD,OAAKsO,EAAQ1C,GAAK5L,MAAlB,aAA4B4L,EAA5B,KACLviB,MAAOuiB,QAER,CAAC0C,EAAS/P,EAAO9S,KAEpB,OACE,gCACE,cAAC,KAAD,CAAU+jB,SAAU,kBAAMH,GAAWD,IAASK,QAASL,EAAvD,8BAGA,cAAC,KAAD,CACEpT,KAAK,WACL0T,YAAY,EACZrE,QAAS3R,EACTiW,iBAAiB,QACjB5b,UAAWF,EAAQP,KACnBjK,MAAOylB,EACPc,SAAUN,EACVO,WAAYN,WCjCXO,GAAsBzc,YATpB,CACbC,KAAM,CACJ,kBAAmB,CACjByc,OAAQ,GAEVC,SAAU,MAIqB3c,CACjC4V,cACE,YAKO,IAJL1K,EAII,EAJJA,OACAiJ,EAGI,EAHJA,SAIM8G,EAAU5C,GAAoBnN,GACpC,EAA4BsO,oBAAkB,GAA9C,mBAAOuC,EAAP,KAAeC,EAAf,KAEA,OACE,gCACE,cAAC,IAAD,CAAO5T,MAAO,CAAEwU,MAAO,SAAvB,SACE,cAACd,GAAD,CACEC,OAAQA,EACRC,UAAWA,EACX9Q,OAAQA,EACR+P,QAASA,EACTQ,cAAetH,EAASH,sBACxBiI,gBAAiB9H,EAASP,yBAC1BsI,mBAAoB/H,EAASL,gCAGjC,+BACE,cAAC,EAAD,CAAc5O,KAAM4N,GAAOI,OAAOhI,EAAO9S,IAAKoM,eAAe,EAA7D,SACG0G,EAAOyB,MAAMkQ,WAAW3R,EAAOyB,MAAMmQ,QAF1C,OAKE,eAAC,KAAW3B,KAAZ,CACEC,QAAQ,EACRO,QAAQ,EACRvT,MAAO,CAAE2U,SAAU,GAAIhG,WAAY,KACnCiG,SAAU,CAAE7F,KAAMjM,EAAO9S,IAJ3B,cAMI8S,EAAO9S,GANX,UASF,cAAC,KAAW+iB,KAAZ,CAAiB7T,KAAK,YAAtB,SACG4D,EAAO8H,QAAQiK,YAAY/R,EAAO8H,QAAQ8J,MAAM9hB,KAAK,SAExD,4BAAIkQ,EAAOd,YAAYyS,WAAW3R,EAAOd,YAAY0S,QACrD,uBACA,cAACxB,GAAD,CACEpQ,OAAQA,EACR+P,QAASA,EACT7B,QAAQ,EACRqC,cAAeM,EAAS5H,EAASH,sBAAwB,YAS9D,SAASkJ,GACdC,EACAC,GAGA,IACIC,EAEFA,EAH+B,kBAATF,EAIpB,cAACV,GAAD,CAAqBvR,OAAQiS,EAAKjS,OAAQiJ,SAAUgJ,EAAKhJ,WAIzD,cAAC0E,GAAD,CACE1N,SAAUgS,EACVrE,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,cAACsI,GAAD,CAAqBvR,OAAQA,EAAQiJ,SAAUA,OAMvD9S,IAAMic,KAAK,CACTC,KAAM,KACNF,UACAG,UAAW,CAAEd,QAAS,EAAG3U,WAAY,IACrCrG,cAAe,CAAE0G,MAAO,CAAEmR,QAAS,SACnCkE,cAAc,EACdC,MAAM,EACNN,OAAQA,EACRvB,MAAO,qBACPzT,MAAO,CAAEuV,IAAK,M,2DClFLC,GAAyB5d,YAdvB,CACbC,KAAM,CACJ,kBAAmB,CACjByc,OAAQ,GAEVC,SAAU,MASwB3c,EACpC,YAYiC,IAX/BkL,EAW8B,EAX9BA,OACArK,EAU8B,EAV9BA,SACAL,EAS8B,EAT9BA,QACA4c,EAQ8B,EAR9BA,OACAjJ,EAO8B,EAP9BA,SACG7N,EAM2B,mBAExB2U,EAAU5C,GAAoBnN,GAC9BmS,EACJ,kDAAS/W,GAAT,IAAoB5F,UAAS,UAAKF,EAAQP,KAAb,YAAqBqG,EAAU5F,WAA5D,UACE,+BACE,cAAC,EAAD,CAAcwE,KAAM4N,GAAOI,OAAOhI,EAAO9S,IAAKoM,eAAe,EAA7D,SACG0G,EAAOyB,MAAMkQ,WAAW3R,EAAOyB,MAAMmQ,QAF1C,OAKE,eAAC,KAAW3B,KAAZ,CACEC,QAAQ,EACRO,QAAQ,EACRvT,MAAO,CAAE2U,SAAU,GAAIhG,WAAY,KACnCiG,SAAU,CAAE7F,KAAMjM,EAAO9S,IAJ3B,cAMI8S,EAAO9S,GANX,OAQA,cAAC,KAAD,CACEgQ,MAAO,CAAEyV,cAAe,EAAG3d,WAAY,EAAG4d,OAAQ,WAClDvX,QAAS,WACP2W,GACE,CAAEhS,SAAQiJ,iBACC1a,IAAX2jB,EAAuBA,EAAS,OAAI3jB,SAK5C,cAAC,KAAW0hB,KAAZ,CAAiB7T,KAAK,YAAtB,SACG4D,EAAO8H,QAAQiK,YAAY/R,EAAO8H,QAAQ8J,MAAM9hB,KAAK,SAExD,4BAAIkQ,EAAOd,YAAYyS,WAAW3R,EAAOd,YAAY0S,QACrD,uBACA,cAACxB,GAAD,CACEL,QAASA,EACT/P,OAAQA,EACRuQ,cAAetH,EAASF,+BAK9B,OACE,cAAC,KAAD,CAASoJ,QAASA,EAASD,OAAQA,EAAnC,SACGvc,O,iDChFIsD,GAKT,SAAC,GAA6C,IAA3CnO,EAA0C,EAA1CA,MAAO+nB,EAAmC,EAAnCA,eAAmBzX,EAAgB,mBAC/C,OACE,gDAAM/E,MAAOvL,EAAM+M,YAAgBuD,GAAnC,aACGtQ,EAAMgoB,QAAQD,O,UCMRE,GAAeje,YARb,CACbke,aAAc,CACZC,QAAS,EACT7d,OAAQ,YACRC,aAAc,IAIUP,EAC1B,YAamC,IAZjCud,EAYgC,EAZhCA,KACA/c,EAWgC,EAXhCA,QACA4d,EAUgC,EAVhCA,SACAjC,EASgC,EAThCA,SASgC,IARhCkC,qBAQgC,MARhBC,KAAK,GAQW,MAPhCC,uBAOgC,MAPdC,KAAK,GAOS,EAChC,EAA0ChF,oBAAS,GAAnD,mBAAOiF,EAAP,KAAsBC,EAAtB,KAQMC,OAA+BllB,IAAb2kB,EAAyBK,EAAgBL,EAEjE,OACE,cAAC,KAAD,CACEb,KAAMA,EACN/B,MAAOmD,EAAkBN,EAAgBE,EACzC7d,UAAWF,EAAQ0d,aACnB3X,QAdW,WACb,QAAiB9M,IAAb2kB,QAAuC3kB,IAAb0iB,EAC5B,OAAOA,GAAUiC,GAEnBM,GAAkBD,SCpBlBG,GAAS,CACbC,uBAAwB,CACtBrD,MAAO8C,KAAK,IAEdQ,gBAAiB,CACftD,MAAOgD,KAAK,GACZ,UAAW,CACThD,MAAM,GAAD,OAAKgD,KAAK,GAAV,iBAGTO,uBAAwB,CACtBvD,MAAOgD,KAAK,GACZV,OAAQ,YAICkB,GAA+Bhf,YAAW4e,GAAX5e,EAC1C,YASmC,IARjC9H,EAQgC,EARhCA,OACAG,EAOgC,EAPhCA,MACAmI,EAMgC,EANhCA,QAMgC,IALhCye,YAKgC,MALzB,EAKyB,EAChC,EAA4DzF,oBAAS,GAArE,mBAAO0F,EAAP,KAA+BC,EAA/B,KAEMpU,EAAQ7S,EAAO6S,MAAM1S,IAAU,GAC/B+mB,EAAe,GACrB,GAAIrU,EAAM5R,OAAS,EAAG,CAAC,IAAD,gBACQ4R,EAAM,GAAGO,kBAAkBgI,MAAM,EAAG2L,IAD5C,yBACXH,EADW,QAEZpe,EACJoe,EAAgB3T,WAAaJ,EAAM,GAAGI,SAClC3K,EAAQqe,uBACRre,EAAQse,gBAEdM,EAAapjB,KACX,8BACE,eAAC,IAAD,CAAOyE,KAAM,EAAb,UACE,cAACwd,GAAD,CAAcV,KAAM8B,OACpB,cAACpB,GAAD,CAAcV,KAAM+B,OACpB,cAACzG,GAAD,CACE1N,SAAU2T,EAAgB3T,SAC1B2N,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,cAACyJ,GAAD,CAAwB1S,OAAQA,EAAQiJ,SAAUA,EAAlD,SACE,cAAC,GAAD,CACEyE,QAAQ,EACR1N,OAAQA,EACRxK,UAAWA,SAKnB,uBAAMA,UAAWA,EAAjB,cAEE,cAAC,GAAD,CACE1K,MAAO8oB,EAAgBS,YACvBxB,eAAgB,IAJpB,WAhBMe,EAAgB3T,YAP9B,2BAAwE,IADpD,8BAuCpB,IAAMsH,EAAM1H,EAAM,GAAGO,kBAAkBkU,WACrC,SAACC,GAAD,OAAeA,EAAUtU,WAAaJ,EAAM,GAAGI,YAEjD,IAAa,IAATsH,GAAcA,GAAOwM,EAAM,CAC7B,IAAMH,EAAkB/T,EAAM,GAAGO,kBAAkBmH,GACnD2M,EAAapjB,KACX,8BACE,eAAC,IAAD,CAAOyE,KAAM,EAAb,UACE,cAACwd,GAAD,CAAcV,KAAM8B,OACpB,cAACpB,GAAD,CAAcV,KAAM+B,OACpB,cAACzG,GAAD,CACE1N,SAAU2T,EAAgB3T,SAC1B2N,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,uBAAMzT,UAAWF,EAAQqe,uBAAzB,cACIpM,EADJ,QAEE,cAACmL,GAAD,CAAwB1S,OAAQA,EAAQiJ,SAAUA,EAAlD,SACE,cAAC,GAAD,CAAuByE,QAAQ,EAAM1N,OAAQA,YAKrD,uBAAMxK,UAAWF,EAAQqe,uBAAzB,cAEE,cAAC,GAAD,CACE7oB,MAAO8oB,EAAgBS,YACvBxB,eAAgB,IAJpB,WAfMe,EAAgB3T,WA4B1BJ,EAAM,GAAGO,kBAAkBnS,OAAS8lB,GACtCG,EAAapjB,KACX,8BACE,cAAC,KAAWmf,KAAZ,CACEza,UAAWF,EAAQue,uBACnBxY,QAAS,kBAAM4Y,GAA2BD,IAF5C,uBADO,aAYf,IAAMnN,EAAe,CACnB,CACEkF,UAAW,KACX1V,MAAO,SACPuX,OAAQ,SAAC3N,GACP,OACE,cAAC0N,GAAD,CACE1N,SAAUA,EACV2N,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,cAACyJ,GAAD,CAAwB1S,OAAQA,EAAQiJ,SAAUA,EAAlD,SACE,cAAC,GAAD,CAAuByE,QAAQ,EAAM1N,OAAQA,WAOzD,CACE+L,UAAW,QACX1V,MAAO,QACPuX,OAAQ,SAAC4G,GACP,OAAO,cAAC,GAAD,CAAQ1pB,MAAO0pB,EAAO3B,eAAgB,MAGjD,CACExc,MAAO,SACPuX,OAAQ,WACN,OACE,cAAC,IAAD,CAAOrY,KAAM,EAAb,SACE,cAAC,IAAD,0BAOV,OACE,eAAC,IAAMqV,SAAP,WACGsJ,EACD,cAAC,IAAD,CACE7d,MAAM,qBACNkY,QAASyF,EACT9W,MAAO,CAAEuV,IAAK,IACdH,UAAW,CAAEW,QAAS,GACtBtC,MAAO,MACPha,KAAM,kBAAMsd,GAA0B,IACtCrd,SAAU,kBAAMqd,GAA0B,IAP5C,SASE,cAAC,KAAD,CACE3H,YAAY,QACZnX,UAAU,EACV4C,QAAQ,EACRiV,WAAY,CACVN,SAAU,GACVO,gBAAiB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,SAErDC,OAAO,KACPrG,QAASA,EACT0F,QAAO,wCAAE,WAAO9e,EAAQ+e,EAAMpd,GAArB,SAAAqd,EAAA,+EACA/hB,QAAQC,QAAQ,CACrBoD,MAAO8R,EAAM5R,OAAS,EAAI4R,EAAM,GAAGO,kBAAkBnS,OAAS,EAC9D4e,SAAS,EACTjf,KACmB,IAAjBiS,EAAM5R,OACF,GACA4R,EAAM,GAAGO,kBACNgI,OACE3a,EAAOkf,QAAW,GAAKlf,EAAOif,SAC/Bjf,EAAOkf,QAAWlf,EAAOif,UAE1B7e,KAAI,SAAC+lB,EAAiBzmB,GAAlB,MAA6B,CAChCD,GAAI0mB,EAAgB3T,SACpBuU,MAAOZ,EAAgBS,mBAd5B,2CAAF,oECnLbX,GAAS,CACb3T,KAAM,CACJ0U,eAAgB,YAChB,UAAW,CACTA,eAAgB,cAGpBC,aAAc,CACZpE,MAAOgD,KAAK,GACZ,UAAW,CACThD,MAAOgD,KAAK,MAKLqB,GAAgB7f,YAAW4e,GAAX5e,EAC3B,YAWmC,IAVjC8f,EAUgC,EAVhCA,KACA5nB,EASgC,EAThCA,OACAG,EAQgC,EARhCA,MACAmI,EAOgC,EAPhCA,QAOgC,IANhCye,YAMgC,MANzB,EAMyB,EAC1BlU,EAAQ7S,EAAO6S,MAAM1S,IAAU,GACjCqjB,EAAa3Q,EAAMgV,SAAQ,SAAC9U,EAAM5S,GACpC,IAAI2nB,EACQ,IAAV3nB,EACIynB,EAAKG,UAAU,EAAGhV,EAAKN,OACvBmV,EAAKG,UAAUlV,EAAM1S,EAAQ,GAAG6nB,IAAKjV,EAAKN,OAC5CwV,EAAcL,EAAKG,UAAUhV,EAAKN,MAAOM,EAAKiV,KAC9CzZ,OAAchN,OACIA,IAAlBwR,EAAKE,WACP1E,EAAc,WACZyW,GAAwBjS,EAAKE,YAGjC,IAAMiV,EACJ,cAAC,EAAD,CAEElb,KAAM+F,EAAKxH,IACXe,eAAe,EACf6b,wBAAyB,CACvBC,OAA+B,KAAvBH,EAAYI,OAAgB,UAAYJ,GAElDzf,UACEF,EAAQyK,WACWxR,IAAlBwR,EAAKE,SAAyB,IAAM3K,EAAQof,aAAe,IAE9DxX,MAAyB,OAAlB6C,EAAKE,SAAoB,CAAEqQ,MAAO,QAAW,GACpD/U,YAAaA,GAXRpO,GAeT,YAAsBoB,IAAlBwR,EAAKE,SACA,CAAC6U,EAAQI,GAuBX,CAACJ,EAlBN,cAACnH,GAAD,CAEE1N,SAAUF,EAAKE,SACf2N,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,cAACyJ,GAAD,CACE1S,OAAQA,EACRkS,OAAQ,IACRjJ,SAAUA,EAHZ,SAKGiM,KAGLpH,eAAgB,kBACd,sBAAMtY,UAAWF,EAAQof,aAAzB,SAAwCQ,MAZrC/nB,OA0BX,OANqB,IAAjB0S,EAAM5R,OACRuiB,EAAW1f,KAAK8jB,GAEhBpE,EAAW1f,KAAK8jB,EAAKG,UAAUlV,EAAMA,EAAM5R,OAAS,GAAG+mB,MAIvD,gCACGxE,EACD,cAACsD,GAAD,CACE9mB,OAAQA,EACRG,MAAOA,EACP4mB,KAAMA,UC3FHL,GAAS,CACpBjN,MCjByB,CACzBkK,MAAO,OACP,4BAA6B,CAC3Bvb,OAAQ,iBACRC,aAAc,EACduW,WAAY,6BAEd,sBAAuB,CACrB9O,YAAa,EACbC,aAAc,GAEhB,OAAQ,CACN8O,WAAY,KAEd,oBAAqB,CACnByJ,cAAe,SDKNC,GAAiBzgB,YAAW4e,GAAX5e,EAC5B,YAWmC,IAVjC2R,EAUgC,EAVhCA,MACA1Z,EASgC,EAThCA,MACAuI,EAQgC,EARhCA,QACAkgB,EAOgC,EAPhCA,cAOgC,IANhCC,oBAMgC,SAC1B5O,EAAUJ,EAAMI,QAAQhZ,KAAI,SAAC6nB,EAAK7R,GAAN,MAAuB,CACvDkI,UAAW,CAAC,MAAOlI,EAAa,SAChCxN,MAAOqf,EACP9H,OAAS,SAAC9iB,EAAekC,GACvB,OACE,cAAC2nB,GAAD,CAAeC,KAAM9pB,EAAOkC,OAAQA,EAAQG,MAAO0W,SAgBzD,OAXI4R,GACF5O,EAAQlC,OAAO,EAAG,EAAG,CACnBtO,MACE,cAAC,KAAW4Z,KAAZ,CAAiB7T,KAAK,YAAYuZ,UAAU,EAA5C,eAIF5J,UAAW,UAKb,eAAC,IAAMnB,SAAP,WACE,cAAC,KAAD,CACEpV,UAAWF,EAAQmR,MACnB6F,YAAY,QACZnX,UAAU,EACVoX,QAAO,wCAAE,WAAO9e,EAAQ+e,EAAMpd,GAArB,eAAAqd,EAAA,sEACa1f,EAClBU,EAAOif,UACNjf,EAAOkf,QAAW,GAAKlf,EAAOif,UAH1B,cACHngB,EADG,yBAKA,CACLqB,KAAMrB,EACNsgB,SAAS,EACT9e,MAAO0Y,EAAMlR,OARR,2CAAF,0DAWPwC,QAAQ,EACRiV,WAAY,CACVN,SAAU,EACVO,gBAAiB,CACf,IACA,KACA,KACA,KACA,MACA,MACA,MACA,SAGJF,iBAC4Bxe,IAA1BkY,EAAMmP,QAAQC,QACZ,cAAC,EAAD,CAAc7b,KAAMyM,EAAMmP,QAAQC,QAASvc,eAAe,EAA1D,SACGmN,EAAMnZ,OAGTmZ,EAAMnZ,KAGVkoB,cAAeA,EACftI,OAAO,QACPrG,QAASA,IAEX,cAAC,GAAD,CAAkBJ,MAAOA,UAMpBqP,GAER,SAAC,GAAe,IAAbrP,EAAY,EAAZA,MACA2L,EAAoC,CACxC,CAAC,cAAe3L,EAAMvH,mBAGM3Q,IAA1BkY,EAAMmP,QAAQC,QAChBzD,EAAKthB,KAAK,CACR,eACA,cAAC,EAAD,CAAckJ,KAAMyM,EAAMmP,QAAQC,QAASvc,eAAe,EAA1D,SACGmN,EAAMmP,QAAQvf,UAInB+b,EAAKthB,KAAK,CAAC,eAAgB,QAE7BshB,EAAKthB,KAAK,CACR,yBAC2BvC,IAA3BkY,EAAMmP,QAAQ3V,SACZ,cAAC0N,GAAD,CACE1N,SAAUwG,EAAMmP,QAAQ3V,SACxB2N,OAAQ,SAAC5N,EAAQiJ,GAAT,OACN,cAACyJ,GAAD,CACE1S,OAAQA,EACRkS,OAAQ,IACRjJ,SAAUA,EAHZ,SAKE,cAAC,GAAD,CACEjJ,OAAQA,EACRzE,YAAa,WACXyW,GAAwB,CAAEhS,SAAQiJ,mBAK1C6E,eAAgB,kBACd,6CAAgBrH,EAAMmP,QAAQ3V,SAA9B,yBAIJ,QAIJ,IAAIkS,GAAW1L,EAAMmP,QAAQG,kBAAoB,IAAIlB,SACnD,SAACmB,EAAW7oB,GACV,OAAwB,IAApB6oB,EAAUhL,OAAmD,IAApCgL,EAAUC,QAAQZ,OAAOpnB,QAElD+nB,EAAUhV,cAAcrI,MAAMyG,KACI,IAAlC4W,EAAU7U,aAAalT,OAEhB,GAGI,CACb,4BACE,8BACG,IAAIioB,OAAOF,EAAUhL,OADxB,IACiCgL,EAAUC,YAF7C,UAAW9oB,EAAX,WAOCqa,OAAO2O,GAAiB,GAAD,OAAIhpB,EAAJ,WAAoB6oB,EAAUhV,gBACrDwG,OAAO2O,GAAiB,GAAD,OAAIhpB,EAAJ,UAAmB6oB,EAAU7U,kBAQ3D,OALAiR,EAAKthB,KAAK,CACR,oBACAqhB,EAAQlkB,OAAS,EAAI,8BAAMkkB,IAAiB,QAI5C,cAAC,KAAD,CAAc9b,MAAM,aAAad,KAAK,QAAtC,SACG6c,EAAKvkB,KAAI,mCAAE4T,EAAF,KAAS3W,EAAT,YACR,cAAC,KAAagT,KAAd,CAA+B2D,MAAOA,EAAtC,SACG3W,GADqB2W,SAQ1B0U,GAAmB,SAAC/nB,EAAagoB,GACrC,IADqE,EAC/DC,EAAoB,CAAC,IAD0C,cAElDD,GAFkD,IAErE,2BAA0B,CAAC,IAAhBE,EAAe,QACpBlX,GAAYkX,GACdD,EAAMvlB,KAAK,IAEXulB,EAAMA,EAAMpoB,OAAS,GAAG6C,KAAKwlB,EAAKxrB,QAN+B,8BASrE,OAAOurB,EACJjnB,QAAO,SAACmnB,GAAD,OAASA,EAAItoB,OAAS,KAC7BJ,KAAI,SAAC0oB,EAAKvb,GAAN,OAAY,4BAAwBub,GAAxB,UAAWnoB,EAAX,YAAkB4M,QEtM1Bwb,GAAb,iDACUC,MAAgB,EAD1B,wCAGE,SAAe7lB,GAA+C,IAAD,OAC3DpF,KAAKirB,OAAS,EACd,IAAIC,EAAWlrB,KAAKirB,MAEpB,OAAO7lB,IAAKvF,MAAK,SAACF,GAChB,KAAIurB,EAAW,EAAKD,OAIpB,OAAOtrB,SAZb,KCMMuoB,GAAS,CACbiD,UAAW,CACThG,MAAO,SAWEiG,GAAyB9hB,YAAW4e,GAAX5e,CACpC4V,cAAS,SAACvP,GACR,OAAO0b,GAAmB,gBAAiB1b,OAIlC2b,GAA0BhiB,YAAW4e,GAAX5e,CACrC4V,cAAS,SAACvP,GACR,OAAO0b,GAAmB,aAAc1b,OAI/B4b,GAAwBjiB,YAAW4e,GAAX5e,CACnC4V,cAAS,SAACvP,GACR,OAAO0b,GAAmB,cAAe1b,OAI7C,SAAS0b,GACPG,EACA7b,GAEA,IAAM3J,EAAQ+Y,KAAYyM,GACpBC,EAAa,IAAIT,GAGvB7L,qBAAU,gBACYpc,IAAhB4M,EAAMrQ,QAINoF,MAAMC,QAAQgL,EAAMrQ,OAEjB0G,EAAMpF,QAGToF,EAAMc,WAAW6I,EAAMrQ,MAAMsE,QAAO,SAAClC,GAAD,OAASsE,EAAMjF,QAAQP,IAAIkB,OAF/DsE,EAAMc,WAAW6I,EAAMrQ,YAIWyD,IAA3BiD,EAAMhE,IAAI2N,EAAMrQ,QACzB0G,EAAM5C,UAAUuM,EAAMrQ,UAEvB,CAACqQ,EAAMrQ,QAIV,IAAMgiB,EAAU1U,mBAAQ,WACtB,IAD4B,EACtB0U,EAAU,GADY,cAEZtb,EAAMb,QAFM,IAE5B,2BAA8B,CAAC,IAApBE,EAAmB,QAC5Bic,EAAQhc,KAAK,CACXhG,MAAO+F,EAAE3D,GACTuU,MAAO5Q,EAAEgX,iBALe,8BAQ5B,OAAOiF,IACN,CAACtb,EAAMjF,QAAQgJ,OAUlB,OACE,cAAC,KAAD,CACEkI,KAAMtC,EAAMsC,KACZ0T,YAAY,EACZrE,QAASA,EACTsE,iBAAiB,QACjB5b,UAAW2F,EAAM7F,QAAQqhB,UACzBO,YAAY,EACZC,SAfa,SAACpqB,GACF,KAAVA,GACJkqB,EAAWjlB,MAAK,WACd,OAAOR,EAAM5C,UAAU7B,GAAO1B,MAAK,kBAAM,SAazCP,MAAOqQ,EAAMrQ,MACbumB,SAAUlW,EAAMkW,SAChBC,WAAYnW,EAAMmW,aCxFxB,IAEa8F,GAAyBtiB,YAFvB,GAEuBA,CACpC4V,cAAS,YAAiD,EAA9CpV,QAA+C,IACjD2U,EAAgBM,KAAhBN,YAER,OACE,eAAC,KAAD,CAAc5T,MAAM,kBAAkBd,KAAK,QAAQuR,OAAQ,EAA3D,UACE,cAAC,KAAahJ,KAAd,CAAmB2D,MAAM,yBAAzB,SACE,cAACmV,GAAD,CACEnZ,KAAK,WACL3S,MAAOmf,EAAYhB,SAASH,sBAC5BuI,SAAUpH,EAAYhB,SAASP,yBAC/B4I,WAAYrH,EAAYhB,SAASL,gCAGrC,cAAC,KAAa9K,KAAd,CAAmB2D,MAAM,4BAAzB,SACE,cAACmV,GAAD,CACEnZ,KAAK,WACL3S,MAAOmf,EAAYhB,SAASF,yBAC5BsI,SAAUpH,EAAYhB,SAASN,4BAC/B2I,WACErH,EAAYhB,SAASJ,0C,mIClB5B,SAASwO,GACdC,EACAC,EACAC,EAHK,GAgBM,IAXTC,EAWQ,EAXRA,QACAC,EAUQ,EAVRA,QACAC,EASQ,EATRA,IACAC,EAQQ,EARRA,OAgCF,OAvBAH,OAAsBlpB,IAAZkpB,EAAwB,EAAIA,EACtCC,OAAsBnpB,IAAZmpB,EAAwB,EAAIA,OAEvBnpB,IAAXqpB,GACFJ,EAAM3pB,KAAI,YAAqB,IAAlBoe,EAAiB,EAAjBA,KAAM7Z,EAAW,EAAXA,EAAGylB,EAAQ,EAARA,EACpBP,EAAOQ,SAAS,OAAQ,CACtBC,MAAM,2BACJ9L,OACA7Z,EAAGA,EAAIqlB,EACPI,EAAGA,EAAIH,EACPM,WAAYT,EAASS,YAClBL,GALA,IAOHM,KAAML,EAAOtH,MACbsH,OAAQA,EAAOtH,MACf4H,UAAWN,EAAOjH,QAEpBrjB,KAAM,UACN6qB,WAAW,OAKVX,EAAM3pB,KAAI,YAAqB,IAAlBoe,EAAiB,EAAjBA,KAAM7Z,EAAW,EAAXA,EAAGylB,EAAQ,EAARA,EAC3B,OAAOP,EAAOQ,SAAS,OAAQ,CAC7BC,MAAM,cACJ9L,OACAgM,KAAM,QACN7lB,EAAGA,EAAIqlB,EACPI,EAAGA,EAAIH,EACPM,WAAYT,EAASS,YAClBL,GAELrqB,KAAM,OACN6qB,WAAW,OCtCV,SAASC,GAAmBb,GACjC,IAAMc,EAAed,EAASe,oBAAoB,GA+DlD,OAVAC,KAAGC,aACD,cACA,CACEC,KAAM,SAACd,EAAmBL,GACxB,OAvDO,SAACK,EAAmBL,GACfK,EAAIza,MAAM+V,QADgC,IAAD,IAGnDyF,GAAc,UAAAf,EAAIgB,gBAAJ,eAAcjpB,SAAU,EAuB5C,EAAyB6nB,EAASqB,SAChCjB,EAAIlW,MACJ4W,EACA,UAHMb,EAAR,EAAQA,MAAO7G,EAAf,EAAeA,MAMTpF,EAAQ+L,EAAOQ,SAAS,SAAU,CACtCC,MAAM,cAGJlnB,EALkB,IAMf8mB,EAAIza,OAET5P,KAAM,WASR,OANA+pB,GAASC,EAAOC,EAAUC,EAAO,CAC/BC,SAAU9G,EAAQ,EAClB+G,QAboB,GAaKgB,EACzBf,IAAG,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAKgB,gBAAP,aAAE,EAAezb,MACpB0a,OAAQ,CAAEtH,MAAO,QAASK,MAAO,KAE5BpF,EAOIkN,CAAKd,EAAsBL,KAGtC,eAGKC,E,8CCtFHsB,GAAU,SACdjoB,EACAkoB,GAEA,OAAQ,WAAmB,IAAD,uBAAd7G,EAAc,yBAAdA,EAAc,gBACxB,IAAM7jB,EAAM6jB,EAAKniB,KAAK,KAItB,YAHmBvB,IAAfuqB,EAAM1qB,KACR0qB,EAAM1qB,GAAOwC,EAAE,WAAF,EAAMqhB,IAEd6G,EAAM1qB,KAcJ2qB,GAUX,WAAYC,GAAuB,IAAD,gCATxBA,eASwB,OARxBC,0BAQwB,OAPxBC,iBAA8C,GAOtB,KANxBC,kBAA+C,GAMvB,KALxBC,uBAAoD,GAK5B,KAJxBC,0BAEN,GAE8B,KAqBlCC,SAAW,WACT,OAAO,EAAKC,kBAAkB,EAAG,EAAKP,UAAU/qB,OAAS,EAAG,IAtB5B,KAqClCsrB,kBAAoBV,IAClB,SACEpZ,EACAuV,EACAwE,GAEA,IAAMC,EAAiB,EAAKC,sBAC1Bja,EACAuV,EACAwE,GAEF,QAAuBjrB,IAAnBkrB,GAAgCA,GAAkB,EAEpD,MAAO,CACLE,YAAa,GACbC,SAAU,EAAKC,oBAAoBpa,EAAOuV,EAAKwE,IAWnD,IAPA,IAAMM,EAAe,CACnBC,OAAQ,EACRH,SAAUI,IACVL,YAAa,IAINI,EAAQ/E,EAAM,EAAG+E,EAAQta,EAAOsa,IACvC,GAAmC,QAA/B,EAAKf,UAAUe,GAAO3d,KAA1B,CAEA,IAAM6d,EAA2B,EAAKV,kBACpC9Z,EACAsa,EACAP,GAEIU,EAA2B,EAAKX,kBACpCQ,EAAQ,EACR/E,EACAwE,GACGS,EAAyBN,YAAY1rB,OAAS,EAC3CgsB,EAAyBN,YAAY1rB,OAAS,EAC9C,IAINgsB,EAAyBL,SACvBM,EAAyBN,SAC3BE,EAAaF,WAEbE,EAAaC,MAAQA,EACrBD,EAAaF,SACXK,EAAyBL,SACzBM,EAAyBN,SAC3BE,EAAaH,YACXM,EAAyBN,YAAYvR,QACvC0R,EAAaH,YAAY7oB,KAAKipB,GAC9BD,EAAaH,YAAcG,EAAaH,YAAYnS,OAClD0S,EAAyBP,cAK/B,MAAO,CACLA,YAAaG,EAAaH,YAC1BC,SAAUE,EAAaF,YAG3BpuB,KAAK6tB,2BAvG2B,KAkHlCc,kBAAoBtB,IAAQ,SAACpZ,EAAeuV,GAE1C,IADA,IAAIoF,EAAM,EACDpf,EAAIyE,EAAOzE,EAAIga,EAAKha,IACI,YAA3B,EAAKge,UAAUhe,GAAGoB,OAEtBge,GAAO,EAAKpB,UAAUhe,GAAG2V,OAQ3B,MAJiC,YAA7B,EAAKqI,UAAUhE,GAAK5Y,OAEtBge,GAAO,EAAKpB,UAAUhE,GAAKrE,OAEtByJ,IACN5uB,KAAK0tB,kBAhI0B,KAuIlCmB,mBAAqB,SAAC5a,EAAeuV,GAInC,IAHA,IAAIsF,EAAiB,EACjBC,EAAgB,EAEXvf,EAAIyE,EAAOzE,GAAKga,EAAKha,IAAK,CACjC,IAAMvL,EAAO,EAAKupB,UAAUhe,GACV,SAAdvL,EAAK2M,OACPke,GAAkB7qB,EAAK+qB,QACvBD,GAAiB9qB,EAAKgrB,QAI1B,MAAO,CAAEH,iBAAgBC,kBAnJO,KA8JlCb,sBAAwB,SAACja,EAAeuV,EAAa0F,GACnD,IAAMN,EAAM,EAAKD,kBAAkB1a,EAAOuV,GACpC2F,EAAgB,EAAK1B,qBAAqByB,GAEhD,GAAIN,IAAQO,EACV,OAAO,EAGT,IAAMC,EAAU,EAAKP,mBAAmB5a,EAAOuV,GAC/C,GAAIoF,EAAMO,EAAe,CACvB,GAAIC,EAAQN,eAAiB,EAC3B,OAGF,OAA+B,IAA3BM,EAAQN,gBACFK,EAAgBP,GAAO,IAEzBO,EAAgBP,GAAOQ,EAAQN,eAEzC,OAAIM,EAAQL,eAAiB,OAA7B,GAGQI,EAAgBP,GAAOQ,EAAQL,eApLP,KAuLlCM,mBAAqB,SAACpb,EAAeuV,EAAa0F,GAChD,IAAM7pB,EAAI,EAAK6oB,sBAAsBja,EAAOuV,EAAK0F,GACjD,YAAUnsB,IAANsC,GAAmBA,GAAK,GAClBmpB,IAGH,KAAP,IAAOnpB,EAAK,IA7LoB,KAgMlCgpB,oBAAsBhB,IACpB,SAACpZ,EAAeuV,EAAa0F,GAC3B,IAAMI,EAAe,EAAK9B,UAAUhE,GAC9B+F,EACkB,YAAtBD,EAAa1e,KAAqB0e,EAAaE,KAAO,EAClDC,EAAc,EAAKJ,mBAAmBpb,EAAOuV,EAAK0F,GAGxD,OAAIK,GAAe,EACV,SAAC,EAAIE,EAAcF,EAAgB,GAHlB,EAIfA,KAAiBf,IACnB,SAAC,EAAIiB,EAAgB,GALJ,EAOjB,SAAC,EAAIA,EAAgB,GAArB,SAAyBF,EAAe,GAPvB,IAU5BvvB,KAAK2tB,mBAhN2B,KAmNlC+B,yBAA2B,SACzBzb,EACAuV,EACA2E,EACAH,GAIA,IAFA,IAAIO,EAAQta,EACRma,EAAW,EACN5e,EAAI,EAAGA,EAAI2e,EAAY1rB,OAAQ+M,IACtC4e,GAAY,EAAKC,oBACfE,EACAJ,EAAY3e,GACZwe,EAAiBxe,GAEnB+e,EAAQJ,EAAY3e,GAAK,EAQ3B,OANA4e,GAAY,EAAKC,oBACfE,EACA/E,EACAwE,GAAkBG,EAAY1rB,OAAS,EAAI0rB,EAAY1rB,OAAS,EAAI,KArOtEzC,KAAKwtB,UAAYA,EAAUxB,MAAM3pB,KAAI,SAAC4B,GAOpC,OANAA,EAAOvB,OAAOwH,OAAO,GAAIjG,IACpBkhB,MAAQlhB,EAAKkhB,MAAQ,GACR,SAAdlhB,EAAK2M,OACP3M,EAAK+qB,QAAU/qB,EAAK+qB,QAAU,GAC9B/qB,EAAKgrB,OAAShrB,EAAKgrB,OAAS,IAEvBhrB,KAETjE,KAAKytB,qBAAuB,SAACje,GAAD,OAAege,EAAUmC,cAAcngB,GAAK,KCoC/DogB,GAAb,WAME,WAAY5D,EAAwB6D,GAAiC,IAAD,gCALpDC,gBAKoD,OAJpD9D,WAIoD,OAHpD6D,iBAGoD,OAFpDF,mBAEoD,OAwHpEI,YAAc,SAACC,GACb,IAAMpF,EAAQ,GACV3W,EAAQ,GAEZ+b,EAAaA,EAAWpT,SACbtX,KAAK,EAAK0mB,MAAMvpB,OAAS,GALmB,oBAOrCutB,GAPqC,IAOvD,2BAA8B,CAAC,IAAD,EAAnBxG,EAAmB,QACtBwC,EAAQ,EAAKA,MAAMpP,MAAM3I,EAAOuV,GAChCsB,EAAO,GAFe,cAKTkB,GALS,IAK5B,2BAA0B,CAAC,IAAhBjI,EAAe,QACN,YAAdA,EAAKnT,OAKO,QAAdmT,EAAKnT,MACLka,EAAKroB,OAAS,GACiB,QAA/BqoB,EAAKA,EAAKroB,OAAS,GAAGmO,MAGtBka,EAAKA,EAAKroB,OAAS,GAAGge,MAAQsD,EAAKtD,KACnCqK,EAAKA,EAAKroB,OAAS,GAAG0iB,OAASpB,EAAKoB,OAItC2F,EAAKxlB,KAAK5C,OAAOwH,OAAO,GAAI6Z,MArBF,8BAyBD,YAAzB,EAAKiI,MAAMxC,GAAK5Y,MAChB,EAAKob,MAAMxC,GAAK/I,KAAKhe,OAAS,GAE9BqoB,EAAKxlB,KAAK,EAAK0mB,MAAMxC,IAGvBvV,EAAQuV,EAAM,EACdoB,EAAMtlB,KAAKwlB,IAvC0C,8BA0CvD,OAAOF,GAlK2D,KAsKpEqF,OAAS,SACPrF,EADO,GAUwD,IAP7DsF,EAO4D,EAP5DA,WACAC,EAM4D,EAN5DA,cACA9J,EAK4D,EAL5DA,SACA+J,EAI4D,EAJ5DA,MAEAC,GAE4D,EAH5DvG,cAG4D,EAF5DuG,YAGIC,EAAiB,GACjBT,EAAcjF,EAAMvoB,KAAI,SAACyoB,GAAD,OAC5BA,EAAKyF,QAAO,SAACtP,EAAGra,GAAJ,OAAUqa,EAAIra,EAAEue,QAAO,MAE/BqL,EAAc5F,EAAMvoB,KAAI,SAACyoB,EAAMtb,GAAP,OAAa,EAAKmgB,cAAcngB,MAE9D,GAAI6gB,EAEF,IADA,IAAMI,EAASvU,KAAKC,IAAL,MAAAD,KAAI,aAAQ2T,IAClBrgB,EAAI,EAAGA,EAAIghB,EAAY/tB,OAAQ+M,IAClCghB,EAAYhhB,GAAKihB,IACnBD,EAAYhhB,GAAKihB,GAKvB,IAAK,IAAIjhB,EAAI,EAAGA,EAAIob,EAAMnoB,OAAQ+M,IAAK,CACrC,IAAMsb,EAAOF,EAAMpb,GAGbof,EAAMiB,EAAYrgB,GAClBkhB,EAAaF,EAAYhhB,GACzBmhB,EAAS7F,EAAKlnB,QAAO,SAACgD,GAAD,MAAkB,SAAXA,EAAEgK,QAAiBnO,OAC/CmuB,EACJhC,EAAM8B,GAAwB,YAAVN,EAChB,EAAKN,WACL5T,KAAK2U,IAAIH,EAAa9B,GAAO+B,EAAS,EAAKb,WAG3CzD,GAAK7c,EAAI,GAAK0gB,EAAc7J,GAAY8J,EAAgB,GAAM,EAChEvpB,EAAI,EAQR,GANc,WAAVwpB,EACFxpB,IAAM8pB,EAAa9B,GAAO,EACP,UAAVwB,IACTxpB,GAAK8pB,EAAa9B,GAGhBgC,IAAc,EAAKd,WAAY,CACjC,IAAMgB,EAAgBpuB,OAAOwH,OAC3B,CACEtD,IACAylB,IACA0E,cAAenC,EACfM,WAAY1f,GAEdsb,EAAK,IAEPgG,EAAcrQ,KAAOqK,EAAKzoB,KAAI,SAACuE,GAAD,OAAOA,EAAE6Z,QAAMnc,KAAK,IAClDgsB,EAAehrB,KAAKwrB,OACf,CAAC,IAAD,gBACchG,GADd,IACL,2BAAyB,CAAC,IAAf/G,EAAc,QACjBgN,EAA8B,SAAdhN,EAAKnT,KAAkBggB,EAAY7M,EAAKoB,MACxD6L,EAAetuB,OAAOwH,OAC1B,CACEtD,IACAylB,IACA0E,gBACA7B,WAAY1f,GAEduU,GAGFnd,GAAKmqB,EACLT,EAAehrB,KAAK0rB,IAdjB,gCAmBT,MAAO,CAAEhF,MAAOsE,EAAgBT,gBApPhC7vB,KAAKgsB,MAAQA,EACbhsB,KAAK6vB,YAAcA,EAEfnrB,MAAMC,QAAQkrB,GAChB7vB,KAAK2vB,cAAgB,SAACngB,GAAD,OACnBA,EAAIqgB,EAAYptB,OACZotB,EAAYrgB,GACZqgB,EAAYA,EAAYptB,OAAS,IAEvCzC,KAAK2vB,cAAgB,SAACngB,GAAD,OAAeqgB,GAGtC7vB,KAAK8vB,WAAa,EAbgD,oBAc/C9D,GAd+C,IAclE,2BAA0B,CAAC,IAAhBjI,EAAe,QACxB,GAAkB,SAAdA,EAAKnT,KAAiB,CACxB5Q,KAAK8vB,WAAa/L,EAAKoB,MACvB,QAjB8D,+BANtE,yDAsCE,SACE1E,EACAwQ,EACAC,EACAC,GAEkB,IADlBC,EACiB,uDADK,IAEhBpF,EAAyB,GAE3BqF,EAAS5Q,EAAK6Q,MAAM,SAAS1tB,QAAO,SAAC2tB,GAAD,OAAOA,EAAE9uB,OAAS,KAC1D,QAAkBM,IAAdouB,GAA2BA,EAAU1uB,OAAS,EAAG,CACnD,IAAM+uB,EAAK,IAAIC,OAAJ,cAAkBN,EAAU7sB,KAAK,IAAjC,QAA4C,KACvD+sB,EAASA,EAAOhI,SAAQ,SAACkI,GAAD,OAAOA,EAAEG,MAAMF,MAKzC,IAAM1B,EAAamB,EAAU,KACvBU,EAAcV,EAAU,KACxBW,EAAU,SAACC,GAAD,MAAkB,KAAKC,KAAKD,EAAKE,OAAO,KAGlD/C,EAAUc,EAAa,EACvBb,EAASa,EAAa,EAwD5B,OAtDAuB,EAAO/c,SAAQ,SAACid,GACd,GAAIK,EAAQL,GAAZ,CACE,IAAMS,EAAU,CACdphB,KAAM,OACNuU,MAAO2K,EACPb,SACAD,UACAvO,KAAM8Q,GAERvF,EAAM1mB,KAAK0sB,QAeb,GAVIhG,EAAMvpB,OAAS,GAAsC,QAAjCupB,EAAMA,EAAMvpB,OAAS,GAAGmO,MAC9Cob,EAAM1mB,KAAK,CACTsL,KAAM,UACNuU,MAAO,EACPqK,KAAM,EACNyC,SAAS,EACTxR,KAAM,KAINyQ,EAAa,CACf,IAAMG,EAASH,EAAYK,GAC3BF,EAAO/c,SAAQ,SAAC4d,EAAG1iB,GACjB,IAAM2iB,EAAS,CAAEvhB,KAAM,MAAOuU,MAAO8L,EAAUiB,GAAIzR,KAAMyR,GAEzD,GADAlG,EAAM1mB,KAAK6sB,GACP3iB,EAAI6hB,EAAO5uB,OAAS,EAAG,CACzB,IAAM2vB,EAAkB,CACtBxhB,KAAM,UACN6P,KAAM,IACN0E,MAAOwM,EACPnC,KAAM4B,EACNa,SAAS,GAEXjG,EAAM1mB,KAAK8sB,WAGV,CACL,IAAMD,EAAS,CAAEvhB,KAAM,MAAOuU,MAAO8L,EAAUM,GAAI9Q,KAAM8Q,GACzDvF,EAAM1mB,KAAK6sB,OAIfnG,EAAM1mB,KAAK,CACTsL,KAAM,OACNuU,MAAO,EACP6J,QAAS,IACTC,OAAQ,EACRxO,KAAM,KAGDuL,MArHX,KCtEaqG,GAuBX,WACEC,EACAC,GACC,IAAD,gCAzBQC,gBAyBR,OAxBQC,kBAwBR,OAvBQC,YAuBR,OArBcC,UAqBd,OApBcnG,gBAoBd,OAnBcnG,cAmBd,OAlBc8J,cAAwB,MAkBtC,KAhBcD,gBAgBd,OAfcJ,gBAed,OAdcqB,UAAsB,CACpC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAMA,KA0BF/D,SAAW,SACT3M,EACAmS,GAMI,IALJxC,EAKG,uDAL8C,UAM3C5C,EAAY,IAAIoC,GACpBA,GAAUiD,iBACRpS,EACA,EAAKqS,YACL,EAAKC,UACL,EAAK5B,WAEPyB,GAUIzE,EAAc,IAAIZ,GAAmBC,GAAWM,WACnDK,YACH,EAA+BX,EAAUyC,OACvCzC,EAAUuC,YAAY5B,GACtB,CACEiC,QACAD,cAAe,EAAKA,cACpB9J,SAAU,EAAKA,SACf6J,WAAY,EAAKA,WACjBpG,cAAe,SACfuG,YAAY,IARRrE,EAAR,EAAQA,MAAO6D,EAAf,EAAeA,YAYT1K,EAAQjJ,KAAKC,IAAL,MAAAD,KAAI,aAAQ2T,IACpBze,GAAU+c,EAAY1rB,OAAS,GAAK,EAAKytB,WAE/C,MAAO,CAAElE,MAAOA,EAAO7G,QAAO/T,WArE9B,KAyEF4hB,eAAiB,SACfvS,GAMI,IAAD,EALHwS,EAKG,uDALiB,KACpBC,EAIG,uDAJuB,GAKtBC,EACF,EAAKV,aAAaW,WAChB,EAAKN,YAAYrS,GACjBwS,EACAC,GACE,GACAT,EAAe,EAAKA,aAAaY,UAAUF,GAExCtD,EAGL4C,EAHF7H,MAIF,EAAyB,EAAKwC,SAC5B3M,EACAoP,EAAYjT,MAAM,EAAG,GACrB,UAHMoP,EAAR,EAAQA,MAAO7G,EAAf,EAAeA,MAKTtR,EAASqI,KAAKC,IAAL,MAAAD,KAAI,aAAQ8P,EAAM3pB,KAAI,SAAC4B,GAAD,OAAUA,EAAKirB,gBAAe,EAI7DoE,IADNH,EAAShO,EAAQ,GAEXoO,IACF1f,EAAS,IAAM,GAAKA,EAAS,GAAK,EAAIA,EAAS,GAAK,EAAKqc,WAC3D,EAAKA,WAAa,EAzBjB,cA2BoBlE,GA3BpB,IA2BH,2BAA8B,CAAC,IAAtBvM,EAAqB,QAC5BA,EAAW7Y,GAAK0sB,EAChB7T,EAAW4M,GAAKkH,GA7Bf,8BAgCH,MAAO,CACLvH,MAAOA,EACPmH,WAlHF,KAuHFJ,UAAY,SAAClB,GACX,OAAOA,EAAKpvB,OAAS,EAAI,EAAKiwB,OAAOK,UAAUlB,GAAQ,CAACA,IAxHxD,KA4HF/E,oBAAsB,SAAC0G,GACrB,OAAOA,EAAS,EAAKV,YAAY,WA7HjC,KAgJFA,YAAc,SAACrS,GACb,OAAO,EAAK+R,WAAWM,YAAYrS,GAAM0E,OAhJzC,IAAMsO,EAASC,SAASC,cAAc,UACtC3zB,KAAKwyB,WAAaiB,EAAOG,WAAW,MACpC5zB,KAAK8vB,WAAa9vB,KAAK8yB,YAAY,KAEnC9yB,KAAK2yB,KAAOL,EAAQK,MAAR,UAAmBL,EAAQjM,SAA3B,cAAyCiM,EAAQ9F,YAC7DxsB,KAAKwsB,WAAa8F,EAAQ9F,WAC1BxsB,KAAKqmB,SAAWiM,EAAQjM,SACxBrmB,KAAKwyB,WAAWG,KAAO3yB,KAAK2yB,KAE5B3yB,KAAK0yB,OAAS,IAAImB,KAAOC,WAEP/wB,IAAdwvB,SAC2BxvB,IAAzBwvB,EAAUrC,aACZlwB,KAAKmwB,cAAgBoC,EAAUrC,iBAELntB,IAAxBwvB,EAAUpB,YACZnxB,KAAKmxB,UAAYoB,EAAUpB,YAI/BnxB,KAAKkwB,WAAalwB,KAAKqmB,SAAWrmB,KAAKmwB,cACvCnwB,KAAKyyB,aAAe,IAAIsB,GAAa/zB,OAhD5BqyB,GA6JJ2B,WAAa,SAACC,GACnB,IAAMviB,EAAQwiB,iBAAiBD,GACvBE,EAA6DziB,EAA7DyiB,UAAWC,EAAkD1iB,EAAlD0iB,YAAa/T,EAAqC3O,EAArC2O,WAAYgG,EAAyB3U,EAAzB2U,SAAUmG,EAAe9a,EAAf8a,WACtD,MAAO,CACLmG,KAAK,GAAD,OAAKwB,EAAL,YAAmBC,EAAnB,YAAmC/T,EAAnC,YAAkDgG,EAAlD,YAA+DmG,GACnEnG,SAAU7Y,WAAW6Y,GACrBmG,eAYC,IAAMuH,GAYX,WAAYM,GAAsB,IAAD,gCAXvBA,eAWuB,OAVvBnE,gBAUuB,OATvBoE,mBASuB,OAMjClB,WAAa,SACXmB,GAOA,IAJY,IAFZtB,EAEW,uDAFS,KACpBC,EACW,uDADe,GAGrBjf,EAAe,EAARuV,EAAWyJ,EACnBuB,OAAazxB,EACRyM,EAAI,EAAGA,EAAIyjB,EAAWzjB,IAAK,CAClC,GAAIga,EAAMvV,IAAU,EAAG,CACrBugB,EAAahL,EACb,MAGF,IAAM2J,EAASjX,KAAKuY,MAAMxgB,EAAQuV,GAAO,GACnCkL,EAAI,EAAKrB,UAAUF,GAAQwB,YAEjC,GAAID,EAAIH,EACNtgB,EAAQkf,MADV,CAKA,KAAIuB,EAAIH,EAAarB,GAArB,CAIAsB,EAAarB,EACb,MAJE3J,EAAM2J,GAOV,QAAmBpwB,IAAfyxB,EACF,MAAM,IAAI5c,MAAJ,sBACW2c,EADX,2EACwFtB,EADxF,cAEF,EAAKI,UAAUJ,GAAW0B,cAOhC,OAAOH,GA9CwB,KAkDjCnB,UAAY,SAACF,GACX,QAAmCpwB,IAA/B,EAAKuxB,cAAcnB,GAAuB,CAK5C,IAJA,IAAM9Z,EAAI,EAAKub,yBAAyBzB,GAElCvI,EAAQ,GACRiK,EAAS,GACNrlB,EAAI6J,EAAG7J,EAAI,EAAGA,IACrBob,EAAMtlB,KAAK,EAAKqpB,kBAAkBnf,EAAG2jB,IACrC0B,EAAOvvB,KAAK6tB,EAAS,EAAKjD,YAAc1gB,EAAI,KAE9Cob,EAAMtlB,KAAK,EAAKwvB,yBAAyB3B,IACzC0B,EAAOvvB,KAAK6tB,EAAS,EAAKjD,WAAa,GACvC,IAAK,IAAI1gB,EAAI6J,EAAI,EAAG7J,GAAK,EAAGA,IAC1Bob,EAAMtlB,KAAKslB,EAAMpb,IACjBqlB,EAAOvvB,KAAK6tB,EAAS,EAAKjD,YAAc1gB,EAAI,KAG9C,EAAK8kB,cAAcnB,GAAU,CAC3BvI,QACAiK,SACAE,YAAanK,EAAMvR,GACnBsb,YAAa/J,EAAM2F,QAAO,SAACtP,EAAGkR,GAAJ,OAAUlR,EAAIkR,MAI5C,OAAO,EAAKmC,cAAcnB,IA3EK,KA+EjCyB,yBAA2B,SAACzB,GAC1B,OAAOjX,KAAK8Y,OAAO7B,EAAS,EAAKjD,WAAa,GAAK,EAAKA,aAhFzB,KAoFjCvB,kBAAoB,SAAChtB,EAAewxB,GAClC,OAAiE,EAA1DjX,KAAK+Y,KAAK,SAAA9B,EAAU,GAAV,SAAe,EAAKjD,WAAavuB,EAAU,KArF7B,KAwFjCmzB,yBAA2B,SAAC3B,GAC1B,OAA6D,EAAtDjX,KAAK+Y,KAAK,SAAA9B,EAAU,GAAV,SAAe,EAAKjD,WAAa,EAAM,KAxFxDlwB,KAAKq0B,UAAYA,EACjBr0B,KAAKkwB,WAAamE,EAAUnE,WAC5BlwB,KAAKs0B,cAAgB,IC1JZY,GAAb,WAQE,WAAYjB,EAA2BtkB,GAAsB,IAAD,gCAPpD8G,aAOoD,OANpDwd,eAMoD,OALrDjZ,WAKqD,OAJpD5Y,UAIoD,OAHrDuN,WAGqD,OAFpDoc,cAEoD,OA8G5DoJ,aAAe,SAACxlB,GACd,QAAKiR,KAAEwU,QAAQ,EAAKzlB,MAAMsgB,OAAQtgB,EAAMsgB,UAIpC,EAAKtgB,MAAM0lB,0BAA4B1lB,EAAM0lB,0BAIjD,EAAK1lB,MAAQA,GACN,KAxHmD,KA2H5D2lB,QAAU,WACR,EAAKta,MAAMsa,WA5H+C,KA2M5DC,UAAY,WACV,EAAKva,MAAMua,aA5M+C,KAgN5DC,iBAAmB,SAACpzB,EAAiBqzB,GAC/B,EAAKhf,QAAU,GACjB,EAAKuE,MAAMtS,QAEb,EAAKtG,KAAOA,EACZ,EAAK4Y,MAAM5Y,KAAK,CAAE0T,MAAO1T,EAAK0T,MAAOU,MAAOpU,EAAKoU,QACjD,EAAKwE,MAAMoH,SACX,EAAK3L,SAAW,OAEC1T,IAAb0yB,GACFA,KA1NwD,KA+N5DC,aAAe,SAACnD,GACd,EAAKvX,MAAM0a,aAAanD,GACxB,EAAKvX,MAAMiV,UAjO+C,KA2O5D0F,oBAAsB,YASN,IARdC,EAQa,EARbA,OACAxkB,EAOa,EAPbA,OASI0a,EAAQ,EAAK9Q,MAAMhZ,IAAI,SAC3B8pB,EAAM+J,cACN,IAAIC,EAAOhK,EAAMiK,gBACjB,GAAqB,IAAfD,EAAK3Q,OAA+B,IAAhB2Q,EAAK1kB,OAAe,CAE5C,IAEI4kB,EAFAC,EAAa,EAAKhC,UAAUiC,YAGhC,OAAQ9kB,EAAOR,MACb,IAAK,YACHolB,EAAcF,EAAK1kB,OAASA,EAAO+kB,YACnC,MACF,IAAK,uBACH,IAAIC,EAAiB,EAAKnC,UAAUoC,wBAAwBpP,IACxDqP,EAAkBrwB,OAAOswB,QAE7BP,EADqBtC,SAAS8C,gBAAgBC,cAG3CL,EAAiBE,GAClBllB,EAAOslB,aACT,MACF,IAAK,aACHV,EAAc,EAAKrmB,MAAMgnB,WAE7B,EAAK3b,MAAM4b,WAAWX,EAAYD,IACnB,IAAXJ,EACF,EAAK5a,MAAM6b,OACTZ,EAAa,EAAIH,EAAK3Q,MAAQ,EAC9B6Q,EAAc,EAAIF,EAAK1kB,OAAS,GAGlC,EAAK4J,MAAM6b,OACT,EAAKlnB,MAAMmnB,YAAc,EACzB,EAAKnnB,MAAMonB,WAAa,GAI9B,OAAOjB,GA3RmD,KAgT5DkB,kBAAoB,SAClBC,EACAC,EACA9xB,EACAqhB,EACAgP,EACA0B,EACAC,GAEA,GAAIH,GAAY,EAMd,OAJA7xB,EAAE,WAAF,eAAMqhB,cACW1jB,IAAb0yB,GACFA,KAKJ,IACMK,EADQ,EAAK9a,MAAMhZ,IAAI,SACV+zB,gBAInB,GAFAoB,EAAoBA,GAAqB,QAExBp0B,IAAbq0B,EAAwB,CAC1B,GACElb,KAAK2U,IAAIuG,EAASjS,MAAQ2Q,EAAK3Q,OAASgS,GACxCjb,KAAK2U,IAAIuG,EAAShmB,OAAS0kB,EAAK1kB,QAAU+lB,EA8B1C,YAzBA7wB,YAAW,WACT,IACM+wB,EADQ,EAAKrc,MAAMhZ,IAAI,SACN+zB,gBAGrB7Z,KAAK2U,IAAIiF,EAAK3Q,MAAQkS,EAASlS,QAAUgS,GACzCjb,KAAK2U,IAAIiF,EAAK1kB,OAASimB,EAASjmB,SAAW+lB,EAG3C,EAAKH,kBACHC,EAAW,EACXC,EACA9xB,EACAqhB,EACAgP,EACA0B,EACAE,IAGFjyB,EAAE,WAAF,eAAMqhB,SACW1jB,IAAb0yB,GACFA,OAGHyB,GAGH5wB,YAAW,WACT,EAAK0wB,kBACHC,EAAW,EACXC,EACA9xB,EACAqhB,EACAgP,EACA0B,EACArB,KAEDoB,QAGL5wB,YAAW,WACT,EAAK0wB,kBACHC,EACAC,EACA9xB,EACAqhB,EACAgP,EACA0B,EACArB,KAEDoB,IAhYLl3B,KAAKyW,QAAU,EACfzW,KAAK2P,MAAQA,EACb3P,KAAKi0B,UAAYA,EACjBj0B,KAAKoC,KAAO,CACV0T,MAAO,GACPU,MAAO,IAQTxW,KAAK+rB,SAAW,IAAIsG,GALR,CACV7F,WACE,wLACFnG,SAAU,KLeT,SAA0B0F,GAC/B,IAAMc,EAAed,EAASe,oBAAoB,GAE5CG,EAAO,SAACd,EAAiBL,GAA2B,IAAD,EACjDwL,EAAKnL,EAAIza,MAAM6lB,cAAgB,EAC/BC,EAAKrL,EAAIza,MAAM+lB,eAAiB,EACtC,EAAiC1L,EAASqB,SACxCjB,EAAIlW,MACJkW,EAAIpiB,MAAQ8iB,EACZ,UAHMb,EAAR,EAAQA,MAAO7G,EAAf,EAAeA,MAAO/T,EAAtB,EAAsBA,OAOhB2O,EAAQ+L,EAAOQ,SAAS,OAAQ,CACpCC,MAAM,cAGJpH,MAAOA,EAAa,EAALmS,EACflmB,OAAQA,EAAc,EAALomB,GACdrL,EAAIza,OAET5P,KAAM,SASR,OALA+pB,GAASC,EAAOC,EAAUC,EAAO,CAC/BC,QAASqL,EACTpL,QAASsL,EACTrL,IAAG,UAAEA,EAAIgB,gBAAN,aAAE,EAAczb,QAEdqO,GAGTgN,KAAGC,aACD,YACA,CACEC,KAAM,SAACd,EAAmBL,GACxB,OAAOmB,EAAKd,EAAoBL,IAKlC4L,SAPF,SAOW51B,EAAMxC,EAAO4W,GAOpB,IAP2B,IAAD,EACpBiW,EAAMjW,EAAMyhB,KACZC,EAAQzL,EAAIyL,MACZC,EAAS1L,EAAI0L,OACf3P,EAAc,GACd4P,EAAW,0BAAQF,EAAMzK,gBAAd,aAAQ,EAAgBzb,OAEvC,MAA2BhP,OAAOC,QAAQi1B,EAAMlmB,OAAhD,eAAyD,CAApD,0BAAO5P,EAAP,KAAawL,EAAb,KACiB,kBAATA,IAGX4a,EAAOpmB,GAAQwL,GAXS,oBAaNuqB,GAbM,IAa1B,2BACE,IAD2B,IAAlB/2B,EAAiB,QAC1B,MAA2B4B,OAAOC,QAChCwpB,EAAIjE,OAAQpnB,IADd,eAEG,CAFE,0BAAOgB,EAAP,KAAawL,EAAb,KAGU,UAATxL,EACFY,OAAOwH,OAAO4tB,EAAaxqB,GAE3B4a,EAAOpmB,GAAQwL,GApBK,8BAyB1B,IAAMwe,EAAQK,EAAIL,MAClBA,EAAMpjB,QACNukB,EACE,CACEhX,MAAO2hB,EAAM3hB,MACblM,KAAM6tB,EAAM7tB,KACZ2H,MAAOwW,EACPiF,SAAU,CAAEzb,MAAOomB,IAErBhM,KAIN,eK5FAiM,CAAiB/3B,KAAK+rB,UACtBa,GAAmB5sB,KAAK+rB,UAExB,IAAMiM,EAAe,CAAC,cAAe,aAEjCroB,EAAM0lB,yBACR2C,EAAM1yB,KAAK,CACTsL,KAAM,qBACNqnB,eAAe,IAInBj4B,KAAKgb,MAAQ,IAAI+R,KAAGmL,MAAM,CACxBjE,UAAWA,EACX9O,MAAO8O,EAAUkE,YACjB/mB,OAAQzB,EAAMgnB,WACd1G,OAAQtgB,EAAMsgB,QAAU,CACtBrf,KAAM,QACNwnB,gBAAgB,EAChBC,aAAc,GACdC,YAAa,IAEfC,YAAa,CACX3nB,KAAM,YACNc,MAAO,CACL0a,OAAQ,QACRoM,SAAU,CACR/L,KAAM,QACNzgB,KAAM+gB,KAAG0L,MAAMC,SAAS,EAAG,KAG/BvL,SAAU,CACRzb,MAAO,CACL+a,KAAM,QACNkM,WAAY,CACVlM,KAAM,UACNL,OAAQ,UACR3E,QAAS,CAAC,EAAG,EAAG,EAAG,GACnB0L,OAAQ,MAKhB6E,MAAO,CACLY,QAASZ,EACTa,KAAM,CAAC,iBAITC,gBAAiB,CACfC,OAAQ,CACNC,QAAS,EAGT/iB,MAAO,CACL+iB,QAAS,IAGbC,SAAU,CACRD,QAAS,GAGT/iB,MAAO,CACL+iB,QAAS,MAIfE,gBAAiB,CACfH,OAAQ,CACN3M,OAAQ,QACR4M,QAAS,GAEXC,SAAU,CACRD,QAAS,GACTvY,KAAM,CACJuY,QAAS,aAMSj2B,IAAtB4M,EAAMwpB,aACRn5B,KAAKgb,MAAMoe,GAAG,cAAc,SAACC,GAC3B,EAAK1pB,MAAMwpB,YAAaE,EAAMp1B,KAAK0zB,KAAKC,MAAMl2B,YAIxBqB,IAAtB4M,EAAM2pB,aACRt5B,KAAKgb,MAAMoe,GAAG,cAAc,SAACC,GAC3B,EAAK1pB,MAAM2pB,YAAaD,EAAMp1B,KAAK0zB,KAAKC,UAhHhD,sDAwIE,SAAqB9hB,EAAoBU,GAMvC,IAAI+iB,EAAWzjB,EAAMzT,KAAI,SAACm3B,EAAGhqB,GAC3B,IAAIoB,EAGAA,EAFA4oB,EAAEvjB,MAAM4T,OAAOpnB,OAAS,IACV,SAAZ+2B,EAAEzZ,OAAgC,WAAZyZ,EAAEzZ,OACnByZ,EAAEzZ,MAAQ,QAKZyZ,EAAEzZ,MAGX,IAAM7J,EAAmB,CACvBxU,GAAI83B,EAAE93B,GACNuU,MAAOujB,EAAEvjB,MACTrF,KAAMA,EACNc,MAAM,6BACD8nB,EAAE9nB,OADF,IAEHyhB,OAAQ,EACRsE,cAAe,EACfF,aAAc,IAEhBpK,SAAU,CACRzb,MAAO8nB,EAAEC,aAMb,MAHgB,SAAZD,EAAEzZ,QACJ7J,EAAKxE,MAAOyhB,OAAS,GAEhBjd,KAIL0K,KAAE8Y,KAAKljB,EAAMnU,KAAI,SAACm3B,GAAD,OAAOA,EAAE93B,OAAKe,SAAW+T,EAAM/T,QAClDrB,QAAQF,MACN,+CACAsV,EAAMnU,KAAI,SAACm3B,GAAD,OAAOA,EAAE93B,OAIvB,IA9CsE,EA8ClEi4B,EAAWnjB,EAAMnU,KAAI,SAAC5C,GAAD,MAAQ,CAC/BiC,GAAIjC,EAAEiC,GACN4V,OAAQ7X,EAAE6X,OACV7I,OAAQhP,EAAEgP,OACVwH,MAAOxW,EAAEwW,UAIL2jB,EAAK,IAAIz5B,IACX05B,GAAmB,EAvD+C,cAwDnDrjB,GAxDmD,IAwDtE,2BAA0B,CAAC,IAAhBa,EAAe,QAClByiB,EAAI,UAAMziB,EAAKC,OAAX,YAAqBD,EAAK5I,QACpC,GAAImrB,EAAGp5B,IAAIs5B,GAAO,CAChBD,GAAmB,EACnB,MAEFD,EAAGp0B,IAAIs0B,IA9D6D,8BAoEtE,OAJID,GACF9M,KAAGgN,KAAKC,qBAAqBL,GAGxB,CAAE7jB,MAAOyjB,EAAU/iB,MAAOmjB,OA5MrC,KC7BMzR,GAAS,CACbtF,KAAM,CACJC,QAAS,QAEX7H,MAAO,CACLif,SAAU,WACV9U,MAAO,QAIT+U,QAAS,CACPD,SAAU,WACVhT,IAAK,EACLkT,KAAM,EACN,gBAAiB,CACftwB,aAAc,EACdyH,YAAa,EACbC,aAAc,GAEhB,gBAAiB,CACf1H,aAAc,EACd4d,QAAS,EACT,QAAS,CACPpB,SAAU,MAIhB1c,SAAU,CACRC,OAAQ,iBACRC,aAAc,GAEhBoqB,UAAW,CAET9O,MAAO,OACP,WAAY,CACVtC,QAAS,WAKTuX,GAAc,CAClBC,MAAO,CACLzpB,KAAM,QACNwnB,gBAAgB,EAChBC,aAAc,GACdC,YAAa,IAEfgC,MAAO,CACL1pB,KAAM,QACN2pB,QAAS,KACTC,QAAS,GACTC,QAAS,KASAC,GAAiBpxB,YAAW4e,GAAX5e,CAC5BqxB,sBACE,WA4BEC,GACI,IA3BFl5B,EA2BC,EA3BDA,GACA+U,EA0BC,EA1BDA,QACAX,EAyBC,EAzBDA,MACAU,EAwBC,EAxBDA,MACA1M,EAuBC,EAvBDA,QACA6F,EAsBC,EAtBDA,MACA3F,EAqBC,EArBDA,UAqBC,IApBD6wB,+BAoBC,MApByB,CAAEjqB,KAAM,YAAaulB,YAAa,GAoB3D,MAnBD+D,eAmBC,aAlBDvwB,gBAkBC,aAjBDmxB,eAiBC,MAjBSV,GAiBT,EACGnG,EAAY8G,iBAAO,MACnB/f,EAAQ+f,sBAA4Bh4B,GAE1Ci4B,8BACEJ,GACA,iBAA2B,CACzB5f,MAAO,kBAAMA,EAAMmG,SACnB8Z,SAAU,WACR,YAAsBl4B,IAAlBiY,EAAMmG,UACVnG,EAAMmG,QAAQwU,oBAAoB,CAChCC,QAAQ,EACRxkB,OAAQypB,KAEH,QAKb1b,qBAAU,WACR,GAA0B,OAAtB8U,EAAU9S,QAAd,MACsBpe,IAAlBiY,EAAMmG,UACRnG,EAAMmG,QAAU,IAAI+T,GAClBjB,EAAU9S,QACVxR,GAAS,CACPgnB,WAAY,OAKlB,IAAI3E,EAAIhX,EAAMmG,QACd,QAAcpe,IAAV4M,EACcqiB,EAAEmD,aAAaxlB,KAE7BqiB,EAAEsD,UACFta,EAAMmG,QAAU,IAAI+T,GAClBjB,EAAU9S,QACVxR,GAAS,CACPgnB,WAAY,MAGhB3E,EAAIhX,EAAMmG,SAGd6Q,EAAEwD,iBAAiBN,GAAQgG,cAAcplB,EAAOU,IAAQ,WACrDvQ,OAAe+rB,EAAIA,EAEpBA,EAAEgF,kBACA,GACA,GACAhF,EAAE2D,oBACF,CAAC,CAAEC,QAAQ,EAAMxkB,OAAQypB,KACzB,qBAGH,CAACn5B,EAAI+U,EAASX,EAAOU,EAAO7G,EAAOkrB,IAEtC,IAAMM,GACQ,IAAZjB,EAAoB,KAClB,cAACkB,GAAD,CACEC,SAAsB,cAAZnB,EACVlf,MAAOA,EACP8f,QAASA,IAIf,OACE,sBAAK9wB,UAAWA,EAAhB,UACE,qBAAKA,UAAWF,EAAQ8Y,KAAxB,SAA+BnM,IAC/B,sBAAKzM,UAAWF,EAAQkR,MAAxB,UACGmgB,EACD,qBACEP,IAAK3G,EACLjqB,UACEF,EAAQmqB,WAAatqB,EAAW,IAAMG,EAAQH,SAAW,gBAU5DyxB,GAAe9xB,YAAW4e,GAAX5e,EAC1B,YASmC,IAAD,IARhC+xB,gBAQgC,SAPhCrgB,EAOgC,EAPhCA,MACAlR,EAMgC,EANhCA,QACAgxB,EAKgC,EALhCA,QAMA,EAA8BhY,oBAAS,GAAvC,mBAAOwY,EAAP,KAAgBC,EAAhB,KACA,EAA4BzY,mBAAS,SAArC,mBAAOmN,EAAP,KAAeuL,EAAf,KAEMC,EAAe,WACfJ,GAAUE,GAAW,IAErBG,EAAe,WACfL,GAAUE,GAAW,IAG3B,GAAIF,IAAaC,EACf,OACE,qBACEtxB,UAAWF,EAAQowB,QACnBuB,aAAcA,EACdC,aAAcA,EAHhB,SAKE,cAAC,IAAD,CAAQ1xB,UAAU,OAAlB,SACE,cAAC,KAAD,QAMR,IAAM2xB,EAAc,WAAO,IAAD,EACxB,UAAA3gB,EAAMmG,eAAN,SAAenG,MAAMua,aAGjBqG,EAAe,SAAC95B,GAAoC,IAAD,IACvD05B,EAAU15B,GACV,UAAAkZ,EAAMmG,eAAN,SAAeuU,aAAaoF,EAAQh5B,IACpC,UAAAkZ,EAAMmG,eAAN,SAAe6V,kBAAkB,GAAI,GAAI2E,EAAa,IAAI,gBAY5D,OACE,qBACE3xB,UAAWF,EAAQowB,QACnBuB,aAAcA,EACdC,aAAcA,EAHhB,SAKE,eAAC,IAAD,CAAO3xB,KAAM,EAAGqmB,MAAM,QAAtB,UACE,cAAC,KAAD,CAASvlB,MAAM,mBAAf,SACE,cAAC,IAAD,CAAQb,UAAU,OAAO6F,QAAS8rB,EAAlC,SACE,cAAC,KAAD,QAGJ,cAAC,KAAD,CAAS9wB,MAAM,6BAAf,SACE,cAAC,IAAD,CAAQb,UAAU,OAAlB,SACE,cAAC6xB,GAAA,EAAD,QAGJ,cAAC,KAAD,CAAShxB,MAAM,sBAAf,SACE,cAAC,KAAD,CACEixB,QACE,cAAC,KAAD,CAAMjsB,QAxBS,SAACpQ,GAC1Bm8B,EAAan8B,EAAEmD,MAuBL,SACGF,OAAOkP,KAAKwoB,IAAa/3B,KAAI,SAAC4tB,GAAD,OAC5B,cAAC,KAAK3d,KAAN,UAAyB2d,GAATA,QAJxB,SASE,eAAC,IAAD,CACEjmB,UAAU,OACV6c,KAAM,cAACkV,GAAA,EAAD,IACNlsB,QAvCQ,WACH,UAAXogB,GAAoB2L,EAAa,SACtB,UAAX3L,GAAoB2L,EAAa,UAkC7B,UAKG3L,EALH,IAKW,cAAC+L,GAAA,EAAD,mB,mBC9QnB9T,GAAS,CACbiD,UAAW,CACThG,MAAO,QAET8W,WAAY,CACVjc,gBAAiBkc,KAAM,GACvB,UAAW,CACTlc,gBAAiBkc,KAAM,GACvBpX,MAAO,UAGXqX,aAAc,CACZnc,gBAAiBoc,KAAO,GACxB,UAAW,CACTpc,gBAAiBoc,KAAO,GACxBtX,MAAO,UAGXuX,UAAW,CACTrc,gBAAiBsc,KAAK,GACtB,UAAW,CACTtc,gBAAiBsc,KAAK,GACtBxX,MAAO,WAOAyX,GAAsBjzB,YAAW4e,GAAX5e,CACjC4V,cACE,YAWmC,IAVjC/D,EAUgC,EAVhCA,GACA7b,EASgC,EAThCA,MACAwmB,EAQgC,EARhCA,WACAD,EAOgC,EAPhCA,SACA/b,EAMgC,EANhCA,QAOQ6U,EAAeI,KAAfJ,WACF8M,EAAa,IAAIT,GAIjB1J,EAAU1U,mBAAQ,WACtB,IAD4B,EACtB0U,EAGe,GAJO,cAKZ3C,EAAWxZ,QALC,IAK5B,2BAAmC,CAAC,IAAzBE,EAAwB,QACjCic,EAAQhc,KAAK,CACXsL,KAAM,QACNlP,GAAI2D,EAAE3D,GACNpC,MAAM,SAAD,OAAW+F,EAAE3D,IAClBuU,MAAOkF,EAAGH,MAAMnE,SAASV,UAAU9Q,EAAE+Q,IAAK/Q,EAAEgX,kBAVpB,kDAcZlB,EAAGH,MAAMlF,OAdG,IAc5B,2BAAgC,CAAC,IAAtB0jB,EAAqB,QAC9BlY,EAAQhc,KAAK,CACXsL,KAAM4oB,EAAEljB,SACR5U,GAAI83B,EAAE93B,GACNpC,MAAM,GAAD,OAAKk6B,EAAEljB,SAAP,YAAmBkjB,EAAE93B,IAC1BuU,MAAOkF,EAAGH,MAAMnE,SAASZ,MAAMujB,GAC/BxvB,UAAWF,EAAQ0vB,EAAEljB,aApBG,8BAuB5B,OAAOgL,IACN,CAAC3C,EAAW5d,QAAQgJ,OAUvB,OACE,cAAC,KAAD,CACE4b,YAAY,EACZrE,QAASA,EACTsE,iBAAiB,QACjB5b,UAAWF,EAAQqhB,UACnBO,YAAY,EACZC,SAda,SAACpqB,GACF,KAAVA,GACJkqB,EAAWjlB,MAAK,WACd,OAAOmY,EAAWvb,UAAU7B,GAAO1B,MAAK,kBAAM,SAY9CP,WAAiByD,IAAVzD,OAAsByD,EAAtB,UAAqCzD,EAAMsR,KAA3C,YAAmDtR,EAAMoC,IAChEmkB,SAAU,SAACvmB,EAAOk9B,GAChB3W,EAAS,CAAEjV,KAAM4rB,EAAO5rB,KAAMlP,GAAI86B,EAAO96B,MAE3CokB,WAAY,SAACxmB,EAAOk9B,GAClB1W,EAAW,CAAElV,KAAM4rB,EAAO5rB,KAAMlP,GAAI86B,EAAO96B,YChGjDwmB,GAAS,CACbjN,MAAO,CACLkK,MAAO,OACPzb,UAAW,OACX+yB,cAAe,EACf5yB,aAAc,cAEd,OAAQ,CACNigB,cAAe,UAEjB,WAAY,CACVrC,QAAS,UAGb0D,UAAW,CACThG,MAAO,SAkDEuX,IA9CyBpzB,YAAW4e,GAAX5e,CACpC4V,cACE,YAWmC,IAVjC/D,EAUgC,EAVhCA,GACArR,EASgC,EAThCA,QACAxK,EAQgC,EARhCA,MACAumB,EAOgC,EAPhCA,SACAC,EAMgC,EANhCA,WASMxE,EAAU1U,mBAAQ,WACtB,OAAOuO,EAAGH,MAAMlF,MAAMzT,KAAI,SAAC6T,GACzB,MAAO,CACL5W,MAAO4W,EAAKxU,GACZuU,MAAOC,EAAKD,YAGf,CAACkF,IAEJ,OACE,cAAC,KAAD,CACEuQ,YAAY,EACZ/F,YAAY,EACZrE,QAASA,EACTsE,iBAAiB,QACjB5b,UAAWF,EAAQqhB,UACnB7rB,MAAOA,EACPumB,SAAUA,EACVC,WAAYA,QAYExc,YAAW4e,GAAX5e,CACtB4V,cACE,YAAuE,IAAD,EAAnE/D,EAAmE,EAAnEA,GAAI9D,EAA+D,EAA/DA,KACL,GADoE,EAAzDvN,QAC2BiV,MAA9BJ,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,cACpB,EAA4BoE,wBACjB/f,IAATsU,EACI,CAAEzG,KAAMuK,EAAGH,MAAM9E,KAAKmB,EAAKC,QAAQhB,SAAU5U,GAAI2V,EAAKC,aACtDvU,GAHN,mBAAOuU,EAAP,KAAeqlB,EAAf,KAKA,EAA4B7Z,wBACjB/f,IAATsU,EACI,CAAEzG,KAAMuK,EAAGH,MAAM9E,KAAKmB,EAAK5I,QAAQ6H,SAAU5U,GAAI2V,EAAK5I,aACtD1L,GAHN,mBAAO0L,EAAP,KAAemuB,EAAf,KAKA,EAAsB9Z,mBAAQ,OAAqBzL,QAArB,IAAqBA,OAArB,EAAqBA,EAAMjB,KAAzD,mBAAOA,EAAP,KAAYymB,EAAZ,KACA,EAA0C/Z,oBAAS,GAAnD,mBAAOrI,EAAP,KAAsBqiB,EAAtB,KAKMC,EAAUnwB,mBAAQ,WACtB,YAAe7J,IAAXuU,GAAwC,UAAhBA,EAAO1G,YACpB7N,IAAX0L,GAAwC,UAAhBA,EAAOmC,OAEjCuK,EAAGH,MAAMzD,QAAQD,EAAO5V,GAAI+M,EAAO/M,WACzBqB,IAATsU,GACCC,EAAO5V,KAAO2V,EAAKC,QACnB7I,EAAO/M,KAAO2V,EAAK5I,YAEtB,CAAC0M,EAAGH,MAAMvE,QAAV,OAAmBa,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQ5V,GAA3B,OAA+B+M,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQ/M,KAE1Cyd,qBAAU,gBACKpc,IAATsU,QAC6CtU,IAA7C2b,EAAcV,iBAAiB3G,EAAKjB,MAExCsI,EAAcvb,SAAS,CAAEoB,WAAY,CAAE6R,IAAKiB,EAAKjB,SAChD,CAACsI,EAAerH,EAAMjB,IAsEzB,OACE,eAAC,KAAD,CACE4mB,SAAU,CAAE1d,KAAM,GAClB2d,WAAY,CAAE3d,KAAM,IACpB4d,WAAW,EACXjN,OAAO,aAJT,UAME,cAAC,KAAK3d,KAAN,CACE2D,MAAM,SACNknB,eAAgBJ,EAAU,aAAUh6B,EACpCq6B,KACEL,EACI,wDACAh6B,EANR,SASE,cAACw5B,GAAD,CACEphB,GAAIA,EACJ7b,MAAOgY,EACPuO,SAAU8W,EACV7W,WAAY,kBAAM6W,OAAU55B,QAGhC,cAAC,KAAKuP,KAAN,CAAW2D,MAAM,SAAjB,SACE,cAACsmB,GAAD,CACEphB,GAAIA,EACJ7b,MAAOmP,EACPoX,SAAU+W,EACV9W,WAAY,kBAAM8W,OAAU75B,QAGhC,cAAC,KAAKuP,KAAN,CAAW2D,MAAM,YAAjB,SACE,cAACmV,GAAD,CACE9rB,WACUyD,IAARqT,EAAA,UACIsI,EAAcV,iBAAiB5H,UADnC,aACI,EAAqC1U,QACrCqB,EAEN8iB,SAAU,SAACnkB,GAAD,aAAQm7B,EAAM,UAACne,EAAc1c,IAAIN,UAAnB,aAAC,EAAuB0U,MAChD0P,WAAY,SAACxmB,GAAD,OAAWu9B,OAAO95B,QAGlC,cAAC,KAAKuP,KAAN,CAAW2D,MAAM,gBAAjB,SACE,cAAC,KAAD,CACEyP,QAASjL,EACTgL,SAAU,SAAC4X,GAAD,OAASP,EAAiBO,QAGxC,cAAC,KAAK/qB,KAAN,CAAW2D,MAAM,SAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACErF,KAAK,UACLf,QAxHK,WACb,QAAY9M,IAARqT,QAAgCrT,IAAXuU,QAAmCvU,IAAX0L,IAE7CsuB,EAAJ,CAEA,IACIjlB,EAAUC,EADRzK,EAAOoR,EAAcV,iBAAiB5H,GAG5C,GAAoB,UAAhBkB,EAAO1G,KAAkB,CAC3B,IAAM0sB,EAAM3e,EAAW3c,IAAIsV,EAAO5V,IAClCoW,EAAWqD,EAAGH,MAAMtD,aACpByD,EAAGH,MAAMvB,aAAa,CACpB/X,GAAIoW,EACJ1B,IAAKknB,EAAIlnB,IACTH,MAAOqnB,EAAIjhB,cACX5B,eAAe,EACfnE,SAAU,oBAGZwB,EAAWR,EAAO5V,GAGpB,GAAoB,UAAhB+M,EAAOmC,KAAkB,CAC3B,IAAM0sB,EAAM3e,EAAW3c,IAAIyM,EAAO/M,IAClCqW,EAAWoD,EAAGH,MAAMtD,aACpByD,EAAGH,MAAMvB,aAAa,CACpB/X,GAAIqW,EACJ3B,IAAKknB,EAAIlnB,IACTH,MAAOqnB,EAAIjhB,cACX5B,eAAe,EACfnE,SAAU,oBAGZyB,EAAWtJ,EAAO/M,GAGpByZ,EAAGH,MAAMjB,QAAQ,CACfzC,OAAQQ,EACRrJ,OAAQsJ,EACR3B,IAAK9I,EAAK8I,IACVqE,gBACAxE,MAAO3I,EAAK+O,qBAGDtZ,IAATsU,GAEF8D,EAAGH,MAAMhB,WAAW3C,EAAKC,OAAQD,EAAK5I,QAGxC9D,IAAM4yB,eAwEEpT,cACapnB,IAAXuU,QACWvU,IAAX0L,QACQ1L,IAARqT,UAhECrT,IAATsU,IACM,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQ5V,MAAO2V,EAAKC,SACd,OAAN7I,QAAM,IAANA,OAAA,EAAAA,EAAQ/M,MAAO2V,EAAK5I,QACpB2H,IAAQiB,EAAKjB,KACbqE,IAAkBpD,EAAKoD,gBA8DfsiB,EARJ,uBAaUh6B,IAATsU,EACC,cAAC,IAAD,CAAQzG,KAAK,UAAU3F,QAAQ,EAAM4E,QAhF9B,gBACF9M,IAATsU,IACJ8D,EAAGH,MAAMhB,WAAW3C,EAAKC,OAAQD,EAAK5I,QACtC9D,IAAM4yB,eA6EE,oBAGE,kB,UCxNLC,GAAmBte,cAC9B,SAACvP,GAAwE,IAAD,QAC9DgP,EAAeI,KAAfJ,WACR,EAAsBmE,mBAAQ,UAAqBnT,EAAMuG,YAA3B,aAAqB,EAAYE,KAA/D,mBAAOA,EAAP,KAAYymB,EAAZ,KACA,EAA0C/Z,oBACxC,UAAAnT,EAAMuG,YAAN,eAAYuE,iBAAiB,GAD/B,mBAAOA,EAAP,KAAsBqiB,EAAtB,KAKA3d,qBAAU,gBACWpc,IAAf4M,EAAMuG,WACuCnT,IAA7C4b,EAAWR,cAAcxO,EAAMuG,KAAKE,MAExCuI,EAAWxb,SAAS,CAAEoB,WAAY,CAAE6R,IAAKzG,EAAMuG,KAAKE,SACnD,WAACzG,EAAMuG,YAAP,aAAC,EAAYE,MAuChB,OACE,eAAC,IAAMgJ,SAAP,WACE,cAAC,KAAK9M,KAAN,CAAW2D,MAAM,QAAjB,SACE,cAACqV,GAAD,CACEhsB,WACUyD,IAARqT,EAAA,UAAoBuI,EAAWR,cAAc/H,UAA7C,aAAoB,EAA+B1U,QAAKqB,EAE1D8iB,SAAU,SAACnkB,GAAD,aAAQm7B,EAAM,UAACle,EAAW3c,IAAIN,UAAhB,aAAC,EAAoB0U,MAC7C0P,WAAY,kBAAM+W,OAAO95B,QAG7B,cAAC,KAAKuP,KAAN,CAAW2D,MAAM,gBAAjB,SACE,cAAC,KAAD,CACEyP,QAASjL,EACTgL,SAAU,SAAC4X,GAAD,OAASP,EAAiBO,QAGxC,cAAC,KAAK/qB,KAAN,CAAW2D,MAAM,SAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACErF,KAAK,UACLf,QA1DK,gBACD9M,IAARqT,SAEerT,IAAf4M,EAAMuG,KAERvG,EAAMwL,GAAGH,MAAMvB,aAAa,CAC1B/X,GAAIiO,EAAMwL,GAAGH,MAAMtD,aACnBtB,IAAKA,EACLH,MAAO0I,EAAWR,cAAc/H,GAAMiG,cACtC/F,SAAU,aACVmE,cAAeA,IAIjB9K,EAAMwL,GAAGH,MAAMpB,gBAAgBjK,EAAMuG,KAAKxU,GAAI,CAC5C0U,IAAKA,EACLH,MAAO0I,EAAWR,cAAc/H,GAAMiG,cACtC5B,cAAeA,IAInB9K,EAAM8tB,WAsCEtT,cAAkBpnB,IAARqT,UA5BDrT,IAAf4M,EAAMuG,MACNvG,EAAMuG,KAAKE,MAAQA,GACnBzG,EAAMuG,KAAKuE,gBAAkBA,GAuBzB,uBAOgB1X,IAAf4M,EAAMuG,KACL,cAAC,IAAD,CAAQtF,KAAK,UAAU3F,QAAQ,EAAM4E,QAxC9B,WACfF,EAAMwL,GAAGH,MAAMrB,WAAWhK,EAAMuG,KAAMxU,IACtCiO,EAAM8tB,UAsCE,oBAGE,gBAQHC,GAAqBxe,cAChC,SAACvP,GAA0E,IAAD,IAChE8O,EAAgBM,KAAhBN,YACR,EAAoBqE,mBACU,eAA5B,UAAAnT,EAAMuG,YAAN,mBAAY5W,aAAZ,eAAmBsR,MAAuBjB,EAAMuG,KAAK5W,MAAMoC,QAAKqB,GADlE,mBAAOrB,EAAP,KAAWi8B,EAAX,KAGA,EAAsC7a,wBACrB/f,IAAf4M,EAAMuG,MAA8C,iBAAxBvG,EAAMuG,KAAKI,UACnC3G,EAAMuG,KAAK4C,aAFjB,mBAAOA,EAAP,KAAoB8kB,EAApB,KAMMC,EAAejxB,mBACnB,6BACS7J,IAAPrB,SACiBqB,IAAf4M,EAAMuG,WACgCnT,IAAtC4M,EAAMwL,GAAGH,MAAM5D,eAAe1V,SACdqB,IAAf4M,EAAMuG,OACL,UAAAvG,EAAMwL,GAAGH,MAAM5D,eAAe1V,UAA9B,eAAmCA,MAAOiO,EAAMuG,KAAKxU,MAC3D,CAACiO,EAAMwL,GAAGH,MAAMvE,QAAS/U,IAG3B,QAAmBqB,IAAf4M,EAAMuG,MAAgD,WAA1BvG,EAAMuG,KAAK5W,MAAMsR,KAC/C,OAAO,sDAoDT,OACE,eAAC,IAAMwO,SAAP,WACE,cAAC,KAAK9M,KAAN,CACE2D,MAAM,SACNknB,eAAgBU,EAAe,aAAU96B,EACzCq6B,KAAMS,EAAe,qCAAkC96B,EAHzD,SAKE,cAACwoB,GAAD,CACEjsB,MAAOoC,EACPmkB,SAAU8X,EACV7X,WAAY,kBAAM6X,OAAM56B,QAG5B,cAAC,KAAKuP,KAAN,CAAW2D,MAAM,iBAAjB,SACE,cAAC,KAAD,CACEyP,QAAS5M,EACT2M,SAAU,SAAC4X,GAAD,OAASO,EAAeP,QAGtC,cAAC,KAAK/qB,KAAN,CAAW2D,MAAM,SAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACErF,KAAK,UACLf,QAxEK,WACb,QAAW9M,IAAPrB,IACAm8B,EAAJ,CAEA,IAAMC,EAAMrf,EAAYzc,IAAIN,QAETqB,IAAf4M,EAAMuG,KAERvG,EAAMwL,GAAGH,MAAMtB,eAAe,CAC5BhY,GAAIiO,EAAMwL,GAAGH,MAAMtD,aACnBpY,MAAO,CACLsR,KAAM,YACNlP,GAAIA,EACJ0U,IAAK0nB,EAAI1nB,KAEXH,MAAO6nB,EAAIzhB,cACX/F,SAAU,eACVwC,YAAaA,IAIfnJ,EAAMwL,GAAGH,MAAMlB,kBAAkBnK,EAAMuG,KAAKxU,GAAI,CAC9CpC,MAAO,CACLsR,KAAM,YACNlP,GAAIA,EACJ0U,IAAK0nB,EAAI1nB,KAEXH,MAAO6nB,EAAIzhB,cACX/F,SAAU,eACVwC,YAAaA,IAIjBnJ,EAAM8tB,WAwCEtT,cAAiBpnB,IAAPrB,GAAoBm8B,UA9BrB96B,IAAf4M,EAAMuG,MACNvG,EAAMuG,KAAK4C,cAAgBA,GACA,cAA1BnJ,EAAMuG,KAAK5W,MAAMsR,MAAwBjB,EAAMuG,KAAK5W,MAAMoC,KAAOA,GAyB9D,uBAOgBqB,IAAf4M,EAAMuG,KACL,cAAC,IAAD,CAAQtF,KAAK,UAAU3F,QAAQ,EAAM4E,QA1C9B,WACfF,EAAMwL,GAAGH,MAAMrB,WAAWhK,EAAMuG,KAAMxU,IACtCiO,EAAM8tB,UAwCE,oBAGE,gBAQHM,GAAWz0B,YA3NT,GA2NSA,CACtB4V,cACE,YAAuE,IAApE/D,EAAmE,EAAnEA,GAAIjF,EAA+D,EAA/DA,KACL,GADoE,EAAzDpM,QACqBgZ,oBAC1B,OAAJ5M,QAAI,IAAJA,OAAA,EAAAA,EAAMI,WAAY,eADpB,mBAAOA,EAAP,KAAiB0nB,EAAjB,KAGMP,EAAS,kBAAM9yB,IAAM4yB,cAE3B,OACE,eAAC,KAAD,CACEP,SAAU,CAAE1d,KAAM,GAClB2d,WAAY,CAAE3d,KAAM,IACpB4d,WAAW,EACXjN,OAAO,aAJT,eAMYltB,IAATmT,EACC,cAAC,KAAK5D,KAAN,CAAW2D,MAAM,YAAjB,SACE,eAAC,KAAMgoB,MAAP,CACE3+B,MAAOgX,EACPmP,SAAU,SAAC4T,GAAD,OAAW2E,EAAY3E,EAAM5qB,OAAOnP,QAC9C4+B,YAAY,QAHd,UAKE,cAAC,KAAMvtB,OAAP,CAAcrR,MAAM,aAApB,wBACA,cAAC,KAAMqR,OAAP,CAAcrR,MAAM,eAApB,+BAGF,KACU,eAAbgX,EACC,cAACknB,GAAD,CACEriB,GAAIA,EACJjF,KAAyB,gBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMI,UAA4BJ,OAAOnT,EAC/C06B,OAAQA,IAGV,cAACC,GAAD,CACEviB,GAAIA,EACJjF,KAAyB,kBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMI,UAA8BJ,OAAOnT,EACjD06B,OAAQA,WCrQf,SAASU,GACd1X,EACAC,GAEA,IAAI7b,EACA8b,EACJ,OAAQF,EAAK7V,MACX,IAAK,OACH+V,EAAU,cAAC+V,GAAD,gBAAcjW,IACxB5b,OAAsB9H,IAAd0jB,EAAKpP,KAAqB,WAAa,cAC/C,MACF,IAAK,OACHsP,EAAU,cAACoX,GAAD,gBAActX,IACxB5b,OAAsB9H,IAAd0jB,EAAKvQ,KAAqB,WAAa,cAInDvL,IAAMic,KAAK,CACT/b,MACE,sBAAM6G,MAAO,CAAEyV,aAAc,GAAItE,QAAS,gBAA1C,SAA6DhY,IAE/D8b,UACAG,UAAW,CAAEd,QAAS,GACtBhb,cAAe,CAAE0G,MAAO,CAAEmR,QAAS,SACnCkE,cAAc,EACdC,MAAM,EACNN,OAAQA,EACRvB,MAAO,qBACPzT,MAAO,CAAEuV,IAAK,MClBlB,IAAMiB,GAAS,CACbtF,KAAM,CACJC,QAAS,QAEXub,eAAgB,CACd/sB,UAAW,GAEbrJ,MAAO,CACL4B,OAAO,cAAD,OAAgBy0B,KAAO,GAAvB,eACN,UAAW,CACTvZ,MAAM,GAAD,OAAKwX,KAAK,GAAV,iBAGTgC,cAAe,CACbte,gBAAgB,GAAD,OAAKsc,KAAK,GAAV,iBAINiC,GAAyBj1B,YAAW4e,GAAX5e,CACpC4V,cACE,YAAuE,IAApEpV,EAAmE,EAAnEA,QAASmR,EAA0D,EAA1DA,MACJujB,EAAWzD,sBAAuCh4B,GACxD,EAAwC+f,mBAAS,GAAjD,mBAAO2b,EAAP,KAAqBC,EAArB,KACQlgB,EAAuBO,KAAvBP,mBACF5C,EAAM4C,EAAmBzK,YAAYkH,EAAMvZ,IAC3Cma,EAAS2C,EAAmB1C,iBAAiBb,GACnD,GAAIwjB,GAAgB7iB,EAAInZ,OAASoZ,EAAOpZ,OAAQ,CAE9C,IAAMf,EAAK8c,EAAmBhD,cAAcP,GACtCjT,EAAQoT,GAAmBujB,6BAC/Bj9B,EADY,aAENka,EAAInZ,QACVwY,GAEFuD,EAAmB7W,eAAeK,GAClC6T,EAAOvW,KAAK0C,GAGd,IAAMmT,EACJsjB,EAAe7iB,EAAInZ,OACfmZ,EAAI6iB,GACJ5iB,EAAO4iB,EAAe7iB,EAAInZ,QAEhC,EAAuBmK,mBAAQ,WA4C7B,MAAO,CA3COuO,EAAGH,MAAMlF,MAAMzT,KAAI,SAAC6T,GAChC,IAAI6J,EAA2BrO,EAC/B,OAAQwE,EAAKI,UACX,IAAK,aACHyJ,EAAQ,SACRrO,EAAQ,CAAE+a,KAAMyP,KAAM,GAAI9P,OAAQ8P,KAAM,IACxC,MACF,IAAK,YACHnc,EAAQ,OACRrO,EAAQ,CAAE+a,KAAM6P,KAAK,GAAIlQ,OAAQkQ,KAAK,IACtC,MACF,IAAK,eAEDvc,EADsB,cAApB7J,EAAK5W,MAAMsR,KACL,SAEA,OAGRc,EADEwE,EAAK4C,YACC,CAAE2T,KAAM,UAAWL,OAAQ,WAE3B,CAAEK,KAAM2P,KAAO,GAAIhQ,OAAQ,WAErC,MACF,QACE,MAAM,IAAIxU,MAAJ,gBAGV,MAAO,CACLlW,GAAIwU,EAAKxU,GACTuU,MAAO2oB,GAAazjB,EAAIjF,GACxBxE,QACAqO,YAGU5E,EAAGH,MAAMxE,MAAMnU,KAAI,SAACgV,GAChC,MAAO,CACL3V,GAAG,GAAD,OAAK2V,EAAKC,OAAV,YAAoBD,EAAK5I,OAAzB,YAAmC4I,EAAKjB,KAC1CkB,OAAQD,EAAKC,OACb7I,OAAQ4I,EAAK5I,OACbwH,MAAOoB,EAAKpB,aAMf,CACD8E,GAAcG,QAAQC,GAAMA,EAAGhT,QAAU,KACzCgT,EAAGzZ,GACHyZ,EAAGH,MAAMvE,UAjDX,mBAAOX,EAAP,KAAcU,EAAd,KAqDMqoB,EAAY,gBACS97B,IAArBy7B,EAASrd,SAGbqd,EAASrd,QAAQ8Z,YAEnB6D,aAAW,IAAKD,EAAW,CAAC1jB,EAAGzZ,QAAiBqB,IAAby7B,IAwBnC,IArBA,IAoBMO,EAAU,GAzGoD,WA0G3DhjB,GACP,IAAM9X,EAAO8X,EAAMH,EAAInZ,OAASmZ,EAAIG,GAAOF,EAAOE,EAAMH,EAAInZ,QACtDu8B,EAAajjB,IAAQ0iB,EAC3BM,EAAQz5B,KACN,cAAC,IAAD,CACEyE,KAAK,QAEL6G,KAAMouB,EAAa,UAAY,UAC/BnvB,QAAS,kBAAM6uB,EAAgB3iB,IAC/B/R,UACE/F,EAAK+W,MAAMtE,OAASqE,GAAcG,QAAQjX,GACtC6F,EAAQ9B,OACPg3B,EAAU,WAAOl1B,EAAQw0B,eAAkB,IAC5C,GATR,SAYGr6B,EAAKnC,MAVDmC,EAAKvC,MANPqa,EAAM,EAAGA,EAAMH,EAAInZ,OAASoZ,EAAOpZ,OAAQsZ,IAAQ,EAAnDA,GAuBT,IAAIkjB,EAkEJ,OAjEAA,EACE,eAAC,IAAD,CAAOvtB,MAAO,CAAEwU,MAAO,SAAvB,UACsB,IAAnB6Y,EAAQt8B,QAAgBoZ,EAAOpZ,OAAS,GAAKmZ,EAAI,GAAGZ,MAAMtE,MACzD,eAAC,IAAM0I,SAAP,WACE,oDACC2f,EACD,cAAC,KAAD,CAASnuB,KAAK,gBAEd,KAOHgL,EAAInZ,OAASoZ,EAAOpZ,OAAS,EAC5B,cAAC,KAAD,CACEoI,MAAM,qCACNq0B,UAAW,WACLnkB,GAAcG,QAAQC,GACxBqD,EAAmB5W,kBAAkBuT,EAAGhT,SAExCqW,EAAmBxX,OAAOmU,EAAGzZ,IAE/Bg9B,EAAgB,IAElB5zB,OAAO,MACPI,WAAW,KAXb,SAaE,cAAC,IAAD,CAAQnB,KAAK,QAAQkB,QAAQ,EAA7B,4BAIA,KACH8P,GAAcG,QAAQC,IAAOA,EAAGH,MAAMtE,MACrC,cAAC,IAAD,CACE3M,KAAK,QACL8F,QAAS,kBACPkL,GAAcG,QAAQC,GAClBqD,EAAmBhX,OAAO2T,GAC1BqD,EAAmB/W,OAAO0T,IALlC,wBAUE,KAEJ,cAAC,IAAD,CAAQpR,KAAK,QAAQ8F,QA5FH,WACpB,IAAMnO,EAAK8c,EAAmBhD,cAAcP,GACtCkkB,EAAOvjB,EAAInZ,OAASoZ,EAAOpZ,OAC3BuF,EAAQoT,GAAmBujB,6BAC/Bj9B,EACA8c,EAAmB4gB,wBAAwBnkB,GAC3CA,GAEFjT,EAAMgT,MAAQG,EAAGH,MAAMlE,QACvB9O,EAAMgT,MAAMtZ,GAAKA,EACjB8c,EAAmB7W,eAAeK,GAClC02B,EAAgBS,IAiFd,uBAIA,cAAC,IAAD,CAAQp1B,KAAK,QAAQ6G,KAAK,UAAUuZ,UAAU,EAA9C,oBAGA,cAAC,IAAD,CACEpgB,KAAK,QACL6G,KAAK,UACLc,MAAO,CAAEinB,WAAYuD,KAAM,GAAImD,YAAanD,KAAM,IAClDrsB,QAzFW,WACfK,GAAOovB,YACJtzB,KAAK,CAAEgI,QAASiH,EAAMvZ,KACtBmM,iCAA4B9K,GAAW,IAkFxC,uBAYF,gCACGk8B,EACD,eAAC,IAAD,WACE,cAAC,IAAD,CAAQl1B,KAAK,QAAQ8F,QAASgvB,EAA9B,8BAGA,cAAC,IAAD,CAAQ90B,KAAK,QAAQ8F,QAAS,kBAAMsuB,GAAS,CAAEvtB,KAAM,OAAQuK,QAA7D,sBAGA,cAAC,IAAD,CAAQpR,KAAK,QAAQ8F,QAAS,kBAAMsuB,GAAS,CAAEvtB,KAAM,OAAQuK,QAA7D,yBAIF,cAACuf,GAAD,CACEE,IAAK4D,EACLx0B,UAAWF,EAAQs0B,eACnB18B,GAAIyZ,EAAGzZ,GACP+U,QAAS0E,EAAGH,MAAMvE,QAClBX,MAAOA,EACPU,MAAOA,EACP0jB,SAAS,EACTW,wBAAyB,CAAEjqB,KAAM,YAAaulB,YAAa,IAC3DxmB,MAAO,CACLgnB,WAAY,IACZ1G,OAAQ,CACNrf,KAAM,QACN2pB,QAAS,KACTC,QAAS,GACTC,QAAS,IAEXtB,YAAa,SAACvgB,GACZulB,GAAS,CACPvtB,KAAM,OACNuK,KACAjF,KAAMiF,EAAGH,MAAM9E,KAAK0C,MAGxB0gB,YAAa,SAACjiB,GACZ8mB,GAAS,CACPvtB,KAAM,OACNuK,KACA9D,KAAM8D,EAAGH,MAAM3D,KAAKA,EAAKC,OAAQD,EAAK5I,qBAWlDmwB,GAAe,SAACzjB,EAAmBjF,GACvC,OAAQA,EAAKI,UACX,IAAK,YAEL,IAAK,eACH,OAAOJ,EAAKD,MACd,IAAK,aACH,OAAOkF,EAAGH,MAAMnE,SAASZ,MAAMC,KCtQxBqpB,GAAYj2B,YAfV,CACb2R,MAAO,CACL5J,UAAW,EACX,4BAA6B,CAC3BzH,OAAQ,iBACRC,aAAc,EACduW,WAAY,8BAGhB6T,UAAW,CACT3P,WAAY,GACZkb,YAAa,KAIQl2B,CACvB4V,cAAS,YAA6C,IAA1CpV,EAAyC,EAAzCA,QAEV,EACEiV,KADMV,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,cAAeC,EAAjD,EAAiDA,mBAI3CxK,EAAU9D,GAAO+K,MAAMjO,eAAgBgH,QAC7C,EA6HJ,SAA4Bc,EAA4Bd,GACtD,IAAMyrB,EAAiB,GACjBC,EAAcxvB,GAAO+K,MAAMhO,iBAC3B0yB,EAA2B,OAAhBD,EAAuB,GAAKA,EAAYn+B,MACnDq+B,EAAuBhzB,mBAC3B,iBAAoB,KAAb+yB,EAAkB7qB,EAAW+qB,iBAAiBF,GAAY,KACjE,CAAC7qB,EAAY6qB,IAKf,EAA0B7c,mBAAS,CACjC9O,SAAU,EACVG,YAAa,EACb5S,MAAO,GACPR,QAAS,GACT+1B,WAAY,EACZv0B,MAAO,EACPu9B,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVxpB,QAAS,IAXX,mBAAO3V,EAAP,KAAc42B,EAAd,KAcAvY,qBAAU,WACR,IAAM/Z,EAAE,wCAAG,4CAAA6b,EAAA,yDAGHlF,EAAM6E,KAAEsf,YAAYp/B,EAAMC,QAASiT,KAC1BlT,EAAMS,QAAUo+B,GAAY7+B,EAAMC,QAAQgb,KAAS/H,GAJzD,iCAQkB9U,QAAQyH,IAAI,CACnCmO,EAAWvT,MAAM,CACf+B,MAAOm8B,EACPv7B,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNq7B,GADK,IAERl+B,GAAI,CAAE+C,GAAI,MAAOnF,MAAO0U,OAG5Bc,EAAWvT,MAAM,CACf+B,MAAOm8B,EACPv7B,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNq7B,GADK,IAERl+B,GAAI,CAAE+C,GAAI,KAAMnF,MAAO0U,SAxBtB,mCAQAmsB,EARA,KAQKC,EARL,KA6BDr/B,EAAUq/B,EAAIr/B,QACjBsB,KAAI,SAACqe,GAAD,OAASA,EAAIhf,MACjBsa,OAAOmkB,EAAIp/B,QAAQsB,KAAI,SAACqe,GAAD,OAASA,EAAIhf,OACvC2+B,EAAW,CACTlsB,WAAYisB,EAAIr/B,QAAQ0B,OACxB1B,UACAwB,MAAO69B,EAAI79B,MAAQ49B,EAAI59B,MACvBu0B,WAAYsJ,EAAI79B,MAAQ69B,EAAIr/B,QAAQ0B,OACpCu9B,QAASI,EAAI79B,OAASk9B,EACtBQ,SAAUE,EAAI59B,OAASk9B,EACvBK,QAASM,EAAIr/B,QAAQ0B,OAAS,EAC9Bs9B,QAASI,EAAIp/B,QAAQ0B,OAAS,GAxCzB,2BA4CK,IAARsZ,GAAcjb,EAAMk/B,QA5CjB,kCA6CalrB,EAAWvT,MAAM,CACjC+B,MAAOm8B,EACPv7B,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNq7B,GADK,IAERl+B,GAAI,CAAE+C,GAAI,KAAMnF,MAAO0U,OAnDtB,QA6CCosB,EA7CD,OAsDLC,EAAW,CACTlsB,WAAYisB,EAAIr/B,QAAQ0B,OACxBq0B,WAAYsJ,EAAI79B,MAAQ69B,EAAIr/B,QAAQ0B,OACpC1B,QAASq/B,EAAIr/B,QAAQsB,KAAI,SAACqe,GAAD,OAASA,EAAIhf,MAAIsa,OAAOlb,EAAMC,SACvDi/B,QAASI,EAAI79B,OAASk9B,EACtBK,QAASM,EAAIr/B,QAAQ0B,OAAS,GA3D3B,2BA6DIsZ,IAAQjb,EAAMC,QAAQ0B,OAAS,GAAM3B,EAAMm/B,SA7D/C,kCA8DanrB,EAAWvT,MAAM,CACjC+B,MAAOm8B,EACPv7B,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNq7B,GADK,IAERl+B,GAAI,CAAE+C,GAAI,KAAMnF,MAAO0U,OApEtB,QA8DCmsB,EA9DD,OAuELE,EAAW,CACTlsB,WAAY4H,EACZhb,QAASD,EAAMC,QAAQib,OAAOmkB,EAAIp/B,QAAQsB,KAAI,SAACqe,GAAD,OAASA,EAAIhf,OAC3Du+B,SAAUE,EAAI59B,OAASk9B,EACvBM,QAASI,EAAIp/B,QAAQ0B,OAAS,GA3E3B,wBA8EL49B,EAAW,CACTlsB,WAAY4H,EACZgkB,QAAShkB,EAAMjb,EAAMC,QAAQ0B,OAAS,EACtCq9B,QAAS/jB,EAAM,GAjFZ,QAqFT2b,EAAS,0CACJ52B,GACAu/B,GAFG,IAGN5pB,QAAS3V,EAAM2V,QAAU,EACzBlV,MAAOo+B,EACP3rB,aA1FO,4CAAH,qDA6FR5O,MAEC,CAAC4O,EAAS2rB,IAGb,IAAMW,EAAO,SAACp8B,GACZ,GAAI8P,IAAYlT,EAAMkT,QAAtB,CAKA,IAAMusB,EAAcz/B,EAAMC,QAAQD,EAAMqT,WAAajQ,QACjCnB,IAAhBw9B,GACFrwB,GAAO+K,MAAMjP,KAAK,CAAEgI,QAASusB,GAAe,CAAEh/B,MAAOo+B,IAAYzxB,SAIrE,MAAO,CAELsyB,gBAAiB,WACfF,GAAM,IAERG,YAAa,WACXH,EAAK,IAEPI,SAAU5/B,GA7QyC6/B,CACjDriB,EACAtK,GAFM0sB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,YAAaD,EAA/B,EAA+BA,gBAK/BrhB,qBAAU,WAERb,EAAWlb,UAAU4Q,GAASnU,MAAK,SAACob,QACpBlY,IAAVkY,GACFoD,EAAajb,UAAU6X,EAAM2E,YAK5BpB,EAAmBoiB,WAAW5sB,IACjCwK,EAAmBnd,MAAM,CACvBiC,MAAO,IACPY,OAAQ,EACRK,WAAY,CACV0W,MAAOjH,OAIZ,CAACsK,EAAYD,EAAcG,EAAoBxK,IAElD8qB,aAAW,IAAK0B,EAAiB,CAACE,EAASjqB,UAC3CqoB,aAAW,IAAK2B,EAAa,CAACC,EAASjqB,UAEvC,IAAMwE,EAAQqD,EAAWtc,IAAIgS,GACvB6sB,EAAmCj0B,mBAAQ,WAAO,IAAD,MAC/CqO,EAAQqD,EAAWtc,IAAIgS,GAC7B,QAAcjR,IAAVkY,GAAiC,OAAVA,EAI3B,MAAO,CACLnZ,KAAMmZ,EAAMnZ,KACZ4R,YAAauH,EAAMvH,YACnB2H,QAASJ,EAAMI,QACftR,KAAMkR,EAAMlR,KACZqgB,QAAS,CACPC,QAAO,UAAEpP,EAAM/F,mBAAR,aAAE,EAAmBnI,IAC5BlC,MAAK,UAAEoQ,EAAM/F,mBAAR,aAAE,EAAmBrK,MAC1B4J,SAAQ,UAAEwG,EAAM/F,mBAAR,aAAE,EAAmBT,SAC7B8V,iBAAkBtP,EAAM1F,gBAI3B,CAACvB,OAAmBjR,IAAVkY,IAEb,GAAc,OAAVA,EACF,OAAO,cAAC,GAAD,IACF,QAAclY,IAAVkY,EACT,OAAO,cAACqF,EAAD,IAGT,IAAIwgB,EAAe,KAIjBA,EAHGtiB,EAAmBoiB,WAAW5sB,GAGlB,cAACuqB,GAAD,CAAsCtjB,MAAOA,GAAhBjH,GAF7B,cAACsM,EAAD,CAAa3W,UAAU,IAKxC,IAAMo3B,EAAQ,wCAAG,WAAOz9B,EAAeY,GAAtB,eAAA+c,EAAA,sEACI1C,EAAcld,MAAM,CACrCiC,QACAY,SACAK,WAAY,CAAE0W,MAAOA,EAAMvZ,MAJd,cACX/B,EADW,yBAMRA,EAAOoB,QAAQsB,KAAI,SAAC2+B,GAAD,MAAU,CAClCr/B,MAAOq/B,EAAIr/B,MACXq/B,IAAKA,EAAIA,IAAI3+B,KAAI,SAAC9B,GAAD,MAAQ,CAAEjB,MAAOiB,MAClC8T,MAAO2sB,EAAI3sB,WATE,2CAAH,wDAad,OACE,eAAC,IAAM+K,SAAP,WACE,cAAC,GAAD,CACEQ,QAASvB,EAAarc,IAAIiZ,EAAM2E,SAChC3E,MAAOA,EACPgmB,KAAM,CACJ,cAAC,IAAD,CAEEpxB,QAAS2wB,EACTrW,UAAWuW,EAASZ,QAHtB,+BACM,QAMN,cAAC,IAAD,CAEEjwB,QAAS4wB,EACTtW,UAAWuW,EAASX,QAHtB,2BACM,SAORmB,cACE,uBAAMl3B,UAAU,OAAhB,sBACY,IACV,8BACG,IACA02B,EAAS5J,WAAa4J,EAASvsB,WAAa,EAF/C,IAEmDusB,EAASn+B,cAKlE,qBAAKyH,UAAWF,EAAQmqB,UAAxB,SACE,eAAC,IAAD,CAAO/O,UAAU,WAAWnb,KAAM,EAAlC,UACG+2B,EACD,cAAC/W,GAAD,CAEEC,eAAe,EACf/O,MAAO4lB,EACPt/B,MAAOw/B,EACP9W,cAAc,GAJTjW,GAMP,cAAC4X,GAAD,gBA4JZ,IAAMuV,GAAc,SAACxxB,GAMnB,IAAIiQ,EAAUjQ,EAAMiQ,SAAW,IAAInM,GAAQ,EAAG,GAAI,IAClD,OACE,cAAC,KAAD,CACE2tB,OAAQ,kBACN/1B,EAAQ/F,KACN4K,GAAO0P,QAAQzR,OAAO,CACpB6G,UAAWrF,EAAMsL,MAAM2E,YAI7B/U,MACE,eAAC,IAAD,WACE,sBAAM6G,MAAO,CAAE2O,WAAY,KAA3B,oBACA,sBAAM3O,MAAO,CAAEoT,MAAO,UAAWmE,eAAgB,aAAjD,SACGtZ,EAAMsL,MAAMnZ,UAInByO,SACE,eAAC,IAAD,WACE,6CACW,4BAAIqP,EAAQ9d,OADvB,OAGC6N,EAAMuxB,iBAGX1wB,MAAOb,EAAMsxB,QC5VJ,OAA0B,iC,8BCkD5B/wB,GAAS,CACpB0P,QAAS,IAAIhS,EAAmB,CAC9BjC,UAAWwU,GACX1U,UAAW,CAAEuJ,UAAW,UACxBpJ,QAAS,yBAEXqP,MAAO,IAAIzP,EAAQ,CACjBG,UAAW4zB,GACX9zB,UAAW,CAAEuI,QAAS,UACtBtI,YAAa,CAAEnK,MAAO,UACtBqK,QAAS,qBAEX0zB,YAAa,IAAI1xB,EAAmB,CAClCjC,UAlBS,kBAAM,gEAmBfF,UAAW,CAAEuI,QAAS,UACtBpI,QAAS,+CAEX6R,SAAU,IAAI9P,EAAc,CAC1BhC,UClEuB,WACzB,OACE,cAAC,KAAD,CAAK0T,OAAQ,GAAb,SACE,cAAC,KAAD,CAAKrV,UAAU,aAAasV,KAAM,QDgEpC1T,QAAS,YACTC,OAAO,IAETw1B,OAAQ,IAAI1zB,EAAc,CACxBhC,UAAWsT,GACXrT,QAAS,UACTC,OAAO,IAETy1B,SAAU,IAAI3zB,EAAc,CAC1BhC,UAAWsT,GACXrT,QAAS,YACTC,OAAO,IAET01B,KAAM,IAAI5zB,EAAc,CAAEhC,UAAWsT,GAAUrT,QAAS,IAAKC,OAAO,KAErE5F,OAAeu7B,QAAUtxB,GtDhEnB,SAAqBA,EAAQuxB,EAASC,GAUzC,QATsB3+B,IAAlB2+B,IACAA,EAAgB,IAAIvhC,KAEpBuE,MAAMC,QAAQ+8B,GACdA,EAAgB,IAAIvhC,IAAIuhC,GAEjBA,aAAyBvhC,MAChCuhC,EAAgB,IAAIvhC,IAAIuC,OAAOkP,KAAK8vB,KAEjB,oBAAZD,EACP,cAA0B/+B,OAAOC,QAAQuN,GAAzC,eAAkD,CAA7C,0BAAKpO,EAAL,KAAWqO,EAAX,KACGuxB,EAAclhC,IAAIsB,KAEtBqO,EAAMpE,SAASJ,UAAY81B,EAAQtxB,EAAMxE,UAAWuE,SAIxD,cAA0BxN,OAAOC,QAAQuN,GAAzC,eAAkD,CAA7C,0BAAKpO,EAAL,KAAWqO,EAAX,KACGuxB,EAAclhC,IAAIsB,SAA2BiB,IAAlB0+B,EAAQ3/B,KAEvCqO,EAAMpE,SAASJ,UAAY81B,EAAQ3/B,GAAMqO,EAAMxE,UAAWuE,KsD8CtEyxB,CAAYzxB,IAjEU,SACpBvE,GAEA,OAAO,SAACgE,GACN,IAAMiyB,EAAUxvB,IAAMuhB,cAAchoB,EAAWgE,GAC/C,OACE,eAAC,IAAD,CAAOuV,UAAU,WAAWxT,MAAO,CAAEyT,MAAO,QAA5C,UACE,cAAC3T,GAAD,CACEC,MAAO,CACL8vB,KAAM,qBAAKM,IAAKC,GAAMC,IAAI,SAC1BT,SAAU,CAAEza,KAAM,cAACmb,GAAA,EAAD,IAAqB73B,SAAU,YACjDk3B,OAAQ,CAAExa,KAAM,cAACob,GAAA,EAAD,IAAyB93B,SAAU,UACnDsT,SAAU,CAAEoJ,KAAM,cAACqb,GAAA,EAAD,IAAqB/3B,SAAU,aAEnD+F,OAAQA,GACRyB,iBAAiB,IAEnB,qBAAK3H,UAAU,iBAAf,SAAiC43B,UAgDb,CAAC,UEhF7BO,IAAS/f,OACP,cAACvD,GAAaujB,SAAd,CAAuB9iC,MAAO8e,GAA9B,SACE,cAAC7L,GAAD,CAAKC,YAAY,EAAMtC,OAAQA,OAEjCwjB,SAAS2O,eAAe,SAM1BrvB,O","file":"static/js/main.0eef3c4f.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        /**\n         * Deserialize the data sent from the server to a record.\n         */\n        this.deserialize = (record) => {\n            if (this.nameAndField.length > 0) {\n                for (const [name, field] of this.nameAndField) {\n                    record[field] = record[name];\n                    delete record[name];\n                }\n            }\n            return record;\n        };\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        this.batch = new BatchFetchRequests(this, 50);\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\nclass BatchFetchRequests {\n    constructor(store, window) {\n        this.store = store;\n        this.window = window;\n        this.requests = new Set();\n        this.executingRequests = new Map();\n    }\n    fetchById(id) {\n        this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    // in case it's still pending from previous requests\n                    const m = this.executingRequests.get(id);\n                    if (m !== undefined) {\n                        // don't remove executingRequests as it will be removed automatically when the promise resolves\n                        m.then(() => {\n                            const r = this.store.records.get(id);\n                            resolve(r === null ? undefined : r);\n                        });\n                    }\n                    else {\n                        const r = this.store.records.get(id);\n                        resolve(r === null ? undefined : r);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    fetchByIds(ids) {\n        for (const id of ids)\n            this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    const output = {};\n                    const pendingPromises = [];\n                    for (const id of ids) {\n                        const m = this.executingRequests.get(id);\n                        if (m !== undefined) {\n                            // don't remove executingRequests as it will be removed automatically when the promise resolves\n                            pendingPromises.push([m, id]);\n                        }\n                        else {\n                            const record = this.store.records.get(id);\n                            if (record !== null && record !== undefined) {\n                                output[id] = record;\n                            }\n                        }\n                    }\n                    if (pendingPromises.length > 0) {\n                        // waiting for pending requests to finish\n                        Promise.all(pendingPromises.map((x) => x[0])).then(() => {\n                            for (const [m, id] of pendingPromises) {\n                                const record = this.store.records.get(id);\n                                if (record !== null && record !== undefined) {\n                                    output[id] = record;\n                                }\n                            }\n                            resolve(output);\n                        });\n                    }\n                    else {\n                        resolve(output);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    exec() {\n        // clear the callback as we are executing it\n        this.callback = undefined;\n        // sending out requests that is not executing\n        const reqs = Array.from(this.requests).filter((id) => !this.executingRequests.has(id));\n        // clean up the requests so the next callback can add\n        this.requests = new Set();\n        const promise = this.store.fetchByIds(reqs);\n        // adding the sending out requests into the executing queue\n        for (const req of reqs)\n            this.executingRequests.set(req, promise);\n        return promise.then((result) => {\n            // clean up the executing requests\n            for (const req of reqs)\n                this.executingRequests.delete(req);\n            return result;\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, makeObservable, runInAction, action, override, } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Create the record, will sync with remote server.\n     */\n    create(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft) {\n                        this.createDrafts.delete(draft.draftID);\n                    }\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Update the record, with sync with remote server\n     */\n    update(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                return runInAction(() => {\n                    let record = draft.toModel() || this.deserialize(resp.data);\n                    draft.markSaved();\n                    // deindex the record if it's in the store\n                    const prevRecord = this.records.get(draft.id);\n                    if (prevRecord !== undefined && prevRecord !== null) {\n                        this.deindex(prevRecord);\n                    }\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft && this.updateDrafts.has(draft.id)) {\n                        this.updateDrafts.delete(draft.id);\n                    }\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove a record, will sync with remote server\n     */\n    delete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                runInAction(() => {\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        makeObservable(this, {\n            create: override,\n            update: override,\n        });\n    }\n    create(draft) {\n        const _super = Object.create(null, {\n            create: { get: () => super.create }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.create.call(this, Object.assign({ draftID: \"\" }, draft), true);\n        });\n    }\n    update(draft) {\n        const _super = Object.create(null, {\n            update: { get: () => super.update }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.update.call(this, Object.assign({\n                markSaved: () => { },\n                toModel: () => undefined,\n            }, draft), true);\n        });\n    }\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\n","import { action, makeObservable, observable } from \"mobx\";\nexport class SingleKeyUniqueIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        this.index.set(key, record[this.idField]);\n    }\n    remove(record) {\n        const key = record[this.fkField];\n        this.index.delete(key);\n    }\n}\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index\n                .get(key1)\n                .get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3\n            .get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e, openInNewPage) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (openInNewPage || (e !== undefined && (e.ctrlKey || e.metaKey))) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (_a) => {\n    var { path, urlArgs, queryArgs, openInNewPage = false, children } = _a, restprops = __rest(_a, [\"path\", \"urlArgs\", \"queryArgs\", \"openInNewPage\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e, openInNewPage);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    const app = (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0));\n    if (enUSLocale === true) {\n        return _jsx(ConfigProvider, Object.assign({ locale: enUSIntl }, { children: app }), void 0);\n    }\n    return app;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  public deserialize = (record: any): Project => {\n    return new Project(record.id, record.name, record.description);\n  };\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.name,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { HTMLProps } from \"react\";\n\nexport interface ContentHierarchy {\n  level: number; // level of the heading\n  heading: string; // title of the level (header)\n  contentBefore: (Text | LineBreak)[];\n  contentAfter: (Text | LineBreak)[];\n}\n\nexport interface Text {\n  value: string;\n  tags: string[];\n  id2attrs: { [id: string]: HTMLProps<HTMLAnchorElement> };\n}\n\nexport interface LineBreak {\n  nLines: number;\n}\n\nexport function isLineBreak(item: Text | LineBreak): item is LineBreak {\n  return (item as LineBreak).nLines !== undefined;\n}\n","import { SERVER } from \"../../env\";\nimport { PairKeysUniqueIndex, RStore } from \"rma-baseapp\";\nimport { TableRow } from \"./Table\";\n\nexport class TableRowStore extends RStore<number, TableRow> {\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false, [\n      new PairKeysUniqueIndex(\"table\", \"index\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as PairKeysUniqueIndex<\n      number,\n      number,\n      number,\n      TableRow\n    >;\n  }\n\n  /**\n   * Find rows of the table\n   *\n   * @param tableId\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  findByTable = (tableId: number, start: number, no: number): TableRow[] => {\n    const map = this.tableIndex.index.get(tableId);\n    if (map === undefined) return [];\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n    return output;\n  };\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize = (record: any): TableRow => {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity !== null) {\n          link.entityId = link.entity;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity;\n          delete ce.entity;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  };\n}\n","import { SERVER } from \"../../env\";\nimport { SingleKeyIndex, RStore } from \"rma-baseapp\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends RStore<number, Table> {\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false, [\n      new SingleKeyIndex(\"project\"),\n    ]);\n  }\n\n  get projectIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, Table>;\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize = (record: any): Table => {\n    record.contextPage = record.context_page;\n    if (\n      record.contextPage !== null &&\n      record.contextPage !== undefined &&\n      record.contextPage.entity !== null\n    ) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n    record.contextValues = record.context_values;\n    if (record.context_tree !== undefined) {\n      record.contextTree = record.context_tree.map((item: any) => {\n        item.contentBefore = item.content_before.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        item.contentAfter = item.content_after.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        delete item.content_before;\n        delete item.content_after;\n        return item;\n      });\n      delete record.context_tree;\n    }\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  };\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * value of this literal node, depends on the type\n   */\n  value:\n    | {\n        type: \"string\";\n        value: string;\n      }\n    | {\n        type: \"entity-id\";\n        id: string;\n        uri: string;\n      };\n  // readable name for this node\n  label: string;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface SMEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    if (this.id2num[node.id] === undefined || this.id2num[node.id] === 1) {\n      return node.label;\n    }\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    if (this.counter[uri] === undefined) {\n      return label;\n    }\n    return `${label} ${this.counter[uri]}`;\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n\n  getNum = (node: ClassNode) => {\n    return this.id2num[node.id];\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: SMEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: SMEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  clone = () => {\n    const record = this.toJS();\n    return new SMGraph(this.id, record.nodes, record.edges);\n  };\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n  nodeByEntityId = (id: string) =>\n    this.nodes.filter(\n      (node) =>\n        node.nodetype === \"literal_node\" &&\n        node.value.type === \"entity-id\" &&\n        node.value.id === id\n    )[0];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [SMEdge, SMEdge?][] => {\n    let matchPaths: [SMEdge, SMEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (inedge.uri === \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [SMEdge, SMEdge?][] => {\n    let outprops: [SMEdge, SMEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        target.uri === \"http://wikiba.se/ontology#Statement\"\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<SMEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: SMEdge) {\n    if (this.hasEdge(edge.source, edge.target)) {\n      throw new Error(\"Cannot have more than one edge between two nodes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<SMEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"../table\";\nimport { SMEdge, SMGraph, SMNode, SMNodeType } from \"./SMGraph\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  static isDraft = (\n    sm: SemanticModel | DraftSemanticModel\n  ): sm is DraftSemanticModel => {\n    return (sm as DraftSemanticModel).draftID !== undefined;\n  };\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  /**\n   * Get a default draft model for a table\n   */\n  static getDefaultDraftSemanticModel(\n    id: string,\n    name: string,\n    table: Table,\n    description = \"\"\n  ): DraftSemanticModel {\n    const graph = new SMGraph(\n      id,\n      table.columns.map((column, index) => ({\n        id: `col-${index}`,\n        label: column,\n        columnIndex: index,\n        nodetype: \"data_node\",\n      })),\n      []\n    );\n    graph.stale = true;\n    return new DraftSemanticModel(id, name, description, 0, graph, table.id);\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false, [\n      new SingleKeyIndex(\"table\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, SemanticModel>;\n  }\n\n  /** Generate new draft id */\n  getNewDraftId = (table: Table): string => {\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      if (this.getCreateDraft(id) === undefined) {\n        return id;\n      }\n      i++;\n    }\n  };\n\n  /** Generate new semantic model name */\n  getNewSemanticModelName(table: Table): string {\n    const sms = this.findByTable(table.id);\n    const drafts = this.getDraftsByTable(table);\n\n    let idx = -1;\n    for (const sm of sms.concat(drafts)) {\n      const m = /sm-(\\d+)/.exec(sm.name);\n      if (m === null) continue;\n      if (parseInt(m[1]) >= idx) {\n        idx = Math.max(idx, parseInt(m[1]));\n      }\n    }\n    return `sm-${idx + 1}`;\n  }\n\n  /** Get all drafts of a table */\n  getDraftsByTable(table: Table): DraftSemanticModel[] {\n    const drafts = [];\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      const draft = this.getCreateDraft(id);\n      if (draft === undefined) {\n        break;\n      }\n      drafts.push(draft);\n      i++;\n    }\n    return drafts;\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /**\n   * Remove a record (by id) from your indexes\n   */\n  protected deindex(record: SemanticModel): void {\n    for (const index of this.indices) {\n      index.remove(record);\n    }\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize = (record: any): SemanticModel => {\n    const nodes: SMNode[] = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    const edges: SMEdge[] = record.data.edges;\n\n    let graph = new SMGraph(record.id.toString(), nodes, edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  };\n\n  public serializeUpdateDraft(record: SemanticModel): object {\n    record.version += 1;\n    return {\n      table: record.table,\n      name: record.name,\n      description: record.description,\n      version: record.version,\n      data: {\n        nodes: record.graph.nodes.map((node) => {\n          switch (node.nodetype) {\n            case \"class_node\":\n              return {\n                id: node.id,\n                uri: node.uri,\n                approximation: node.approximation,\n                label: node.label,\n                type: node.nodetype,\n              };\n            case \"data_node\":\n              return {\n                id: node.id,\n                label: node.label,\n                column_index: node.columnIndex,\n                type: node.nodetype,\n              };\n            case \"literal_node\":\n              return {\n                id: node.id,\n                value: node.value,\n                label: node.label,\n                is_in_context: node.isInContext,\n                type: node.nodetype,\n              };\n          }\n        }),\n        edges: record.graph.edges.map((edge) => {\n          return {\n            source: edge.source,\n            target: edge.target,\n            uri: edge.uri,\n            approximation: edge.approximation,\n            label: edge.label,\n          };\n        }),\n      },\n    };\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    return this.serializeUpdateDraft(record);\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public uri: string;\n  public label: MultiLingualString;\n  public readableLabel: string;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    uri: string,\n    label: MultiLingualString,\n    readableLabel: string,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.uri = uri;\n    this.label = label;\n    this.readableLabel = readableLabel;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n\n  /**\n   * Mapping from entity id to url to external KG\n   * @param entityId\n   */\n  static id2uri = (entityId: string): string => {\n    switch (entityId[0]) {\n      case \"Q\":\n        return `https://www.wikidata.org/wiki/${entityId}`;\n      case \"P\":\n        return `https://www.wikidata.org/wiki/Property:${entityId}`;\n      case \"L\":\n        return `https://www.wikidata.org/wiki/Lexeme:${entityId}`;\n      default:\n        return entityId;\n    }\n  };\n\n  static uri2id = (entityURI: string): string => {\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/Property:\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/Property:\".length);\n    }\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/Lexeme:\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/Lexeme:\".length);\n    }\n    if (entityURI.startsWith(\"https://www.wikidata.org/wiki/\")) {\n      return entityURI.slice(\"https://www.wikidata.org/wiki/\".length);\n    }\n    return entityURI;\n  };\n}\n\nexport type MultiLingualString = {\n  lang2value: { [lang: string]: string };\n  lang: string;\n};\nexport type MultiLingualStringList = {\n  lang2values: { [lang: string]: string[] };\n  lang: string;\n};\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport type DataValue =\n  | DataValueString\n  | DataValueTime\n  | DataValueQuantity\n  | DataValueGlobeCoordinate\n  | DataValueMonolingualText\n  | DataValueEntity;\n\nexport interface DataValueTime {\n  readonly type: \"time\";\n  value: {\n    time: string;\n    timezone: number;\n    before: number;\n    after: number;\n    precision: number;\n    calendarmodel: string;\n  };\n}\n\nexport interface DataValueQuantity {\n  readonly type: \"quantity\";\n  value: {\n    amount: string;\n    upperBound: string;\n    lowerBound: string;\n    unit: string;\n  };\n}\n\nexport interface DataValueMonolingualText {\n  readonly type: \"monolingualtext\";\n  value: {\n    text: string;\n    language: string;\n  };\n}\n\nexport interface DataValueGlobeCoordinate {\n  readonly type: \"globecoordinate\";\n  value: {\n    latitude: number;\n    longitude: number;\n    precision: number;\n    altitude: null;\n    globe: string;\n  };\n}\n\nexport interface DataValueEntity {\n  readonly type: \"entityid\";\n  value: string;\n}\n\nexport interface DataValueString {\n  readonly type: \"string\";\n  value: string;\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class EntitySettings {\n  // properties to show in full view\n  public _showedPropsInFullView: Set<string> = new Set();\n\n  // properties to show in popover view\n  public _showedPropsInPopoverView: Set<string> = new Set();\n\n  constructor() {\n    this._showedPropsInPopoverView.add(\"P31\");\n\n    makeObservable(this, {\n      _showedPropsInFullView: observable,\n      _showedPropsInPopoverView: observable,\n      showedPropsInFullView: computed,\n      showedPropsInPopoverView: computed,\n      setShowedPropsInFullView: action,\n      setShowedPropsInPopoverView: action,\n      addShowedPropsInFullView: action,\n      addShowedPropsInPopoverView: action,\n      removeShowedPropsInFullView: action,\n      removeShowedPropsInPopoverView: action,\n    });\n  }\n\n  get showedPropsInFullView() {\n    return Array.from(this._showedPropsInFullView);\n  }\n\n  get showedPropsInPopoverView() {\n    return Array.from(this._showedPropsInPopoverView);\n  }\n\n  setShowedPropsInFullView = (props: Set<string>) => {\n    this._showedPropsInFullView = props;\n  };\n\n  setShowedPropsInPopoverView = (props: Set<string>) => {\n    this._showedPropsInPopoverView = props;\n  };\n\n  addShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.add(prop);\n  };\n\n  addShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.add(prop);\n  };\n\n  removeShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.delete(prop);\n  };\n\n  removeShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.delete(prop);\n  };\n}\n","import { AxiosError } from \"axios\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\nimport { EntitySettings } from \"./EntitySettings\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  public settings: EntitySettings;\n\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n    this.settings = new EntitySettings();\n\n    makeObservable(this, {\n      settings: observable,\n    });\n  }\n\n  public deserialize = (record: any): Entity => {\n    record.readableLabel = record.readable_label;\n    delete record.readable_label;\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Property {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class PropertyStore extends RStore<string, Property> {\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Property>;\n  }\n\n  getPropertyByURI = (uri: string): Property | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Class {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class ClassStore extends RStore<string, Class> {\n  constructor() {\n    super(`${SERVER}/api/classes`, { readableLabel: \"readable_label\" }, false, [\n      new SingleKeyUniqueIndex(\"uri\"),\n    ]);\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Class>;\n  }\n\n  getClassByURI = (uri: string): Class | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n}\n","import { Project, ProjectStore } from \"./Project\";\nimport { createContext } from \"react\";\n\nimport React from \"react\";\nimport { TableStore, TableRowStore } from \"./table\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  SemanticModelStore,\n  SMNode,\n} from \"./sm\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { ClassStore } from \"./ontology/ClassStore\";\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore: new TableStore(),\n  tableRowStore: new TableRowStore(),\n  semanticModelStore: new SemanticModelStore(),\n  entityStore: new EntityStore(),\n  propertyStore: new PropertyStore(),\n  classStore: new ClassStore(),\n};\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  ClassStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n};\nexport type { Property } from \"./ontology/PropertyStore\";\nexport type { Table, TableRow } from \"./table\";\nexport type { SMEdge, SMNode } from \"./sm/SMGraph\";\n","import { Avatar, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor: [\n                          \"#f56a00\",\n                          \"#7265e6\",\n                          \"#1890ff\",\n                          \"#00a2ae\",\n                        ][project.name.charCodeAt(0) % 4],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../models\";\nimport { routes } from \"../routes\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project: {_.upperFirst(project.name)}\n        </Typography.Title>\n        <ProTable<ReturnType<typeof table2row>>\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          // toolBarRender={false}\n          search={false}\n          pagination={{\n            pageSize: 500,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.batch.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  onCtrlClick,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n  onCtrlClick?: () => void;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return <span {...restprops}>{entity.readableLabel}</span>;\n  }\n\n  return (\n    <ExternalLink\n      href={Entity.id2uri(entity.id)}\n      openInNewPage={true}\n      onCtrlClick={onCtrlClick}\n      {...restprops}\n    >\n      {entity.readableLabel}\n    </ExternalLink>\n  );\n};\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingPage } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    renderLoading,\n    renderNotFound,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity, settings: EntitySettings) => React.ReactElement;\n    renderLoading?: () => React.ReactElement;\n    renderNotFound?: () => React.ReactElement;\n  }) => {\n    const { entityStore } = useStores();\n\n    useEffect(() => {\n      entityStore.batch.fetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        if (renderLoading !== undefined) {\n          return renderLoading();\n        }\n        return <LoadingPage />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      if (renderNotFound !== undefined) {\n        return renderNotFound();\n      }\n\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity, entityStore.settings);\n  }\n);\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  showId = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  showId?: boolean;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  const label = showId ? `${property.label} (${property.id})` : property.label;\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop } from \".\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      showId = false,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      showId?: boolean;\n      filteredProps: string[];\n    } & WithStyles<typeof styles>) => {\n      if (filteredProps.length === 0) {\n        filteredProps = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of filteredProps) {\n        // we have undefined when entity does not have this property `pid`\n        if (entity.properties[pid] === undefined) continue;\n\n        const stmts = entity.properties[pid];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent\n                  property={id2prop[pid]}\n                  showId={showId}\n                />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      enable,\n      setEnable,\n      id2prop,\n      filteredProps,\n      addFilteredProp,\n      removeFilteredProp,\n      classes,\n    }: {\n      enable: boolean;\n      setEnable: (enable: boolean) => void;\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      addFilteredProp: (prop: string) => void;\n      removeFilteredProp: (prop: string) => void;\n    } & WithStyles<typeof styles>) => {\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={addFilteredProp as any}\n            onDeselect={removeFilteredProp as any}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { observer } from \"mobx-react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      settings,\n    }: { entity: Entity; settings: EntitySettings } & WithStyles<\n      typeof styles\n    >) => {\n      const id2prop = useEntityProperties(entity);\n      const [enable, setEnable] = useState<boolean>(true);\n\n      return (\n        <div>\n          <Space style={{ float: \"right\" }}>\n            <PropertyFilterComponent\n              enable={enable}\n              setEnable={setEnable}\n              entity={entity}\n              id2prop={id2prop}\n              filteredProps={settings.showedPropsInFullView}\n              addFilteredProp={settings.addShowedPropsInFullView}\n              removeFilteredProp={settings.removeShowedPropsInFullView}\n            />\n          </Space>\n          <h2>\n            <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            entity={entity}\n            id2prop={id2prop}\n            showId={true}\n            filteredProps={enable ? settings.showedPropsInFullView : []}\n          />\n        </div>\n      );\n    }\n  )\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  args: { entity: Entity; settings: EntitySettings } | string,\n  zIndex?: number\n) {\n  // avoid using instanceof Entity because it's going to be proxy object due to mobx\n  const isEntity = typeof args !== \"string\";\n  let content;\n  if (isEntity) {\n    content = (\n      <PageEntityComponent entity={args.entity} settings={args.settings} />\n    );\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={args}\n        render={(entity, settings) => (\n          <PageEntityComponent entity={entity} settings={settings} />\n        )}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { EntitySettings } from \"../../models/entity\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  ({\n    entity,\n    children,\n    classes,\n    zIndex,\n    settings,\n    ...restprops\n  }: {\n    entity: Entity;\n    settings: EntitySettings;\n    zIndex?: number;\n  } & React.HTMLProps<HTMLDivElement> &\n    WithStyles<typeof styles>) => {\n    // TODO: find a way to remove this hard code\n    const id2prop = useEntityProperties(entity);\n    const content = (\n      <div {...restprops} className={`${classes.root} ${restprops.className}`}>\n        <h2>\n          <ExternalLink href={Entity.id2uri(entity.id)} openInNewPage={true}>\n            {entity.label.lang2value[entity.label.lang]}\n          </ExternalLink>\n          &nbsp;\n          <Typography.Text\n            italic={true}\n            strong={false}\n            style={{ fontSize: 14, fontWeight: 400 }}\n            copyable={{ text: entity.id }}\n          >\n            ({entity.id})\n          </Typography.Text>\n          <UnfoldMoreIcon\n            style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              openPageEntityComponent(\n                { entity, settings },\n                zIndex !== undefined ? zIndex + 1 : undefined\n              );\n            }}\n          />\n        </h2>\n        <Typography.Text type=\"secondary\">\n          {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n        </Typography.Text>\n        <p>{entity.description.lang2value[entity.description.lang]}</p>\n        <hr />\n        <PropertyComponent\n          id2prop={id2prop}\n          entity={entity}\n          filteredProps={settings.showedPropsInPopoverView}\n        />\n      </div>\n    );\n\n    return (\n      <Popover content={content} zIndex={zIndex}>\n        {children}\n      </Popover>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: 1,\n    border: \"1px solid\",\n    borderRadius: 2,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n      setStateSelected(!stateSelected);\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport { faCheck, faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport * as RTable from \"./RelationalTable\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\nexport const CandidateEntityListComponent = withStyles(styles)(\n  ({\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const [showAllCandidateModals, setShowAllCandidateModals] = useState(false);\n\n    const links = record.links[index] || [];\n    const candidateLst = [];\n    if (links.length > 0) {\n      for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n        const className =\n          candidateEntity.entityId === links[0].entityId\n            ? classes.correctCandidateEntity\n            : classes.candidateEntity;\n\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <PopoverEntityComponent entity={entity} settings={settings}>\n                    <InlineEntityComponent\n                      nolink={true}\n                      entity={entity}\n                      className={className}\n                    />\n                  </PopoverEntityComponent>\n                )}\n              />\n              <span className={className}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      // if there is a correct entity in top K, no need to highlight, otherwise,\n      // add them to the list\n      const idx = links[0].candidateEntities.findIndex(\n        (candidate) => candidate.entityId === links[0].entityId\n      );\n      if (idx !== -1 && idx >= topK) {\n        const candidateEntity = links[0].candidateEntities[idx];\n        candidateLst.push(\n          <div key={candidateEntity.entityId}>\n            <Space size={4}>\n              <CheckboxIcon icon={faCheck} />\n              <CheckboxIcon icon={faCheckDouble} />\n              <FetchEntityComponent\n                entityId={candidateEntity.entityId}\n                render={(entity, settings) => (\n                  <span className={classes.correctCandidateEntity}>\n                    ({idx})&nbsp;\n                    <PopoverEntityComponent entity={entity} settings={settings}>\n                      <InlineEntityComponent nolink={true} entity={entity} />\n                    </PopoverEntityComponent>\n                  </span>\n                )}\n              />\n              <span className={classes.correctCandidateEntity}>\n                (\n                <Number\n                  value={candidateEntity.probability}\n                  fractionDigits={3}\n                />\n                )\n              </span>\n            </Space>\n          </div>\n        );\n      }\n\n      if (links[0].candidateEntities.length > topK) {\n        candidateLst.push(\n          <div key=\"see-more\">\n            <Typography.Text\n              className={classes.candidateEntitySeeMore}\n              onClick={() => setShowAllCandidateModals(!showAllCandidateModals)}\n            >\n              See more\n            </Typography.Text>\n          </div>\n        );\n      }\n    }\n\n    const columns: any = [\n      {\n        dataIndex: \"id\",\n        title: \"Entity\",\n        render: (entityId: string) => {\n          return (\n            <FetchEntityComponent\n              entityId={entityId}\n              render={(entity, settings) => (\n                <PopoverEntityComponent entity={entity} settings={settings}>\n                  <InlineEntityComponent nolink={true} entity={entity} />\n                </PopoverEntityComponent>\n              )}\n            />\n          );\n        },\n      },\n      {\n        dataIndex: \"score\",\n        title: \"Score\",\n        render: (score: number) => {\n          return <Number value={score} fractionDigits={5} />;\n        },\n      },\n      {\n        title: \"action\",\n        render: () => {\n          return (\n            <Space size={4}>\n              <Button>Select</Button>\n            </Space>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {candidateLst}\n        <Modal\n          title=\"Candidate Entities\"\n          visible={showAllCandidateModals}\n          style={{ top: 20 }}\n          bodyStyle={{ padding: 0 }}\n          width={\"60%\"}\n          onOk={() => setShowAllCandidateModals(false)}\n          onCancel={() => setShowAllCandidateModals(false)}\n        >\n          <ProTable\n            defaultSize=\"small\"\n            bordered={true}\n            search={false}\n            pagination={{\n              pageSize: 20,\n              pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n            }}\n            rowKey=\"id\"\n            columns={columns}\n            request={async (params, sort, filter) => {\n              return Promise.resolve({\n                total: links.length > 0 ? links[0].candidateEntities.length : 0,\n                success: true,\n                data:\n                  links.length === 0\n                    ? []\n                    : links[0].candidateEntities\n                        .slice(\n                          (params.current! - 1) * params.pageSize!,\n                          params.current! * params.pageSize!\n                        )\n                        .map((candidateEntity, index) => ({\n                          id: candidateEntity.entityId,\n                          score: candidateEntity.probability,\n                        })),\n              });\n            }}\n          ></ProTable>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n);\n","import * as RTable from \"./RelationalTable\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"rma-baseapp\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  noEntityLink: {\n    color: grey[5],\n    \"&:hover\": {\n      color: grey[5],\n    },\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  ({\n    cell,\n    record,\n    index,\n    classes,\n    topK = 3,\n  }: {\n    cell: string;\n    record: RTable.Row;\n    index: number;\n    topK?: number;\n  } & WithStyles<typeof styles>) => {\n    const links = record.links[index] || [];\n    let components = links.flatMap((link, index) => {\n      let prefix =\n        index === 0\n          ? cell.substring(0, link.start)\n          : cell.substring(links[index - 1].end, link.start);\n      let linksurface = cell.substring(link.start, link.end);\n      let onCtrlClick = undefined;\n      if (link.entityId !== undefined) {\n        onCtrlClick = () => {\n          openPageEntityComponent(link.entityId!);\n        };\n      }\n      const infix = (\n        <ExternalLink\n          key={index}\n          href={link.url}\n          openInNewPage={true}\n          dangerouslySetInnerHTML={{\n            __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n          }}\n          className={\n            classes.link +\n            (link.entityId === undefined ? \" \" + classes.noEntityLink : \"\")\n          }\n          style={link.entityId === null ? { color: \"#aaa\" } : {}}\n          onCtrlClick={onCtrlClick}\n        />\n      );\n\n      if (link.entityId === undefined) {\n        return [prefix, infix];\n      }\n\n      // reassign to infix somehow killing the application\n      const wrappedInfix = (\n        <FetchEntityComponent\n          key={index}\n          entityId={link.entityId}\n          render={(entity, settings) => (\n            <PopoverEntityComponent\n              entity={entity}\n              zIndex={500}\n              settings={settings}\n            >\n              {infix}\n            </PopoverEntityComponent>\n          )}\n          renderNotFound={() => (\n            <span className={classes.noEntityLink}>{infix}</span>\n          )}\n        />\n      );\n\n      return [prefix, wrappedInfix];\n    });\n\n    if (links.length === 0) {\n      components.push(cell);\n    } else {\n      components.push(cell.substring(links[links.length - 1].end));\n    }\n\n    return (\n      <div>\n        {components}\n        <CandidateEntityListComponent\n          record={record}\n          index={index}\n          topK={topK}\n        />\n      </div>\n    );\n  }\n);\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions, Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { isLineBreak, LineBreak, Text } from \"../../models/table/TableContext\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../entity\";\nimport { CellComponent } from \"./CellComponent\";\nimport * as RTable from \"./RelationalTable\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport const TableComponent = withStyles(styles)(\n  ({\n    table,\n    query,\n    classes,\n    toolBarRender,\n    showRowIndex = false,\n  }: {\n    table: RTable.Table;\n    query: (limit: number, offset: number) => Promise<RTable.Row[]>;\n    toolBarRender?: false;\n    showRowIndex?: boolean;\n  } & WithStyles<typeof styles>) => {\n    const columns = table.columns.map((col, columnIndex) => ({\n      dataIndex: [\"row\", columnIndex, \"value\"],\n      title: col,\n      render: ((value: string, record: RTable.Row) => {\n        return (\n          <CellComponent cell={value} record={record} index={columnIndex} />\n        );\n      }) as any,\n    }));\n\n    if (showRowIndex) {\n      columns.splice(0, 0, {\n        title: (\n          <Typography.Text type=\"secondary\" disabled={true}>\n            #\n          </Typography.Text>\n        ),\n        dataIndex: \"index\",\n      } as any);\n    }\n\n    return (\n      <React.Fragment>\n        <ProTable\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let records = await query(\n              params.pageSize!,\n              (params.current! - 1) * params.pageSize!\n            );\n            return {\n              data: records,\n              success: true,\n              total: table.size,\n            };\n          }}\n          search={false}\n          pagination={{\n            pageSize: 5,\n            pageSizeOptions: [\n              \"5\",\n              \"10\",\n              \"20\",\n              \"50\",\n              \"100\",\n              \"200\",\n              \"500\",\n              \"1000\",\n            ],\n          }}\n          headerTitle={\n            table.context.webpage !== undefined ? (\n              <ExternalLink href={table.context.webpage} openInNewPage={true}>\n                {table.name}\n              </ExternalLink>\n            ) : (\n              table.name\n            )\n          }\n          toolBarRender={toolBarRender}\n          rowKey=\"index\"\n          columns={columns}\n        />\n        <TableInformation table={table} />\n      </React.Fragment>\n    );\n  }\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: RTable.Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.context.webpage !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.context.webpage} openInNewPage={true}>\n        {table.context.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.context.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.context.entityId}\n        render={(entity, settings) => (\n          <PopoverEntityComponent\n            entity={entity}\n            zIndex={500}\n            settings={settings}\n          >\n            <InlineEntityComponent\n              entity={entity}\n              onCtrlClick={() => {\n                openPageEntityComponent({ entity, settings });\n              }}\n            />\n          </PopoverEntityComponent>\n        )}\n        renderNotFound={() => (\n          <span>`Entity ${table.context.entityId} does not exist`</span>\n        )}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.context.contentHierarchy || []).flatMap(\n    (hierarchy, index) => {\n      if (hierarchy.level === 0 && hierarchy.heading.trim().length === 0) {\n        if (\n          hierarchy.contentBefore.every(isLineBreak) &&\n          hierarchy.contentAfter.length === 0\n        ) {\n          return [];\n        }\n      }\n      const output = [\n        <p key={`${index}-head`}>\n          <b>\n            {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n          </b>\n        </p>,\n      ];\n      return output\n        .concat(ContentComponent(`${index}-before`, hierarchy.contentBefore))\n        .concat(ContentComponent(`${index}-after`, hierarchy.contentAfter));\n    }\n  );\n  info.push([\n    \"Content Hierarchy\",\n    content.length > 0 ? <div>{content}</div> : \"N/A\",\n  ]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n\nconst ContentComponent = (key: string, lines: (Text | LineBreak)[]) => {\n  const comps: string[][] = [[]];\n  for (const line of lines) {\n    if (isLineBreak(line)) {\n      comps.push([]);\n    } else {\n      comps[comps.length - 1].push(line.value);\n    }\n  }\n  return comps\n    .filter((lst) => lst.length > 0)\n    .map((lst, i) => <p key={`${key}-${i}`}>{lst}</p>);\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","/** A utility to discard responses out of order */\nexport class SequentialFuncInvoker {\n  private timer: number = 0;\n\n  public exec<T>(fn: () => Promise<T>): Promise<T | undefined> {\n    this.timer += 1;\n    let calledAt = this.timer;\n\n    return fn().then((result: any) => {\n      if (calledAt < this.timer) {\n        return undefined;\n      }\n\n      return result;\n    });\n  }\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { useStores } from \"../../models\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n};\n\ntype SearchProps = {\n  value?: string | string[];\n  onDeselect?: (value: string) => void;\n  onSelect?: (value: string) => void;\n  mode?: \"multiple\" | \"tags\";\n} & WithStyles<typeof styles>;\n\nexport const OntPropSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"propertyStore\", props);\n  })\n);\n\nexport const OntClassSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"classStore\", props);\n  })\n);\n\nexport const EntitySearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"entityStore\", props);\n  })\n);\n\nfunction useSearchComponent(\n  storeName: \"propertyStore\" | \"classStore\" | \"entityStore\",\n  props: SearchProps\n) {\n  const store = useStores()[storeName];\n  const seqInvoker = new SequentialFuncInvoker();\n\n  // when the provided value is not in the store, fetch it\n  useEffect(() => {\n    if (props.value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(props.value)) {\n      // leverage the fact that the three stores are not re-fetched\n      if (!store.refetch) {\n        store.fetchByIds(props.value);\n      } else {\n        store.fetchByIds(props.value.filter((id) => !store.records.has(id)));\n      }\n    } else if (store.get(props.value) === undefined) {\n      store.fetchById(props.value);\n    }\n  }, [props.value]);\n\n  // gather all options already in the store, leverage the fact\n  // that property store is readonly\n  const options = useMemo(() => {\n    const options = [];\n    for (const r of store.iter()) {\n      options.push({\n        value: r.id,\n        label: r.readableLabel,\n      });\n    }\n    return options;\n  }, [store.records.size]);\n\n  // search for additional properties if it's not in the list\n  const onSearch = (query: string) => {\n    if (query === \"\") return;\n    seqInvoker.exec(() => {\n      return store.fetchById(query).then(() => 1);\n    });\n  };\n\n  return (\n    <Select\n      mode={props.mode}\n      allowClear={true}\n      options={options}\n      optionFilterProp=\"label\"\n      className={props.classes.selection}\n      showSearch={true}\n      onSearch={onSearch}\n      value={props.value}\n      onSelect={props.onSelect as any}\n      onDeselect={props.onDeselect as any}\n    />\n  );\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { useStores } from \"../../models\";\nimport { OntPropSearchComponent } from \"./OntSearchComponent\";\n\nconst styles = {};\n\nexport const EntitySettingComponent = withStyles(styles)(\n  observer(({ classes }: {} & WithStyles<typeof styles>) => {\n    const { entityStore } = useStores();\n\n    return (\n      <Descriptions title=\"Entity Settings\" size=\"small\" column={1}>\n        <Descriptions.Item label=\"Properties (full view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInFullView}\n            onSelect={entityStore.settings.addShowedPropsInFullView}\n            onDeselect={entityStore.settings.removeShowedPropsInFullView}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Properties (popover view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={entityStore.settings.showedPropsInPopoverView}\n            onSelect={entityStore.settings.addShowedPropsInPopoverView as any}\n            onDeselect={\n              entityStore.settings.removeShowedPropsInPopoverView as any\n            }\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  })\n);\n","import { WordWrap } from \"./wordwrap\";\nimport G6, {\n  ModelConfig,\n  ShapeStyle,\n  IGroup,\n  IShape,\n  LabelStyle,\n} from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: LabelStyle;\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n): IShape[] {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.map(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"bg-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  return units.map(({ text, x, y }) => {\n    return group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  label: string;\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n  labelCfg?: { style: LabelStyle };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n  // TODO: fix x and y as well as position of the text\n  const draw = (cfg: RectConfig, group: IGroup): IShape => {\n    const wp = cfg.style.paddingWidth || 0;\n    const hp = cfg.style.paddingHeight || 0;\n    const { units, width, height } = wordwrap.wrapText(\n      cfg.label,\n      cfg.size || defaultWidth,\n      \"center\"\n    );\n\n    // draw shape\n    const shape = group!.addShape(\"rect\", {\n      attrs: {\n        // x,\n        // y,\n        width: width + wp * 2,\n        height: height + hp * 2,\n        ...cfg.style,\n      },\n      name: \"rect\",\n    });\n\n    // draw text\n    drawText(group, wordwrap, units, {\n      xoffset: wp,\n      yoffset: hp,\n      cfg: cfg.labelCfg?.style,\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup) => {\n        return draw(cfg! as RectConfig, group!);\n      },\n\n      // call everything state is changed so we can update the shape\n      // currently clear and re-draw it, but we could do better\n      setState(name, value, node) {\n        const cfg = node!._cfg!;\n        const model = cfg.model!;\n        const states = cfg.states!;\n        let styles: any = {};\n        let labelStyles = { ...model.labelCfg?.style };\n\n        for (const [name, prop] of Object.entries(model.style!)) {\n          if (typeof prop === \"object\") {\n            continue;\n          }\n          styles[name] = prop;\n        }\n        for (const state of states) {\n          for (const [name, prop] of Object.entries(\n            cfg.styles![state] as object\n          )) {\n            if (name === \"label\") {\n              Object.assign(labelStyles, prop);\n            } else {\n              styles[name] = prop;\n            }\n          }\n        }\n\n        const group = cfg.group!;\n        group.clear();\n        draw(\n          {\n            label: model.label as string,\n            size: model.size as number,\n            style: styles,\n            labelCfg: { style: labelStyles },\n          },\n          group\n        );\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import G6, {\n  IGroup,\n  ILabelConfig,\n  IShape,\n  LabelStyle,\n  ModelConfig,\n  ShapeStyle,\n} from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig {\n  label: string;\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n  labelCfg?: { offset: number; style: LabelStyle };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  const draw = (cfg: CircleConfig, group: IGroup): IShape => {\n    const padding = cfg.style.padding || 8;\n    const labelPosition: string = \"below\";\n    const labelOffset = cfg.labelCfg?.offset || 0;\n\n    if (labelPosition === \"inside\") {\n      // render text inside circle\n      const { units, radius } = wordwrap.wrapTextCircle(cfg.label, 256);\n      const shape = group!.addShape(\"circle\", {\n        attrs: {\n          // x: cfg.x,\n          // y: cfg.y,\n          r: radius + padding,\n          ...cfg.style,\n        },\n        name: \"circle\",\n      });\n      drawText(group, wordwrap, units, {\n        xoffset: 0,\n        yoffset: 0,\n        cfg: cfg.labelCfg?.style,\n      });\n      return shape;\n    }\n\n    // render text below circle\n    const { units, width } = wordwrap.wrapText(\n      cfg.label as string,\n      defaultWidth,\n      \"center\"\n    );\n    const defaultRadius = 10;\n    const shape = group!.addShape(\"circle\", {\n      attrs: {\n        // x: cfg.x,\n        // y: cfg.y,\n        r: defaultRadius,\n        ...cfg.style,\n      },\n      name: \"circle\",\n    });\n\n    drawText(group, wordwrap, units, {\n      xoffset: -width / 2,\n      yoffset: defaultRadius + labelOffset,\n      cfg: cfg?.labelCfg?.style,\n      stroke: { color: \"white\", width: 4 },\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup): IShape => {\n        return draw(cfg! as CircleConfig, group!);\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\nimport { testNodeWrap } from \"./TestNodeWrap\";\nimport _ from \"lodash\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units -- default 0\n  leftOffset?: number;\n  // shift the node in the graph by `topOffset` units -- default 0\n  topOffset?: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n  // highlight the node and its related nodes and edges when the mouse enter the node;\n  // default is false\n  enableActivateRelations?: boolean;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  public props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    const modes: any[] = [\"drag-canvas\", \"drag-node\"];\n\n    if (props.enableActivateRelations) {\n      modes.push({\n        type: \"activate-relations\",\n        resetSelected: true,\n      });\n    }\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: modes,\n        edit: [\"click-select\"],\n      },\n      // these control styles of nodes & edges at different states\n      // currently define active & inactive for the activate-relations mode\n      nodeStateStyles: {\n        active: {\n          opacity: 1,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 1,\n          },\n        },\n        inactive: {\n          opacity: 0.2,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 0.2,\n          },\n        },\n      },\n      edgeStateStyles: {\n        active: {\n          stroke: \"black\",\n          opacity: 1,\n        },\n        inactive: {\n          opacity: 0.2,\n          text: {\n            opacity: 0.2,\n          },\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        this.props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        this.props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Try to hot-swap the properties of this graph and returns whether it's success or not */\n  hotswapProps = (props: G6GraphProps) => {\n    if (!_.isEqual(this.props.layout, props.layout)) {\n      return false;\n    }\n\n    if (this.props.enableActivateRelations !== props.enableActivateRelations) {\n      return false;\n    }\n\n    this.props = props;\n    return true;\n  };\n\n  destroy = () => {\n    this.graph.destroy();\n  };\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // const { nodes: x, edges: y } = testNodeWrap(\"rect\");\n    // nodes = x;\n    // edges = y;\n\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: {\n          ...u.style,\n          radius: 4,\n          paddingHeight: 2,\n          paddingWidth: 4,\n        },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    if (_.uniq(edges.map((u) => u.id)).length !== edges.length) {\n      console.error(\n        \"Edges must have unique ids. However, we get:\",\n        edges.map((u) => u.id)\n      );\n    }\n\n    let newEdges = edges.map((e) => ({\n      id: e.id,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /**\n   * Adjust the canvas size to fit with the graph\n   *\n   * For fit-graph mode, the extraHeight mode is used to add top & bottom padding so that it's not too close (e.g., 20px)\n   * For fit-remaining-window, the offsetHeight is used to reserved some pixels at the bottom of the window so that it's not overflow (e.g., minus 1px for the border)\n   * For keep-as-is, we use the initial height\n   */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height:\n      | { type: \"fit-graph\"; extraHeight: number }\n      | { type: \"fit-remaining-window\"; offsetHeight: number }\n      | { type: \"keep-as-is\" };\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      let graphHeight;\n      switch (height.type) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + height.extraHeight;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight -\n            (viewportOffset + documentScrollY) -\n            height.offsetHeight;\n          break;\n        case \"keep-as-is\":\n          graphHeight = this.props.initHeight;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n      if (center === true) {\n        this.graph.moveTo(\n          graphWidth / 2 - bbox.width / 2,\n          graphHeight / 2 - bbox.height / 2\n        );\n      } else {\n        this.graph.moveTo(\n          this.props.leftOffset || 0,\n          this.props.topOffset || 0\n        );\n      }\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  bordered: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n  },\n  container: {\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n  recenter: () => boolean;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = { type: \"fit-graph\", extraHeight: 8 },\n        toolbar = false,\n        bordered = true,\n        layouts = GraphLayout,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        bordered?: boolean;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?:\n          | { type: \"fit-graph\"; extraHeight: number }\n          | { type: \"fit-remaining-window\"; offsetHeight: number }\n          | { type: \"keep-as-is\" };\n        className?: string;\n        layouts?: typeof GraphLayout;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n          recenter: () => {\n            if (graph.current === undefined) return false;\n            graph.current.updateContainerSize({\n              center: true,\n              height: renderingAdjustedHeight,\n            });\n            return true;\n          },\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n            }\n          );\n        }\n\n        let g = graph.current;\n        if (props !== undefined) {\n          const success = g.hotswapProps(props);\n          if (!success) {\n            g.destroy();\n            graph.current = new G6Graph(\n              container.current,\n              props || {\n                initHeight: 500,\n              }\n            );\n            g = graph.current;\n          }\n        }\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar\n            autoHide={toolbar === \"auto-hide\"}\n            graph={graph}\n            layouts={layouts}\n          />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div\n              ref={container}\n              className={\n                classes.container + (bordered ? \" \" + classes.bordered : \"\")\n              }\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n    layouts,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n    layouts: typeof GraphLayout;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (name: keyof typeof GraphLayout) => {\n      setLayout(name);\n      graph.current?.updateLayout(layouts[name]);\n      graph.current?.untilLayoutStable(20, 50, centerGraph, [], () => {});\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4} align=\"start\">\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { SemanticModel, useStores } from \"../../models\";\nimport { SMNodeType } from \"../../models/sm\";\nimport { gold, green, purple, yellow } from \"@ant-design/colors\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n  class_node: {\n    backgroundColor: green[2],\n    \"&:hover\": {\n      backgroundColor: green[8],\n      color: \"white\",\n    },\n  },\n  literal_node: {\n    backgroundColor: purple[2],\n    \"&:hover\": {\n      backgroundColor: purple[8],\n      color: \"white\",\n    },\n  },\n  data_node: {\n    backgroundColor: gold[2],\n    \"&:hover\": {\n      backgroundColor: gold[8],\n      color: \"white\",\n    },\n  },\n};\n\nexport type SearchValue = { type: SMNodeType | \"class\"; id: string };\n\nexport const NodeSearchComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      value,\n      onDeselect,\n      onSelect,\n      classes,\n    }: {\n      sm: SemanticModel;\n      value?: SearchValue;\n      onDeselect: (value: SearchValue) => void;\n      onSelect: (value: SearchValue) => void;\n    } & WithStyles<typeof styles>) => {\n      const { classStore } = useStores();\n      const seqInvoker = new SequentialFuncInvoker();\n\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        const options: ({\n          value: string;\n          label: string;\n        } & SearchValue)[] = [];\n        for (const r of classStore.iter()) {\n          options.push({\n            type: \"class\",\n            id: r.id,\n            value: `class:${r.id}`,\n            label: sm.graph.uriCount.nextLabel(r.uri, r.readableLabel),\n          });\n        }\n\n        for (const u of sm.graph.nodes) {\n          options.push({\n            type: u.nodetype,\n            id: u.id,\n            value: `${u.nodetype}:${u.id}`,\n            label: sm.graph.uriCount.label(u),\n            className: classes[u.nodetype],\n          } as any);\n        }\n        return options;\n      }, [classStore.records.size]);\n\n      // search for additional values if it's not in the list\n      const onSearch = (query: string) => {\n        if (query === \"\") return;\n        seqInvoker.exec(() => {\n          return classStore.fetchById(query).then(() => 1);\n        });\n      };\n\n      return (\n        <Select\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          showSearch={true}\n          onSearch={onSearch}\n          value={value === undefined ? undefined : `${value.type}:${value.id}`}\n          onSelect={(value, option) => {\n            onSelect({ type: option.type, id: option.id });\n          }}\n          onDeselect={(value, option) => {\n            onDeselect({ type: option.type, id: option.id });\n          }}\n        />\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Select, Space, Switch } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SemanticModel, SMEdge, useStores } from \"../../../models\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport { OntPropSearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  table: {\n    width: \"100%\",\n    textAlign: \"left\",\n    borderSpacing: 0,\n    borderRadius: \"2px 2px 0 0\",\n\n    \"& tr\": {\n      verticalAlign: \"middle\",\n    },\n    \"& th, td\": {\n      padding: \"0 4px\",\n    },\n  },\n  selection: {\n    width: \"100%\",\n  },\n} as const;\n\nexport const NodeSelectionComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      classes,\n      value,\n      onSelect,\n      onDeselect,\n    }: {\n      sm: SemanticModel;\n      value?: string;\n      onDeselect?: (value: string) => void;\n      onSelect?: (value: string) => void;\n    } & WithStyles<typeof styles>) => {\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        return sm.graph.nodes.map((node) => {\n          return {\n            value: node.id,\n            label: node.label,\n          };\n        });\n      }, [sm]);\n\n      return (\n        <Select\n          showSearch={true}\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          value={value}\n          onSelect={onSelect as any}\n          onDeselect={onDeselect as any}\n        />\n      );\n    }\n  )\n);\n\nexport type EdgeFormProps = {\n  sm: SemanticModel;\n  edge?: SMEdge;\n};\n\nexport const EdgeForm = withStyles(styles)(\n  observer(\n    ({ sm, edge, classes }: EdgeFormProps & WithStyles<typeof styles>) => {\n      const { classStore, propertyStore } = useStores();\n      const [source, setSource] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.source).nodetype, id: edge.source }\n          : undefined\n      );\n      const [target, setTarget] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.target).nodetype, id: edge.target }\n          : undefined\n      );\n      const [uri, setURI] = useState<string | undefined>(edge?.uri);\n      const [approximation, setApproximation] = useState(false);\n\n      // whether there exists an edge between source & target\n      // if yes, we can't insert because we assume only one relationship\n      // between two nodes\n      const dupEdge = useMemo(() => {\n        if (source === undefined || source.type === \"class\") return false;\n        if (target === undefined || target.type === \"class\") return false;\n        return (\n          sm.graph.hasEdge(source.id, target.id) &&\n          (edge === undefined ||\n            source.id !== edge.source ||\n            target.id !== edge.target)\n        );\n      }, [sm.graph.version, source?.id, target?.id]);\n\n      useEffect(() => {\n        if (edge === undefined) return;\n        if (propertyStore.getPropertyByURI(edge.uri) !== undefined) return;\n\n        propertyStore.fetchOne({ conditions: { uri: edge.uri } });\n      }, [propertyStore, edge, uri]);\n\n      const onSave = () => {\n        if (uri === undefined || source === undefined || target === undefined)\n          return;\n        if (dupEdge) return;\n\n        const prop = propertyStore.getPropertyByURI(uri)!;\n        let sourceId, targetId;\n\n        if (source.type === \"class\") {\n          const cls = classStore.get(source.id)!;\n          sourceId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: sourceId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          sourceId = source.id;\n        }\n\n        if (target.type === \"class\") {\n          const cls = classStore.get(target.id)!;\n          targetId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: targetId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          targetId = target.id;\n        }\n\n        sm.graph.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: prop.uri,\n          approximation,\n          label: prop.readableLabel,\n        });\n\n        if (edge !== undefined) {\n          // remove the old edge\n          sm.graph.removeEdge(edge.source, edge.target);\n        }\n\n        Modal.destroyAll();\n      };\n\n      const onDelete = () => {\n        if (edge === undefined) return;\n        sm.graph.removeEdge(edge.source, edge.target);\n        Modal.destroyAll();\n      };\n\n      const isModified = () => {\n        return (\n          edge === undefined ||\n          source?.id !== edge.source ||\n          target?.id !== edge.target ||\n          uri !== edge.uri ||\n          approximation !== edge.approximation\n        );\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item\n            label=\"Source\"\n            validateStatus={dupEdge ? \"error\" : undefined}\n            help={\n              dupEdge\n                ? \"Cannot have more than one edge between two nodes\"\n                : undefined\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={source}\n              onSelect={setSource}\n              onDeselect={() => setSource(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Target\">\n            <NodeSearchComponent\n              sm={sm}\n              value={target}\n              onSelect={setTarget}\n              onDeselect={() => setTarget(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Predicate\">\n            <OntPropSearchComponent\n              value={\n                uri !== undefined\n                  ? propertyStore.getPropertyByURI(uri)?.id\n                  : undefined\n              }\n              onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n              onDeselect={(value) => setURI(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Approximation\">\n            <Switch\n              checked={approximation}\n              onChange={(val) => setApproximation(val)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Button\">\n            <Space>\n              <Button\n                type=\"primary\"\n                onClick={onSave}\n                disabled={\n                  source === undefined ||\n                  target === undefined ||\n                  uri === undefined ||\n                  !isModified() ||\n                  dupEdge\n                }\n              >\n                Save\n              </Button>\n              {edge !== undefined ? (\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Radio, Space, Switch } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport {\n  ClassNode,\n  LiteralNode,\n  SemanticModel,\n  SMNode,\n  SMNodeType,\n} from \"../../../models/sm\";\nimport {\n  EntitySearchComponent,\n  OntClassSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {} as const;\n\nexport interface NodeFormProps {\n  sm: SemanticModel;\n  node?: SMNode;\n}\n\n/**\n * Form for adding/editing a node in the graph. There are two cases:\n *\n * 1. Create new node -- when node is undefined\n * 2. Delete or update existing node data without modifying its edges -- when the node is provided\n */\nexport const ClassNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: ClassNode; onDone: () => void }) => {\n    const { classStore } = useStores();\n    const [uri, setURI] = useState<string | undefined>(props.node?.uri);\n    const [approximation, setApproximation] = useState(\n      props.node?.approximation || false\n    );\n\n    // fetch class id associated with the node uri\n    useEffect(() => {\n      if (props.node === undefined) return;\n      if (classStore.getClassByURI(props.node.uri) !== undefined) return;\n\n      classStore.fetchOne({ conditions: { uri: props.node.uri } });\n    }, [props.node?.uri]);\n\n    const onSave = () => {\n      if (uri === undefined) return;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addClassNode({\n          id: props.sm.graph.nextNodeId(),\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          nodetype: \"class_node\",\n          approximation: approximation,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateClassNode(props.node.id, {\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          approximation: approximation,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.uri !== uri ||\n        props.node.approximation !== approximation\n      );\n    };\n\n    return (\n      <React.Fragment>\n        <Form.Item label=\"Class\">\n          <OntClassSearchComponent\n            value={\n              uri !== undefined ? classStore.getClassByURI(uri)?.id : undefined\n            }\n            onSelect={(id) => setURI(classStore.get(id)?.uri)}\n            onDeselect={() => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Button\">\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={uri === undefined || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </React.Fragment>\n    );\n  }\n);\n\nexport const LiteralNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: LiteralNode; onDone: () => void }) => {\n    const { entityStore } = useStores();\n    const [id, setId] = useState<string | undefined>(\n      props.node?.value?.type === \"entity-id\" ? props.node.value.id : undefined\n    );\n    const [isInContext, setIsInContext] = useState(\n      props.node !== undefined && props.node.nodetype === \"literal_node\"\n        ? props.node.isInContext\n        : false\n    );\n\n    const duplicatedId = useMemo(\n      () =>\n        id !== undefined &&\n        ((props.node === undefined &&\n          props.sm.graph.nodeByEntityId(id) !== undefined) ||\n          (props.node !== undefined &&\n            props.sm.graph.nodeByEntityId(id)?.id !== props.node.id)),\n      [props.sm.graph.version, id]\n    );\n\n    if (props.node !== undefined && props.node.value.type === \"string\") {\n      return <div>Not Implemented Yet</div>;\n    }\n\n    const onSave = () => {\n      if (id === undefined) return;\n      if (duplicatedId) return;\n\n      const ent = entityStore.get(id)!;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addLiteralNode({\n          id: props.sm.graph.nextNodeId(),\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateLiteralNode(props.node.id, {\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.isInContext !== isInContext ||\n        (props.node.value.type === \"entity-id\" && props.node.value.id !== id)\n      );\n    };\n\n    return (\n      <React.Fragment>\n        <Form.Item\n          label=\"Entity\"\n          validateStatus={duplicatedId ? \"error\" : undefined}\n          help={duplicatedId ? \"Entity's already in the graph\" : undefined}\n        >\n          <EntitySearchComponent\n            value={id}\n            onSelect={setId}\n            onDeselect={() => setId(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Is In Context?\">\n          <Switch\n            checked={isInContext}\n            onChange={(val) => setIsInContext(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Button\">\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={id === undefined || duplicatedId || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </React.Fragment>\n    );\n  }\n);\n\nexport const NodeForm = withStyles(styles)(\n  observer(\n    ({ sm, node, classes }: NodeFormProps & WithStyles<typeof styles>) => {\n      const [nodetype, setNodeType] = useState<SMNodeType>(\n        node?.nodetype || \"class_node\"\n      );\n      const onDone = () => Modal.destroyAll();\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          {node === undefined ? (\n            <Form.Item label=\"Node Type\">\n              <Radio.Group\n                value={nodetype}\n                onChange={(event) => setNodeType(event.target.value)}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"class_node\">Class Node</Radio.Button>\n                <Radio.Button value=\"literal_node\">Literal Node</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          ) : null}\n          {nodetype === \"class_node\" ? (\n            <ClassNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"class_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : (\n            <LiteralNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"literal_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          )}\n        </Form>\n      );\n    }\n  )\n);\n","import { Modal } from \"antd\";\nimport { EdgeForm, EdgeFormProps } from \"./EdgeForm\";\nimport { NodeForm, NodeFormProps } from \"./NodeForm\";\n\ninterface TypedEdgeFormProps extends EdgeFormProps {\n  type: \"edge\";\n}\n\ninterface TypedNodeFormProps extends NodeFormProps {\n  type: \"node\";\n}\n\nexport function openForm(\n  args: TypedEdgeFormProps | TypedNodeFormProps,\n  zIndex?: number\n) {\n  let title;\n  let content;\n  switch (args.type) {\n    case \"edge\":\n      content = <EdgeForm {...args} />;\n      title = args.edge === undefined ? \"Add Edge\" : \"Update Edge\";\n      break;\n    case \"node\":\n      content = <NodeForm {...args} />;\n      title = args.node === undefined ? \"Add Node\" : \"Update Node\";\n      break;\n  }\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>{title}</span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { gold, green, purple, yellow } from \"@ant-design/colors\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Divider, Popconfirm, Space } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  GraphComponent,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport { routes } from \"../../routes\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { SMNode } from \"../../models/sm\";\nimport { openForm } from \"./forms\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {\n    marginTop: 8,\n  },\n  draft: {\n    border: `1px dashed ${yellow[7]} !important`,\n    \"&:hover\": {\n      color: `${gold[5]} !important`,\n    },\n  },\n  selectedDraft: {\n    backgroundColor: `${gold[5]} !important`,\n  },\n};\n\nexport const SemanticModelComponent = withStyles(styles)(\n  observer(\n    ({ classes, table }: { table: Table } & WithStyles<typeof styles>) => {\n      const graphRef = useRef<GraphComponentFunc | undefined>(undefined);\n      const [currentIndex, setCurrentIndex] = useState(0);\n      const { semanticModelStore } = useStores();\n      const sms = semanticModelStore.findByTable(table.id);\n      const drafts = semanticModelStore.getDraftsByTable(table);\n      if (currentIndex >= sms.length + drafts.length) {\n        // there is no semantic model & no draft for this table, create a new draft\n        const id = semanticModelStore.getNewDraftId(table);\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          `sm-${sms.length}`,\n          table\n        );\n        semanticModelStore.setCreateDraft(draft);\n        drafts.push(draft);\n      }\n\n      const sm =\n        currentIndex < sms.length\n          ? sms[currentIndex]\n          : drafts[currentIndex - sms.length];\n\n      const [nodes, edges] = useMemo(() => {\n        const nodes = sm.graph.nodes.map((node) => {\n          let shape: GraphNode[\"shape\"], style;\n          switch (node.nodetype) {\n            case \"class_node\":\n              shape = \"circle\";\n              style = { fill: green[2], stroke: green[8] };\n              break;\n            case \"data_node\":\n              shape = \"rect\";\n              style = { fill: gold[3], stroke: gold[8] };\n              break;\n            case \"literal_node\":\n              if (node.value.type === \"entity-id\") {\n                shape = \"circle\";\n              } else {\n                shape = \"rect\";\n              }\n              if (node.isInContext) {\n                style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n              } else {\n                style = { fill: purple[2], stroke: \"#c41d7f\" };\n              }\n              break;\n            default:\n              throw new Error(`Unreachable!`);\n          }\n\n          return {\n            id: node.id,\n            label: getNodeLabel(sm, node),\n            style,\n            shape,\n          };\n        });\n        const edges = sm.graph.edges.map((edge) => {\n          return {\n            id: `${edge.source}-${edge.target}-${edge.uri}`,\n            source: edge.source,\n            target: edge.target,\n            label: edge.label,\n          };\n        });\n\n        return [nodes, edges];\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [\n        SemanticModel.isDraft(sm) ? sm.draftID : null,\n        sm.id,\n        sm.graph.version,\n      ]);\n\n      // center the graph\n      const centering = () => {\n        if (graphRef.current === undefined) {\n          return;\n        }\n        graphRef.current.recenter();\n      };\n      useHotkeys(\"c\", centering, [sm.id, graphRef !== undefined]);\n\n      // add model\n      const cloneNewModel = () => {\n        const id = semanticModelStore.getNewDraftId(table);\n        const nSms = sms.length + drafts.length;\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          semanticModelStore.getNewSemanticModelName(table),\n          table\n        );\n        draft.graph = sm.graph.clone();\n        draft.graph.id = id;\n        semanticModelStore.setCreateDraft(draft);\n        setCurrentIndex(nSms);\n      };\n\n      const onExport = () => {\n        routes.tableExport\n          .path({ tableId: table.id })\n          .mouseClickNavigationHandler(undefined, true);\n      };\n\n      const smLists = [];\n      for (let idx = 0; idx < sms.length + drafts.length; idx++) {\n        const item = idx < sms.length ? sms[idx] : drafts[idx - sms.length];\n        const isSelected = idx === currentIndex;\n        smLists.push(\n          <Button\n            size=\"small\"\n            key={item.id}\n            type={isSelected ? \"primary\" : \"default\"}\n            onClick={() => setCurrentIndex(idx)}\n            className={\n              item.graph.stale || SemanticModel.isDraft(item)\n                ? classes.draft +\n                  (isSelected ? ` ${classes.selectedDraft}` : \"\")\n                : \"\"\n            }\n          >\n            {item.name}\n          </Button>\n        );\n      }\n\n      // only show the list of semantic models when we have more than one semantic model\n      // or when we have some drafts or when the only semantic model is modified\n      let smListComponent = undefined;\n      smListComponent = (\n        <Space style={{ float: \"right\" }}>\n          {smLists.length !== 1 || drafts.length > 0 || sms[0].graph.stale ? (\n            <React.Fragment>\n              <span>Semantic Models:</span>\n              {smLists}\n              <Divider type=\"vertical\" />\n            </React.Fragment>\n          ) : null}\n          {/* reset is nice to have, but we didn't have the original copy... */}\n          {/* {!sm.isDraft && sm.graph.stale ? (\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Reset\n            </Button>\n          ) : null} */}\n          {sms.length + drafts.length > 1 ? (\n            <Popconfirm\n              title=\"Are you sure to delete this model?\"\n              onConfirm={() => {\n                if (SemanticModel.isDraft(sm)) {\n                  semanticModelStore.deleteCreateDraft(sm.draftID);\n                } else {\n                  semanticModelStore.delete(sm.id);\n                }\n                setCurrentIndex(0);\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button size=\"small\" danger={true}>\n                Delete model\n              </Button>\n            </Popconfirm>\n          ) : null}\n          {SemanticModel.isDraft(sm) || sm.graph.stale ? (\n            <Button\n              size=\"small\"\n              onClick={() =>\n                SemanticModel.isDraft(sm)\n                  ? semanticModelStore.create(sm)\n                  : semanticModelStore.update(sm)\n              }\n            >\n              Save model\n            </Button>\n          ) : null}\n\n          <Button size=\"small\" onClick={cloneNewModel}>\n            Add model\n          </Button>\n\n          <Button size=\"small\" type=\"primary\" disabled={true}>\n            Import\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            style={{ background: green[6], borderColor: green[6] }}\n            onClick={onExport}\n          >\n            Export\n          </Button>\n        </Space>\n      );\n\n      return (\n        <div>\n          {smListComponent}\n          <Space>\n            <Button size=\"small\" onClick={centering}>\n              Center graph (C)\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"node\", sm })}>\n              Add node\n            </Button>\n            <Button size=\"small\" onClick={() => openForm({ type: \"edge\", sm })}>\n              Add edge\n            </Button>\n          </Space>\n          <GraphComponent\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.graph.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight={{ type: \"fit-graph\", extraHeight: 20 }}\n            props={{\n              initHeight: 300,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                openForm({\n                  type: \"node\",\n                  sm,\n                  node: sm.graph.node(nodeId),\n                });\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                openForm({\n                  type: \"edge\",\n                  sm,\n                  edge: sm.graph.edge(edge.source, edge.target),\n                });\n              },\n            }}\n          />\n        </div>\n      );\n    }\n  )\n);\n\nconst getNodeLabel = (sm: SemanticModel, node: SMNode) => {\n  switch (node.nodetype) {\n    case \"data_node\":\n      return node.label;\n    case \"literal_node\":\n      return node.label;\n    case \"class_node\":\n      return sm.graph.uriCount.label(node);\n  }\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { TableComponent } from \"../../components/table\";\nimport * as RTable from \"../../components/table/RelationalTable\";\nimport {\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { EntitySettingComponent } from \"./EntitySettingComponent\";\nimport { SemanticModelComponent } from \"./SemanticModelComponent\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const { projectStore, tableStore, tableRowStore, semanticModelStore } =\n      useStores();\n\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n      tableStore,\n      tableId\n    );\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n\n      // fetch its semantic model\n      if (!semanticModelStore.hasByTable(tableId)) {\n        semanticModelStore.fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        });\n      }\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    useHotkeys(\"b\", toPreviousTable, [navState.version]);\n    useHotkeys(\"n\", toNextTable, [navState.version]);\n\n    const table = tableStore.get(tableId);\n    const rtable: RTable.Table | undefined = useMemo(() => {\n      const table = tableStore.get(tableId);\n      if (table === undefined || table === null) {\n        return undefined;\n      }\n\n      return {\n        name: table.name,\n        description: table.description,\n        columns: table.columns,\n        size: table.size,\n        context: {\n          webpage: table.contextPage?.url,\n          title: table.contextPage?.title,\n          entityId: table.contextPage?.entityId,\n          contentHierarchy: table.contextTree,\n        },\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableId, table !== undefined]);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined) {\n      return <LoadingPage />;\n    }\n\n    let semComponent = null;\n    if (!semanticModelStore.hasByTable(tableId)) {\n      semComponent = <LoadingPage bordered={true} />;\n    } else {\n      semComponent = <SemanticModelComponent key={tableId} table={table} />;\n    }\n\n    const queryRow = async (limit: number, offset: number) => {\n      let result = await tableRowStore.fetch({\n        limit,\n        offset,\n        conditions: { table: table.id },\n      });\n      return result.records.map((row) => ({\n        index: row.index,\n        row: row.row.map((v) => ({ value: v })),\n        links: row.links,\n      }));\n    };\n\n    return (\n      <React.Fragment>\n        <TableNavBar\n          project={projectStore.get(table.project)}\n          table={table}\n          btns={[\n            <Button\n              key=\"prev\"\n              onClick={toPreviousTable}\n              disabled={!navState.hasPrev}\n            >\n              Previous Table (B)\n            </Button>,\n            <Button\n              key=\"next\"\n              onClick={toNextTable}\n              disabled={!navState.hasNext}\n            >\n              Next Table (N)\n            </Button>,\n          ]}\n          extraSubTitle={\n            <span className=\"ml-2\">\n              Position:{\" \"}\n              <b>\n                {\" \"}\n                {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n              </b>\n            </span>\n          }\n        />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            {semComponent}\n            <TableComponent\n              key={tableId}\n              toolBarRender={false}\n              table={rtable!}\n              query={queryRow}\n              showRowIndex={true}\n            />\n            <EntitySettingComponent />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useTableNavigation(TableStore: TableStoreType, tableId: number) {\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? TableStore.decodeWhereQuery(b64query) : {}),\n    [TableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await TableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n      setState({\n        ...state,\n        ...newState,\n        version: state.version + 1,\n        query: b64query,\n        tableId,\n      });\n    };\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nconst TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space>\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <span style={{ color: \"#237804\", textDecoration: \"underline\" }}>\n            {props.table.name}\n          </span>\n        </Space>\n      }\n      subTitle={\n        <Space>\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          {props.extraSubTitle}\n        </Space>\n      }\n      extra={props.btns}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the application\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\nconst None = () => <h1>Not supposed to see this page</h1>;\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    component: ProjectPage,\n    urlSchema: { projectId: \"number\" },\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    component: TablePage,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    pathDef: \"/tables/:tableId\",\n  }),\n  tableExport: new NoQueryArgsPathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    pathDef: \"/api/table/:tableId/export?attachment=true\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={true} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}