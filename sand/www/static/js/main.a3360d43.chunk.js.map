{"version":3,"sources":["../.yalc/gena-app/lib/esm/models/RStore.js","../.yalc/gena-app/lib/esm/models/CRUDStore.js","../.yalc/gena-app/lib/esm/models/StoreIndex.js","../.yalc/gena-app/lib/esm/components/LoadingComponent.js","../.yalc/gena-app/lib/esm/env.js","../.yalc/gena-app/lib/esm/routing/route.js","../.yalc/gena-app/lib/esm/routing/Link.js","../.yalc/gena-app/lib/esm/routing/index.js","../.yalc/gena-app/lib/esm/components/NotFoundComponent.js","../.yalc/gena-app/lib/esm/App.js","reportWebVitals.ts","env.ts","models/settings/ApplicationConfig.ts","models/settings/EntitySettings.ts","models/settings/TableSettings.ts","models/settings/index.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/AssistantService.ts","models/entity/Entity.ts","models/entity/EntityStore.ts","models/ontology/ClassStore.ts","models/ontology/Property.ts","models/ontology/PropertyStore.ts","models/project/Project.ts","models/project/ProjectStore.ts","models/project/ProjectUpload.ts","models/table/TableContext.ts","models/table/TableRowStore.ts","../.yalc/gena-app/lib/esm/models/index.js","models/index.ts","models/table/TableStore.ts","pages/project/forms/NewProjectForm.tsx","pages/home/HomePage.tsx","pages/project/forms/UpdateProjectForm.tsx","pages/project/forms/upload/ParserOptsComponent.tsx","pages/project/forms/upload/RawTableComponent.tsx","pages/project/forms/upload/UploadTableForm.tsx","pages/project/ProjectPage.tsx","misc/SequentialFuncInvoker.ts","pages/table/OntSearchComponent.tsx","pages/table/EntitySettingComponent.tsx","pages/table/NodeSearchComponent.tsx","pages/table/forms/EdgeForm.tsx","pages/table/forms/NodeForm.tsx","pages/table/forms/index.tsx","pages/table/MenuBar.tsx","components/graph/RectNode.ts","components/graph/CircleNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/GraphComponent.tsx","pages/table/SemanticModelComponent.tsx","components/entity/InlineEntityComponent.tsx","components/entity/Entity.ts","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","pages/table/table/filters/TypeTreeFilter.tsx","pages/table/table/filters/PropTreeFilter.tsx","pages/table/table/TableColumn.tsx","components/element/Number.tsx","components/element/Button.tsx","components/element/AutoHideTooltip.tsx","pages/table/table/CandidateEntityListComponent.tsx","pages/table/table/CellComponent.tsx","pages/table/table/filters/Filter.ts","pages/table/table/TableComponent.tsx","pages/table/table/styles.ts","pages/table/TableNavBar.tsx","pages/table/TablePage.tsx","pages/SettingPage.tsx","components/Navbar.tsx","logo.png","routes.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","fetch","flow","query","record","set","id","index","f","map","get","queryByName","name","axios","params","q","resp","data","deserialize","bind","total","nameAndField","Object","entries","key","name2field","fromEntries","undefined","batch","BatchFetchRequests","action","fetchOne","fetchById","fetchByIds","list","limit","length","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","store","window","requests","executingRequests","callback","clearTimeout","setTimeout","promise","exec","catch","pendingPromises","all","x","reqs","req","delete","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","update","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","listener","draft","discardDraft","serializeCreateDraft","draftID","put","serializeUpdateDraft","toModel","markSaved","prevRecord","deindex","clear","remove","serializeRecord","val","k","hasOwnProperty","SimpleCRUDStore","override","_super","call","assign","SingleKeyUniqueIndex","idField","fkField","SingleKeyIndex","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","LoadingComponent","withStyles","container","paddingTop","paddingBottom","textAlign","spin","animation","display","fontSize","color","lineHeight","verticalAlign","width","height","textTransform","text","textShadow","classes","_jsxs","className","children","_jsx","viewBox","focusable","fill","d","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","openInNewPage","preventDefault","ctrlKey","metaKey","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundComponent","fontFamily","title","subTitle","navigation","marginTop","marginLeft","btn","borderColor","background","boxShadow","fontWeight","border","transition","userSelect","touchAction","padding","borderRadius","cursor","App","Router","Switch","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","ApplicationConfig","NIL_ENTITY","SEM_MODEL_IDENTS","SEM_MODEL_STATEMENTS","instanceofMapping","instanceofProps","instanceofIndex","StartsWithIndex","instanceof","uri","setInstanceOf","fromMapping","start","end","substring","internalNode","mapping","sortedPrefixes","keys","sort","a","b","Error","prefixes","shortestPrefix","subindex","slice","node","tmp","prefix","subprefixes","EntitySettings","_showedPropsInFullView","_showedPropsInPopoverView","nilEntityId","setNilEntityId","nil","setInstanceOfProps","cfg","setShowedPropsInFullView","setShowedPropsInPopoverView","addShowedPropsInFullView","addShowedPropsInPopoverView","removeShowedPropsInFullView","removeShowedPropsInPopoverView","getInstanceOfProp","ns","startsWith","showedPropsInFullView","showedPropsInPopoverView","TableSettings","pageSize","showEntityLinkingEditor","setPageSize","toggleEntityLinkingEditor","enableEntityLinkingEditor","appConfig","UISettings","entity","table","fetchSettings","instanceOf","URICount","nodes","counter","id2num","label","nextLabel","getNum","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","isEmpty","clone","toJS","onSave","hasNode","nodesByURI","nodeByColumnIndex","nodeByEntityId","type","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","size","SemanticModel","description","graph","isDraft","sm","DraftSemanticModel","columns","column","SemanticModelStore","getNewCreateDraftId","getCreateDraft","sms","findByTable","drafts","getCreateDraftsByTable","idx","concat","parseInt","Math","max","tableId","tableIndex","column_index","is_in_context","AssistantService","tableStore","tableRowStore","smStore","classStore","propStore","entityStore","tables","rows","predict","algorithm","rawsm","mtab","rawrows","draftId","prevDrafts","getNewSemanticModelName","row","getColumnTypes","getColumnProperties","getColumnTypesServer","includeCandidateEntities","fetchByTable","entIds","links","link","entityId","candidateEntities","candidate","ents","classIds","ent","instanceofProp","properties","stmt","classId","additionalURIs","fetchIfMissingByURI","klass","propIds","propId","stmts","qualifiersOrder","qualId","tree","existingClasses","parents","parent","Entity","readableLabel","aliases","EntityStore","readable_label","qualifiers_order","ClassStore","parentsClosure","doesNotExistURIs","getClassByURI","uriIndex","Property","datatype","PropertyStore","getPropertyByURI","Project","DraftUpdateProject","project","DraftCreateProject","ProjectStore","uploadTable","projectId","file","parserOpt","selectedTables","form","FormData","append","headers","table_ids","formats","isLineBreak","nLines","TableRowStore","updateCellLinks","updateCandidateEntities","serializeLink","candidate_entities","updateColumnLinks","rowId","entity_id","no","hasLocalData","canent","probability","forEach","ce","findByProject","projectIndex","contextPage","context_page","contextValues","context_values","context_tree","contextTree","contentBefore","content_before","n_lines","contentAfter","content_after","semanticModelStore","propertyStore","stores","projectStore","assistantService","uiSettings","error","message","addEventListener","event","reason","isAxiosError","console","_stores","StoreContext","createContext","useStores","React","useContext","NewProjectForm","observer","Form","useForm","useState","nameValidation","setNameValidation","labelCol","span","wrapperCol","onFinish","getFieldValue","Modal","destroyAll","Item","rules","required","validateStatus","htmlType","colorWheels","red","volcano","blue","gold","orange","yellow","lime","green","cyan","geekblue","purple","magenta","HomePage","useEffect","Fragment","gutter","Title","level","style","float","zIndex","content","info","marginBottom","bodyStyle","margin","okButtonProps","maskClosable","mask","top","openNewProjectForm","bordered","itemLayout","dataSource","renderItem","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","UpdateProjectForm","fromProject","initialValue","danger","home","CSVParserForm","opt","onChange","setFieldsValue","delimiter","valuePropName","escapeDelimiter","ParserOptsForm","additionalProps","parserOpts","format","layout","initialValues","Option","RawTableComponent","borderLeft","paddingLeft","paddingRight","defaultSize","toolBarRender","pagination","pageSizeOptions","rowKey","header","dataIndex","request","current","success","styles","upload","carouselDot","opacity","UploadPhase1","setUploadTable","direction","Dragger","multiple","onDrop","dataTransfer","files","tbl","beforeUpload","InboxOutlined","UploadPhase2","uploadingTable","destroy","onDone","setSelectedTables","Text","checked","lst","parser_opts","flag","UploadTableForm","phase","setPhase","setUploadingTable","ProjectPage","useModal","modal","contextHolder","actionRef","useRef","renderText","encodeWhereQuery","_","onConfirm","reload","okText","cancelText","upperFirst","openUpdateProjectForm","EditOutlined","table2row","options","headerTitle","ref","openUploadTableForm","SequentialFuncInvoker","timer","calledAt","selection","OntPropSearchComponent","useSearchComponent","OntClassSearchComponent","EntitySearchComponent","storeName","seqInvoker","mode","allowClear","optionFilterProp","showSearch","onSearch","onSelect","onDeselect","EntitySettingComponent","class_node","literal_node","data_node","NodeSearchComponent","u","option","borderSpacing","EdgeForm","setSource","setTarget","setURI","setApproximation","dupEdge","labelWrap","copyable","help","colon","cls","newEdge","disabled","ClassNodeSubForm","LiteralNodeSubForm","setId","setIsInContext","duplicatedId","DataNodeSubForm","NodeForm","setNodeType","Group","buttonStyle","Button","openForm","args","MenuBar","tableRef","graphRef","semanticmodel","menuVisible","setMenuVisible","useHotkeys","recenter","smUniqueIdent","lstSmsKey","setIndex","funcs","saveModel","addModel","nSms","getDefaultDraftSemanticModel","deleteModel","exportModel","tableExportModel","attachment","exportData","tableExportData","openAddNodeForm","openAddEdgeForm","menu","ItemGroup","SubMenu","icon","faFloppyDisk","SaveOutlined","FileAddOutlined","DeleteOutlined","onCancel","ImportOutlined","ExportOutlined","Divider","faRectangleList","faDownload","marginRight","overlay","onVisibleChange","visible","DownOutlined","drawText","group","wordwrap","units","xoffset","yoffset","stroke","y","addShape","attrs","lineWidth","draggable","registerCircleNode","defaultWidth","getApproximateWidth","G6","registerNode","draw","labelOffset","labelCfg","wrapText","cacheFn","cache","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","lines","line","unit","cssLineHeight","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","flatMap","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","deltaX","deltaY","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","hotswapProps","isEqual","enableActivateRelations","fitCenter","setDataAndRender","render","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","extraHeight","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","offsetHeight","initHeight","changeSize","moveTo","leftOffset","topOffset","untilLayoutStable","maxTries","delay","significantChange","prevBBox","nextBBox","wp","paddingWidth","hp","paddingHeight","setState","_cfg","model","states","labelStyles","registerRectNode","modes","resetSelected","Graph","scrollWidth","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","default","edit","nodeStateStyles","active","inactive","edgeStateStyles","onNodeClick","on","onEdgeClick","newNodes","trim","labelStyle","uniq","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","hide","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","renderingAdjustedHeight","layouts","useImperativeHandle","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","centerGraph","changeLayout","FullscreenOutlined","LayoutOutlined","graphContainer","selectedDraft","SemanticModelComponent","getNodeLabel","InlineEntityComponent","nolink","useEntityProperties","pid","qualifiers","qid","doesNotExist","FetchEntityComponent","renderLoading","renderNotFound","forceWaiting","InlinePropertyComponent","property","showId","CollapsibleComponent","setVisible","toggleVisible","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","amount","language","globe","latitude","longitude","StatementComponent","id2prop","qval","italic","valueIndex","PropertyComponent","propDivider","filteredProps","components","strong","PropertyFilterComponent","root","enable","setEnable","addFilteredProp","removeFilteredProp","PageEntityComponent","minWidth","settings","lang2value","lang","lang2values","openPageEntityComponent","PopoverEntityComponent","treeNode","levelMarker","TypeTreeFilter","types","treeData","setTreeData","p2cs","parentTypeId","rootIds","child","addTypes","visited","treeNodes","rootId","travel2constructTreeNodes","placement","indeterminate","hasAnyOp","hasAllOp","toggleAllType","setSelectNil","selectNil","setSelectUnlinked","selectUnlinked","setIncludeCandidateEntities","TreeNode","unknown","depth","comp","indent","dangerouslySetInnerHTML","__html","type2op","setTypeOp","outputs","stack","pop","PropTreeFilter","TableColumnFilter","tab","setTypes","includeNil","includeUnlinked","defaultActiveKey","TabPane","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","selected","colorSelected","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","AutoHideTooltip","ms","trigger","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","singleUpdate","select","selectMultiple","candidateLst","faCheck","faCheckDouble","findIndex","faPlus","score","onOk","textDecoration","noEntityLink","CellComponent","cell","linksurface","infix","ColumnFilter","hasChange","getFilterExec","entStore","includeTypeIds","excludeTypeIds","hasFilter","canEnt","some","typeId","TableFilter","nColumns","columnFilters","setOnChange","handleChange","filterExecs","results","res","matches","TableComponent","showRowIndex","column2datatype","col","dtypes","filterDropdown","filterIcon","SearchOutlined","TableInformation","contextHierarchy","hierarchy","heading","repeat","ContentComponent","comps","TableNavBar","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","isMounted","sortedIndex","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","onBack","navigator","clipboard","writeText","extra","TablePage","prevTableId","setPrevTableId","hasFetchSemanticModel","setHasFetchSemanticModel","isUpdatedState","mounted","hasByTable","useSemanticModel","datatypes","prevValue","allrows","css","centerNavBar","justifyContent","leftNavBar","borderBottom","LeftNavBar","menus","isFirstItemLogo","routeName","getMenuItem","activeRouteName","selectedKeys","realprops","isValidElement","None","projects","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","locale","enUSIntl","enUSLocale","getElementById"],"mappings":"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","file":"static/js/main.a3360d43.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, computed, flow, makeObservable, observable, runInAction, } from \"mobx\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     * @param indices list of indices to create\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        // storing index, has to make it public to make it observable, but you should treat it as protected\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                result.records = result.records.map((record) => this.records.get(record.id));\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        this.batch = new BatchFetchRequests(this, 50);\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            indices: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            fetchByIds: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n        this.index(m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Deserialize the data sent from the server to a record.\n     */\n    deserialize(record) {\n        if (this.nameAndField.length > 0) {\n            for (const [name, field] of this.nameAndField) {\n                record[field] = record[name];\n                delete record[name];\n            }\n        }\n        return record;\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\nclass BatchFetchRequests {\n    constructor(store, window) {\n        this.store = store;\n        this.window = window;\n        this.requests = new Set();\n        this.executingRequests = new Map();\n    }\n    fetchById(id) {\n        this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    // in case it's still pending from previous requests\n                    const m = this.executingRequests.get(id);\n                    if (m !== undefined) {\n                        // don't remove executingRequests as it will be removed automatically when the promise resolves\n                        m.then(() => {\n                            const r = this.store.records.get(id);\n                            resolve(r === null ? undefined : r);\n                        });\n                    }\n                    else {\n                        const r = this.store.records.get(id);\n                        resolve(r === null ? undefined : r);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    fetchByIds(ids) {\n        for (const id of ids)\n            this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    const output = {};\n                    const pendingPromises = [];\n                    for (const id of ids) {\n                        const m = this.executingRequests.get(id);\n                        if (m !== undefined) {\n                            // don't remove executingRequests as it will be removed automatically when the promise resolves\n                            pendingPromises.push([m, id]);\n                        }\n                        else {\n                            const record = this.store.records.get(id);\n                            if (record !== null && record !== undefined) {\n                                output[id] = record;\n                            }\n                        }\n                    }\n                    if (pendingPromises.length > 0) {\n                        // waiting for pending requests to finish\n                        Promise.all(pendingPromises.map((x) => x[0])).then(() => {\n                            for (const m_n_id of pendingPromises) {\n                                const id = m_n_id[1];\n                                const record = this.store.records.get(id);\n                                if (record !== null && record !== undefined) {\n                                    output[id] = record;\n                                }\n                            }\n                            resolve(output);\n                        });\n                    }\n                    else {\n                        resolve(output);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    exec() {\n        // clear the callback as we are executing it\n        this.callback = undefined;\n        // sending out requests that is not executing\n        const reqs = Array.from(this.requests).filter((id) => !this.executingRequests.has(id));\n        // clean up the requests so the next callback can add\n        this.requests = new Set();\n        const promise = this.store.fetchByIds(reqs);\n        // adding the sending out requests into the executing queue\n        for (const req of reqs)\n            this.executingRequests.set(req, promise);\n        return promise.then((result) => {\n            // clean up the executing requests\n            for (const req of reqs)\n                this.executingRequests.delete(req);\n            return result;\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, makeObservable, observable, override, runInAction, } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Create the record, will sync with remote server.\n     */\n    create(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft) {\n                        this.createDrafts.delete(draft.draftID);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Update the record, with sync with remote server\n     */\n    update(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                return runInAction(() => {\n                    let record = draft.toModel() || this.deserialize(resp.data);\n                    draft.markSaved();\n                    // deindex the record if it's in the store\n                    const prevRecord = this.records.get(draft.id);\n                    if (prevRecord !== undefined && prevRecord !== null) {\n                        this.deindex(prevRecord);\n                    }\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft && this.updateDrafts.has(draft.id)) {\n                        this.updateDrafts.delete(draft.id);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove a record, will sync with remote server\n     */\n    delete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                runInAction(() => {\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n    /**\n     * Serialize the update to send to the server\n     */\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the create object to send to the server\n     */\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the record for sending to the server, fields are renamed\n     * if a mapping is provided (this.field2name).\n     */\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        makeObservable(this, {\n            create: override,\n            update: override,\n        });\n    }\n    create(draft) {\n        const _super = Object.create(null, {\n            create: { get: () => super.create }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.create.call(this, Object.assign({ draftID: \"\" }, draft), true);\n        });\n    }\n    update(draft) {\n        const _super = Object.create(null, {\n            update: { get: () => super.update }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.update.call(this, Object.assign({\n                markSaved: () => { },\n                toModel: () => undefined,\n            }, draft), true);\n        });\n    }\n}\n","import { action, makeObservable, observable } from \"mobx\";\nexport class SingleKeyUniqueIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        this.index.set(key, record[this.idField]);\n    }\n    remove(record) {\n        const key = record[this.fkField];\n        this.index.delete(key);\n    }\n}\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index\n                .get(key1)\n                .get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3\n            .get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n    container: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    spin: {\n        animation: \"loadingCircle 1s infinite linear\",\n        \"-webkit-animation\": \"loadingCircle 1s infinite linear\",\n        display: \"inline-block\",\n        fontSize: 24,\n        color: \"#1890ff\",\n        lineHeight: 0,\n        verticalAlign: \"-0.125em\",\n        width: \"1em\",\n        height: \"1em\",\n        \"-webkit-font-smoothing\": \"antialiased\",\n        textTransform: \"none\",\n    },\n    text: {\n        lineHeight: 1.5715,\n        paddingTop: 5,\n        textShadow: \"0 1px 2px #fff\",\n        color: \"#1890ff\",\n    },\n};\nconst LoadingComponent = withStyles(styles)(({ classes }) => {\n    return (_jsxs(\"div\", Object.assign({ className: classes.container }, { children: [_jsx(\"span\", Object.assign({ className: classes.spin }, { children: _jsx(\"svg\", Object.assign({ viewBox: \"0 0 1024 1024\", focusable: \"false\", \"data-icon\": \"loading\", width: \"1em\", height: \"1em\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, { children: _jsx(\"path\", { d: \"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" }, void 0) }), void 0) }), void 0), _jsx(\"div\", Object.assign({ className: classes.text }, { children: \"Loading...\" }), void 0)] }), void 0));\n});\nexport default LoadingComponent;\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nexport const history = PLATFORM === \"native\" ? createMemoryHistory() : createBrowserHistory();\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e, openInNewPage) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (openInNewPage || (e !== undefined && (e.ctrlKey || e.metaKey))) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst styles = {\n    container: {\n        fontFamily: \"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, apple color emoji, segoe ui emoji, Segoe UI Symbol, noto color emoji\",\n        fontSize: 14,\n        textAlign: \"center\",\n    },\n    title: {\n        lineHeight: 1.8,\n        fontSize: 24,\n    },\n    subTitle: {\n        lineHeight: 1.6,\n        color: \"#00000073\",\n    },\n    navigation: {\n        marginTop: 24,\n        \"& button:not(:first-child)\": {\n            marginLeft: 8,\n        },\n    },\n    btn: {\n        color: \"#fff\",\n        borderColor: \"#1890ff\",\n        background: \"#1890ff\",\n        textShadow: \"0 -1px 0 rgb(0 0 0 / 12%)\",\n        boxShadow: \"0 2px #0000000b\",\n        lineHeight: 1.5715,\n        display: \"inline-block\",\n        fontWeight: 400,\n        border: \"1px solid transparent\",\n        transition: \"all .3s cubic-bezier(.645,.045,.355,1)\",\n        userSelect: \"none\",\n        touchAction: \"manipulation\",\n        height: 32,\n        padding: \"4px 15px\",\n        borderRadius: 2,\n        cursor: \"pointer\",\n    },\n};\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundComponent = withStyles(styles)(({ classes }) => {\n    return (_jsxs(\"div\", Object.assign({ className: classes.container }, { children: [_jsx(\"div\", Object.assign({ className: classes.title }, { children: \"404\" }), void 0), _jsx(\"div\", Object.assign({ className: classes.subTitle }, { children: \"Sorry, the page you visited does not exist.\" }), void 0), _jsxs(\"div\", Object.assign({ className: classes.navigation }, { children: [_jsx(\"button\", Object.assign({ className: classes.btn, onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(\"button\", Object.assign({ className: classes.btn, onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }), void 0)] }), void 0));\n});\nexport default NotFoundComponent;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { NotFoundComponent } from \"./components\";\nimport { history } from \"./routing\";\nexport default function App({ routes, }) {\n    return (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundComponent }, void 0)] }, void 0) }), void 0) }), void 0));\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","export class ApplicationConfig {\n  // configuration related to entities\n  public NIL_ENTITY: string = \"\";\n\n  // list of properties' uris that when a column is tagged with one of them, the column is an entity column\n  public SEM_MODEL_IDENTS = new Set<string>();\n\n  // list of uri of classes that are used as intermediate nodes to represent n-ary relationships, e.g., wikidata's statement\n  public SEM_MODEL_STATEMENTS = new Set<string>();\n\n  // mapping from entity's namespace into the instanceof property that they use\n  protected instanceofMapping: { [namespace: string]: string } = {};\n  public instanceofProps = new Set<string>(); // list of instanceof props in all namespaces\n  protected instanceofIndex = new StartsWithIndex<string>(0, 0); // index to seacrh for the prop given an uri faster\n\n  /** Get instanceof property of an entity identified by the given URI */\n  public instanceof = (uri: string): string | undefined => {\n    return this.instanceofIndex.get(uri);\n  };\n\n  /** Set instanceof property */\n  public setInstanceOf = (instanceofProps: { [namespace: string]: string }) => {\n    this.instanceofMapping = instanceofProps;\n    this.instanceofProps = new Set(Object.values(instanceofProps));\n    this.instanceofIndex = StartsWithIndex.fromMapping(this.instanceofMapping);\n  };\n}\n\nexport class StartsWithIndex<V> {\n  // capture the longest substring from [start, end) that leads us to target or the sub tree\n  protected index: {\n    [substring: string]:\n      | { value: StartsWithIndex<V>; internalNode: true }\n      | { internalNode: false; value: V };\n  } = {};\n  protected start: number = 0;\n  protected end: number = 0;\n\n  constructor(start: number, end: number) {\n    this.start = start;\n    this.end = end;\n  }\n\n  public static fromMapping<V>(mapping: { [prefix: string]: V }) {\n    // sorted in descending order by their length\n    const sortedPrefixes = Object.keys(mapping).sort(\n      (a, b) => b.length - a.length\n    );\n    if (sortedPrefixes.length === 0) {\n      throw new Error(\"Empty mapping\");\n    }\n\n    const fn = (prefixes: string[], start: number) => {\n      const shortestPrefix = prefixes[prefixes.length - 1];\n      const index = new StartsWithIndex<V>(start, shortestPrefix.length);\n\n      if (index.start === index.end) {\n        // we gonna have an empty key, but we must have more than one prefixes\n        index.index[\"\"] = {\n          internalNode: false,\n          value: mapping[shortestPrefix],\n        };\n        const subindex = fn(prefixes.slice(0, -1), index.end);\n        for (const [key, node] of Object.entries(subindex.index)) {\n          index.index[key] = node;\n        }\n        return index;\n      }\n\n      const tmp: { [key: string]: string[] } = {};\n      for (const prefix of prefixes) {\n        const key = prefix.substring(index.start, shortestPrefix.length);\n        if (tmp[key] === undefined) {\n          tmp[key] = [];\n        }\n        tmp[key].push(prefix);\n      }\n\n      for (const [key, subprefixes] of Object.entries(tmp)) {\n        if (subprefixes.length === 1) {\n          index.index[key] = {\n            internalNode: false,\n            value: mapping[subprefixes[0]],\n          };\n        } else {\n          index.index[key] = {\n            internalNode: true,\n            // prefixes are sorted in descending order and tmp maintains the order\n            value: fn(subprefixes, index.end),\n          };\n        }\n      }\n      return index;\n    };\n\n    return fn(sortedPrefixes, 0);\n  }\n\n  /** Get the target mapping matched with the longest prefix */\n  get = (text: string): V | undefined => {\n    const key = text.substring(this.start, this.end);\n    const item = this.index[key];\n\n    if (item !== undefined) {\n      return item.internalNode ? item.value.get(text) : item.value;\n    }\n\n    // try empty key\n    return this.index[\"\"] !== undefined\n      ? (this.index[\"\"].value as V)\n      : undefined;\n  };\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class EntitySettings {\n  // properties to show in full view\n  public _showedPropsInFullView: Set<string> = new Set();\n\n  // properties to show in popover view\n  public _showedPropsInPopoverView: Set<string> = new Set();\n\n  // properties that are used to express \"instance of\" relationships for each namespace\n  public instanceofProps: { [namespace: string]: string } = {};\n\n  // id of an nil entity\n  public nilEntityId: string = \"\";\n\n  constructor() {\n    makeObservable(this, {\n      _showedPropsInFullView: observable,\n      _showedPropsInPopoverView: observable,\n      instanceofProps: observable,\n      nilEntityId: observable,\n      setNilEntityId: action,\n      setInstanceOfProps: action,\n      showedPropsInFullView: computed,\n      showedPropsInPopoverView: computed,\n      setShowedPropsInFullView: action,\n      setShowedPropsInPopoverView: action,\n      addShowedPropsInFullView: action,\n      addShowedPropsInPopoverView: action,\n      removeShowedPropsInFullView: action,\n      removeShowedPropsInPopoverView: action,\n      getInstanceOfProp: action,\n    });\n  }\n\n  get showedPropsInFullView() {\n    return Array.from(this._showedPropsInFullView);\n  }\n\n  get showedPropsInPopoverView() {\n    return Array.from(this._showedPropsInPopoverView);\n  }\n\n  setNilEntityId = (nil: string) => {\n    this.nilEntityId = nil;\n  };\n\n  setInstanceOfProps = (cfg: { [namespace: string]: string }) => {\n    this.instanceofProps = cfg;\n  };\n\n  setShowedPropsInFullView = (props: Set<string>) => {\n    this._showedPropsInFullView = props;\n  };\n\n  setShowedPropsInPopoverView = (props: Set<string>) => {\n    this._showedPropsInPopoverView = props;\n  };\n\n  addShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.add(prop);\n  };\n\n  addShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.add(prop);\n  };\n\n  removeShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.delete(prop);\n  };\n\n  removeShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.delete(prop);\n  };\n\n  getInstanceOfProp = (uri: string) => {\n    // TODO: optimize me, we can get it down to O(1) with proper indexing\n    for (const ns in this.instanceofProps) {\n      if (uri.startsWith(this.instanceofProps[ns])) {\n        return this.instanceofProps[uri];\n      }\n    }\n  };\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class TableSettings {\n  // page size\n  public pageSize: number = 5;\n  public showEntityLinkingEditor: boolean = false;\n\n  constructor() {\n    makeObservable(this, {\n      pageSize: observable,\n      showEntityLinkingEditor: observable,\n      setPageSize: action,\n      toggleEntityLinkingEditor: action,\n      enableEntityLinkingEditor: action,\n    });\n  }\n\n  setPageSize = (pageSize: number) => {\n    this.pageSize = pageSize;\n  };\n\n  toggleEntityLinkingEditor = () => {\n    this.showEntityLinkingEditor = !this.showEntityLinkingEditor;\n  };\n\n  enableEntityLinkingEditor = () => {\n    this.showEntityLinkingEditor = true;\n  };\n}\n","import axios from \"axios\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { ApplicationConfig } from \"./ApplicationConfig\";\nimport { EntitySettings } from \"./EntitySettings\";\nimport { TableSettings } from \"./TableSettings\";\n\nexport const appConfig = new ApplicationConfig();\n\nexport class UISettings {\n  public entity: EntitySettings;\n  public table: TableSettings;\n\n  constructor() {\n    this.entity = new EntitySettings();\n    this.table = new TableSettings();\n\n    makeObservable(this, {\n      entity: observable,\n      table: observable,\n      fetchSettings: action,\n    });\n  }\n\n  /** Fetch settings from the server */\n  async fetchSettings() {\n    const resp = await axios.get(\"/api/settings\");\n    appConfig.setInstanceOf(resp.data[\"entity\"][\"instanceof\"]);\n    appConfig.NIL_ENTITY = resp.data[\"entity\"][\"nil\"];\n    appConfig.SEM_MODEL_IDENTS = new Set(\n      resp.data[\"semantic_model\"][\"identifiers\"]\n    );\n    appConfig.SEM_MODEL_STATEMENTS = new Set(\n      resp.data[\"semantic_model\"][\"statements\"]\n    );\n\n    // add a default instanceof property to the popover view\n    const instanceOf: string[] = Object.values(\n      resp.data[\"entity\"][\"instanceof\"]\n    );\n    if (instanceOf.length > 0) {\n      this.entity.addShowedPropsInPopoverView(instanceOf[0]);\n    }\n  }\n}\n\nexport { EntitySettings, TableSettings };\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\nimport { appConfig } from \"../settings\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * value of this literal node, depends on the type\n   */\n  value:\n    | {\n        type: \"string\";\n        value: string;\n      }\n    | {\n        type: \"entity-id\";\n        id: string;\n        uri: string;\n      };\n  // readable name for this node\n  label: string;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface SMEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    if (this.id2num[node.id] === undefined || this.id2num[node.id] === 1) {\n      return node.label;\n    }\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    if (this.counter[uri] === undefined) {\n      return label;\n    }\n    return `${label} ${this.counter[uri]}`;\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n\n  getNum = (node: ClassNode) => {\n    return this.id2num[node.id];\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: SMEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: SMEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  /** Whether this graph is just containing all data nodes and no edges (it hasn't been modeled) */\n  isEmpty = () => {\n    return (\n      this.edges.length == 0 &&\n      this.nodes.every((node) => node.nodetype === \"data_node\")\n    );\n  };\n\n  clone = () => {\n    const record = this.toJS();\n    return new SMGraph(this.id, record.nodes, record.edges);\n  };\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number): DataNode =>\n    this.nodes[this.column2nodeIndex[id]] as DataNode;\n  nodeByEntityId = (id: string): LiteralNode =>\n    this.nodes.filter(\n      (node) =>\n        node.nodetype === \"literal_node\" &&\n        node.value.type === \"entity-id\" &&\n        node.value.id === id\n    )[0] as LiteralNode;\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [SMEdge, SMEdge?][] => {\n    let matchPaths: [SMEdge, SMEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (appConfig.SEM_MODEL_IDENTS.has(inedge.uri)) {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [SMEdge, SMEdge?][] => {\n    let outprops: [SMEdge, SMEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        appConfig.SEM_MODEL_STATEMENTS.has(target.uri)\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<SMEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: SMEdge) {\n    if (this.hasEdge(edge.source, edge.target)) {\n      throw new Error(\"Cannot have more than one edge between two nodes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<SMEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"gena-app\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"../table\";\nimport { SMEdge, SMGraph, SMNode, SMNodeType } from \"./SMGraph\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  static isDraft = (\n    sm: SemanticModel | DraftSemanticModel\n  ): sm is DraftSemanticModel => {\n    return (sm as DraftSemanticModel).draftID !== undefined;\n  };\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  /**\n   * Get a default draft model for a table\n   */\n  static getDefaultDraftSemanticModel(\n    id: string,\n    name: string,\n    table: Table,\n    description = \"\"\n  ): DraftSemanticModel {\n    const graph = new SMGraph(\n      id,\n      table.columns.map((column, index) => ({\n        id: `col-${index}`,\n        label: column,\n        columnIndex: index,\n        nodetype: \"data_node\",\n      })),\n      []\n    );\n    graph.stale = true;\n    return new DraftSemanticModel(id, name, description, 0, graph, table.id);\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false, [\n      new SingleKeyIndex(\"table\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, SemanticModel>;\n  }\n\n  /** Generate new draft id */\n  getNewCreateDraftId = (table: Table): string => {\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      if (this.getCreateDraft(id) === undefined) {\n        return id;\n      }\n      i++;\n    }\n  };\n\n  /** Generate new semantic model name */\n  getNewSemanticModelName(table: Table): string {\n    const sms = this.findByTable(table.id);\n    const drafts = this.getCreateDraftsByTable(table);\n\n    let idx = -1;\n    for (const sm of sms.concat(drafts)) {\n      const m = /sm-(\\d+)/.exec(sm.name);\n      if (m === null) continue;\n      if (parseInt(m[1]) >= idx) {\n        idx = Math.max(idx, parseInt(m[1]));\n      }\n    }\n    return `sm-${idx + 1}`;\n  }\n\n  /** Get all drafts of a table */\n  getCreateDraftsByTable(table: Table): DraftSemanticModel[] {\n    const drafts = [];\n    for (const draft of this.createDrafts.values()) {\n      if (draft.table == table.id) {\n        drafts.push(draft);\n      }\n    }\n    return drafts;\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /**\n   * Remove a record (by id) from your indexes\n   */\n  protected deindex(record: SemanticModel): void {\n    for (const index of this.indices) {\n      index.remove(record);\n    }\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize(record: any): SemanticModel {\n    const nodes: SMNode[] = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    const edges: SMEdge[] = record.data.edges;\n\n    let graph = new SMGraph(record.id.toString(), nodes, edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  }\n\n  public serializeUpdateDraft(record: SemanticModel): object {\n    record.version += 1;\n    return {\n      table: record.table,\n      name: record.name,\n      description: record.description,\n      version: record.version,\n      data: {\n        nodes: record.graph.nodes.map((node) => {\n          switch (node.nodetype) {\n            case \"class_node\":\n              return {\n                id: node.id,\n                uri: node.uri,\n                approximation: node.approximation,\n                label: node.label,\n                type: node.nodetype,\n              };\n            case \"data_node\":\n              return {\n                id: node.id,\n                label: node.label,\n                column_index: node.columnIndex,\n                type: node.nodetype,\n              };\n            case \"literal_node\":\n              return {\n                id: node.id,\n                value: node.value,\n                label: node.label,\n                is_in_context: node.isInContext,\n                type: node.nodetype,\n              };\n          }\n        }),\n        edges: record.graph.edges.map((edge) => {\n          return {\n            source: edge.source,\n            target: edge.target,\n            uri: edge.uri,\n            approximation: edge.approximation,\n            label: edge.label,\n          };\n        }),\n      },\n    };\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    return this.serializeUpdateDraft(record);\n  }\n}\n","import { SERVER } from \"../env\";\nimport { RStore, Record } from \"gena-app\";\nimport { action, flow, makeObservable, observable } from \"mobx\";\nimport { Table, TableRowStore, TableStore } from \"../models/table\";\nimport { DraftSemanticModel, SemanticModelStore } from \"./sm\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { Class, ClassStore } from \"./ontology/ClassStore\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { Property } from \"./ontology/Property\";\nimport { appConfig } from \"./settings\";\n\ninterface AssistantRecord extends Record<number> {}\n\ninterface Prediction {\n  [algorithm: string]: {\n    sm: any;\n    rows: any[];\n  };\n}\n\nexport class AssistantService extends RStore<number, AssistantRecord> {\n  protected tables: TableStore;\n  protected rows: TableRowStore;\n  protected smStore: SemanticModelStore;\n  protected entityStore: EntityStore;\n  protected classStore: ClassStore;\n  protected propStore: PropertyStore;\n\n  constructor(\n    tableStore: TableStore,\n    tableRowStore: TableRowStore,\n    smStore: SemanticModelStore,\n    classStore: ClassStore,\n    propStore: PropertyStore,\n    entityStore: EntityStore\n  ) {\n    super(`${SERVER}/api/assistant`, undefined, false, []);\n\n    this.tables = tableStore;\n    this.rows = tableRowStore;\n    this.smStore = smStore;\n    this.classStore = classStore;\n    this.propStore = propStore;\n    this.entityStore = entityStore;\n\n    makeObservable(this, {\n      predict: action,\n      getColumnTypes: action,\n      getColumnProperties: action,\n      getColumnTypesServer: action,\n    });\n  }\n\n  /**\n   * Predict semantic description and entity linking\n   * */\n  predict: (table: Table) => CancellablePromise<void> = flow(function* (\n    this: AssistantService,\n    table: Table\n  ) {\n    // send request to the server to get some suggestions\n    const resp: AxiosResponse<Prediction> = yield axios.get(\n      `${this.remoteURL}/predict/${table.id}`,\n      {\n        params: { algorithm: \"mtab\" },\n      }\n    );\n\n    // deserialzie the results and put it back to the store\n    const rawsm = resp.data.mtab.sm;\n    const rawrows = resp.data.mtab.rows;\n\n    const draftId = this.smStore.getNewCreateDraftId(table);\n    const graph = this.smStore.deserialize({\n      data: rawsm,\n      id: \"\",\n    }).graph;\n\n    // before set a new draft, check if an empty draft is there (as default) and remove it\n    const prevDrafts = this.smStore.getCreateDraftsByTable(table);\n    if (prevDrafts.length === 1 && prevDrafts[0].graph.isEmpty()) {\n      this.smStore.deleteCreateDraft(prevDrafts[0].draftID);\n    }\n\n    const name = this.smStore.getNewSemanticModelName(table);\n    this.smStore.setCreateDraft(\n      new DraftSemanticModel(draftId, name, \"\", 0, graph, table.id)\n    );\n\n    const rows = rawrows.map(this.rows.deserialize);\n    for (const row of rows) {\n      this.rows.set(row);\n    }\n    return;\n  });\n\n  /**\n   * Get column types from entities in the column. This algorithm is implemented in the client side\n   */\n  async getColumnTypes(\n    table: Table,\n    columnIndex: number,\n    includeCandidateEntities: boolean\n  ): Promise<{ [id: string]: Class }> {\n    const rows = await this.rows.fetchByTable(table, 0, table.size);\n\n    // fetch all entities\n    const entIds = new Set<string>();\n    for (const row of rows) {\n      for (const link of row.links[columnIndex] || []) {\n        if (\n          link.entityId !== undefined &&\n          link.entityId !== appConfig.NIL_ENTITY\n        ) {\n          entIds.add(link.entityId);\n        }\n\n        if (includeCandidateEntities) {\n          for (const candidate of link.candidateEntities) {\n            entIds.add(candidate.entityId);\n          }\n        }\n      }\n    }\n\n    const ents = await this.entityStore.fetchByIds(Array.from(entIds));\n\n    // fetch all classes from entities as well as from the semantic models\n    const classIds = new Set<string>();\n    for (const ent of Object.values(ents)) {\n      const instanceofProp = appConfig.instanceof(ent.uri);\n      if (\n        instanceofProp === undefined ||\n        ent.properties[instanceofProp] === undefined\n      ) {\n        continue;\n      }\n\n      for (const stmt of ent.properties[instanceofProp]) {\n        if (stmt.value.type === \"entityid\") {\n          const classId = stmt.value.value;\n          classIds.add(classId);\n        }\n      }\n    }\n\n    const classes = await this.classStore.fetchByIds(Array.from(classIds));\n\n    // add some classes from the semantic models\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          additionalURIs.add(node.uri);\n        }\n      }\n    }\n    for (const klass of await Promise.all(\n      Array.from(additionalURIs).map(\n        this.classStore.fetchIfMissingByURI.bind(this.classStore)\n      )\n    )) {\n      if (klass === undefined) continue;\n      classes[klass.id] = klass;\n    }\n\n    return classes;\n  }\n\n  /**\n   * Get properties of entities in the column. This algorithm is implemented in the client side\n   */\n  async getColumnProperties(\n    table: Table,\n    columnIndex: number,\n    includeCandidateEntities: boolean\n  ): Promise<{ [id: string]: Property }> {\n    const rows = await this.rows.fetchByTable(table, 0, table.size);\n\n    // fetch all entities\n    const entIds = new Set<string>();\n    for (const row of rows) {\n      for (const link of row.links[columnIndex] || []) {\n        if (\n          link.entityId !== undefined &&\n          link.entityId !== appConfig.NIL_ENTITY\n        ) {\n          entIds.add(link.entityId);\n        }\n\n        if (includeCandidateEntities) {\n          for (const candidate of link.candidateEntities) {\n            entIds.add(candidate.entityId);\n          }\n        }\n      }\n    }\n\n    const ents = await this.entityStore.fetchByIds(Array.from(entIds));\n\n    // fetch all properties from entities as well as from the semantic models\n    const propIds = new Set<string>();\n    for (const ent of Object.values(ents)) {\n      for (const [propId, stmts] of Object.entries(ent.properties)) {\n        propIds.add(propId);\n\n        for (const stmt of stmts) {\n          for (const qualId of stmt.qualifiersOrder) {\n            propIds.add(qualId);\n          }\n        }\n      }\n    }\n\n    const props = await this.propStore.fetchByIds(Array.from(propIds));\n\n    // add some properties from the semantic models\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          for (const edge of sm.graph.outgoingEdges(node.id)) {\n            additionalURIs.add(edge.uri);\n          }\n        }\n      }\n    }\n    for (const prop of await Promise.all(\n      Array.from(additionalURIs).map(\n        this.propStore.fetchIfMissingByURI.bind(this.propStore)\n      )\n    )) {\n      if (prop === undefined) continue;\n      props[prop.id] = prop;\n    }\n\n    return props;\n  }\n\n  /**\n   * Get column types from entities in the column.\n   * This algorithm calls the function implemented in the server, therefore, it does not have the candidate entities.\n   */\n  async getColumnTypesServer(\n    table: Table,\n    columnIndex: number\n  ): Promise<{ [id: string]: Set<string> }> {\n    const req = axios.post(`${this.remoteURL}/column-types`, {\n      table: table.id,\n      column: columnIndex,\n    });\n\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          additionalURIs.add(node.uri);\n        }\n      }\n    }\n\n    const resp: AxiosResponse<{ [id: string]: string[] }> = await req;\n    const tree = Object.fromEntries(\n      Object.entries(resp.data).map((value) => [value[0], new Set(value[1])])\n    );\n\n    // gather the list of additional classes and add them to the tree\n    const existingClasses = Object.values(\n      await this.classStore.fetchByIds(Object.keys(tree))\n    );\n    const classes = Object.fromEntries(\n      (\n        await Promise.all(\n          Array.from(additionalURIs).map(\n            this.classStore.fetchIfMissingByURI.bind(this.classStore)\n          )\n        )\n      )\n        .filter((klass) => klass !== undefined)\n        .map((klass) => [klass!.id, klass!])\n    );\n\n    for (const klass of Object.values(classes)) {\n      if (tree[klass.id] === undefined) {\n        tree[klass.id] = new Set();\n        for (const parent of klass.parents) {\n          if (tree[parent] !== undefined) {\n            tree[parent].add(klass.id);\n          }\n        }\n      }\n    }\n\n    // we need to check if any of the additional URIs have children which are already in the tree, so we\n    // can add them correctly\n    for (const klass of existingClasses) {\n      for (const parent of klass.parents) {\n        if (classes[parent] !== undefined) {\n          tree[parent].add(klass.id);\n        }\n      }\n    }\n\n    return tree;\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\n/** An entity modeled according to Wikidata Qnode */\nexport class Entity {\n  public id: string;\n  public uri: string;\n  public label: MultiLingualString;\n  public readableLabel: string;\n  public aliases: MultiLingualStringList;\n  public description: MultiLingualString;\n  public properties: { [prop: string]: Statement[] };\n\n  constructor(\n    id: string,\n    uri: string,\n    label: MultiLingualString,\n    readableLabel: string,\n    aliases: MultiLingualStringList,\n    description: MultiLingualString,\n    props: { [prop: string]: Statement[] }\n  ) {\n    this.id = id;\n    this.uri = uri;\n    this.label = label;\n    this.readableLabel = readableLabel;\n    this.aliases = aliases;\n    this.description = description;\n    this.properties = props;\n\n    makeObservable(this, {\n      id: observable,\n      label: observable,\n      aliases: observable,\n      description: observable,\n      properties: observable,\n    });\n  }\n}\n\nexport type MultiLingualString = {\n  lang2value: { [lang: string]: string };\n  lang: string;\n};\nexport type MultiLingualStringList = {\n  lang2values: { [lang: string]: string[] };\n  lang: string;\n};\n\nexport interface Statement {\n  value: DataValue;\n  // mapping from qualifier id into data value\n  qualifiers: { [qualifier: string]: DataValue[] };\n  // order of qualifiers as dictionary lacks of order\n  qualifiersOrder: string[];\n}\n\nexport type DataValue =\n  | DataValueString\n  | DataValueTime\n  | DataValueQuantity\n  | DataValueGlobeCoordinate\n  | DataValueMonolingualText\n  | DataValueEntity;\n\nexport interface DataValueTime {\n  readonly type: \"time\";\n  value: {\n    time: string;\n    timezone: number;\n    before: number;\n    after: number;\n    precision: number;\n    calendarmodel: string;\n  };\n}\n\nexport interface DataValueQuantity {\n  readonly type: \"quantity\";\n  value: {\n    amount: string;\n    upperBound: string;\n    lowerBound: string;\n    unit: string;\n  };\n}\n\nexport interface DataValueMonolingualText {\n  readonly type: \"monolingualtext\";\n  value: {\n    text: string;\n    language: string;\n  };\n}\n\nexport interface DataValueGlobeCoordinate {\n  readonly type: \"globecoordinate\";\n  value: {\n    latitude: number;\n    longitude: number;\n    precision: number;\n    altitude: null;\n    globe: string;\n  };\n}\n\nexport interface DataValueEntity {\n  readonly type: \"entityid\";\n  value: string;\n}\n\nexport interface DataValueString {\n  readonly type: \"string\";\n  value: string;\n}\n","import { AxiosError } from \"axios\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RStore } from \"gena-app\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n  }\n\n  public deserialize(record: any): Entity {\n    record.readableLabel = record.readable_label;\n    delete record.readable_label;\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return new Entity(\n      record.id,\n      record.uri,\n      record.label,\n      record.readableLabel,\n      record.aliases,\n      record.description,\n      record.properties\n    );\n  }\n}\n","import { PropaneSharp } from \"@mui/icons-material\";\nimport { flow } from \"lodash\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/internal\";\nimport { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"gena-app\";\nimport { SERVER } from \"../../env\";\n\nexport interface Class {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n  parentsClosure: Set<string>;\n}\n\nexport class ClassStore extends RStore<string, Class> {\n  public doesNotExistURIs = new Set<string>();\n\n  constructor() {\n    super(\n      `${SERVER}/api/classes`,\n      { readableLabel: \"readable_label\", parentsClosure: \"parents_closure\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n\n    makeObservable(this, {\n      doesNotExistURIs: observable,\n      fetchIfMissingByURI: action,\n    });\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Class>;\n  }\n\n  getClassByURI = (uri: string): Class | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n\n  /**\n   * Fetch a class by URI if it is not in the store.\n   *\n   * @returns undefined if the URI does not exist in the database.\n   */\n\n  async fetchIfMissingByURI(uri: string): Promise<Class | undefined> {\n    if (this.doesNotExistURIs.has(uri)) {\n      return undefined;\n    }\n\n    const id = this.uriIndex.index.get(uri);\n    if (id === undefined) {\n      const record: Class | undefined = await this.fetchOne({\n        conditions: { uri },\n      });\n      if (record === undefined) {\n        runInAction(() => {\n          this.doesNotExistURIs.add(uri);\n        });\n      }\n      return record;\n    }\n    return this.get(id)!;\n  }\n\n  public deserialize(record: any): Class {\n    record = super.deserialize(record);\n    record.parentsClosure = new Set(record.parentsClosure);\n    return record;\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\n\nexport type DataType =\n  | \"monolingualtext\"\n  | \"url\"\n  | \"entity\"\n  | \"datetime\"\n  | \"number\"\n  | \"string\"\n  | \"globe-coordinate\"\n  | \"unknown\";\n\nexport class Property {\n  public id: string;\n  public uri: string;\n  public label: string;\n  public readableLabel: string;\n  public aliases: string[];\n  public description: string;\n  public datatype: DataType;\n  public parents: string[];\n\n  constructor(\n    id: string,\n    uri: string,\n    label: string,\n    readableLabel: string,\n    aliases: string[],\n    description: string,\n    datatype: DataType,\n    parents: string[]\n  ) {\n    this.id = id;\n    this.uri = uri;\n    this.label = label;\n    this.readableLabel = readableLabel;\n    this.aliases = aliases;\n    this.description = description;\n    this.datatype = datatype;\n    this.parents = parents;\n\n    makeObservable(this, {\n      id: observable,\n      uri: observable,\n      label: observable,\n      readableLabel: observable,\n      aliases: observable,\n      description: observable,\n      datatype: observable,\n      parents: observable,\n    });\n  }\n}\n","import { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"gena-app\";\nimport { SERVER } from \"../../env\";\nimport { Property } from \"./Property\";\n\nexport class PropertyStore extends RStore<string, Property> {\n  public doesNotExistURIs = new Set<string>();\n\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n\n    makeObservable(this, {\n      doesNotExistURIs: observable,\n      fetchIfMissingByURI: action,\n    });\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Property>;\n  }\n\n  getPropertyByURI = (uri: string): Property | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n\n  /**\n   * Fetch a property by URI if it is not in the store.\n   *\n   * @returns undefined if the URI does not exist in the database.\n   */\n  async fetchIfMissingByURI(uri: string): Promise<Property | undefined> {\n    if (this.doesNotExistURIs.has(uri)) {\n      return undefined;\n    }\n\n    const id = this.uriIndex.index.get(uri);\n    if (id === undefined) {\n      const record: Property | undefined = await this.fetchOne({\n        conditions: { uri },\n      });\n      if (record === undefined) {\n        runInAction(() => {\n          this.doesNotExistURIs.add(uri);\n        });\n      }\n      return record;\n    }\n    return this.get(id)!;\n  }\n\n  public deserialize(record: any): Property {\n    return new Property(\n      record.id,\n      record.uri,\n      record.label,\n      record.readable_label,\n      record.aliases,\n      record.description,\n      record.datatype,\n      record.parents\n    );\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"gena-app\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"gena-app\";\nimport { DraftCreateProject, DraftUpdateProject, Project } from \"./Project\";\nimport { ParserOpts, UploadingTable } from \"./ProjectUpload\";\nimport axios from \"axios\";\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  /**\n   * Upload a table to the project\n   */\n  public uploadTable = async (\n    projectId: number,\n    file: File,\n    parserOpt?: ParserOpts,\n    selectedTables?: number[]\n  ): Promise<UploadingTable | number[]> => {\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    if (parserOpt !== undefined) {\n      form.append(\"parser_opts\", JSON.stringify({ file: parserOpt }));\n    }\n\n    if (selectedTables !== undefined) {\n      form.append(\"selected_tables\", JSON.stringify(selectedTables));\n    }\n\n    const resp = await axios.post(\n      `${SERVER}/api/project/${projectId}/upload`,\n      form,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      }\n    );\n\n    if (resp.data.tables !== undefined) return resp.data.tables[0];\n    return resp.data.table_ids;\n  };\n\n  public deserialize(record: any): Project {\n    return new Project(record.id, record.name, record.description);\n  }\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.id,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { Link } from \"../table\";\n\nexport interface CSVParserOpts {\n  format: \"csv\";\n  delimiter: string;\n  first_row_is_header: boolean;\n}\n\nexport interface JSONParserOpts {\n  format: \"json\";\n}\n\nexport type Format = \"csv\" | \"json\";\nexport const formats: Format[] = [\"csv\", \"json\"];\nexport type ParserOpts = CSVParserOpts | JSONParserOpts;\n\nexport interface RawTable {\n  name: string;\n  header: string[];\n  rows: (string | number)[][];\n  links: { [columnIndex: string | number]: Link[] }[];\n}\n\nexport interface UploadingTable {\n  parser_opts: ParserOpts;\n  tables: RawTable[];\n}\n","import { HTMLProps } from \"react\";\n\nexport interface ContentHierarchy {\n  level: number; // level of the heading\n  heading: string; // title of the level (header)\n  contentBefore: (Text | LineBreak)[];\n  contentAfter: (Text | LineBreak)[];\n}\n\nexport interface Text {\n  value: string;\n  tags: string[];\n  id2attrs: { [id: string]: HTMLProps<HTMLAnchorElement> };\n}\n\nexport interface LineBreak {\n  nLines: number;\n}\n\nexport function isLineBreak(item: Text | LineBreak): item is LineBreak {\n  return (item as LineBreak).nLines !== undefined;\n}\n","import { SERVER } from \"../../env\";\nimport {\n  FetchResult,\n  PairKeysUniqueIndex,\n  RStore,\n  SimpleCRUDStore,\n} from \"gena-app\";\nimport { Link, Table, TableRow } from \"./Table\";\nimport { action, makeObservable, flow } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport axios from \"axios\";\n\nexport class TableRowStore extends SimpleCRUDStore<number, TableRow> {\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false, [\n      new PairKeysUniqueIndex(\"table\", \"index\"),\n    ]);\n\n    makeObservable(this, {\n      fetchByTable: action,\n      updateCellLinks: action,\n      updateColumnLinks: action,\n    });\n  }\n\n  get tableIndex() {\n    return this.indices[0] as PairKeysUniqueIndex<\n      number,\n      number,\n      number,\n      TableRow\n    >;\n  }\n\n  /**\n   * Update links of a cell of a single row.\n   *\n   * @param row the row we want to update\n   * @param columnIndex the column we want to save the links\n   * @param entityId the entity id we want to associate with the cell\n   * @param updateCandidateEntities whether or not to update the candidate entities, or just the entities\n   */\n  updateCellLinks = flow(function* (\n    this: TableRowStore,\n    row: TableRow,\n    columnIndex: number,\n    entityId: string | undefined,\n    updateCandidateEntities: boolean\n  ) {\n    const value = row.row[columnIndex];\n    if (typeof value === \"number\") {\n      throw new Error(`Can't not link a number \"${value}\" to an entity`);\n    }\n\n    // first of all, we update the cell\n    if (\n      row.links[columnIndex] === undefined ||\n      row.links[columnIndex].length === 0\n    ) {\n      if (entityId === undefined) {\n        // no need to update as nothing changes\n        return;\n      }\n\n      // add the entity\n      row.links[columnIndex] = [\n        {\n          start: 0,\n          end: value.length,\n          url: undefined,\n          entityId: entityId,\n          candidateEntities: [],\n        },\n      ];\n    }\n    row.links[columnIndex][0].entityId = entityId;\n\n    // then, we sync with the database\n    try {\n      const params = { links: row.links[columnIndex].map(this.serializeLink) };\n      if (!updateCandidateEntities) {\n        for (const link of params.links) {\n          delete (link as any).candidate_entities;\n        }\n      }\n\n      this.state.value = \"updating\";\n      yield axios.put(\n        `${this.remoteURL}/${row.id}/cells/${columnIndex}`,\n        params\n      );\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      throw error;\n    }\n  });\n\n  /**\n   * Update links of cells in a single column that have the same value as the given input.\n   *\n   * This function will never sync the candidate entities.\n   *\n   * @param table the table we want to update\n   * @param columnIndex the column we want to save the links\n   * @param text cell's value matches with this text will be updated\n   * @param entityId the entity id we want to associate with the cell\n   */\n  updateColumnLinks = flow(function* (\n    this: TableRowStore,\n    table: Table,\n    columnIndex: number,\n    text: string,\n    entityId: string | undefined\n  ) {\n    // first, we update cells in the store\n    const map = this.tableIndex.index.get(table.id);\n    if (map !== undefined) {\n      for (const [index, rowId] of map) {\n        const row = this.records.get(rowId)!;\n        if (row.row[columnIndex] !== text) {\n          continue;\n        }\n\n        if (\n          row.links[columnIndex] === undefined ||\n          row.links[columnIndex].length === 0\n        ) {\n          if (entityId === undefined) {\n            // no need to update as nothing changes\n            continue;\n          }\n\n          // add the entity\n          row.links[columnIndex] = [\n            {\n              start: 0,\n              end: text.length,\n              url: undefined,\n              entityId: entityId,\n              candidateEntities: [],\n            },\n          ];\n        }\n        row.links[columnIndex][0].entityId = entityId;\n      }\n    }\n\n    // then, we sync with the database\n    try {\n      this.state.value = \"updating\";\n      yield axios.put(`${this.remoteURL}/update_column_links`, {\n        table: table.id,\n        column: columnIndex,\n        text: text,\n        entity_id: entityId === undefined ? null : entityId,\n      });\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      throw error;\n    }\n  });\n\n  /**\n   * Find rows of the table\n   *\n   * @param table\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  fetchByTable: (\n    table: Table,\n    start: number,\n    no: number\n  ) => CancellablePromise<TableRow[]> = flow(function* (\n    this: TableRowStore,\n    table: Table,\n    start: number,\n    no: number\n  ) {\n    // update the query so we won't query rows not in the table\n    if (table.size < start + no) {\n      no = table.size - start;\n    }\n\n    let hasLocalData = true;\n    const map = this.tableIndex.index.get(table.id);\n    if (map === undefined) {\n      const result: FetchResult<TableRow> = yield this.fetch({\n        limit: no,\n        offset: start,\n        conditions: { table: table.id },\n      });\n      return result.records;\n    }\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        hasLocalData = false;\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n\n    if (hasLocalData) return output;\n    const result: FetchResult<TableRow> = yield this.fetch({\n      limit: no,\n      offset: start,\n      conditions: { table: table.id },\n    });\n    return result.records;\n  });\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize(record: any): TableRow {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity_id !== null) {\n          link.entityId = link.entity_id;\n        }\n        // convert null url to undefined\n        if (link.url === null) {\n          delete link.url;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity_id;\n          delete ce.entity_id;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  }\n\n  protected serializeRecord(record: TableRow | Omit<TableRow, \"id\">): object {\n    return {\n      table: record.table,\n      index: record.index,\n      row: Array.from(record.row),\n      links: Object.fromEntries(\n        Object.entries(record.links).map(([columnIndex, links]) => {\n          return [columnIndex, links.map(this.serializeLink)];\n        })\n      ),\n    };\n  }\n\n  protected serializeLink = (link: Link): object => {\n    return {\n      start: link.start,\n      end: link.end,\n      url: link.url || null,\n      entity_id: link.entityId || null,\n      candidate_entities: link.candidateEntities.map((canent) => ({\n        entity_id: canent.entityId,\n        probability: canent.probability,\n      })),\n    };\n  };\n}\n","export { RStore } from \"./RStore\";\nexport { CRUDStore, SimpleCRUDStore } from \"./CRUDStore\";\nexport { CRUDJunctionStore } from \"./CRUDJunctionStore\";\nexport * from \"./StoreIndex\";\n/**\n * Register a default error handler for all ajax requests via axios, which simply show a bubble message, and re-throw the error.\n *\n * The implementation leverages the feature that when a Promise that has no rejection handler is rejected, the unhandledrejection event is sent to the global scope.\n *\n * More information and browser supports can be found in here: https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event\n *\n * In Mar 2022, most of the important browsers support this feature except IE and Firefox for Android.\n */\nexport const registerDefaultAxiosErrorHandler = (fn) => {\n    window.addEventListener(\"unhandledrejection\", (event) => {\n        if (event.reason.isAxiosError === true) {\n            fn(event);\n            console.error(event.reason);\n        }\n    });\n};\n","import React, { createContext } from \"react\";\nimport { message } from \"antd\";\nimport { registerDefaultAxiosErrorHandler } from \"gena-app\";\nimport { AssistantService } from \"./AssistantService\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { ClassStore } from \"./ontology/ClassStore\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { Project, ProjectStore } from \"./project\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModelStore,\n  SMGraph,\n  URICount,\n} from \"./sm\";\nimport { TableRowStore, TableStore } from \"./table\";\nimport { UISettings, EntitySettings, TableSettings } from \"./settings\";\nimport { toJS } from \"mobx\";\n\nconst tableStore = new TableStore();\nconst semanticModelStore = new SemanticModelStore();\nconst tableRowStore = new TableRowStore();\nconst classStore = new ClassStore();\nconst propertyStore = new PropertyStore();\nconst entityStore = new EntityStore();\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore,\n  tableRowStore,\n  semanticModelStore,\n  entityStore,\n  propertyStore,\n  classStore,\n  assistantService: new AssistantService(\n    tableStore,\n    tableRowStore,\n    semanticModelStore,\n    classStore,\n    propertyStore,\n    entityStore\n  ),\n  uiSettings: new UISettings(),\n};\n\nregisterDefaultAxiosErrorHandler((error) => {\n  message.error(\"Error while talking with the server.\", 5);\n});\n\n(window as any)._stores = stores;\n(window as any).toJS = toJS;\nexport type IStore = Readonly<typeof stores>;\n\n/** Init the stores with essential information (e.g., loading the ui settings) needed to run the app */\nexport function initStores(): Promise<void> {\n  return stores.uiSettings.fetchSettings();\n}\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport type { Property, DataType } from \"./ontology/Property\";\nexport type { SMEdge, SMNode } from \"./sm/SMGraph\";\nexport type { Table, TableRow } from \"./table\";\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  ClassStore,\n  EntityStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n  UISettings,\n  TableSettings,\n  EntitySettings,\n};\n","import { SimpleCRUDStore, SingleKeyIndex } from \"gena-app\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends SimpleCRUDStore<number, Table> {\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false, [\n      new SingleKeyIndex(\"project\"),\n    ]);\n  }\n\n  get projectIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, Table>;\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize(record: any): Table {\n    record.contextPage = record.context_page;\n    if (record.contextPage === null || record.contextPage === undefined) {\n      record.contextPage = {};\n    }\n\n    if (record.contextPage.entity !== null) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n\n    record.contextValues = record.context_values;\n    if (record.context_tree !== undefined) {\n      record.contextTree = record.context_tree.map((item: any) => {\n        item.contentBefore = item.content_before.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        item.contentAfter = item.content_after.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        delete item.content_before;\n        delete item.content_after;\n        return item;\n      });\n      delete record.context_tree;\n    }\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  }\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal } from \"antd\";\nimport { DraftCreateProject } from \"../../../models/project\";\n\nconst styles = {};\n\nexport const NewProjectForm = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [form] = Form.useForm();\n    const [nameValidation, setNameValidation] = useState({\n      name: \"\",\n      status: \"success\",\n    });\n\n    const onSave = () => {\n      const project = new DraftCreateProject(\"\");\n      project.name = form.getFieldValue(\"name\");\n      project.description = form.getFieldValue(\"description\");\n\n      projectStore\n        .create(project)\n        .then(() => {\n          Modal.destroyAll();\n        })\n        .catch(() => {\n          setNameValidation({ name: project.name, status: \"error\" });\n        });\n    };\n\n    return (\n      <>\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          form={form}\n          onFinish={onSave}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"name\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            validateStatus={\n              nameValidation.name === form.getFieldValue(\"name\") &&\n              nameValidation.status === \"error\"\n                ? \"error\"\n                : undefined\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"description\"\n            label=\"description\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 20,\n              offset: 4,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Create\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  })\n);\n\nexport const openNewProjectForm = (zIndex?: number) => {\n  const content = <NewProjectForm />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        New Project\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { Avatar, Button, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"gena-app\";\nimport { useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\n\nimport {\n  red,\n  volcano,\n  orange,\n  gold,\n  yellow,\n  lime,\n  green,\n  cyan,\n  blue,\n  geekblue,\n  purple,\n  magenta,\n} from \"@ant-design/colors\";\nimport { openNewProjectForm } from \"../project/forms/NewProjectForm\";\n\n// const colorWheels = [\"#f56a00\", \"#7265e6\", \"#1890ff\", \"#00a2ae\"];\nconst colorWheels = [\n  red[5],\n  volcano[5],\n  blue[5],\n  gold[5],\n  orange[5],\n  yellow[5],\n  lime[5],\n  green[5],\n  cyan[5],\n  geekblue[5],\n  purple[5],\n  magenta[5],\n];\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={16}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n        </Col>\n        <Col className=\"gutter-row\" span={8}>\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            onClick={() => openNewProjectForm()}\n          >\n            New Project\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor:\n                          colorWheels[\n                            project.name.charCodeAt(0) % colorWheels.length\n                          ],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal, Space } from \"antd\";\nimport { Project, DraftUpdateProject } from \"../../../models/project\";\nimport { routes } from \"../../../routes\";\n\nconst styles = {};\n\nexport const UpdateProjectForm = withStyles(styles)(\n  observer(\n    ({\n      project,\n      classes,\n    }: { project: Project } & WithStyles<typeof styles>) => {\n      const { projectStore } = useStores();\n      const [form] = Form.useForm();\n      const [nameValidation, setNameValidation] = useState({\n        name: \"\",\n        status: \"success\",\n      });\n\n      const onSave = () => {\n        const draft = DraftUpdateProject.fromProject(project);\n        draft.name = form.getFieldValue(\"name\");\n        draft.description = form.getFieldValue(\"description\");\n        projectStore\n          .update(draft)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .catch(() => {\n            setNameValidation({ name: draft.name, status: \"error\" });\n          });\n      };\n\n      const onDelete = () => {\n        projectStore\n          .delete(project.id)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .then(() => {\n            routes.home.path().open();\n          });\n      };\n\n      return (\n        <>\n          <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            onFinish={onSave}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"name\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n              initialValue={project.name}\n              validateStatus={\n                nameValidation.name === form.getFieldValue(\"name\") &&\n                nameValidation.status === \"error\"\n                  ? \"error\"\n                  : undefined\n              }\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"description\"\n              label=\"description\"\n              rules={[{ required: true }]}\n              initialValue={project.description}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              wrapperCol={{\n                span: 20,\n                offset: 4,\n              }}\n            >\n              <Space style={{ width: \"100%\" }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Update\n                </Button>\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  Delete\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </>\n      );\n    }\n  )\n);\n\nexport const openUpdateProjectForm = (project: Project, zIndex?: number) => {\n  const content = <UpdateProjectForm project={project} />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Update Project {project.name}\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { Button, Form, FormInstance, Input, Select, Switch } from \"antd\";\nimport React from \"react\";\nimport { CSVParserOpts, formats, ParserOpts } from \"../../../../models/project\";\n\nexport const CSVParserForm = ({\n  opt,\n  form,\n}: {\n  form: FormInstance<any>;\n  opt: CSVParserOpts;\n}) => {\n  return (\n    <>\n      <Form.Item\n        name=\"delimiter\"\n        label=\"delimiter\"\n        rules={[{ required: true }]}\n      >\n        <Input\n          onChange={(e) => {\n            form.setFieldsValue({\n              delimiter: e.target.value\n                .replace(\"\\\\t\", \"\\t\")\n                .replace(\"\\\\n\", \"\\n\"),\n            });\n          }}\n          style={{ width: 60 }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"first_row_is_header\"\n        label=\"Is first row header\"\n        rules={[{ required: true }]}\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n    </>\n  );\n};\n\nexport const escapeDelimiter = (delimiter?: string) => {\n  switch (delimiter) {\n    case \"\\t\":\n      return \"\\\\t\";\n    case \"\\n\":\n      return \"\\\\n\";\n    default:\n      return delimiter;\n  }\n};\n\nexport const ParserOptsForm = (props: { parserOpts: ParserOpts }) => {\n  const [form] = Form.useForm();\n  let additionalProps;\n\n  if (props.parserOpts.format === \"csv\") {\n    additionalProps = <CSVParserForm opt={props.parserOpts} form={form} />;\n  } else {\n    additionalProps = null;\n  }\n\n  return (\n    <Form\n      layout=\"inline\"\n      initialValues={{\n        ...props.parserOpts,\n        delimiter:\n          props.parserOpts.format === \"csv\"\n            ? escapeDelimiter(props.parserOpts.delimiter)\n            : undefined,\n      }}\n    >\n      <Form.Item name=\"format\" label=\"File Type\" rules={[{ required: true }]}>\n        <Select\n          onChange={(value) => {\n            form.setFieldsValue({ format: value });\n          }}\n        >\n          {formats.map((value) => (\n            <Select.Option key={value} value={value}>\n              {value}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      {additionalProps}\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { RawTable } from \"../../../../models/project\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const RawTableComponent = withStyles(styles)(\n  ({ table, classes }: { table: RawTable } & WithStyles<typeof styles>) => {\n    return (\n      <ProTable\n        className={classes.table}\n        defaultSize=\"small\"\n        bordered={true}\n        toolBarRender={false}\n        search={false}\n        pagination={{\n          pageSize: 5,\n          pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n        }}\n        rowKey=\"id\"\n        columns={table.header.map((header, index) => ({\n          dataIndex: [\"data\", index],\n          title: header,\n        }))}\n        request={async (params, sort, filter) => {\n          const start = (params.current! - 1) * params.pageSize!;\n          const end = start + params.pageSize!;\n          return {\n            data: table.rows\n              .slice(start, end)\n              .map((row, index) => ({ data: row, id: index + start })),\n            success: true,\n            total: table.rows.length,\n          };\n        }}\n      />\n    );\n  }\n);\n","import { InboxOutlined } from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  Form,\n  Input,\n  Modal,\n  Space,\n  Switch,\n  Typography,\n  Upload,\n} from \"antd\";\nimport { ModalStaticFunctions } from \"antd/lib/modal/confirm\";\nimport React, { useState } from \"react\";\nimport { useStores } from \"../../../../models\";\nimport { Project, UploadingTable } from \"../../../../models/project\";\nimport { ParserOptsForm } from \"./ParserOptsComponent\";\nimport { RawTableComponent } from \"./RawTableComponent\";\n\nconst styles = {\n  upload: {\n    \"& > .ant-upload\": {\n      padding: \"8px 0 !important\",\n    },\n  },\n  carouselDot: {\n    zIndex: 2000,\n    backgroundColor: \"black\",\n    opacity: 0,\n  },\n};\n\nexport const UploadPhase1 = withStyles(styles)(\n  ({\n    classes,\n    projectId,\n    setUploadTable,\n  }: {\n    setUploadTable: (item: UploadingTable, file: File) => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n\n    const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n      const file = e.dataTransfer.files[0];\n      projectStore.uploadTable(projectId, file).then((tbl) => {\n        if (Array.isArray(tbl)) {\n          throw new Error(\"Error\");\n        }\n        setUploadTable(tbl, file);\n      });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Upload.Dragger\n          name=\"file\"\n          multiple={false}\n          onDrop={onDrop}\n          beforeUpload={() => false}\n          className={classes.upload}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-hint\">\n            Click or drag file to this area to upload\n          </p>\n        </Upload.Dragger>\n\n        <Form layout=\"inline\">\n          <Form.Item\n            name=\"url\"\n            label=\"URL\"\n            rules={[{ required: true }]}\n            style={{ width: \"calc(100% - 94px)\" }}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item style={{ margin: 0 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Space>\n    );\n  }\n);\n\nexport const UploadPhase2 = withStyles(styles)(\n  ({\n    uploadingTable,\n    classes,\n    projectId,\n    destroy,\n    onDone,\n  }: {\n    uploadingTable: { table: UploadingTable; file: File };\n    destroy: () => void;\n    onDone: () => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [selectedTables, setSelectedTables] = useState(\n      uploadingTable.table.tables.map(() => true)\n    );\n    let tables;\n\n    if (uploadingTable.table.tables.length == 1) {\n      tables = <RawTableComponent table={uploadingTable.table.tables[0]} />;\n    } else {\n      tables = uploadingTable.table.tables.map((table, index) => {\n        return (\n          <Space\n            direction=\"vertical\"\n            style={{ width: \"100%\" }}\n            key={`table-${index}-wrap`}\n          >\n            <Typography.Text>\n              Select:&nbsp;\n              <Switch\n                checked={selectedTables[index]}\n                onChange={(checked) => {\n                  const lst = selectedTables.slice();\n                  lst[index] = checked;\n                  setSelectedTables(lst);\n                }}\n              />\n            </Typography.Text>\n            <RawTableComponent table={table} />,\n          </Space>\n        );\n      });\n    }\n\n    const finishUpload = () => {\n      const tableIndex: number[] = [];\n      selectedTables.forEach((flag, index) => {\n        if (flag) tableIndex.push(index);\n      });\n\n      return projectStore\n        .uploadTable(\n          projectId,\n          uploadingTable.file,\n          uploadingTable.table.parser_opts,\n          tableIndex\n        )\n        .then((result) => {\n          destroy();\n          onDone();\n        });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <ParserOptsForm parserOpts={uploadingTable.table.parser_opts} />\n        {tables}\n        <Space>\n          <Button type=\"primary\" onClick={finishUpload}>\n            Confirm\n          </Button>\n          {/* <Button\n            type=\"primary\"\n            onClick={() => {\n              finishUpload().then(() => {\n                // TODO: re-open the upload form\n              });\n            }}\n          >\n            Confirm & Upload\n          </Button> */}\n        </Space>\n      </Space>\n    );\n  }\n);\n\nexport const UploadTableForm = ({\n  project,\n  destroy,\n  onDone,\n}: {\n  project: Project;\n  destroy: () => void;\n  onDone?: () => void;\n}) => {\n  const { projectStore } = useStores();\n  const [phase, setPhase] = useState<\"phase1\" | \"phase2\">(\"phase1\");\n  const [uploadingTable, setUploadingTable] = useState<\n    { table: UploadingTable; file: File } | undefined\n  >(undefined);\n\n  if (phase === \"phase1\") {\n    return (\n      <UploadPhase1\n        projectId={project.id}\n        setUploadTable={(table, file) => {\n          setUploadingTable({ table, file });\n          setPhase(\"phase2\");\n        }}\n      />\n    );\n  }\n\n  if (phase === \"phase2\") {\n    return (\n      <UploadPhase2\n        projectId={project.id}\n        uploadingTable={uploadingTable!}\n        destroy={destroy}\n        onDone={onDone || (() => {})}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport const openUploadTableForm = (\n  project: Project,\n  cfg?: {\n    zIndex?: number;\n    modal?: Omit<ModalStaticFunctions, \"warn\">;\n    onDone?: () => void;\n  }\n) => {\n  const modal = cfg?.modal === undefined ? Modal : cfg.modal;\n  const ref = modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Upload Tables\n      </span>\n    ),\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: cfg?.zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n  ref.update({\n    content: (\n      <UploadTableForm\n        project={project}\n        destroy={ref.destroy}\n        onDone={cfg?.onDone}\n      />\n    ),\n  });\n};\n","import { EditOutlined } from \"@ant-design/icons\";\nimport ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Popconfirm, Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useRef } from \"react\";\nimport { InternalLink, LoadingComponent, NotFoundComponent } from \"gena-app\";\nimport { Table, useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { openUpdateProjectForm } from \"./forms/UpdateProjectForm\";\nimport { openUploadTableForm } from \"./forms/upload\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n    const [modal, contextHolder] = Modal.useModal();\n    const actionRef = useRef<ActionType>();\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingComponent />;\n    } else if (project === null) {\n      return <NotFoundComponent />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n      {\n        dataIndex: \"id\",\n        title: \"action\",\n        renderText: (_: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <Popconfirm\n              title=\"Are you sure to delete this table?\"\n              onConfirm={() => {\n                tableStore.delete(tbl.id);\n                actionRef.current?.reload();\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button type=\"primary\" danger={true} size=\"small\">\n                Delete\n              </Button>\n            </Popconfirm>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project {_.upperFirst(project.name)}\n          &nbsp;\n          <a\n            style={{ fontSize: \"0.8em\", fontWeight: 400 }}\n            onClick={() => openUpdateProjectForm(project)}\n          >\n            <EditOutlined />\n          </a>\n        </Typography.Title>\n        <Typography.Text>\n          <b>Description:</b>{\" \"}\n          <Typography.Text type=\"secondary\">\n            {project.description}\n          </Typography.Text>\n        </Typography.Text>\n        <ProTable<ReturnType<typeof table2row>>\n          actionRef={actionRef}\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          toolBarRender={() => {\n            return [\n              <Button\n                key=\"upload\"\n                type=\"primary\"\n                onClick={() =>\n                  openUploadTableForm(project, {\n                    modal,\n                    onDone: () => {\n                      actionRef.current?.reload();\n                    },\n                  })\n                }\n              >\n                Upload\n              </Button>,\n            ];\n          }}\n          search={false}\n          pagination={{\n            pageSize: 500,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n        {contextHolder}\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","/** A utility to discard responses out of order */\nexport class SequentialFuncInvoker {\n  private timer: number = 0;\n\n  public exec<T>(fn: () => Promise<T>): Promise<T | undefined> {\n    this.timer += 1;\n    let calledAt = this.timer;\n\n    return fn().then((result: any) => {\n      if (calledAt < this.timer) {\n        return undefined;\n      }\n\n      return result;\n    });\n  }\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { useStores } from \"../../models\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n};\n\ntype SearchProps = {\n  value?: string | string[];\n  onDeselect?: (value: string) => void;\n  onSelect?: (value: string) => void;\n  mode?: \"multiple\" | \"tags\";\n} & WithStyles<typeof styles>;\n\nexport const OntPropSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"propertyStore\", props);\n  })\n);\n\nexport const OntClassSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"classStore\", props);\n  })\n);\n\nexport const EntitySearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"entityStore\", props);\n  })\n);\n\nfunction useSearchComponent(\n  storeName: \"propertyStore\" | \"classStore\" | \"entityStore\",\n  props: SearchProps\n) {\n  const store = useStores()[storeName];\n  const seqInvoker = new SequentialFuncInvoker();\n\n  // when the provided value is not in the store, fetch it\n  useEffect(() => {\n    if (props.value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(props.value)) {\n      // leverage the fact that the three stores are not re-fetched\n      if (!store.refetch) {\n        store.fetchByIds(props.value);\n      } else {\n        store.fetchByIds(props.value.filter((id) => !store.records.has(id)));\n      }\n    } else if (store.get(props.value) === undefined) {\n      store.fetchById(props.value);\n    }\n  }, [props.value]);\n\n  // gather all options already in the store, leverage the fact\n  // that property store is readonly\n  const options = useMemo(() => {\n    const options = [];\n    for (const r of store.iter()) {\n      options.push({\n        value: r.id,\n        label: r.readableLabel,\n      });\n    }\n    return options;\n  }, [store.records.size]);\n\n  // search for additional properties if it's not in the list\n  const onSearch = (query: string) => {\n    if (query === \"\") return;\n    seqInvoker.exec(() => {\n      return store.fetchById(query).then(() => 1);\n    });\n  };\n\n  return (\n    <Select\n      mode={props.mode}\n      allowClear={true}\n      options={options}\n      optionFilterProp=\"label\"\n      className={props.classes.selection}\n      showSearch={true}\n      onSearch={onSearch}\n      value={props.value}\n      onSelect={props.onSelect as any}\n      onDeselect={props.onDeselect as any}\n    />\n  );\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { useStores } from \"../../models\";\nimport { OntPropSearchComponent } from \"./OntSearchComponent\";\n\nconst styles = {};\n\nexport const EntitySettingComponent = withStyles(styles)(\n  observer(({ classes }: {} & WithStyles<typeof styles>) => {\n    const { uiSettings } = useStores();\n\n    return (\n      <Descriptions title=\"Entity Settings\" size=\"small\" column={1}>\n        <Descriptions.Item label=\"Properties (full view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={uiSettings.entity.showedPropsInFullView}\n            onSelect={uiSettings.entity.addShowedPropsInFullView}\n            onDeselect={uiSettings.entity.removeShowedPropsInFullView}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Properties (popover view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={uiSettings.entity.showedPropsInPopoverView}\n            onSelect={uiSettings.entity.addShowedPropsInPopoverView as any}\n            onDeselect={uiSettings.entity.removeShowedPropsInPopoverView as any}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  })\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { SemanticModel, useStores } from \"../../models\";\nimport { SMNodeType } from \"../../models/sm\";\nimport { gold, green, purple, yellow } from \"@ant-design/colors\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n  class_node: {\n    backgroundColor: green[2],\n    \"&:hover\": {\n      backgroundColor: green[8],\n      color: \"white\",\n    },\n  },\n  literal_node: {\n    backgroundColor: purple[2],\n    \"&:hover\": {\n      backgroundColor: purple[8],\n      color: \"white\",\n    },\n  },\n  data_node: {\n    backgroundColor: gold[2],\n    \"&:hover\": {\n      backgroundColor: gold[8],\n      color: \"white\",\n    },\n  },\n};\n\nexport type SearchValue = { type: SMNodeType | \"class\"; id: string };\n\nexport const NodeSearchComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      value,\n      onDeselect,\n      onSelect,\n      classes,\n    }: {\n      sm: SemanticModel;\n      value?: SearchValue;\n      onDeselect: (value: SearchValue) => void;\n      onSelect: (value: SearchValue) => void;\n    } & WithStyles<typeof styles>) => {\n      const { classStore } = useStores();\n      const seqInvoker = new SequentialFuncInvoker();\n\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        const options: ({\n          value: string;\n          label: string;\n        } & SearchValue)[] = [];\n        for (const r of classStore.iter()) {\n          options.push({\n            type: \"class\",\n            id: r.id,\n            value: `class:${r.id}`,\n            label: sm.graph.uriCount.nextLabel(r.uri, r.readableLabel),\n          });\n        }\n\n        for (const u of sm.graph.nodes) {\n          options.push({\n            type: u.nodetype,\n            id: u.id,\n            value: `${u.nodetype}:${u.id}`,\n            label: sm.graph.uriCount.label(u),\n            className: classes[u.nodetype],\n          } as any);\n        }\n        return options;\n      }, [classStore.records.size]);\n\n      // search for additional values if it's not in the list\n      const onSearch = (query: string) => {\n        if (query === \"\") return;\n        seqInvoker.exec(() => {\n          return classStore.fetchById(query).then(() => 1);\n        });\n      };\n\n      return (\n        <Select\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          showSearch={true}\n          onSearch={onSearch}\n          value={value === undefined ? undefined : `${value.type}:${value.id}`}\n          onSelect={(value: any, option: SearchValue) => {\n            onSelect({ type: option.type, id: option.id });\n          }}\n          onDeselect={(value: any, option: SearchValue) => {\n            onDeselect({ type: option.type, id: option.id });\n          }}\n        />\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Select, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SemanticModel, SMEdge, useStores } from \"../../../models\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport { OntPropSearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  table: {\n    width: \"100%\",\n    textAlign: \"left\",\n    borderSpacing: 0,\n    borderRadius: \"2px 2px 0 0\",\n\n    \"& tr\": {\n      verticalAlign: \"middle\",\n    },\n    \"& th, td\": {\n      padding: \"0 4px\",\n    },\n  },\n  selection: {\n    width: \"100%\",\n  },\n} as const;\n\nexport const NodeSelectionComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      classes,\n      value,\n      onSelect,\n      onDeselect,\n    }: {\n      sm: SemanticModel;\n      value?: string;\n      onDeselect?: (value: string) => void;\n      onSelect?: (value: string) => void;\n    } & WithStyles<typeof styles>) => {\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        return sm.graph.nodes.map((node) => {\n          return {\n            value: node.id,\n            label: node.label,\n          };\n        });\n      }, [sm]);\n\n      return (\n        <Select\n          showSearch={true}\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          value={value}\n          onSelect={onSelect as any}\n          onDeselect={onDeselect as any}\n        />\n      );\n    }\n  )\n);\n\nexport type EdgeFormProps = {\n  sm: SemanticModel;\n  edge?: SMEdge;\n};\n\nexport const EdgeForm = withStyles(styles)(\n  observer(\n    ({ sm, edge, classes }: EdgeFormProps & WithStyles<typeof styles>) => {\n      const { classStore, propertyStore } = useStores();\n      const [source, setSource] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.source).nodetype, id: edge.source }\n          : undefined\n      );\n      const [target, setTarget] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.target).nodetype, id: edge.target }\n          : undefined\n      );\n      const [uri, setURI] = useState<string | undefined>(edge?.uri);\n      const [approximation, setApproximation] = useState(false);\n\n      // whether there exists an edge between source & target\n      // if yes, we can't insert because we assume only one relationship\n      // between two nodes\n      const dupEdge = useMemo(() => {\n        if (source === undefined || source.type === \"class\") return false;\n        if (target === undefined || target.type === \"class\") return false;\n        return (\n          sm.graph.hasEdge(source.id, target.id) &&\n          (edge === undefined ||\n            source.id !== edge.source ||\n            target.id !== edge.target)\n        );\n      }, [sm.graph.version, source?.id, target?.id]);\n\n      useEffect(() => {\n        if (edge === undefined) return;\n        if (propertyStore.getPropertyByURI(edge.uri) !== undefined) return;\n\n        propertyStore.fetchOne({ conditions: { uri: edge.uri } });\n      }, [propertyStore, edge, uri]);\n\n      const onSave = () => {\n        if (uri === undefined || source === undefined || target === undefined)\n          return;\n        if (dupEdge) return;\n\n        const prop = propertyStore.getPropertyByURI(uri)!;\n        let sourceId, targetId;\n\n        if (source.type === \"class\") {\n          const cls = classStore.get(source.id)!;\n          sourceId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: sourceId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          sourceId = source.id;\n        }\n\n        if (target.type === \"class\") {\n          const cls = classStore.get(target.id)!;\n          targetId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: targetId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          targetId = target.id;\n        }\n\n        const newEdge = {\n          source: sourceId,\n          target: targetId,\n          uri: prop.uri,\n          approximation,\n          label: prop.readableLabel,\n        };\n        if (edge !== undefined) {\n          if (edge.source === sourceId && edge.target === targetId) {\n            sm.graph.updateEdge(edge.source, edge.target, newEdge);\n          } else {\n            sm.graph.removeEdge(edge.source, edge.target);\n            sm.graph.addEdge(newEdge);\n          }\n        } else {\n          sm.graph.addEdge(newEdge);\n        }\n\n        Modal.destroyAll();\n      };\n\n      const onDelete = () => {\n        if (edge === undefined) return;\n        sm.graph.removeEdge(edge.source, edge.target);\n        Modal.destroyAll();\n      };\n\n      const isModified = () => {\n        return (\n          edge === undefined ||\n          source?.id !== edge.source ||\n          target?.id !== edge.target ||\n          uri !== edge.uri ||\n          approximation !== edge.approximation\n        );\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  source !== undefined ? { text: source.id } : undefined\n                }\n              >\n                Source\n              </Typography.Text>\n            }\n            validateStatus={dupEdge ? \"error\" : undefined}\n            help={\n              dupEdge\n                ? \"Cannot have more than one edge between two nodes\"\n                : undefined\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={source}\n              onSelect={setSource}\n              onDeselect={() => setSource(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  target !== undefined ? { text: target.id } : undefined\n                }\n              >\n                Target\n              </Typography.Text>\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={target}\n              onSelect={setTarget}\n              onDeselect={() => setTarget(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  uri !== undefined\n                    ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                    : undefined\n                }\n              >\n                Predicate\n              </Typography.Text>\n            }\n          >\n            <OntPropSearchComponent\n              value={\n                uri !== undefined\n                  ? propertyStore.getPropertyByURI(uri)?.id\n                  : undefined\n              }\n              onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n              onDeselect={(value) => setURI(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Approximation\">\n            <Switch\n              checked={approximation}\n              onChange={(val) => setApproximation(val)}\n            />\n          </Form.Item>\n          <Form.Item label=\"&nbsp;\" colon={false}>\n            <Space>\n              <Button\n                type=\"primary\"\n                onClick={onSave}\n                disabled={\n                  source === undefined ||\n                  target === undefined ||\n                  uri === undefined ||\n                  !isModified() ||\n                  dupEdge\n                }\n              >\n                Save\n              </Button>\n              {edge !== undefined ? (\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Radio, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport {\n  ClassNode,\n  DataNode,\n  LiteralNode,\n  SemanticModel,\n  SMEdge,\n  SMNode,\n  SMNodeType,\n} from \"../../../models/sm\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport {\n  EntitySearchComponent,\n  OntClassSearchComponent,\n  OntPropSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {} as const;\n\nexport interface NodeFormProps {\n  sm: SemanticModel;\n  node?: SMNode;\n}\n\n/**\n * Form for adding/editing a node in the graph. There are two cases:\n *\n * 1. Create new node -- when node is undefined\n * 2. Delete or update existing node data without modifying its edges -- when the node is provided\n */\nexport const ClassNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: ClassNode; onDone: () => void }) => {\n    const { classStore } = useStores();\n    const [uri, setURI] = useState<string | undefined>(props.node?.uri);\n    const [approximation, setApproximation] = useState(\n      props.node?.approximation || false\n    );\n\n    // fetch class id associated with the node uri\n    useEffect(() => {\n      if (props.node === undefined) return;\n      classStore.fetchIfMissingByURI(props.node.uri);\n    }, [props.node?.uri]);\n\n    const onSave = () => {\n      if (uri === undefined) return;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addClassNode({\n          id: props.sm.graph.nextNodeId(),\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          nodetype: \"class_node\",\n          approximation: approximation,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateClassNode(props.node.id, {\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          approximation: approximation,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.uri !== uri ||\n        props.node.approximation !== approximation\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? {\n                      text: classStore.getClassByURI(uri)?.id,\n                    }\n                  : undefined\n              }\n            >\n              Class\n            </Typography.Text>\n          }\n        >\n          <OntClassSearchComponent\n            value={\n              uri !== undefined ? classStore.getClassByURI(uri)?.id : undefined\n            }\n            onSelect={(id) => setURI(classStore.get(id)?.uri)}\n            onDeselect={() => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={uri === undefined || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const LiteralNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: LiteralNode; onDone: () => void }) => {\n    const { entityStore } = useStores();\n    const [id, setId] = useState<string | undefined>(\n      props.node?.value?.type === \"entity-id\" ? props.node.value.id : undefined\n    );\n    const [isInContext, setIsInContext] = useState(\n      props.node !== undefined && props.node.nodetype === \"literal_node\"\n        ? props.node.isInContext\n        : false\n    );\n\n    const duplicatedId = useMemo(\n      () =>\n        id !== undefined &&\n        ((props.node === undefined &&\n          props.sm.graph.nodeByEntityId(id) !== undefined) ||\n          (props.node !== undefined &&\n            props.sm.graph.nodeByEntityId(id)?.id !== props.node.id)),\n      [props.sm.graph.version, id]\n    );\n\n    if (props.node !== undefined && props.node.value.type === \"string\") {\n      return <div>Not Implemented Yet</div>;\n    }\n\n    const onSave = () => {\n      if (id === undefined) return;\n      if (duplicatedId) return;\n\n      const ent = entityStore.get(id)!;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addLiteralNode({\n          id: props.sm.graph.nextNodeId(),\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateLiteralNode(props.node.id, {\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.isInContext !== isInContext ||\n        (props.node.value.type === \"entity-id\" && props.node.value.id !== id)\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={id !== undefined ? { text: id } : undefined}\n            >\n              Entity\n            </Typography.Text>\n          }\n          validateStatus={duplicatedId ? \"error\" : undefined}\n          help={duplicatedId ? \"Entity's already in the graph\" : undefined}\n        >\n          <EntitySearchComponent\n            value={id}\n            onSelect={setId}\n            onDeselect={() => setId(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Is In Context?\">\n          <Switch\n            checked={isInContext}\n            onChange={(val) => setIsInContext(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={id === undefined || duplicatedId || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const DataNodeSubForm = observer(\n  ({\n    sm,\n    node,\n    inedge,\n    onDone,\n  }: {\n    sm: SemanticModel;\n    node: DataNode;\n    inedge?: SMEdge;\n    onDone: () => void;\n  }) => {\n    const { classStore, propertyStore } = useStores();\n    const [source, setSource] = useState<SearchValue | undefined>(\n      inedge !== undefined\n        ? {\n            type: sm.graph.node(inedge.source).nodetype,\n            id: inedge.source,\n          }\n        : undefined\n    );\n    const [uri, setURI] = useState<string | undefined>(inedge?.uri);\n    const [approximation, setApproximation] = useState(false);\n\n    const onSave = () => {\n      if (source === undefined || uri === undefined) return;\n\n      const prop = propertyStore.getPropertyByURI(uri)!;\n      let sourceId;\n\n      if (source.type === \"class\") {\n        const cls = classStore.get(source.id)!;\n        sourceId = sm.graph.nextNodeId();\n        sm.graph.addClassNode({\n          id: sourceId,\n          uri: cls.uri,\n          label: cls.readableLabel,\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n      } else {\n        sourceId = source.id;\n      }\n\n      const newEdge = {\n        source: sourceId,\n        target: node.id,\n        uri: prop.uri,\n        approximation,\n        label: prop.readableLabel,\n      };\n      if (inedge !== undefined) {\n        if (inedge.source === sourceId) {\n          sm.graph.updateEdge(inedge.source, inedge.target, newEdge);\n        } else {\n          sm.graph.removeEdge(inedge.source, inedge.target);\n          sm.graph.addEdge(newEdge);\n        }\n      } else {\n        sm.graph.addEdge(newEdge);\n      }\n      onDone();\n    };\n\n    const isModified = () => {\n      return (\n        source?.id !== inedge?.source ||\n        uri !== inedge?.uri ||\n        approximation !== inedge?.approximation\n      );\n    };\n\n    const onDelete = () => {\n      if (inedge === undefined) return;\n      sm.graph.removeEdge(inedge.source, inedge.target);\n      onDone();\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={source !== undefined ? { text: source.id } : undefined}\n            >\n              Source\n            </Typography.Text>\n          }\n        >\n          <NodeSearchComponent\n            sm={sm}\n            value={source}\n            onSelect={setSource}\n            onDeselect={() => setSource(undefined)}\n          />\n        </Form.Item>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                  : undefined\n              }\n            >\n              Predicate\n            </Typography.Text>\n          }\n        >\n          <OntPropSearchComponent\n            value={\n              uri !== undefined\n                ? propertyStore.getPropertyByURI(uri)?.id\n                : undefined\n            }\n            onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n            onDeselect={(value) => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Target\">\n          <Typography.Text>\n            {node.label} ({node.columnIndex})\n          </Typography.Text>\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={\n                source === undefined || uri === undefined || !isModified()\n              }\n            >\n              Save\n            </Button>\n            {inedge !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const NodeForm = withStyles(styles)(\n  observer(\n    ({ sm, node, classes }: NodeFormProps & WithStyles<typeof styles>) => {\n      const [nodetype, setNodeType] = useState<SMNodeType>(\n        node?.nodetype || \"class_node\"\n      );\n      const onDone = () => Modal.destroyAll();\n\n      if (node !== undefined && node.nodetype === \"data_node\") {\n        if (sm.graph.incomingEdges(node.id).length > 1) {\n          return (\n            <p>\n              This form can't be used for data node that has more than one\n              incoming edge. Please click on individual edge and edit it there\n            </p>\n          );\n        }\n      }\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          {node === undefined ? (\n            <Form.Item label=\"Node Type\">\n              <Radio.Group\n                value={nodetype}\n                onChange={(event) => setNodeType(event.target.value)}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"class_node\">Class Node</Radio.Button>\n                <Radio.Button value=\"literal_node\">Literal Node</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          ) : null}\n          {nodetype === \"class_node\" ? (\n            <ClassNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"class_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : nodetype === \"literal_node\" ? (\n            <LiteralNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"literal_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : (\n            <DataNodeSubForm\n              sm={sm}\n              node={node as DataNode}\n              inedge={sm.graph.incomingEdges(node!.id)[0]}\n              onDone={onDone}\n            />\n          )}\n        </Form>\n      );\n    }\n  )\n);\n","import { Modal } from \"antd\";\nimport { EdgeForm, EdgeFormProps } from \"./EdgeForm\";\nimport { NodeForm, NodeFormProps } from \"./NodeForm\";\n\ninterface TypedEdgeFormProps extends EdgeFormProps {\n  type: \"edge\";\n}\n\ninterface TypedNodeFormProps extends NodeFormProps {\n  type: \"node\";\n}\n\nexport function openForm(\n  args: TypedEdgeFormProps | TypedNodeFormProps,\n  zIndex?: number\n) {\n  let title;\n  let content;\n  switch (args.type) {\n    case \"edge\":\n      content = <EdgeForm {...args} />;\n      title = args.edge === undefined ? \"Add Edge\" : \"Update Edge\";\n      break;\n    case \"node\":\n      content = <NodeForm {...args} />;\n      title = args.node === undefined ? \"Add Node\" : \"Update Node\";\n      break;\n  }\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>{title}</span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import {\n  DeleteOutlined,\n  DownOutlined,\n  ExportOutlined,\n  FileAddOutlined,\n  ImportOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\nimport {\n  faFloppyDisk,\n  faRectangleList,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Dropdown, Menu, Popconfirm, Space, Tag } from \"antd\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { openForm } from \"./forms\";\nimport { SemanticModelComponentFunc } from \"./SemanticModelComponent\";\nimport { TableComponentFunc } from \"./table/TableComponent\";\n\nexport const MenuBar = observer(\n  ({\n    tableRef,\n    graphRef,\n    table,\n    semanticmodel,\n  }: {\n    table: Table;\n    semanticmodel: {\n      sms: SemanticModel[];\n      index: number;\n      setIndex: (index: number) => void;\n    };\n    tableRef: React.MutableRefObject<TableComponentFunc | null>;\n    graphRef: React.MutableRefObject<SemanticModelComponentFunc | null>;\n  }) => {\n    const [menuVisible, setMenuVisible] = useState(false);\n    const { semanticModelStore, assistantService, uiSettings } = useStores();\n\n    useHotkeys(\n      \"c\",\n      graphRef.current === null ? () => {} : graphRef.current.recenter,\n      [graphRef.current, smUniqueIdent(semanticmodel.sms[semanticmodel.index])]\n    );\n\n    {\n      const lstSmsKey = semanticmodel.sms.map(smUniqueIdent).join(\"---\");\n      useHotkeys(\n        \"shift+n\",\n        () => {\n          if (semanticmodel.index < semanticmodel.sms.length - 1) {\n            semanticmodel.setIndex(semanticmodel.index + 1);\n          }\n        },\n        [table.id, semanticmodel.index, lstSmsKey]\n      );\n      useHotkeys(\n        \"shift+b\",\n        () => {\n          if (semanticmodel.index > 0) {\n            semanticmodel.setIndex(semanticmodel.index - 1);\n          }\n        },\n        [table.id, semanticmodel.index, lstSmsKey]\n      );\n    }\n\n    const sm = semanticmodel.sms[semanticmodel.index];\n\n    const funcs = {\n      saveModel: () => {\n        if (SemanticModel.isDraft(sm)) {\n          semanticModelStore.create(sm);\n        } else if (sm.graph.stale) {\n          semanticModelStore.update(sm);\n        }\n      },\n      addModel: () => {\n        const id = semanticModelStore.getNewCreateDraftId(table);\n        const nSms = semanticmodel.sms.length;\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          semanticModelStore.getNewSemanticModelName(table),\n          table\n        );\n        draft.graph = sm.graph.clone();\n        draft.graph.id = id;\n        semanticModelStore.setCreateDraft(draft);\n        semanticmodel.setIndex(nSms);\n      },\n      deleteModel: () => {\n        if (SemanticModel.isDraft(sm)) {\n          semanticModelStore.deleteCreateDraft(sm.draftID);\n        } else {\n          semanticModelStore.delete(sm.id);\n        }\n        semanticmodel.setIndex(0);\n        setMenuVisible(false);\n      },\n      exportModel: () => {\n        routes.tableExportModel\n          .path({ tableId: table.id }, { attachment: false })\n          .mouseClickNavigationHandler(undefined, true);\n      },\n      exportData: () => {\n        routes.tableExportData\n          .path({ tableId: table.id }, { attachment: false })\n          .mouseClickNavigationHandler(undefined, true);\n      },\n      openAddNodeForm: () => {\n        openForm({ type: \"node\", sm });\n      },\n      openAddEdgeForm: () => openForm({ type: \"edge\", sm }),\n      predict: () => {\n        assistantService.predict(table).then(() => {\n          tableRef.current?.reload();\n          uiSettings.table.enableEntityLinkingEditor();\n        });\n      },\n    };\n\n    const menu = (\n      <Menu\n        onClick={(event) => {\n          if (!event.key.startsWith(\"manual-close\")) {\n            setMenuVisible(false);\n          }\n        }}\n      >\n        <Menu.ItemGroup key=\"group-sm\" title=\"Semantic Descriptions\">\n          {semanticmodel.sms.length > 1 ? (\n            <Menu.SubMenu\n              key=\"list-model\"\n              title=\"List models\"\n              icon={<FontAwesomeIcon icon={faFloppyDisk} />}\n            >\n              {semanticmodel.sms.map((sm, index) => {\n                return (\n                  <Menu.Item\n                    key={`sm-${sm.name}`}\n                    onClick={() => semanticmodel.setIndex(index)}\n                    style={{\n                      fontWeight:\n                        index === semanticmodel.index ? \"bold\" : undefined,\n                    }}\n                  >\n                    {SemanticModel.isDraft(sm) ? (\n                      <Tag color=\"orange\">draft</Tag>\n                    ) : sm.graph.stale ? (\n                      <Tag color=\"orange\">unsaved</Tag>\n                    ) : null}\n                    {sm.name}\n                  </Menu.Item>\n                );\n              })}\n            </Menu.SubMenu>\n          ) : null}\n          <Menu.Item\n            key=\"save-model\"\n            disabled={!SemanticModel.isDraft(sm) && !sm.graph.stale}\n            icon={<SaveOutlined />}\n            onClick={funcs.saveModel}\n          >\n            Save current model\n          </Menu.Item>\n          <Menu.Item\n            key=\"add-model\"\n            onClick={funcs.addModel}\n            icon={<FileAddOutlined />}\n          >\n            Add new model\n          </Menu.Item>\n          <Menu.Item\n            key=\"manual-close-0\"\n            danger={true}\n            icon={<DeleteOutlined />}\n          >\n            <Popconfirm\n              title=\"Are you sure to delete this semantic description?\"\n              onConfirm={funcs.deleteModel}\n              onCancel={() => setMenuVisible(false)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              Delete current model\n            </Popconfirm>\n          </Menu.Item>\n          <Menu.Item\n            key=\"import-model\"\n            disabled={true}\n            icon={<ImportOutlined />}\n          >\n            Import models\n          </Menu.Item>\n          <Menu.Item\n            key=\"export-model\"\n            onClick={funcs.exportModel}\n            icon={<ExportOutlined />}\n          >\n            Export models\n          </Menu.Item>\n        </Menu.ItemGroup>\n        <Menu.Divider />\n        <Menu.Item\n          key=\"enable-el-editor\"\n          icon={<FontAwesomeIcon icon={faRectangleList} />}\n          onClick={uiSettings.table.toggleEntityLinkingEditor}\n        >\n          Toggle Entity Linking Editor\n        </Menu.Item>\n        <Menu.Item\n          key=\"export-data\"\n          icon={<FontAwesomeIcon icon={faDownload} />}\n          onClick={funcs.exportData}\n        >\n          Export data\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <>\n        <Space key=\"space-1\" style={{ float: \"right\" }}>\n          {graphRef.current === undefined ? null : (\n            <Tag\n              color={\n                SemanticModel.isDraft(sm) || sm.graph.stale ? \"orange\" : \"green\"\n              }\n              style={{ marginRight: 0, cursor: \"pointer\" }}\n              onClick={funcs.saveModel}\n            >\n              Status:{\" \"}\n              {SemanticModel.isDraft(sm)\n                ? \"Draft\"\n                : sm.graph.stale\n                ? \"Changed\"\n                : \"Saved\"}\n              {semanticmodel.sms.length > 1 ? ` (${sm.name})` : \"\"}\n            </Tag>\n          )}\n          {uiSettings.table.showEntityLinkingEditor ? (\n            <Tag\n              color={\"geekblue\"}\n              style={{ marginRight: 0, cursor: \"pointer\" }}\n              onClick={uiSettings.table.toggleEntityLinkingEditor}\n            >\n              Editing Entity Linking\n            </Tag>\n          ) : null}\n        </Space>\n        <Space key=\"space-2\">\n          <Button size=\"small\" onClick={graphRef.current?.recenter}>\n            Center graph (C)\n          </Button>\n          <Button size=\"small\" onClick={funcs.openAddNodeForm}>\n            Add node\n          </Button>\n          <Button size=\"small\" onClick={funcs.openAddEdgeForm}>\n            Add edge\n          </Button>\n          <Button size=\"small\" onClick={funcs.predict}>\n            Predict\n          </Button>\n          <Dropdown\n            overlay={menu}\n            onVisibleChange={setMenuVisible}\n            visible={menuVisible}\n          >\n            <Button size=\"small\">\n              More <DownOutlined />\n            </Button>\n          </Dropdown>\n        </Space>\n      </>\n    );\n  }\n);\n\nfunction smUniqueIdent(sm: SemanticModel) {\n  return SemanticModel.isDraft(sm) ? sm.draftID : sm.id;\n}\n","import { WordWrap } from \"./wordwrap\";\nimport G6, {\n  ModelConfig,\n  ShapeStyle,\n  IGroup,\n  IShape,\n  LabelStyle,\n} from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: LabelStyle;\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n): IShape[] {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.map(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"bg-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  return units.map(({ text, x, y }) => {\n    return group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  label: string;\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n  labelCfg?: { style: LabelStyle };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n  // TODO: fix x and y as well as position of the text\n  const draw = (cfg: RectConfig, group: IGroup): IShape => {\n    const wp = cfg.style.paddingWidth || 0;\n    const hp = cfg.style.paddingHeight || 0;\n    const { units, width, height } = wordwrap.wrapText(\n      cfg.label,\n      cfg.size || defaultWidth,\n      \"center\"\n    );\n\n    // draw shape\n    const shape = group!.addShape(\"rect\", {\n      attrs: {\n        // x,\n        // y,\n        width: width + wp * 2,\n        height: height + hp * 2,\n        ...cfg.style,\n      },\n      name: \"rect\",\n    });\n\n    // draw text\n    drawText(group, wordwrap, units, {\n      xoffset: wp,\n      yoffset: hp,\n      cfg: cfg.labelCfg?.style,\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup) => {\n        return draw(cfg! as RectConfig, group!);\n      },\n\n      // call everything state is changed so we can update the shape\n      // currently clear and re-draw it, but we could do better\n      setState(name, value, node) {\n        const cfg = node!._cfg!;\n        const model = cfg.model!;\n        const states = cfg.states!;\n        let styles: any = {};\n        let labelStyles = { ...model.labelCfg?.style };\n\n        for (const [name, prop] of Object.entries(model.style!)) {\n          if (typeof prop === \"object\") {\n            continue;\n          }\n          styles[name] = prop;\n        }\n        for (const state of states) {\n          for (const [name, prop] of Object.entries(\n            cfg.styles![state] as object\n          )) {\n            if (name === \"label\") {\n              Object.assign(labelStyles, prop);\n            } else {\n              styles[name] = prop;\n            }\n          }\n        }\n\n        const group = cfg.group!;\n        group.clear();\n        draw(\n          {\n            label: model.label as string,\n            size: model.size as number,\n            style: styles,\n            labelCfg: { style: labelStyles },\n          },\n          group\n        );\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import G6, {\n  IGroup,\n  ILabelConfig,\n  IShape,\n  LabelStyle,\n  ModelConfig,\n  ShapeStyle,\n} from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig {\n  label: string;\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n  labelCfg?: { offset: number; style: LabelStyle };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  const draw = (cfg: CircleConfig, group: IGroup): IShape => {\n    const padding = cfg.style.padding || 8;\n    const labelPosition: string = \"below\";\n    const labelOffset = cfg.labelCfg?.offset || 0;\n\n    if (labelPosition === \"inside\") {\n      // render text inside circle\n      const { units, radius } = wordwrap.wrapTextCircle(cfg.label, 256);\n      const shape = group!.addShape(\"circle\", {\n        attrs: {\n          // x: cfg.x,\n          // y: cfg.y,\n          r: radius + padding,\n          ...cfg.style,\n        },\n        name: \"circle\",\n      });\n      drawText(group, wordwrap, units, {\n        xoffset: 0,\n        yoffset: 0,\n        cfg: cfg.labelCfg?.style,\n      });\n      return shape;\n    }\n\n    // render text below circle\n    const { units, width } = wordwrap.wrapText(\n      cfg.label as string,\n      defaultWidth,\n      \"center\"\n    );\n    const defaultRadius = 10;\n    const shape = group!.addShape(\"circle\", {\n      attrs: {\n        // x: cfg.x,\n        // y: cfg.y,\n        r: defaultRadius,\n        ...cfg.style,\n      },\n      name: \"circle\",\n    });\n\n    drawText(group, wordwrap, units, {\n      xoffset: -width / 2,\n      yoffset: defaultRadius + labelOffset,\n      cfg: cfg?.labelCfg?.style,\n      stroke: { color: \"white\", width: 4 },\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup): IShape => {\n        return draw(cfg! as CircleConfig, group!);\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\nimport { testNodeWrap } from \"./TestNodeWrap\";\nimport _ from \"lodash\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units -- default 0\n  leftOffset?: number;\n  // shift the node in the graph by `topOffset` units -- default 0\n  topOffset?: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n  // highlight the node and its related nodes and edges when the mouse enter the node;\n  // default is false\n  enableActivateRelations?: boolean;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  public props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    const modes: any[] = [\"drag-canvas\", \"drag-node\"];\n\n    if (props.enableActivateRelations) {\n      modes.push({\n        type: \"activate-relations\",\n        resetSelected: true,\n      });\n    }\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: modes,\n        edit: [\"click-select\"],\n      },\n      // these control styles of nodes & edges at different states\n      // currently define active & inactive for the activate-relations mode\n      nodeStateStyles: {\n        active: {\n          opacity: 1,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 1,\n          },\n        },\n        inactive: {\n          opacity: 0.2,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 0.2,\n          },\n        },\n      },\n      edgeStateStyles: {\n        active: {\n          stroke: \"black\",\n          opacity: 1,\n        },\n        inactive: {\n          opacity: 0.2,\n          text: {\n            opacity: 0.2,\n          },\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        this.props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        this.props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Try to hot-swap the properties of this graph and returns whether it's success or not */\n  hotswapProps = (props: G6GraphProps) => {\n    if (!_.isEqual(this.props.layout, props.layout)) {\n      return false;\n    }\n\n    if (this.props.enableActivateRelations !== props.enableActivateRelations) {\n      return false;\n    }\n\n    this.props = props;\n    return true;\n  };\n\n  destroy = () => {\n    this.graph.destroy();\n  };\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // const { nodes: x, edges: y } = testNodeWrap(\"rect\");\n    // nodes = x;\n    // edges = y;\n\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: {\n          ...u.style,\n          radius: 4,\n          paddingHeight: 2,\n          paddingWidth: 4,\n        },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    if (_.uniq(edges.map((u) => u.id)).length !== edges.length) {\n      console.error(\n        \"Edges must have unique ids. However, we get:\",\n        edges.map((u) => u.id)\n      );\n    }\n\n    let newEdges = edges.map((e) => ({\n      id: e.id,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /**\n   * Adjust the canvas size to fit with the graph\n   *\n   * For fit-graph mode, the extraHeight mode is used to add top & bottom padding so that it's not too close (e.g., 20px)\n   * For fit-remaining-window, the offsetHeight is used to reserved some pixels at the bottom of the window so that it's not overflow (e.g., minus 1px for the border)\n   * For keep-as-is, we use the initial height\n   */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height:\n      | { type: \"fit-graph\"; extraHeight: number }\n      | { type: \"fit-remaining-window\"; offsetHeight: number }\n      | { type: \"keep-as-is\" };\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      let graphHeight;\n      switch (height.type) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + height.extraHeight;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight -\n            (viewportOffset + documentScrollY) -\n            height.offsetHeight;\n          break;\n        case \"keep-as-is\":\n          graphHeight = this.props.initHeight;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n      if (center === true) {\n        this.graph.moveTo(\n          graphWidth / 2 - bbox.width / 2,\n          graphHeight / 2 - bbox.height / 2\n        );\n      } else {\n        this.graph.moveTo(\n          this.props.leftOffset || 0,\n          this.props.topOffset || 0\n        );\n      }\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  bordered: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n  },\n  container: {\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n  recenter: () => boolean;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = { type: \"fit-graph\", extraHeight: 8 },\n        toolbar = false,\n        bordered = true,\n        layouts = GraphLayout,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        bordered?: boolean;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?:\n          | { type: \"fit-graph\"; extraHeight: number }\n          | { type: \"fit-remaining-window\"; offsetHeight: number }\n          | { type: \"keep-as-is\" };\n        className?: string;\n        layouts?: typeof GraphLayout;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n          recenter: () => {\n            if (graph.current === undefined) return false;\n            graph.current.updateContainerSize({\n              center: true,\n              height: renderingAdjustedHeight,\n            });\n            return true;\n          },\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n            }\n          );\n        }\n\n        let g = graph.current;\n        if (props !== undefined) {\n          const success = g.hotswapProps(props);\n          if (!success) {\n            g.destroy();\n            graph.current = new G6Graph(\n              container.current,\n              props || {\n                initHeight: 500,\n              }\n            );\n            g = graph.current;\n          }\n        }\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar\n            autoHide={toolbar === \"auto-hide\"}\n            graph={graph}\n            layouts={layouts}\n          />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div\n              ref={container}\n              className={\n                classes.container + (bordered ? \" \" + classes.bordered : \"\")\n              }\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n    layouts,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n    layouts: typeof GraphLayout;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (name: keyof typeof GraphLayout) => {\n      setLayout(name);\n      graph.current?.updateLayout(layouts[name]);\n      graph.current?.untilLayoutStable(20, 50, centerGraph, [], () => {});\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4} align=\"start\">\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { gold, green, purple, yellow } from \"@ant-design/colors\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport React, {\n  forwardRef,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  GraphComponent,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { SMNode } from \"../../models/sm\";\nimport { routes } from \"../../routes\";\nimport { openForm } from \"./forms\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {},\n  draft: {\n    border: `1px dashed ${yellow[7]} !important`,\n    \"&:hover\": {\n      color: `${gold[5]} !important`,\n    },\n  },\n  selectedDraft: {\n    backgroundColor: `${gold[5]} !important`,\n  },\n};\n\nexport interface SemanticModelComponentFunc {\n  recenter: () => boolean;\n}\n\nexport const SemanticModelComponent = withStyles(styles)(\n  observer(\n    forwardRef(\n      (\n        {\n          classes,\n          table,\n          sm,\n        }: { table: Table; sm: SemanticModel } & WithStyles<typeof styles>,\n        ref\n      ) => {\n        const graphRef = useRef<GraphComponentFunc>();\n\n        // expose the APIs for the control bar to call\n        useImperativeHandle(\n          ref,\n          (): SemanticModelComponentFunc => ({\n            recenter: () => graphRef.current?.recenter() || false,\n          })\n        );\n\n        const [nodes, edges] = useMemo(() => {\n          const nodes = sm.graph.nodes.map((node) => {\n            let shape: GraphNode[\"shape\"], style;\n            switch (node.nodetype) {\n              case \"class_node\":\n                shape = \"circle\";\n                style = { fill: green[2], stroke: green[8] };\n                break;\n              case \"data_node\":\n                shape = \"rect\";\n                style = { fill: gold[3], stroke: gold[8] };\n                break;\n              case \"literal_node\":\n                if (node.value.type === \"entity-id\") {\n                  shape = \"circle\";\n                } else {\n                  shape = \"rect\";\n                }\n                if (node.isInContext) {\n                  style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n                } else {\n                  style = { fill: purple[2], stroke: \"#c41d7f\" };\n                }\n                break;\n              default:\n                throw new Error(`Unreachable!`);\n            }\n\n            return {\n              id: node.id,\n              label: getNodeLabel(sm, node),\n              style,\n              shape,\n            };\n          });\n          const edges = sm.graph.edges.map((edge) => {\n            return {\n              id: `${edge.source}-${edge.target}-${edge.uri}`,\n              source: edge.source,\n              target: edge.target,\n              label: edge.label,\n            };\n          });\n\n          return [nodes, edges];\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n          SemanticModel.isDraft(sm) ? sm.draftID : null,\n          sm.id,\n          sm.graph.version,\n        ]);\n\n        return (\n          <GraphComponent\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.graph.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight={{ type: \"fit-graph\", extraHeight: 20 }}\n            props={{\n              initHeight: 300,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                openForm({\n                  type: \"node\",\n                  sm,\n                  node: sm.graph.node(nodeId),\n                });\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                openForm({\n                  type: \"edge\",\n                  sm,\n                  edge: sm.graph.edge(edge.source, edge.target),\n                });\n              },\n            }}\n          />\n        );\n      }\n    )\n  )\n);\n\nconst getNodeLabel = (sm: SemanticModel, node: SMNode) => {\n  switch (node.nodetype) {\n    case \"data_node\":\n      return node.label;\n    case \"literal_node\":\n      return node.label;\n    case \"class_node\":\n      return sm.graph.uriCount.label(node);\n  }\n};\n","import { ExternalLink } from \"gena-app\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  onCtrlClick,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n  onCtrlClick?: () => void;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return <span {...restprops}>{entity.readableLabel}</span>;\n  }\n\n  return (\n    <ExternalLink\n      href={entity.uri}\n      openInNewPage={true}\n      onCtrlClick={onCtrlClick}\n      {...restprops}\n    >\n      {entity.readableLabel}\n    </ExternalLink>\n  );\n};\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.batch.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingComponent } from \"gena-app\";\nimport { useStores } from \"../../models\";\nimport { EntitySettings } from \"../../models\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    renderLoading,\n    renderNotFound,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity, settings: EntitySettings) => React.ReactElement;\n    renderLoading?: () => React.ReactElement;\n    renderNotFound?: () => React.ReactElement;\n  }) => {\n    const { entityStore, uiSettings } = useStores();\n\n    useEffect(() => {\n      entityStore.batch.fetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        if (renderLoading !== undefined) {\n          return renderLoading();\n        }\n        return <LoadingComponent />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      if (renderNotFound !== undefined) {\n        return renderNotFound();\n      }\n\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity, uiSettings.entity);\n  }\n);\n","import { ExternalLink } from \"gena-app\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  showId = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  showId?: boolean;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  const label = showId ? `${property.label} (${property.id})` : property.label;\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"gena-app\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"gena-app\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop } from \".\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      showId = false,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      showId?: boolean;\n      filteredProps: string[];\n    } & WithStyles<typeof styles>) => {\n      if (filteredProps.length === 0) {\n        filteredProps = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of filteredProps) {\n        // we have undefined when entity does not have this property `pid`\n        if (entity.properties[pid] === undefined) continue;\n\n        const stmts = entity.properties[pid];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent\n                  property={id2prop[pid]}\n                  showId={showId}\n                />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useMemo } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      enable,\n      setEnable,\n      id2prop,\n      filteredProps,\n      addFilteredProp,\n      removeFilteredProp,\n      classes,\n    }: {\n      enable: boolean;\n      setEnable: (enable: boolean) => void;\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      addFilteredProp: (prop: string) => void;\n      removeFilteredProp: (prop: string) => void;\n    } & WithStyles<typeof styles>) => {\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={addFilteredProp as any}\n            onDeselect={removeFilteredProp as any}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"gena-app\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nimport { EntitySettings } from \"../../models\";\nimport { observer } from \"mobx-react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      settings,\n    }: { entity: Entity; settings: EntitySettings } & WithStyles<\n      typeof styles\n    >) => {\n      const id2prop = useEntityProperties(entity);\n      const [enable, setEnable] = useState<boolean>(true);\n\n      return (\n        <div>\n          <Space style={{ float: \"right\" }}>\n            <PropertyFilterComponent\n              enable={enable}\n              setEnable={setEnable}\n              entity={entity}\n              id2prop={id2prop}\n              filteredProps={settings.showedPropsInFullView}\n              addFilteredProp={settings.addShowedPropsInFullView}\n              removeFilteredProp={settings.removeShowedPropsInFullView}\n            />\n          </Space>\n          <h2>\n            <ExternalLink href={entity.uri} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            entity={entity}\n            id2prop={id2prop}\n            showId={true}\n            filteredProps={enable ? settings.showedPropsInFullView : []}\n          />\n        </div>\n      );\n    }\n  )\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  args: { entity: Entity; settings: EntitySettings } | string,\n  zIndex?: number\n) {\n  // avoid using instanceof Entity because it's going to be proxy object due to mobx\n  const isEntity = typeof args !== \"string\";\n  let content;\n  if (isEntity) {\n    content = (\n      <PageEntityComponent entity={args.entity} settings={args.settings} />\n    );\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={args}\n        render={(entity, settings) => (\n          <PageEntityComponent entity={entity} settings={settings} />\n        )}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { ExternalLink } from \"gena-app\";\nimport { EntitySettings } from \"../../models\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      children,\n      classes,\n      zIndex,\n      settings,\n      ...restprops\n    }: {\n      entity: Entity;\n      settings: EntitySettings;\n      zIndex?: number;\n    } & React.HTMLProps<HTMLDivElement> &\n      WithStyles<typeof styles>) => {\n      // TODO: find a way to remove this hard code\n      const id2prop = useEntityProperties(entity);\n      const content = (\n        <div\n          {...restprops}\n          className={`${classes.root} ${restprops.className}`}\n        >\n          <h2>\n            <ExternalLink href={entity.uri} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n            <UnfoldMoreIcon\n              style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n              onClick={() => {\n                openPageEntityComponent(\n                  { entity, settings },\n                  zIndex !== undefined ? zIndex + 1 : undefined\n                );\n              }}\n            />\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            id2prop={id2prop}\n            entity={entity}\n            filteredProps={settings.showedPropsInPopoverView}\n          />\n        </div>\n      );\n\n      return (\n        <Popover content={content} zIndex={zIndex}>\n          {children}\n        </Popover>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Checkbox, Divider, Space, Tooltip, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReactNode, useEffect, useMemo, useState } from \"react\";\nimport { Table, useStores } from \"../../../../models\";\nimport { Class } from \"../../../../models/ontology/ClassStore\";\nimport { ColumnFilter, TableFilter } from \"./Filter\";\n\nconst styles = {\n  treeNode: {},\n  levelMarker: {},\n  table: {\n    \"& th\": {\n      minWidth: 30,\n      textAlign: \"left\",\n    },\n  },\n};\n\n/** Render a tree from the mappings */\nexport const TypeTreeFilter = withStyles(styles)(\n  observer(\n    ({\n      types,\n      classes,\n      filter,\n    }: {\n      types: { [id: string]: Class };\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const [treeData, setTreeData] = useState<ReactNode[]>([]);\n\n      useMemo(() => {\n        // construct parent to children mapping\n        const p2cs = Object.fromEntries(\n          Object.keys(types).map((id) => [id, new Set<string>()])\n        );\n        for (const type of Object.values(types)) {\n          for (const parentTypeId of type.parents) {\n            if (types[parentTypeId] !== undefined) {\n              p2cs[parentTypeId].add(type.id);\n            }\n          }\n        }\n\n        // get list of roots to start with\n        const rootIds = new Set(Object.keys(p2cs));\n        for (const [parent, children] of Object.entries(p2cs)) {\n          for (const child of children) {\n            rootIds.delete(child);\n          }\n        }\n\n        // traveling the mapping to build the flatten tree\n        filter.addTypes(Object.keys(types));\n\n        const args = {\n          start: \"\",\n          nodes: types,\n          p2cs: p2cs,\n          visited: {} as { [id: string]: number },\n          counter: 0,\n          filter: filter,\n        };\n        const treeNodes: ReactNode[] = [];\n\n        for (const rootId of rootIds) {\n          args.start = rootId;\n          travel2constructTreeNodes(args, treeNodes);\n        }\n\n        // the remaining nodes are part of cycles, we just pick a random node to start\n        for (const nodeId in p2cs) {\n          if (args.visited[nodeId] === undefined) {\n            args.start = nodeId;\n            travel2constructTreeNodes(args, treeNodes);\n          }\n        }\n\n        setTreeData(treeNodes);\n      }, [Object.keys(types).sort().join(\"\\t\")]);\n\n      return (\n        <>\n          <table className={classes.table}>\n            <thead>\n              <tr>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    #\n                  </Typography.Text>\n                </th>\n                <th>\n                  <Tooltip title=\"Include: select rows that have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      In\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Tooltip title=\"Exclude: select rows that do not have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      Ex\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    Type\n                  </Typography.Text>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <Tooltip\n                  title=\"Select all checkbox in this `Include` column\"\n                  placement=\"left\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"include\") &&\n                        !filter.hasAllOp(\"include\")\n                      }\n                      checked={filter.hasAllOp(\"include\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"include\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <Tooltip\n                  title=\"Select all checkbox in this `Exclude` column\"\n                  placement=\"right\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"exclude\") &&\n                        !filter.hasAllOp(\"exclude\")\n                      }\n                      checked={filter.hasAllOp(\"exclude\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"exclude\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <td>\n                  <Typography.Text type=\"secondary\">\n                    (Select all)\n                  </Typography.Text>\n                </td>\n              </tr>\n              {treeData}\n            </tbody>\n          </table>\n          <Divider style={{ margin: \"8px 0\" }} />\n          <Space>\n            <Typography.Text\n              type=\"secondary\"\n              strong={true}\n              title=\"Reset all filters\"\n              onClick={() => filter.toggleAllType(\"null\", true)}\n              style={{ cursor: \"pointer\" }}\n            >\n              Reset\n            </Typography.Text>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows containing NIL entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectNil(!filter.selectNil)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectNil}\n                  onChange={(e) => filter.setSelectNil(e.target.checked)}\n                />\n                &nbsp;NIL Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows that do not link to any entity\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectUnlinked(!filter.selectUnlinked)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectUnlinked}\n                  onChange={(e) => filter.setSelectUnlinked(e.target.checked)}\n                />\n                &nbsp;Unlinked Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Applying filters to candidate entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() =>\n                  filter.setIncludeCandidateEntities(\n                    !filter.includeCandidateEntities\n                  )\n                }\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.includeCandidateEntities}\n                  onChange={(e) =>\n                    filter.setIncludeCandidateEntities(e.target.checked)\n                  }\n                />\n                &nbsp;Candidate entities\n              </Typography.Text>\n            </Tooltip>\n          </Space>\n        </>\n      );\n    }\n  )\n);\n\nexport const TreeNode = withStyles(styles)(\n  observer(\n    ({\n      nodeId,\n      nodes,\n      visited,\n      unknown,\n      depth,\n      counter,\n      classes,\n      filter,\n    }: {\n      nodeId: string;\n      nodes: { [id: string]: Class };\n      visited: number | undefined;\n      unknown: boolean;\n      depth: number;\n      counter: number;\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const title = nodes[nodeId]?.readableLabel || nodeId;\n\n      let comp = [];\n\n      if (depth === 0) {\n        comp.push(<span key=\"2\">{title}</span>);\n      } else {\n        let indent = \"\";\n        for (let i = 1; i < depth; i++) {\n          indent += \"│&nbsp;&nbsp;&nbsp;\";\n        }\n\n        comp.push(\n          <code\n            key=\"1\"\n            className={classes.levelMarker}\n            dangerouslySetInnerHTML={{ __html: `${indent}├──&nbsp;` }}\n          ></code>\n        );\n        comp.push(<span key=\"2\">{title}</span>);\n      }\n\n      if (visited !== undefined) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (visited at #{visited})\n          </Typography.Text>\n        );\n      }\n\n      if (unknown) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (unknown)\n          </Typography.Text>\n        );\n      }\n\n      return (\n        <tr className={classes.treeNode}>\n          <td title=\"The index number of this type\">\n            <Typography.Text type=\"secondary\">{counter}.</Typography.Text>\n          </td>\n          <td title=\"Select rows having entities of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"include\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"include\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td title=\"Select rows having entities that do not be part of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"exclude\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"exclude\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td>{comp}</td>\n        </tr>\n      );\n    }\n  )\n);\n\nconst travel2constructTreeNodes = (\n  args: {\n    start: string;\n    nodes: { [id: string]: Class };\n    p2cs: { [id: string]: Set<string> };\n\n    visited: { [node: string]: number };\n    counter: number;\n    filter: ColumnFilter;\n  },\n  outputs: ReactNode[]\n) => {\n  const stack: [string, number][] = [[args.start, 0]];\n  while (stack.length > 0) {\n    args.counter += 1;\n    const [nodeId, depth] = stack.pop()!;\n    outputs.push(\n      <TreeNode\n        key={args.counter}\n        counter={args.counter}\n        nodeId={nodeId}\n        nodes={args.nodes}\n        unknown={args.nodes[nodeId] === undefined}\n        depth={depth}\n        visited={args.visited[nodeId]}\n        filter={args.filter}\n      />\n    );\n\n    if (args.visited[nodeId] === undefined) {\n      args.visited[nodeId] = args.counter;\n      for (const child of args.p2cs[nodeId]) {\n        stack.push([child, depth + 1]);\n      }\n    }\n  }\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Checkbox, Divider, Space, Tooltip, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReactNode, useEffect, useMemo, useState } from \"react\";\nimport { Property, Table, useStores } from \"../../../../models\";\nimport { Class } from \"../../../../models/ontology/ClassStore\";\nimport { ColumnFilter, TableFilter } from \"./Filter\";\n\nconst styles = {\n  treeNode: {},\n  levelMarker: {},\n  table: {\n    \"& th\": {\n      minWidth: 30,\n      textAlign: \"left\",\n    },\n  },\n};\n\n/** Render a tree from the mappings */\nexport const PropTreeFilter = withStyles(styles)(\n  observer(\n    ({\n      properties,\n      classes,\n      filter,\n    }: {\n      properties: { [id: string]: Property };\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const [treeData, setTreeData] = useState<ReactNode[]>([]);\n\n      useMemo(() => {\n        // construct parent to children mapping\n        const p2cs = Object.fromEntries(\n          Object.keys(properties).map((id) => [id, new Set<string>()])\n        );\n        for (const prop of Object.values(properties)) {\n          for (const parentTypeId of prop.parents) {\n            if (properties[parentTypeId] !== undefined) {\n              p2cs[parentTypeId].add(prop.id);\n            }\n          }\n        }\n\n        // get list of roots to start with\n        const rootIds = new Set(Object.keys(p2cs));\n        for (const [parent, children] of Object.entries(p2cs)) {\n          for (const child of children) {\n            rootIds.delete(child);\n          }\n        }\n\n        // traveling the mapping to build the flatten tree\n        filter.addTypes(Object.keys(properties));\n\n        const args = {\n          start: \"\",\n          nodes: properties,\n          p2cs: p2cs,\n          visited: {} as { [id: string]: number },\n          counter: 0,\n          filter: filter,\n        };\n        const treeNodes: ReactNode[] = [];\n\n        for (const rootId of rootIds) {\n          args.start = rootId;\n          travel2constructTreeNodes(args, treeNodes);\n        }\n\n        // the remaining nodes are part of cycles, we just pick a random node to start\n        for (const nodeId in p2cs) {\n          if (args.visited[nodeId] === undefined) {\n            args.start = nodeId;\n            travel2constructTreeNodes(args, treeNodes);\n          }\n        }\n\n        setTreeData(treeNodes);\n      }, [Object.keys(properties).sort().join(\"\\t\")]);\n\n      return (\n        <>\n          <table className={classes.table}>\n            <thead>\n              <tr>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    #\n                  </Typography.Text>\n                </th>\n                <th>\n                  <Tooltip title=\"Include: select rows that have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      In\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Tooltip title=\"Exclude: select rows that do not have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      Ex\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    Type\n                  </Typography.Text>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <Tooltip\n                  title=\"Select all checkbox in this `Include` column\"\n                  placement=\"left\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"include\") &&\n                        !filter.hasAllOp(\"include\")\n                      }\n                      checked={filter.hasAllOp(\"include\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"include\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <Tooltip\n                  title=\"Select all checkbox in this `Exclude` column\"\n                  placement=\"right\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"exclude\") &&\n                        !filter.hasAllOp(\"exclude\")\n                      }\n                      checked={filter.hasAllOp(\"exclude\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"exclude\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <td>\n                  <Typography.Text type=\"secondary\">\n                    (Select all)\n                  </Typography.Text>\n                </td>\n              </tr>\n              {treeData}\n            </tbody>\n          </table>\n          <Divider style={{ margin: \"8px 0\" }} />\n          <Space>\n            <Typography.Text\n              type=\"secondary\"\n              strong={true}\n              title=\"Reset all filters\"\n              onClick={() => filter.toggleAllType(\"null\", true)}\n              style={{ cursor: \"pointer\" }}\n            >\n              Reset\n            </Typography.Text>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows containing NIL entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectNil(!filter.selectNil)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectNil}\n                  onChange={(e) => filter.setSelectNil(e.target.checked)}\n                />\n                &nbsp;NIL Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows that do not link to any entity\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectUnlinked(!filter.selectUnlinked)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectUnlinked}\n                  onChange={(e) => filter.setSelectUnlinked(e.target.checked)}\n                />\n                &nbsp;Unlinked Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Applying filters to candidate entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() =>\n                  filter.setIncludeCandidateEntities(\n                    !filter.includeCandidateEntities\n                  )\n                }\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.includeCandidateEntities}\n                  onChange={(e) =>\n                    filter.setIncludeCandidateEntities(e.target.checked)\n                  }\n                />\n                &nbsp;Candidate entities\n              </Typography.Text>\n            </Tooltip>\n          </Space>\n        </>\n      );\n    }\n  )\n);\n\nexport const TreeNode = withStyles(styles)(\n  observer(\n    ({\n      nodeId,\n      nodes,\n      visited,\n      unknown,\n      depth,\n      counter,\n      classes,\n      filter,\n    }: {\n      nodeId: string;\n      nodes: { [id: string]: Property };\n      visited: number | undefined;\n      unknown: boolean;\n      depth: number;\n      counter: number;\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const title = nodes[nodeId]?.readableLabel || nodeId;\n\n      let comp = [];\n\n      if (depth === 0) {\n        comp.push(<span key=\"2\">{title}</span>);\n      } else {\n        let indent = \"\";\n        for (let i = 1; i < depth; i++) {\n          indent += \"│&nbsp;&nbsp;&nbsp;\";\n        }\n\n        comp.push(\n          <code\n            key=\"1\"\n            className={classes.levelMarker}\n            dangerouslySetInnerHTML={{ __html: `${indent}├──&nbsp;` }}\n          ></code>\n        );\n        comp.push(<span key=\"2\">{title}</span>);\n      }\n\n      if (visited !== undefined) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (visited at #{visited})\n          </Typography.Text>\n        );\n      }\n\n      if (unknown) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (unknown)\n          </Typography.Text>\n        );\n      }\n\n      return (\n        <tr className={classes.treeNode}>\n          <td title=\"The index number of this type\">\n            <Typography.Text type=\"secondary\">{counter}.</Typography.Text>\n          </td>\n          <td title=\"Select rows having entities of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"include\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"include\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td title=\"Select rows having entities that do not be part of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"exclude\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"exclude\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td>{comp}</td>\n        </tr>\n      );\n    }\n  )\n);\n\nconst travel2constructTreeNodes = (\n  args: {\n    start: string;\n    nodes: { [id: string]: Property };\n    p2cs: { [id: string]: Set<string> };\n\n    visited: { [node: string]: number };\n    counter: number;\n    filter: ColumnFilter;\n  },\n  outputs: ReactNode[]\n) => {\n  const stack: [string, number][] = [[args.start, 0]];\n  while (stack.length > 0) {\n    args.counter += 1;\n    const [nodeId, depth] = stack.pop()!;\n    outputs.push(\n      <TreeNode\n        key={args.counter}\n        counter={args.counter}\n        nodeId={nodeId}\n        nodes={args.nodes}\n        unknown={args.nodes[nodeId] === undefined}\n        depth={depth}\n        visited={args.visited[nodeId]}\n        filter={args.filter}\n      />\n    );\n\n    if (args.visited[nodeId] === undefined) {\n      args.visited[nodeId] = args.counter;\n      for (const child of args.p2cs[nodeId]) {\n        stack.push([child, depth + 1]);\n      }\n    }\n  }\n};\n","import { Menu, Space, Tabs, Typography } from \"antd\";\nimport { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { Property, Table, useStores } from \"../../../models\";\nimport { Class } from \"../../../models/ontology/ClassStore\";\nimport { TypeTreeFilter } from \"./filters\";\nimport { ColumnFilter } from \"./filters/Filter\";\nimport { PropTreeFilter } from \"./filters/PropTreeFilter\";\n\nconst styles = {\n  tab: {\n    \"& div.ant-tabs-nav\": {\n      marginBottom: \"8px !important\",\n    },\n  },\n};\n\nexport const TableColumnFilter = withStyles(styles)(\n  ({\n    table,\n    columnIndex,\n    filter,\n    classes,\n  }: {\n    table: Table;\n    columnIndex: number;\n    filter: ColumnFilter;\n  } & WithStyles<typeof styles>) => {\n    const [menu, setMenu] = useState(\"by-type\");\n    const { assistantService, semanticModelStore, classStore } = useStores();\n    const [types, setTypes] = useState<{ [id: string]: Class }>({});\n    const [props, setProps] = useState<{ [id: string]: Property }>({});\n    const [typeCfg, setTypeCfg] = useState({\n      includeNil: false,\n      includeUnlinked: false,\n    });\n\n    useEffect(() => {\n      assistantService.getColumnTypes(table, columnIndex, false).then(setTypes);\n      // assistantService\n      //   .getColumnProperties(table, columnIndex, false)\n      //   .then(setProps);\n    }, [menu]);\n\n    return (\n      <div style={{ minWidth: 495, padding: 8 }}>\n        <Tabs className={classes.tab} defaultActiveKey=\"by-type\" size={\"small\"}>\n          <Tabs.TabPane tab=\"Filter By Type\" key=\"by-type\">\n            <TypeTreeFilter\n              key={`${table.id} ${columnIndex}`}\n              types={types}\n              filter={filter}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Filter By Property\" key=\"by-prop\">\n            <PropTreeFilter\n              key={`${table.id} ${columnIndex}`}\n              properties={props}\n              filter={filter}\n            />\n          </Tabs.TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: \"1px 2px\",\n    border: \"1px solid\",\n    borderRadius: 2,\n    fontSize: 12,\n    marginBottom: -1,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n\n      setStateSelected(!stateSelected);\n      if (onChange !== undefined) {\n        onChange(!stateSelected);\n      }\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { Tooltip } from \"antd\";\nimport { useState } from \"react\";\n\nexport const AutoHideTooltip: React.FC<{ title: string; ms: number }> = ({\n  children,\n  title,\n  ms,\n}) => {\n  const [visible, setVisible] = useState(false);\n  const autoHide = (visible: boolean) => {\n    if (visible) {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n      }, ms);\n    }\n  };\n\n  return (\n    <Tooltip\n      title={title}\n      visible={visible}\n      onVisibleChange={autoHide}\n      trigger=\"click\"\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport {\n  faCheck,\n  faCheckDouble,\n  faPlus,\n  faBan,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Divider, Modal, Space, Typography } from \"antd\";\nimport { runInAction, toJS } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../../../components/element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { useStores } from \"../../../models\";\nimport { appConfig } from \"../../../models/settings\";\nimport { TableRow, Link } from \"../../../models/table\";\nimport { EntitySearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\n/**\n * Component to help select candidate entity for a given cell.\n */\nexport const CandidateEntityListComponent = withStyles(styles)(\n  observer(\n    ({\n      record: record,\n      index,\n      classes,\n      topK = 3,\n    }: {\n      record: TableRow;\n      index: number;\n      topK?: number;\n    } & WithStyles<typeof styles>) => {\n      const { tableRowStore, tableStore } = useStores();\n      const [showAllCandidateModals, setShowAllCandidateModals] =\n        useState(false);\n      const singleUpdate = (entityId: string) => {\n        return (select: boolean) => {\n          return tableRowStore.updateCellLinks(\n            record,\n            index,\n            select ? entityId : undefined,\n            false // don't save the candidate entities\n          );\n        };\n      };\n\n      const selectMultiple = (entityId: string) => {\n        return (select: boolean) => {\n          const value = record.row[index];\n          if (typeof value === \"number\") {\n            throw new Error(`Can't not link a number \"${value}\" to an entity`);\n          }\n\n          return tableRowStore.updateColumnLinks(\n            tableStore.get(record.table)!,\n            index,\n            value,\n            select ? entityId : undefined\n          );\n        };\n      };\n\n      const links = record.links[index] || [];\n      const candidateLst = [];\n      if (links.length > 0) {\n        for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n          const className =\n            candidateEntity.entityId === links[0].entityId\n              ? classes.correctCandidateEntity\n              : classes.candidateEntity;\n\n          candidateLst.push(\n            <div key={candidateEntity.entityId}>\n              <Space size={4}>\n                <CheckboxIcon\n                  icon={faCheck}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={singleUpdate(candidateEntity.entityId)}\n                />\n                <CheckboxIcon\n                  icon={faCheckDouble}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={selectMultiple(candidateEntity.entityId)}\n                />\n                <FetchEntityComponent\n                  entityId={candidateEntity.entityId}\n                  render={(entity, settings) => (\n                    <PopoverEntityComponent entity={entity} settings={settings}>\n                      <InlineEntityComponent\n                        nolink={true}\n                        entity={entity}\n                        className={className}\n                      />\n                    </PopoverEntityComponent>\n                  )}\n                />\n                <span className={className}>\n                  (\n                  <Number\n                    value={candidateEntity.probability}\n                    fractionDigits={3}\n                  />\n                  )\n                </span>\n              </Space>\n            </div>\n          );\n        }\n\n        // if there is a correct entity in top K, no need to highlight, otherwise,\n        // add them to the list\n        const idx = links[0].candidateEntities.findIndex(\n          (candidate) => candidate.entityId === links[0].entityId\n        );\n        if (idx !== -1 && idx >= topK) {\n          const candidateEntity = links[0].candidateEntities[idx];\n          candidateLst.push(\n            <div key={candidateEntity.entityId}>\n              <Space size={4}>\n                <CheckboxIcon\n                  icon={faCheck}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={singleUpdate(candidateEntity.entityId)}\n                />\n                <CheckboxIcon\n                  icon={faCheckDouble}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={selectMultiple(candidateEntity.entityId)}\n                />\n                <FetchEntityComponent\n                  entityId={candidateEntity.entityId}\n                  render={(entity, settings) => (\n                    <span className={classes.correctCandidateEntity}>\n                      ({idx})&nbsp;\n                      <PopoverEntityComponent\n                        entity={entity}\n                        settings={settings}\n                      >\n                        <InlineEntityComponent nolink={true} entity={entity} />\n                      </PopoverEntityComponent>\n                    </span>\n                  )}\n                />\n                <span className={classes.correctCandidateEntity}>\n                  (\n                  <Number\n                    value={candidateEntity.probability}\n                    fractionDigits={3}\n                  />\n                  )\n                </span>\n              </Space>\n            </div>\n          );\n        }\n\n        if (links[0].candidateEntities.length > topK) {\n          candidateLst.push(\n            <div key=\"see-more\">\n              <Typography.Text\n                className={classes.candidateEntitySeeMore}\n                onClick={() =>\n                  setShowAllCandidateModals(!showAllCandidateModals)\n                }\n              >\n                See more\n              </Typography.Text>\n            </div>\n          );\n        }\n      }\n\n      // nil entity & create new entity\n      const className =\n        links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n          ? classes.correctCandidateEntity\n          : classes.candidateEntity;\n\n      candidateLst.push(\n        <div className={className} key=\"nil-entity\">\n          <Space size={4}>\n            <CheckboxIcon\n              icon={faCheck}\n              selected={\n                links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n              }\n              onChange={singleUpdate(appConfig.NIL_ENTITY)}\n            />\n            <CheckboxIcon\n              icon={faCheckDouble}\n              selected={\n                links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n              }\n              onChange={selectMultiple(appConfig.NIL_ENTITY)}\n            />\n            <FetchEntityComponent\n              entityId={appConfig.NIL_ENTITY}\n              render={(entity, settings) => (\n                <PopoverEntityComponent entity={entity} settings={settings}>\n                  <InlineEntityComponent\n                    nolink={true}\n                    entity={entity}\n                    className={className}\n                  />\n                </PopoverEntityComponent>\n              )}\n            />\n          </Space>\n        </div>\n      );\n      candidateLst.push(\n        <div className={classes.candidateEntity} key=\"new-entity\">\n          <Space\n            size={4}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              const content = (\n                <EntitySearchComponent\n                  onSelect={(entityId) => {\n                    singleUpdate(entityId)(true).then(() => {\n                      Modal.destroyAll();\n                    });\n                  }}\n                />\n              );\n\n              Modal.info({\n                title: (\n                  <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n                    Search Entity\n                  </span>\n                ),\n                content,\n                bodyStyle: { margin: -8 },\n                okButtonProps: { style: { display: \"none\" } },\n                maskClosable: true,\n                mask: true,\n              });\n            }}\n          >\n            <CheckboxIcon icon={faPlus} />\n            Create\n          </Space>\n        </div>\n      );\n\n      const columns: any = [\n        {\n          dataIndex: \"id\",\n          title: \"Entity\",\n          render: (entityId: string) => {\n            return (\n              <FetchEntityComponent\n                entityId={entityId}\n                render={(entity, settings) => (\n                  <PopoverEntityComponent entity={entity} settings={settings}>\n                    <InlineEntityComponent nolink={true} entity={entity} />\n                  </PopoverEntityComponent>\n                )}\n              />\n            );\n          },\n        },\n        {\n          dataIndex: \"score\",\n          title: \"Score\",\n          render: (score: number) => {\n            return <Number value={score} fractionDigits={5} />;\n          },\n        },\n        {\n          title: \"action\",\n          render: () => {\n            return (\n              <Space size={4}>\n                <Button>Select</Button>\n              </Space>\n            );\n          },\n        },\n      ];\n\n      return (\n        <React.Fragment>\n          {candidateLst}\n          <Modal\n            title=\"Candidate Entities\"\n            visible={showAllCandidateModals}\n            style={{ top: 20 }}\n            bodyStyle={{ padding: 0 }}\n            width={\"60%\"}\n            onOk={() => setShowAllCandidateModals(false)}\n            onCancel={() => setShowAllCandidateModals(false)}\n          >\n            <ProTable\n              defaultSize=\"small\"\n              bordered={true}\n              search={false}\n              pagination={{\n                pageSize: 20,\n                pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n              }}\n              rowKey=\"id\"\n              columns={columns}\n              request={async (params, sort, filter) => {\n                return Promise.resolve({\n                  total:\n                    links.length > 0 ? links[0].candidateEntities.length : 0,\n                  success: true,\n                  data:\n                    links.length === 0\n                      ? []\n                      : links[0].candidateEntities\n                          .slice(\n                            (params.current! - 1) * params.pageSize!,\n                            params.current! * params.pageSize!\n                          )\n                          .map((candidateEntity, index) => ({\n                            id: candidateEntity.entityId,\n                            score: candidateEntity.probability,\n                          })),\n                });\n              }}\n            ></ProTable>\n          </Modal>\n        </React.Fragment>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"gena-app\";\nimport { TableRow } from \"../../../models/table\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../../models\";\nimport { appConfig } from \"../../../models/settings\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  noEntityLink: {\n    color: grey[5],\n    \"&:hover\": {\n      color: grey[5],\n    },\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  observer(\n    ({\n      cell,\n      record,\n      index,\n      classes,\n      topK = 3,\n    }: {\n      cell: string;\n      record: TableRow;\n      index: number;\n      topK?: number;\n    } & WithStyles<typeof styles>) => {\n      const { uiSettings } = useStores();\n\n      const links = record.links[index] || [];\n      let components = links.flatMap((link, index) => {\n        let prefix =\n          index === 0\n            ? cell.substring(0, link.start)\n            : cell.substring(links[index - 1].end, link.start);\n        let linksurface = cell.substring(link.start, link.end);\n        let onCtrlClick = undefined;\n        if (link.entityId !== undefined) {\n          onCtrlClick = () => {\n            openPageEntityComponent(link.entityId!);\n          };\n        }\n        const infix =\n          link.url === undefined && link.entityId === undefined ? (\n            linksurface\n          ) : (\n            <ExternalLink\n              key={index}\n              href={link.url}\n              openInNewPage={true}\n              dangerouslySetInnerHTML={{\n                __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n              }}\n              className={\n                classes.link +\n                (link.entityId === undefined ||\n                link.entityId === appConfig.NIL_ENTITY\n                  ? \" \" + classes.noEntityLink\n                  : \"\")\n              }\n              style={link.entityId === null ? { color: \"#aaa\" } : {}}\n              onCtrlClick={onCtrlClick}\n            />\n          );\n\n        if (link.entityId === undefined) {\n          return [prefix, infix];\n        }\n\n        // reassign to infix somehow killing the application\n        const wrappedInfix = (\n          <FetchEntityComponent\n            key={index}\n            entityId={link.entityId}\n            render={(entity, settings) => (\n              <PopoverEntityComponent\n                entity={entity}\n                zIndex={500}\n                settings={settings}\n              >\n                {infix}\n              </PopoverEntityComponent>\n            )}\n            renderNotFound={() => (\n              <span className={classes.noEntityLink}>{infix}</span>\n            )}\n          />\n        );\n\n        return [prefix, wrappedInfix];\n      });\n\n      if (links.length === 0) {\n        components.push(cell);\n      } else {\n        components.push(cell.substring(links[links.length - 1].end));\n      }\n\n      return (\n        <div>\n          {components}\n          {uiSettings.table.showEntityLinkingEditor &&\n          typeof record.row[index] !== \"number\" ? (\n            <CandidateEntityListComponent\n              record={record}\n              index={index}\n              topK={topK}\n            />\n          ) : null}\n        </div>\n      );\n    }\n  )\n);\n","import { action, computed, makeObservable, observable, toJS } from \"mobx\";\nimport { ClassStore, EntityStore, TableRow } from \"../../../../models\";\nimport { appConfig } from \"../../../../models/settings\";\n\nexport class ColumnFilter {\n  public type2op: { [type: string]: \"null\" | \"include\" | \"exclude\" } = {};\n  public selectNil: boolean = false;\n  public selectUnlinked: boolean = false;\n  public includeCandidateEntities: boolean = true;\n\n  protected columnIndex: number;\n  protected onChange: () => void;\n\n  constructor(columnIndex: number, onChange: () => void) {\n    this.columnIndex = columnIndex;\n    this.onChange = onChange;\n\n    makeObservable(this, {\n      type2op: observable,\n      selectNil: observable,\n      selectUnlinked: observable,\n      includeCandidateEntities: observable,\n      hasFilter: computed,\n      addTypes: action,\n      setSelectNil: action,\n      setSelectUnlinked: action,\n      setIncludeCandidateEntities: action,\n      toggleAllType: action,\n      setTypeOp: action,\n    });\n  }\n\n  addTypes = (types: string[]) => {\n    for (const type of types) {\n      this.type2op[type] = \"null\";\n    }\n  };\n\n  setIncludeCandidateEntities = (value: boolean) => {\n    if (this.includeCandidateEntities === value) return;\n    this.includeCandidateEntities = value;\n    this.onChange();\n  };\n\n  setSelectNil = (value: boolean) => {\n    if (this.selectNil === value) return;\n    this.selectNil = value;\n    this.onChange();\n  };\n\n  setSelectUnlinked = (value: boolean) => {\n    if (this.selectUnlinked === value) return;\n    this.selectUnlinked = value;\n    this.onChange();\n  };\n\n  /**\n   * Set all types to a new op if the next state is checked.\n   * Otherwise, only states of the same op are changed to null.\n   */\n  toggleAllType = (op: \"null\" | \"include\" | \"exclude\", checked: boolean) => {\n    let hasChange = false;\n\n    if (checked) {\n      for (const type in this.type2op) {\n        if (this.type2op[type] === op) continue;\n        this.type2op[type] = op;\n        hasChange = true;\n      }\n    } else {\n      for (const type in this.type2op) {\n        if (this.type2op[type] === op) {\n          this.type2op[type] = \"null\";\n          hasChange = true;\n        }\n      }\n    }\n\n    if (hasChange) {\n      this.onChange();\n    }\n  };\n\n  setTypeOp = (type: string, op: \"null\" | \"include\" | \"exclude\") => {\n    if (this.type2op[type] === op) return;\n    this.type2op[type] = op;\n    this.onChange();\n  };\n\n  hasAnyOp = (op: \"null\" | \"include\" | \"exclude\") => {\n    for (const type in this.type2op) {\n      if (this.type2op[type] === op) return true;\n    }\n    return false;\n  };\n\n  hasAllOp = (op: \"null\" | \"include\" | \"exclude\") => {\n    for (const type in this.type2op) {\n      if (this.type2op[type] !== op) return false;\n    }\n    return true;\n  };\n\n  /** Whether we have any filter on */\n  get hasFilter() {\n    for (const type in this.type2op) {\n      if (this.type2op[type] !== \"null\") return true;\n    }\n    return this.selectNil || this.selectUnlinked;\n  }\n\n  /** Test whether the row match this filter */\n  getFilterExec = (entStore: EntityStore, classStore: ClassStore) => {\n    // gather include & exclude types\n    const includeTypeIds: string[] = [];\n    const excludeTypeIds: string[] = [];\n    for (const type in this.type2op) {\n      if (this.type2op[type] === \"include\") {\n        includeTypeIds.push(type);\n      } else if (this.type2op[type] === \"exclude\") {\n        excludeTypeIds.push(type);\n      }\n    }\n\n    return async (row: TableRow) => {\n      if (!this.hasFilter) return true;\n\n      // nil and unlinked are or operator (not and operator)\n      if (this.selectNil || this.selectUnlinked) {\n        for (const link of row.links[this.columnIndex] || []) {\n          if (\n            (this.selectNil && link.entityId === appConfig.NIL_ENTITY) ||\n            (this.selectUnlinked && link.entityId === undefined)\n          )\n            return true;\n        }\n\n        if (\n          this.selectUnlinked &&\n          (row.links[this.columnIndex] || []).length === 0\n        ) {\n          return true;\n        }\n\n        return false;\n      }\n\n      // now apply the filter on those types\n      const entIds = new Set<string>();\n      for (const link of row.links[this.columnIndex] || []) {\n        if (\n          link.entityId !== appConfig.NIL_ENTITY &&\n          link.entityId !== undefined\n        ) {\n          entIds.add(link.entityId);\n        }\n        if (this.includeCandidateEntities) {\n          for (const canEnt of link.candidateEntities) {\n            entIds.add(canEnt.entityId);\n          }\n        }\n      }\n\n      if (entIds.size === 0) return false;\n\n      const ents = await entStore.fetchByIds(Array.from(entIds));\n      const classes = await classStore.fetchByIds(\n        Object.values(ents).flatMap((ent) => {\n          const instanceOf = appConfig.instanceof(ent.uri);\n          if (\n            instanceOf === undefined ||\n            ent.properties[instanceOf] === undefined\n          ) {\n            return [];\n          }\n\n          const output = [];\n          for (const stmt of ent.properties[instanceOf]) {\n            if (stmt.value.type === \"entityid\") {\n              output.push(stmt.value.value);\n            }\n          }\n          return output;\n        })\n      );\n\n      return (\n        (includeTypeIds.length === 0 ||\n          Object.values(classes).some((klass) =>\n            includeTypeIds.some(\n              (typeId) =>\n                klass.id === typeId || klass.parentsClosure.has(typeId)\n            )\n          )) &&\n        (excludeTypeIds.length === 0 ||\n          !Object.values(classes).some((klass) =>\n            excludeTypeIds.some(\n              (typeId) =>\n                klass.id === typeId || klass.parentsClosure.has(typeId)\n            )\n          ))\n      );\n    };\n  };\n}\n\nexport class TableFilter {\n  public columnFilters: ColumnFilter[] = [];\n\n  protected onChange = (filter: TableFilter) => {};\n\n  constructor(nColumns: number, onChange?: (filter: TableFilter) => void) {\n    if (onChange !== undefined) {\n      this.onChange = onChange;\n    }\n\n    for (let i = 0; i < nColumns; i++) {\n      this.columnFilters.push(\n        new ColumnFilter(i, () => {\n          this.handleChange();\n        })\n      );\n    }\n\n    makeObservable(this, {\n      columnFilters: observable,\n      setOnChange: action,\n    });\n  }\n\n  setOnChange = (onChange: (filter: TableFilter) => void) => {\n    this.onChange = onChange;\n  };\n\n  handleChange = () => {\n    this.onChange(this);\n  };\n\n  /** Whether we have any filter on */\n  hasFilter = () => {\n    return this.columnFilters.some((c) => c.hasFilter);\n  };\n\n  /** Filter rows */\n  filter = async (\n    rows: TableRow[],\n    entStore: EntityStore,\n    classStore: ClassStore\n  ) => {\n    const filterExecs = this.columnFilters.map((c) =>\n      c.getFilterExec(entStore, classStore)\n    );\n\n    const matches = await Promise.all(\n      rows.map((row) => {\n        return Promise.all(filterExecs.map((exec) => exec(row))).then(\n          (results) => {\n            return results.every((res) => res);\n          }\n        );\n      })\n    );\n    return rows.filter((row, i) => matches[i]);\n  };\n}\n","import { SearchOutlined } from \"@ant-design/icons\";\nimport ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions, Tag, Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { ExternalLink } from \"gena-app\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { Table, TableRow } from \"../../../models/table\";\nimport {\n  isLineBreak,\n  LineBreak,\n  Text,\n} from \"../../../models/table/TableContext\";\nimport { TableColumnFilter } from \"./TableColumn\";\nimport { CellComponent } from \"./CellComponent\";\nimport { TableFilter } from \"./filters/Filter\";\nimport { tableStyles } from \"./styles\";\nimport { DataType, SemanticModel } from \"../../../models\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport interface TableComponentFunc {\n  reload: () => void;\n}\n\nexport const TableComponent = withStyles(styles)(\n  observer(\n    forwardRef(\n      (\n        {\n          table,\n          query,\n          classes,\n          toolBarRender,\n          showRowIndex = false,\n          column2datatype,\n        }: {\n          table: Table;\n          query: (\n            limit: number,\n            offset: number,\n            filter: TableFilter\n          ) => Promise<{ rows: TableRow[]; total: number }>;\n          toolBarRender?: false;\n          showRowIndex?: boolean;\n          column2datatype: (DataType[] | undefined)[];\n        } & WithStyles<typeof styles>,\n        ref\n      ) => {\n        const actionRef = useRef<ActionType>();\n        const [filter, _setFilter] = useState(\n          new TableFilter(table.columns.length, (filter: TableFilter) => {\n            // reload the table and reset the page index cause we update the filter\n            // another reason is some how without resetting the page index, protable triggers the request\n            // function twice\n            actionRef.current?.reload(true);\n          })\n        );\n\n        useImperativeHandle(\n          ref,\n          (): TableComponentFunc => ({\n            reload: () => {\n              actionRef.current?.reload();\n            },\n          })\n        );\n\n        const columns = table.columns.map((col, columnIndex) => ({\n          dataIndex: [\"row\", columnIndex],\n          title: () => {\n            const dtypes = column2datatype[columnIndex];\n            if (\n              dtypes === undefined ||\n              (dtypes.length === 1 && dtypes[0] === \"unknown\")\n            ) {\n              // no datatype\n              return table.columns[columnIndex];\n            }\n\n            return (\n              <>\n                <div>{table.columns[columnIndex]}</div>\n                <div className=\"column-datatype\">\n                  {dtypes.map((datatype) => (\n                    <Tag key={datatype} color=\"green\">\n                      {datatype}\n                    </Tag>\n                  ))}\n                </div>\n              </>\n            );\n          },\n          render: ((value: string, record: TableRow) => {\n            return (\n              <CellComponent cell={value} record={record} index={columnIndex} />\n            );\n          }) as any,\n          filterDropdown: (\n            <TableColumnFilter\n              table={table}\n              columnIndex={columnIndex}\n              filter={filter.columnFilters[columnIndex]}\n            />\n          ),\n          filterIcon: (\n            <SearchOutlined\n              style={{\n                color: filter.columnFilters[columnIndex].hasFilter\n                  ? \"#1890ff\"\n                  : undefined,\n              }}\n            />\n          ),\n        }));\n\n        if (showRowIndex) {\n          columns.splice(0, 0, {\n            title: (\n              <Typography.Text type=\"secondary\" disabled={true}>\n                #\n              </Typography.Text>\n            ),\n            dataIndex: \"index\",\n          } as any);\n        }\n\n        return (\n          <>\n            <ProTable\n              actionRef={actionRef}\n              className={classes.table}\n              defaultSize=\"small\"\n              bordered={true}\n              params={{ filter }}\n              request={async (params, sort, filter) => {\n                const { rows, total } = await query(\n                  params.pageSize!,\n                  (params.current! - 1) * params.pageSize!,\n                  params.filter\n                );\n                return {\n                  data: rows,\n                  success: true,\n                  total,\n                };\n              }}\n              search={false}\n              pagination={{\n                pageSize: 5,\n                pageSizeOptions: [\n                  \"5\",\n                  \"10\",\n                  \"20\",\n                  \"50\",\n                  \"100\",\n                  \"200\",\n                  \"500\",\n                  \"1000\",\n                ],\n              }}\n              headerTitle={\n                table.contextPage.url !== undefined ? (\n                  <ExternalLink\n                    href={table.contextPage.url}\n                    openInNewPage={true}\n                  >\n                    {table.name}\n                  </ExternalLink>\n                ) : (\n                  table.name\n                )\n              }\n              toolBarRender={toolBarRender}\n              rowKey=\"index\"\n              columns={columns}\n            />\n            <TableInformation table={table} />\n          </>\n        );\n      }\n    )\n  )\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.contextPage.url !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.contextPage.url} openInNewPage={true}>\n        {table.contextPage.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.contextPage.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.contextPage.entityId}\n        render={(entity, settings) => (\n          <PopoverEntityComponent\n            entity={entity}\n            zIndex={500}\n            settings={settings}\n          >\n            <InlineEntityComponent\n              entity={entity}\n              onCtrlClick={() => {\n                openPageEntityComponent({ entity, settings });\n              }}\n            />\n          </PopoverEntityComponent>\n        )}\n        renderNotFound={() => (\n          <span>`Entity ${table.contextPage.entityId} does not exist`</span>\n        )}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.contextHierarchy || []).flatMap((hierarchy, index) => {\n    if (hierarchy.level === 0 && hierarchy.heading.trim().length === 0) {\n      if (\n        hierarchy.contentBefore.every(isLineBreak) &&\n        hierarchy.contentAfter.length === 0\n      ) {\n        return [];\n      }\n    }\n    const output = [\n      <p key={`${index}-head`}>\n        <b>\n          {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n        </b>\n      </p>,\n    ];\n    return output\n      .concat(ContentComponent(`${index}-before`, hierarchy.contentBefore))\n      .concat(ContentComponent(`${index}-after`, hierarchy.contentAfter));\n  });\n  info.push([\n    \"Content Hierarchy\",\n    content.length > 0 ? <div>{content}</div> : \"N/A\",\n  ]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n\nconst ContentComponent = (key: string, lines: (Text | LineBreak)[]) => {\n  const comps: string[][] = [[]];\n  for (const line of lines) {\n    if (isLineBreak(line)) {\n      comps.push([]);\n    } else {\n      comps[comps.length - 1].push(line.value);\n    }\n  }\n  return comps\n    .filter((lst) => lst.length > 0)\n    .map((lst, i) => <p key={`${key}-${i}`}>{lst}</p>);\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n  \"& .column-datatype\": {\n    fontWeight: \"normal\",\n  },\n};\n","import { Button, PageHeader, Space } from \"antd\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { AutoHideTooltip } from \"../../components\";\nimport { Table, Project, useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\nimport _ from \"lodash\";\nimport { history } from \"gena-app\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nfunction useTableNavigation(tableId: number) {\n  const { tableStore } = useStores();\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? tableStore.decodeWhereQuery(b64query) : {}),\n    [tableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n\n      if (isMounted) {\n        setState({\n          ...state,\n          ...newState,\n          version: state.version + 1,\n          query: b64query,\n          tableId,\n        });\n      }\n    };\n\n    fn();\n\n    return () => {\n      isMounted = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nexport const TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n    props.table.id\n  );\n\n  useHotkeys(\"b\", toPreviousTable, [props.table.id, navState.version]);\n  useHotkeys(\"n\", toNextTable, [props.table.id, navState.version]);\n\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space key=\"title\">\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <AutoHideTooltip title=\"copied\" ms={500}>\n            <span\n              style={{\n                color: \"#237804\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => navigator.clipboard.writeText(props.table.name)}\n            >\n              {props.table.name}\n            </span>\n          </AutoHideTooltip>\n        </Space>\n      }\n      subTitle={\n        <Space key=\"sub-title\">\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          <span className=\"ml-2\">\n            Position:{\" \"}\n            <b>\n              {\" \"}\n              {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n            </b>\n          </span>\n        </Space>\n      }\n      extra={[\n        <Button\n          key=\"prev\"\n          onClick={toPreviousTable}\n          disabled={!navState.hasPrev}\n        >\n          Previous Table (B)\n        </Button>,\n        <Button key=\"next\" onClick={toNextTable} disabled={!navState.hasNext}>\n          Next Table (N)\n        </Button>,\n      ]}\n    />\n  );\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingComponent, NotFoundComponent } from \"gena-app\";\nimport { AutoHideTooltip } from \"../../components/element\";\nimport {\n  DataType,\n  DraftSemanticModel,\n  Project,\n  SemanticModel,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { EntitySettingComponent } from \"./EntitySettingComponent\";\nimport { MenuBar } from \"./MenuBar\";\nimport {\n  SemanticModelComponent,\n  SemanticModelComponentFunc,\n} from \"./SemanticModelComponent\";\nimport { TableComponent } from \"./table\";\nimport { TableFilter } from \"./table/filters/Filter\";\nimport { TableComponentFunc } from \"./table/TableComponent\";\nimport { TableNavBar } from \"./TableNavBar\";\nimport { appConfig } from \"../../models/settings\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const {\n      projectStore,\n      tableStore,\n      tableRowStore,\n      semanticModelStore,\n      classStore,\n      entityStore,\n      propertyStore,\n    } = useStores();\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { sms, index, setIndex } = useSemanticModel(tableId);\n    const sm = sms[index];\n\n    const tableRef = useRef<TableComponentFunc>(null);\n    const graphRef = useRef<SemanticModelComponentFunc>(null);\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    const table = tableStore.get(tableId);\n\n    // compute the datatype of each column\n    const column2datatype: (DataType[] | undefined)[] = useMemo(() => {\n      if (table === null || table === undefined) {\n        return [];\n      }\n\n      return table.columns.map((col, columnIndex) => {\n        if (sm === undefined) return undefined;\n\n        const node = sm.graph.nodeByColumnIndex(columnIndex);\n        const datatypes: Set<DataType> = new Set(\n          sm.graph.incomingEdges(node.id).map((inedge) => {\n            if (appConfig.SEM_MODEL_IDENTS.has(inedge.uri)) {\n              return \"entity\";\n            }\n            const prop = propertyStore.getPropertyByURI(inedge.uri);\n            if (prop === undefined) {\n              propertyStore.fetchIfMissingByURI(inedge.uri);\n              return \"unknown\";\n            }\n\n            return prop.datatype;\n          })\n        );\n\n        return Array.from(datatypes).sort();\n      });\n    }, [\n      // no run condition\n      table === null || table === undefined,\n      tableId,\n      sm !== undefined && SemanticModel.isDraft(sm) ? sm.draftID : null,\n      sm !== undefined ? sm.id : undefined,\n      sm !== undefined ? sm.graph.version : undefined,\n      // to trigger re-render when propertyStore finish fetching properties\n      sm !== undefined\n        ? sm.graph.edges.reduce(\n            (prevValue, edge) =>\n              prevValue +\n              (propertyStore.getPropertyByURI(edge.uri) !== undefined ? 1 : 0),\n            0\n          )\n        : undefined,\n    ]);\n\n    if (table === null) {\n      return <NotFoundComponent />;\n    } else if (table === undefined || sms.length === 0) {\n      // the table and sms is loading\n      return <LoadingComponent />;\n    }\n\n    return (\n      <React.Fragment>\n        <TableNavBar project={projectStore.get(table.project)} table={table} />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            <MenuBar\n              graphRef={graphRef}\n              tableRef={tableRef}\n              table={table}\n              semanticmodel={{ sms, index, setIndex }}\n            />\n            <SemanticModelComponent\n              ref={graphRef}\n              key={`sm-${tableId}`}\n              table={table}\n              sm={sm}\n            />\n            <TableComponent\n              ref={tableRef}\n              key={`tbl-${tableId}`}\n              toolBarRender={false}\n              table={table}\n              column2datatype={column2datatype}\n              query={async (\n                limit: number,\n                offset: number,\n                filter: TableFilter\n              ) => {\n                if (!filter.hasFilter()) {\n                  const rows = await tableRowStore.fetchByTable(\n                    table,\n                    offset,\n                    limit\n                  );\n                  return { rows, total: table.size };\n                }\n\n                const allrows = await tableRowStore.fetchByTable(\n                  table,\n                  0,\n                  table.size\n                );\n                const rows = await filter.filter(\n                  allrows,\n                  entityStore,\n                  classStore\n                );\n                return {\n                  rows: rows.slice(offset, offset + limit),\n                  total: rows.length,\n                };\n              }}\n              showRowIndex={true}\n            />\n            <EntitySettingComponent />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useSemanticModel(tableId: number) {\n  const { tableStore, semanticModelStore } = useStores();\n  const [prevTableId, setPrevTableId] = useState(-1);\n  const [hasFetchSemanticModel, setHasFetchSemanticModel] = useState(false);\n  const [index, setIndex] = useState(0);\n  const isUpdatedState = prevTableId === -1 || tableId === prevTableId;\n\n  if (tableId !== prevTableId) {\n    // reset the internal state\n    setPrevTableId(tableId);\n    setHasFetchSemanticModel(false);\n    setIndex(0);\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    if (!semanticModelStore.hasByTable(tableId)) {\n      semanticModelStore\n        .fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        })\n        .then(() => {\n          if (mounted) {\n            setHasFetchSemanticModel(true);\n          }\n        });\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [semanticModelStore, tableId]);\n\n  const table = tableStore.get(tableId);\n\n  if (\n    !isUpdatedState ||\n    table === undefined ||\n    table === null ||\n    (!semanticModelStore.hasByTable(tableId) && !hasFetchSemanticModel)\n  ) {\n    // either the table does not exist, the internal state is not updated, or the semantic model is not fetched\n    return { index, sms: [], setIndex };\n  }\n\n  const sms = semanticModelStore.findByTable(tableId);\n  const drafts = semanticModelStore.getCreateDraftsByTable(table);\n\n  if (index >= sms.length + drafts.length) {\n    // there is no semantic model & no draft for this table, create a new draft\n    const id = semanticModelStore.getNewCreateDraftId(table);\n    const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n      id,\n      `sm-${sms.length}`,\n      table\n    );\n    semanticModelStore.setCreateDraft(draft);\n    drafts.push(draft);\n  }\n\n  return { sms: sms.concat(drafts), index, setIndex };\n}\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","import { Menu } from \"antd\";\nimport { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName, PathDef } from \"gena-app\";\nimport React from \"react\";\n\nconst css = {\n  centerNavBar: {\n    justifyContent: \"center\",\n    boxShadow: \"0 2px 8px #f0f1f2\",\n  },\n  leftNavBar: {\n    \"& .logo::after\": {\n      borderBottom: \"none !important\",\n      transition: \"none !important\",\n    },\n    \"& .logo:hover::after\": {\n      borderBottom: \"none !important\",\n      transition: \"none !important\",\n    },\n    \"& .logo img\": {\n      height: 24,\n      borderRadius: 4,\n      marginTop: -2,\n    },\n    paddingLeft: 24,\n    paddingRight: 24,\n    boxShadow: \"0 2px 8px #f0f1f2\",\n  },\n};\n\ntype MenuItemProps = {\n  children: string | JSX.Element;\n  icon?: JSX.Element;\n  danger?: boolean;\n  disabled?: boolean;\n};\n\ninterface Props<R> {\n  menus: Partial<Record<keyof R, string | JSX.Element | MenuItemProps>>;\n  routes: R;\n  className?: string;\n  style?: React.CSSProperties;\n  isFirstItemLogo?: boolean;\n}\ntype Component = <R extends Record<any, PathDef<any, any>>>(\n  p: Props<R>\n) => JSX.Element;\n\nexport const CenterNavBar = withStyles(css)(\n  <R extends Record<any, PathDef<any, any>>>({\n    classes,\n    menus,\n    routes,\n    className,\n    style,\n    isFirstItemLogo,\n  }: Props<R> & WithStyles<typeof css>) => {\n    const location = useLocation();\n    const openMenu = (e: { key: keyof R }) => {\n      routes[e.key].path({}, {}).open();\n    };\n\n    const items = Object.keys(menus).map((routeName, index) => {\n      const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n      return getMenuItem(routeName, className, menus[routeName]!);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\n          classes.centerNavBar +\n          (className !== undefined ? \" \" + className : \"\")\n        }\n        style={style}\n        onClick={openMenu}\n        selectedKeys={\n          activeRouteName !== undefined ? [activeRouteName] : undefined\n        }\n      >\n        {items}\n      </Menu>\n    );\n  }\n) as Component;\n\nexport const LeftNavBar = withStyles(css)(\n  <R extends Record<any, PathDef<any, any>>>({\n    classes,\n    menus,\n    routes,\n    className,\n    style,\n    isFirstItemLogo,\n  }: Props<R> & WithStyles<typeof css>) => {\n    const location = useLocation();\n    const openMenu = (e: { key: keyof R }) => {\n      routes[e.key].path({}, {}).open();\n    };\n\n    const items = Object.keys(menus).map((routeName, index) => {\n      const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n      return getMenuItem(routeName, className, menus[routeName]!);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        className={\n          classes.leftNavBar + (className !== undefined ? \" \" + className : \"\")\n        }\n        style={style}\n        onClick={openMenu}\n        selectedKeys={\n          activeRouteName !== undefined ? [activeRouteName] : undefined\n        }\n      >\n        {items}\n      </Menu>\n    );\n  }\n) as Component;\n\nfunction getMenuItem(\n  key: string,\n  className: string,\n  props: string | JSX.Element | MenuItemProps\n) {\n  let children, realprops;\n\n  if (typeof props === \"string\") {\n    children = props;\n  } else if (React.isValidElement(props)) {\n    children = props;\n  } else {\n    const { children: children2, ...realprops2 } = props as MenuItemProps;\n    children = children2;\n    realprops = realprops2;\n  }\n\n  return (\n    <Menu.Item className={className} key={key} {...realprops}>\n      {children}\n    </Menu.Item>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.aa0996dd.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"gena-app\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"./components/Navbar\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\n/*************************************************************************************\n * Layouts of the application\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\nconst None = () => <h1>Not supposed to see this page</h1>;\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    component: ProjectPage,\n    urlSchema: { projectId: \"number\" },\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    component: TablePage,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    pathDef: \"/tables/:tableId\",\n  }),\n  tableExportModel: new PathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { attachment: \"optionalboolean\" },\n    pathDef: \"/api/table/:tableId/export-models\",\n  }),\n  tableExportData: new PathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { attachment: \"optionalboolean\" },\n    pathDef: \"/api/table/:tableId/export\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"gena-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, initStores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\n\ninitStores().then(() => {\n  ReactDOM.render(\n    <StoreContext.Provider value={stores}>\n      <ConfigProvider locale={enUSIntl}>\n        <App enUSLocale={true} routes={routes} />\n      </ConfigProvider>\n    </StoreContext.Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}