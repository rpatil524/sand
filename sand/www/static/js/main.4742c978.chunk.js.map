{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/models/StoreIndex.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/Link.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","reportWebVitals.ts","env.ts","models/settings/ApplicationConfig.ts","models/settings/EntitySettings.ts","models/settings/TableSettings.ts","models/settings/index.ts","models/sm/SMGraph.ts","models/sm/SemanticModelStore.ts","models/AssistantService.ts","models/entity/EntityStore.ts","models/ontology/ClassStore.ts","models/ontology/PropertyStore.ts","models/project/Project.ts","models/project/ProjectStore.ts","models/project/ProjectUpload.ts","models/table/TableContext.ts","models/table/TableRowStore.ts","models/index.ts","models/table/TableStore.ts","../.yalc/rma-baseapp/lib/esm/models/index.js","pages/project/forms/NewProjectForm.tsx","pages/home/HomePage.tsx","pages/project/forms/UpdateProjectForm.tsx","pages/project/forms/upload/ParserOptsComponent.tsx","pages/project/forms/upload/RawTableComponent.tsx","pages/project/forms/upload/UploadTableForm.tsx","pages/project/ProjectPage.tsx","misc/SequentialFuncInvoker.ts","pages/table/OntSearchComponent.tsx","pages/table/EntitySettingComponent.tsx","pages/table/NodeSearchComponent.tsx","pages/table/forms/EdgeForm.tsx","pages/table/forms/NodeForm.tsx","pages/table/forms/index.tsx","pages/table/MenuBar.tsx","components/graph/RectNode.ts","components/graph/CircleNode.ts","components/graph/wordwrap/optimizer.ts","components/graph/wordwrap/model.ts","components/graph/wordwrap/wordwrap.ts","components/graph/G6Graph.ts","components/graph/GraphComponent.tsx","pages/table/SemanticModelComponent.tsx","components/entity/InlineEntityComponent.tsx","components/entity/Entity.ts","components/entity/FetchEntityComponent.tsx","components/entity/InlinePropertyComponent.tsx","components/element/Collapse.tsx","components/entity/ValueComponent.tsx","components/entity/StatementComponent.tsx","components/entity/PropertyComponent.tsx","components/entity/PropertyFilterComponent.tsx","components/entity/PageEntityComponent.tsx","components/entity/PopoverEntityComponent.tsx","pages/table/table/filters/TypeTreeFilter.tsx","pages/table/table/filters/PropTreeFilter.tsx","pages/table/TableColumn.tsx","components/element/Number.tsx","components/element/Button.tsx","components/element/AutoHideTooltip.tsx","pages/table/table/CandidateEntityListComponent.tsx","pages/table/table/CellComponent.tsx","pages/table/table/filters/Filter.ts","pages/table/table/TableComponent.tsx","pages/table/table/styles.ts","pages/table/TableNavBar.tsx","pages/table/TablePage.tsx","pages/SettingPage.tsx","logo.png","routes.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","fetch","flow","query","record","set","id","index","f","map","get","queryByName","name","axios","params","q","resp","data","deserialize","bind","total","nameAndField","Object","entries","key","name2field","fromEntries","undefined","batch","BatchFetchRequests","action","fetchOne","fetchById","fetchByIds","list","limit","length","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","store","window","requests","executingRequests","callback","clearTimeout","setTimeout","promise","exec","catch","pendingPromises","all","x","reqs","req","delete","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","update","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","listener","draft","discardDraft","serializeCreateDraft","draftID","put","serializeUpdateDraft","toModel","markSaved","prevRecord","deindex","clear","remove","serializeRecord","val","k","hasOwnProperty","SimpleCRUDStore","override","_super","call","assign","SingleKeyUniqueIndex","idField","fkField","SingleKeyIndex","_a","PairKeysUniqueIndex","fkField1","fkField2","key1","key2","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","message","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","NoQueryArgsPathDef","mouseClickNavigationHandler","openInNewPage","preventDefault","ctrlKey","metaKey","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","__rest","s","t","p","prototype","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalLink","props","restprops","onClick","ExternalLink","onCtrlClick","rel","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","type","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","LeftNavBar","menus","style","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","realprops","React","isValidElement","Item","App","enUSLocale","ConfigProvider","locale","enUSIntl","Router","Switch","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER","ApplicationConfig","NIL_ENTITY","SEM_MODEL_IDENTS","SEM_MODEL_STATEMENTS","instanceofMapping","instanceofProps","instanceofIndex","StartsWithIndex","instanceof","uri","setInstanceOf","fromMapping","start","end","text","substring","internalNode","mapping","sortedPrefixes","sort","a","b","Error","prefixes","shortestPrefix","subindex","slice","node","tmp","prefix","subprefixes","EntitySettings","_showedPropsInFullView","_showedPropsInPopoverView","nilEntityId","setNilEntityId","nil","setInstanceOfProps","cfg","setShowedPropsInFullView","setShowedPropsInPopoverView","addShowedPropsInFullView","addShowedPropsInPopoverView","removeShowedPropsInFullView","removeShowedPropsInPopoverView","getInstanceOfProp","ns","startsWith","showedPropsInFullView","showedPropsInPopoverView","TableSettings","pageSize","showEntityLinkingEditor","setPageSize","toggleEntityLinkingEditor","enableEntityLinkingEditor","appConfig","UISettings","entity","table","fetchSettings","instanceOf","URICount","nodes","counter","id2num","label","nextLabel","getNum","nodetype","SMGraph","edges","version","stale","nodeId2Index","column2nodeIndex","uriCount","isEmpty","clone","toJS","onSave","hasNode","nodesByURI","nodeByColumnIndex","nodeByEntityId","edge","source","hasEdge","incomingEdges","outgoingEdges","nextNodeId","nid","findPathMax2hops","sourceId","targetId","matchPaths","outedges","outedge","outedge2","getClassIdOfColumnIndex","columnIndex","inedges","inedge","getOutgoingProperties","outprops","coutedge","_removeNode","nodeId","nodeIndex","isInContext","_removeEdge","edgeIndex","sourceDegree","targetDegree","splice","buildIndex","n","addColumnRelationship","upsertColumnType","upsertRelationship","addClassNode","addLiteralNode","removeNode","updateClassNode","updateDataNode","updateLiteralNode","addEdge","removeEdge","updateEdge","sourceColumnIndex","targetColumnIndex","edgeData","sourceIncomingEdges","targetIncomingEdges","realSource","realTarget","approximation","pred1","pred2","edge1","edge2","tempid","SemanticModel","description","graph","isDraft","sm","DraftSemanticModel","columns","column","SemanticModelStore","getNewCreateDraftId","getCreateDraft","sms","findByTable","drafts","getCreateDraftsByTable","idx","concat","parseInt","Math","max","tableId","tableIndex","column_index","is_in_context","AssistantService","tableStore","tableRowStore","smStore","classStore","propStore","entityStore","tables","rows","predict","algorithm","rawsm","mtab","rawrows","draftId","prevDrafts","getNewSemanticModelName","row","getColumnTypes","getColumnProperties","getColumnTypesServer","includeCandidateEntities","fetchByTable","entIds","links","link","entityId","candidateEntities","candidate","ents","classIds","ent","instanceofProp","properties","stmt","classId","additionalURIs","fetchIfMissingByURI","klass","propIds","propId","stmts","qualifiersOrder","qualId","tree","existingClasses","parents","parent","EntityStore","readableLabel","readable_label","qualifiers_order","ClassStore","parentsClosure","doesNotExistURIs","getClassByURI","uriIndex","PropertyStore","getPropertyByURI","Project","DraftUpdateProject","project","DraftCreateProject","ProjectStore","uploadTable","projectId","file","parserOpt","selectedTables","form","FormData","append","headers","table_ids","formats","isLineBreak","nLines","TableRowStore","updateCellLinks","updateCandidateEntities","serializeLink","candidate_entities","updateColumnLinks","rowId","entity_id","no","hasLocalData","canent","probability","forEach","ce","findByProject","projectIndex","contextPage","context_page","contextValues","context_values","context_tree","contextTree","contentBefore","content_before","n_lines","contentAfter","content_after","semanticModelStore","propertyStore","stores","projectStore","assistantService","uiSettings","addEventListener","event","reason","isAxiosError","error","console","_stores","StoreContext","createContext","useStores","useContext","NewProjectForm","observer","Form","useForm","useState","nameValidation","setNameValidation","labelCol","span","wrapperCol","onFinish","getFieldValue","destroyAll","rules","required","validateStatus","htmlType","colorWheels","red","volcano","blue","gold","orange","yellow","lime","green","cyan","geekblue","purple","magenta","HomePage","useEffect","Fragment","gutter","Title","level","float","zIndex","content","info","marginBottom","display","bodyStyle","margin","maskClosable","mask","width","top","openNewProjectForm","itemLayout","dataSource","renderItem","Meta","avatar","shape","backgroundColor","charCodeAt","toUpperCase","UpdateProjectForm","fromProject","initialValue","home","CSVParserForm","opt","onChange","setFieldsValue","delimiter","valuePropName","escapeDelimiter","ParserOptsForm","additionalProps","parserOpts","format","layout","initialValues","Option","RawTableComponent","borderLeft","fontWeight","defaultSize","toolBarRender","pagination","pageSizeOptions","rowKey","header","dataIndex","request","current","success","styles","upload","padding","carouselDot","opacity","UploadPhase1","setUploadTable","direction","Dragger","multiple","onDrop","dataTransfer","files","tbl","beforeUpload","InboxOutlined","UploadPhase2","uploadingTable","destroy","onDone","setSelectedTables","Text","checked","lst","parser_opts","flag","UploadTableForm","phase","setPhase","setUploadingTable","ProjectPage","useModal","modal","contextHolder","actionRef","useRef","LoadingPage","renderText","encodeWhereQuery","_","onConfirm","reload","upperFirst","fontSize","openUpdateProjectForm","EditOutlined","table2row","options","headerTitle","ref","openUploadTableForm","SequentialFuncInvoker","timer","calledAt","selection","OntPropSearchComponent","useSearchComponent","OntClassSearchComponent","EntitySearchComponent","storeName","seqInvoker","allowClear","optionFilterProp","showSearch","onSearch","onSelect","onDeselect","EntitySettingComponent","class_node","color","literal_node","data_node","NodeSearchComponent","u","option","borderSpacing","verticalAlign","EdgeForm","setSource","setTarget","setURI","setApproximation","dupEdge","labelWrap","copyable","help","colon","cls","newEdge","disabled","ClassNodeSubForm","LiteralNodeSubForm","setId","setIsInContext","duplicatedId","DataNodeSubForm","NodeForm","setNodeType","Group","buttonStyle","openForm","args","MenuBar","tableRef","graphRef","semanticmodel","menuVisible","setMenuVisible","useHotkeys","recenter","smUniqueIdent","lstSmsKey","setIndex","funcs","saveModel","addModel","nSms","getDefaultDraftSemanticModel","deleteModel","exportModel","tableExportModel","attachment","exportData","tableExportData","openAddNodeForm","openAddEdgeForm","menu","ItemGroup","SubMenu","icon","faFloppyDisk","SaveOutlined","FileAddOutlined","DeleteOutlined","ImportOutlined","ExportOutlined","Divider","faRectangleList","faDownload","marginRight","cursor","overlay","onVisibleChange","visible","DownOutlined","drawText","group","wordwrap","units","xoffset","yoffset","stroke","y","addShape","attrs","fontFamily","fill","lineWidth","draggable","registerCircleNode","defaultWidth","getApproximateWidth","G6","registerNode","draw","labelOffset","labelCfg","wrapText","cacheFn","cache","ParagraphOptimizer","paragraph","getDesiredLineLength","cacheLineLengths","cacheLineDemerits","cacheParagraphDemerits","cacheParagraphBreakpoints","optimize","optimizeParagraph","nPreviousLines","lineAdjustment","computeLineAdjustment","breakpoints","demerits","computeLineDemerits","optimalSplit","caret","Infinity","prevParagraphBreakpoints","nextParagraphBreakpoints","computeLineLength","len","computeLineElastic","stretchability","shrinkability","stretch","shrink","lineNumber","desiredLength","elastic","computeLineBadness","lastLineItem","linePenalty","cost","lineBadness","computeParagraphDemerits","getLineLength","Paragraph","lineLengths","spaceWidth","groupByLine","breaklines","lines","line","unit","lineHeight","cssLineHeight","align","autoLength","renderingUnits","reduce","desiredLens","maxLen","desiredLen","nGlues","glueWidth","abs","renderingUnit","renderedWidth","renderedUnit","measureFn","hyphenateFn","separable","penaltyCost","chunks","split","w","re","RegExp","flatMap","match","hyphenWidth","isSpace","word","test","charAt","g","flagged","c","hyphen","WordWrap","fontCfg","layoutCfg","measureCtx","circleLayout","hypher","font","desiredLineLengths","getUnitsFromText","measureText","hyphenate","wrapTextCircle","maxRadius","acceptableError","radius","findRadius","getLayout","deltaX","deltaY","nWords","canvas","document","createElement","getContext","Hypher","enUsPatterns","CircleLayout","getCssFont","container","getComputedStyle","fontStyle","fontVariant","lineBreak","radius2layout","textLength","lowerbound","ceil","l","totalLength","computeHalfNumberOfLines","linesY","computeCentralLineLength","centralLine","floor","sqrt","G6Graph","hotswapProps","isEqual","enableActivateRelations","fitCenter","setDataAndRender","render","updateLayout","updateContainerSize","center","resetMatrix","bbox","getCanvasBBox","graphHeight","graphWidth","clientWidth","extraHeight","viewportOffset","getBoundingClientRect","documentScrollY","scrollY","documentElement","clientHeight","offsetHeight","initHeight","changeSize","moveTo","leftOffset","topOffset","untilLayoutStable","maxTries","delay","significantChange","prevBBox","nextBBox","wp","paddingWidth","hp","paddingHeight","setState","_cfg","model","states","labelStyles","registerRectNode","modes","resetSelected","Graph","scrollWidth","preventOverlap","linkDistance","nodeSpacing","defaultEdge","endArrow","Arrow","triangle","background","default","edit","nodeStateStyles","active","inactive","edgeStateStyles","onNodeClick","on","onEdgeClick","newNodes","trim","labelStyle","uniq","newEdges","uv","hasParallelEdges","pair","Util","processParallelEdges","hide","position","toolbar","left","GraphLayout","Force","Dagre","rankdir","nodesep","ranksep","GraphComponent","forwardRef","renderingAdjustedHeight","layouts","useImperativeHandle","transformData","toolbarElement","GraphToolbar","autoHide","isHover","setIsHover","setLayout","onMouseEnter","onMouseLeave","centerGraph","changeLayout","FullscreenOutlined","LayoutOutlined","graphContainer","selectedDraft","SemanticModelComponent","getNodeLabel","InlineEntityComponent","nolink","useEntityProperties","pid","qualifiers","qid","doesNotExist","FetchEntityComponent","renderLoading","renderNotFound","forceWaiting","InlinePropertyComponent","property","showId","CollapsibleComponent","setVisible","toggleVisible","btn","EyeInvisibleOutlined","EyeOutlined","collapsible","ValueComponent","timezone","before","after","precision","calendarmodel","time","lowerBound","upperBound","amount","language","globe","latitude","longitude","StatementComponent","marginLeft","id2prop","qval","italic","valueIndex","PropertyComponent","propDivider","filteredProps","components","strong","PropertyFilterComponent","enable","setEnable","addFilteredProp","removeFilteredProp","PageEntityComponent","minWidth","settings","lang2value","lang","aliases","lang2values","openPageEntityComponent","PopoverEntityComponent","treeNode","levelMarker","TypeTreeFilter","types","treeData","setTreeData","p2cs","parentTypeId","rootIds","child","addTypes","visited","treeNodes","rootId","travel2constructTreeNodes","placement","indeterminate","hasAnyOp","hasAllOp","toggleAllType","setSelectNil","selectNil","userSelect","setSelectUnlinked","selectUnlinked","setIncludeCandidateEntities","TreeNode","unknown","depth","comp","indent","dangerouslySetInnerHTML","__html","type2op","setTypeOp","outputs","stack","pop","PropTreeFilter","TableColumnFilter","tab","setTypes","includeNil","includeUnlinked","defaultActiveKey","TabPane","fractionDigits","toFixed","CheckboxIcon","checkboxIcon","selected","colorSelected","colorUnselected","grey","stateSelected","setStateSelected","correctSelected","AutoHideTooltip","ms","trigger","correctCandidateEntity","candidateEntity","candidateEntitySeeMore","CandidateEntityListComponent","topK","showAllCandidateModals","setShowAllCandidateModals","singleUpdate","select","selectMultiple","candidateLst","faCheck","faCheckDouble","findIndex","faPlus","score","textDecoration","noEntityLink","CellComponent","cell","linksurface","infix","ColumnFilter","hasChange","getFilterExec","entStore","includeTypeIds","excludeTypeIds","hasFilter","canEnt","some","typeId","TableFilter","nColumns","columnFilters","setOnChange","handleChange","filterExecs","results","res","matches","TableComponent","showRowIndex","col","filterDropdown","filterIcon","SearchOutlined","TableInformation","contextHierarchy","hierarchy","heading","repeat","ContentComponent","comps","TableNavBar","PREFETCH_LIMIT","queryParams","b64query","tableQueryConditions","decodeWhereQuery","hasPrev","hasNext","allLeft","allRight","isSubscribed","sortedIndex","gtr","ltr","newState","move","nextTableId","toPreviousTable","toNextTable","navState","useTableNavigation","onBack","navigator","clipboard","writeText","TablePage","hasFetchSemanticModel","setHasFetchSemanticModel","hasByTable","useSemanticModel","allrows","None","projects","_routes","applyFn","ignoredRoutes","applyLayout","element","src","logo","alt","ProjectOutlined","CloudUploadOutlined","SettingOutlined","ReactDOM","Provider","getElementById"],"mappings":"yOAAIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAKzDO,EAAb,WACI,aAAc,oBACVC,KAAKC,OAAS,UACdD,KAAKE,gBAAkB,IAAIC,IAC3BC,YAAeJ,KAAM,CACjBC,OAAQI,IACRf,MAAOgB,MANnB,uCASI,WACI,OAAON,KAAKC,QAVpB,IAYI,SAAUM,GACFP,KAAKE,gBAAgBM,IAAID,KAG7BP,KAAKC,OAASM,OAhBtB,KAmBaE,EAAb,WASI,WAAYC,EAAWC,EAAYC,EAASC,GAAS,+BACjDb,KAAKc,MAAQ,IAAIf,EAEjBC,KAAKe,QAAU,IAAIC,IAEnBhB,KAAKY,SAAU,EACfZ,KAAKa,QAAU,GAIfb,KAAKiB,MAAQC,YAAI,UAAC,WAAWC,GAAX,oFAGK,OAHL,SAEVnB,KAAKc,MAAMxB,MAAQ,WAFT,SAGWU,KAAKmB,MAAMA,GAHtB,OAGJxB,EAHI,qBAIWA,EAAOoB,SAJlB,IAIV,2BAAWK,EAA0B,QACjCpB,KAAKe,QAAQM,IAAID,EAAOE,GAAIF,GAC5BpB,KAAKuB,MAAMH,GANL,0BAAAI,IAAA,OAQVxB,KAAKc,MAAMxB,MAAQ,UACnBK,EAAOoB,QAAUpB,EAAOoB,QAAQU,KAAI,SAACL,GAAD,OAAY,EAAKL,QAAQW,IAAIN,EAAOE,OAT9D,kBAUH3B,GAVG,wCAaVK,KAAKc,MAAMxB,MAAQ,QAbT,+DAoBlBU,KAAK2B,YAAc,SAACC,GAAD,OAAU/C,EAAU,OAAM,OAAQ,EAAf,UAAuB,oFAG9C,OAH8C,kBAGxCgD,IAAMH,IAAN,UAAa1B,KAAKU,WAAa,CACxCoB,OAAQ,CACJC,EAAGH,KAL0C,OAGrDI,EAHqD,iGAYlD,CACHjB,QAASiB,EAAKC,KAAKR,IAAIzB,KAAKkC,YAAYC,KAAKnC,OAC7CoC,MAAOJ,EAAKC,KAAKG,QAdoC,0DAiB7DpC,KAAKU,UAAYA,EACjBV,KAAKW,WAAaA,GAAc,GAChCX,KAAKqC,aAAeC,OAAOC,QAAQvC,KAAKW,YAAYc,KAAI,mCAAEe,EAAF,WAAkB,CAAlB,KAA0BA,MAClFxC,KAAKyC,WAAaH,OAAOI,YAAY1C,KAAKqC,mBAC1BM,IAAZ/B,IACAZ,KAAKY,QAAUA,GAEnBZ,KAAKa,QAAUA,GAAW,GAC1Bb,KAAK4C,MAAQ,IAAIC,EAAmB7C,KAAM,IAC1CI,YAAeJ,KAAM,CACjBc,MAAOT,IACPU,QAASV,IACTY,MAAO6B,IACPC,SAAUD,IACVE,UAAWF,IACXG,WAAYH,IACZzB,IAAKyB,IACLI,KAAM5C,MAzElB,8CA+EI,WACI,OAAOzB,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,8EAC3B,OAD2B,SACrBA,KAAKmB,MAAM,CAAEgC,MAAO,IADC,uCACKf,OADL,kDAhF/C,sBAqFI,SAASjB,GACL,OAAOtC,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,6FAIhB,OAJgB,SAE/BA,KAAKc,MAAMxB,MAAQ,WACnB6B,EAAMgC,MAAQ,EAHiB,SAIVnD,KAAKmB,MAAMA,GAJD,UAKD,KADxBxB,EAJyB,QAKpBoB,QAAQqC,OALY,uBAO3BC,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,aARI,uBAUpBqD,GAVoB,cAY3BvB,EAASzB,EAAOoB,QAAQ,GAZG,kBAaxBsC,aAAY,WAIf,OAHA,EAAKtC,QAAQM,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACX,EAAKN,MAAMxB,MAAQ,UACZ,EAAKyB,QAAQW,IAAIN,EAAOE,QAjBJ,sCAqB3B,KAAMgC,UAAsC,MAA1B,KAAMA,SAASC,OArBN,wBAuB3BF,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,aAxBI,uBA0BpBqD,GA1BoB,cA4B/BU,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WA7BQ,iEAtF/C,uBAgII,SAAUgC,GACN,OAAOzC,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,gGAC9BA,KAAKY,UAAWZ,KAAKQ,IAAIc,GADK,mBAGhB,QADTF,EAASpB,KAAKe,QAAQW,IAAIJ,IAFD,yCAIpBpC,QAAQC,aAAQwD,IAJI,gCAKxBzD,QAAQC,QAAQiC,IALQ,OASpB,OAToB,SAQ/BpB,KAAKc,MAAMxB,MAAQ,WARY,SASduC,IAAMH,IAAN,UAAa1B,KAAKU,UAAlB,YAA+BY,IATjB,cAS3BU,EAT2B,yBAUxBqB,aAAY,WACf,IAAIjC,EAAS,EAAKc,YAAYF,EAAKC,MAInC,OAHA,EAAKlB,QAAQM,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACX,EAAKN,MAAMxB,MAAQ,UACZ,EAAKyB,QAAQW,IAAIN,EAAOE,QAfJ,sCAmB3B,KAAMgC,UAAsC,MAA1B,KAAMA,SAASC,OAnBN,wBAqB3BF,aAAY,WACR,EAAKtC,QAAQM,IAAIC,EAAI,MACrB,EAAKR,MAAMxB,MAAQ,aAvBI,uBAyBpBqD,GAzBoB,cA2B/BU,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WA5BQ,iEAjI/C,wBA0KI,SAAWkE,GACP,OAAO3E,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,0GAC/ByD,EAAaD,EACZxD,KAAKY,QAFyB,mBAI/B6C,EAAaA,EAAWC,QAAO,SAACpC,GAAD,OAAS,EAAKd,IAAIc,MACvB,IAAtBmC,EAAWL,OALgB,gBAMrBO,EAAS,GANY,cAOVH,GAPU,IAO3B,2BAAWlC,EAAW,QAEH,QADTF,EAASpB,KAAKe,QAAQW,IAAIJ,UACEqB,IAAXvB,IACnBuC,EAAOrC,GAAMF,GAVM,0BAAAI,IAAA,yBAapBtC,QAAQC,QAAQwE,IAbI,OAkBpB,OAlBoB,SAiB/B3D,KAAKc,MAAMxB,MAAQ,WAjBY,UAkBduC,IAAM+B,KAAN,UAAc5D,KAAKU,UAAnB,gBAA4C,CACzD8C,IAAKC,IAnBsB,eAkB3BzB,EAlB2B,yBAqBxBqB,aAAY,WACf,cAAmBf,OAAOuB,OAAO7B,EAAKC,KAAK6B,OAA3C,eAAmD,CAA9C,IAAMC,EAAI,KACL3C,EAAS,EAAKc,YAAY6B,GAChC,EAAKhD,QAAQM,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GAEf,IANqB,EAMfuC,EAAS,GANM,cAOJH,GAPI,IAOrB,2BAAsB,KAAXlC,EAAW,QACZF,EAAS,EAAKL,QAAQW,IAAIJ,QACjBqB,IAAXvB,EACA,EAAKL,QAAQM,IAAIC,EAAI,MAEL,OAAXF,IACLuC,EAAOrC,GAAMF,IAbA,8BAiBrB,OADA,EAAKN,MAAMxB,MAAQ,UACZqE,MAtCoB,wCA0C/BN,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WA3CQ,iEA3K/C,mBA6NI,SAAM6B,GACF,OAAOtC,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,yGAWnC,GAVI8B,EAAS,CACTqB,MAAOhC,EAAMgC,MACba,OAAQ7C,EAAM6C,OACdC,OAAQ9C,EAAM8C,aAEGtB,IAAjBxB,EAAM+C,SACNpC,EAAOoC,OAAS/C,EAAM+C,OACjBzC,KAAI,SAAC0C,GAAD,OAAW,EAAKxD,WAAWwD,IAAUA,KACzCC,KAAK,WAEWzB,IAArBxB,EAAMkD,WACN,UAA+B/B,OAAOC,QAAQpB,EAAMkD,YAApD,eAAiE,sBAAvDF,EAAuD,KAAhDG,EAAgD,KAC7DH,EAAQnE,KAAKW,WAAWwD,IAAUA,EACT,kBAAdG,EACc,QAAjBA,EAAUC,GACVzC,EAAO,GAAD,OAAIqC,EAAJ,YAAaG,EAAUC,GAAvB,MAAgCD,EAAUhF,MAAM8E,KAAK,KAG3DtC,EAAO,GAAD,OAAIqC,EAAJ,YAAaG,EAAUC,GAAvB,MAAgCC,MAAMC,QAAQH,EAAUhF,OACxDgF,EAAUhF,MAAM8E,KAAK,KACrBE,EAAUhF,MAIpBwC,EAAO,GAAD,OAAIqC,IAAWG,EA0BtB,OAtBPE,MAAMC,QAAQtD,EAAMuD,UACpB5C,EAAO6C,UAAYxD,EAAMuD,SACpBjD,KAAI,SAACsC,GACN,IAAMI,EAAQ,EAAKxD,WAAWoD,EAAKI,QAAUJ,EAAKI,MAClD,MAAsB,QAAfJ,EAAKa,MAAkBT,EAAvB,WAAmCA,MAEzCC,KAAK,KAEqB,kBAAnBjD,EAAMuD,UACZP,EAAQnE,KAAKW,WAAWQ,EAAMuD,SAASP,QAAUhD,EAAMuD,SAASP,MACtErC,EAAO6C,UAAqC,QAAzBxD,EAAMuD,SAASE,MAAkBT,EAAjC,WAA6CA,IAGhErC,EAAO6C,UAAY3E,KAAKW,WAAWQ,EAAMuD,WAAavD,EAAMuD,cAE1C/B,IAAlBxB,EAAM0D,UACN/C,EAAOgD,SAAW3D,EAAM0D,QACnBpD,KAAI,SAAC0C,GAAD,OAAW,EAAKxD,WAAWwD,IAAUA,KACzCC,KAAK,MA/CqB,kBAmDlBvC,IAAMH,IAAN,UAAa1B,KAAKU,WAAa,CAAEoB,WAnDf,OAmD/BE,EAnD+B,qGAwD5B,CACHjB,QAASiB,EAAKC,KAAK6B,MAAMrC,IAAIzB,KAAKkC,YAAYC,KAAKnC,OACnDoC,MAAOJ,EAAKC,KAAKG,QA1Dc,4DA9N/C,iBA+RI,SAAId,GACA,OAAOtB,KAAKe,QAAQP,IAAIc,KAhShC,iBAqSI,SAAIA,GACA,OAAOtB,KAAKe,QAAQW,IAAIJ,KAtShC,iBA6SI,SAAIyD,GACA/E,KAAKe,QAAQM,IAAI0D,EAAEzD,GAAIyD,GACvB/E,KAAKuB,MAAMwD,KA/SnB,4BAoTI,sGACoB/E,KAAKe,QAAQ8C,UADjC,4DAEkB,QADHkB,EADf,yBAGY,OAHZ,SAGkBA,EAHlB,sMApTJ,gBA8TI,WACI,OAAOP,MAAMQ,KAAKhF,KAAKiF,UA/T/B,oBAoUI,SAAOC,GACH,IADO,EACHvB,EAAS,GADN,cAES3D,KAAKe,QAAQ8C,UAFtB,IAEP,2BAAuC,KAA5BsB,EAA4B,QACzB,OAANA,GAAcD,EAAGC,IACjBxB,EAAOyB,KAAKD,IAJb,8BAOP,OAAOxB,IA3Uf,qBAgVI,SAAQ0B,EAAetE,GACnB,IAD4B,EACxB4C,EAAS,GADe,cAEZ5C,GAFY,yBAEjBoE,EAFiB,QAGlB3C,EAAM6C,EAAc5D,KAAI,SAAC0C,GAAD,OAAWgB,EAAEhB,MAAQC,KAAK,UACpCzB,IAAhBgB,EAAOnB,GACPmB,EAAOnB,GAAO,CAAC2C,GAGfxB,EAAOnB,GAAK4C,KAAKD,IANzB,2BAAyB,IAFG,8BAW5B,OAAO7C,OAAOuB,OAAOF,KA3V7B,yBAgWI,SAAYvC,GACR,GAAIpB,KAAKqC,aAAae,OAAS,EAAG,qBACFpD,KAAKqC,cADH,IAC9B,2BAA+C,8BAAnCT,EAAmC,KAC3CR,EAD2C,MAC3BA,EAAOQ,UAChBR,EAAOQ,IAHY,+BAMlC,OAAOR,IAvWf,mBA4WI,SAAMA,GAAQ,oBACUpB,KAAKa,SADf,IACV,2BAAkC,KAAvBU,EAAuB,QAC9BA,EAAM+D,IAAIlE,IAFJ,iCA5WlB,8BAkXI,SAAiBmE,GACb,OAAOC,KAAKC,KAAKC,UAAUH,MAnXnC,8BAsXI,SAAiBI,GACb,OAAOF,KAAKG,MAAMC,KAAKF,QAvX/B,KA0XM9C,E,WACF,WAAYiD,EAAOC,GAAQ,oBACvB/F,KAAK8F,MAAQA,EACb9F,KAAK+F,OAASA,EACd/F,KAAKgG,SAAW,IAAI7F,IACpBH,KAAKiG,kBAAoB,IAAIjF,I,6CAEjC,SAAUM,GAAI,WAKV,OAJAtB,KAAKgG,SAASV,IAAIhE,QACIqB,IAAlB3C,KAAKkG,UACLC,aAAanG,KAAKkG,UAEf,IAAIhH,SAAQ,SAACC,EAASC,GACzB,EAAK8G,SAAWE,YAAW,WACvB,IAAMC,EAAU,EAAKC,OACrBD,EAAQE,MAAMnH,GACdiH,EAAQxG,MAAK,WAET,IAAMkF,EAAI,EAAKkB,kBAAkBvE,IAAIJ,GACrC,QAAUqB,IAANoC,EAEAA,EAAElF,MAAK,WACH,IAAMsF,EAAI,EAAKW,MAAM/E,QAAQW,IAAIJ,GACjCnC,EAAc,OAANgG,OAAaxC,EAAYwC,UAGpC,CACD,IAAMA,EAAI,EAAKW,MAAM/E,QAAQW,IAAIJ,GACjCnC,EAAc,OAANgG,OAAaxC,EAAYwC,SAG1C,EAAKY,a,wBAGhB,SAAWvC,GAAK,2BACKA,GADL,IACZ,gCAAWlC,EAAX,QACItB,KAAKgG,SAASV,IAAIhE,IAFV,8BAMZ,YAHsBqB,IAAlB3C,KAAKkG,UACLC,aAAanG,KAAKkG,UAEf,IAAIhH,SAAQ,SAACC,EAASC,GACzB,EAAK8G,SAAWE,YAAW,WACvB,IAAMC,EAAU,EAAKC,OACrBD,EAAQE,MAAMnH,GACdiH,EAAQxG,MAAK,WACT,IADe,EACT8D,EAAS,GACT6C,EAAkB,GAFT,cAGEhD,GAHF,IAGf,2BAAsB,KAAXlC,EAAW,QACZyD,EAAI,EAAKkB,kBAAkBvE,IAAIJ,GACrC,QAAUqB,IAANoC,EAEAyB,EAAgBpB,KAAK,CAACL,EAAGzD,QAExB,CACD,IAAMF,EAAS,EAAK0E,MAAM/E,QAAQW,IAAIJ,GACvB,OAAXF,QAA8BuB,IAAXvB,IACnBuC,EAAOrC,GAAMF,KAZV,8BAgBXoF,EAAgBpD,OAAS,EAEzBlE,QAAQuH,IAAID,EAAgB/E,KAAI,SAACiF,GAAD,OAAOA,EAAE,OAAK7G,MAAK,WAAM,oBAC/B2G,GAD+B,IACrD,2BAAuC,8BAAxBlF,GAAwB,WAC7BF,EAAS,EAAK0E,MAAM/E,QAAQW,IAAIJ,GACvB,OAAXF,QAA8BuB,IAAXvB,IACnBuC,EAAOrC,GAAMF,IAJgC,8BAOrDjC,EAAQwE,MAIZxE,EAAQwE,QAGjB,EAAKoC,a,kBAGhB,WAAO,WAEH/F,KAAKkG,cAAWvD,EAEhB,IAAMgE,EAAOnC,MAAMQ,KAAKhF,KAAKgG,UAAUtC,QAAO,SAACpC,GAAD,OAAS,EAAK2E,kBAAkBzF,IAAIc,MAElFtB,KAAKgG,SAAW,IAAI7F,IACpB,IAPG,EAOGkG,EAAUrG,KAAK8F,MAAM7C,WAAW0D,GAPnC,cASeA,GATf,IASH,gCAAWC,EAAX,QACI5G,KAAKiG,kBAAkB5E,IAAIuF,EAAKP,IAVjC,8BAWH,OAAOA,EAAQxG,MAAK,SAACF,GAAW,oBAEVgH,GAFU,IAE5B,gCAAWC,EAAX,QACI,EAAKX,kBAAkBY,OAAOD,IAHN,8BAI5B,OAAOjH,S,8CCtffd,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YASzDsH,EAAb,kDAQI,WAAYpG,EAAWC,EAAYC,EAASC,GAAS,kCACjD,cAAMH,EAAWC,EAAYC,EAASC,IACjCkG,aAAe,IAAI/F,IACxB,EAAKgG,aAAe,IAAIhG,IACxB,EAAKiG,iBAAmB,CAAEC,SAAKvE,EAAWwE,OAAQ,IAClD,EAAKC,kBAAoB,GACzBhH,YAAe,eAAM,CACjB2G,aAAc1G,IACd2G,aAAc3G,IACdgH,OAAQvE,IACRwE,OAAQxE,IACR+D,OAAQ/D,IACRyE,SAAUzE,IACV0E,eAAgB1E,IAChB2E,kBAAmB3E,IACnB4E,eAAgB5E,IAChB6E,kBAAmB7E,MAhB0B,EARzD,uDAiCI,SAAoB8E,GAChB5H,KAAKoH,kBAAkBhC,KAAKwC,KAlCpC,oBAuCI,SAAOC,GAA4B,IAArBC,IAAqB,yDAC/B,OAAOjJ,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,2FAGpB,OAHoB,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGduC,IAAM+B,KAAK5D,KAAKiH,iBAAiBC,KAAOlH,KAAKU,UAAWV,KAAK+H,qBAAqBF,GAAQ7H,KAAKiH,iBAAiBE,QAHlG,cAG3BnF,EAH2B,yBAIxBqB,aAAY,WACf,IAAIjC,EAAS,EAAKc,YAAYF,EAAKC,MAOnC,OANA,EAAKlB,QAAQM,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACP0G,GACA,EAAKf,aAAaF,OAAOgB,EAAMG,SAEnC,EAAKlH,MAAMxB,MAAQ,UACZ,EAAKyB,QAAQW,IAAIN,EAAOE,QAZJ,sCAgB/B+B,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WAjBQ,gEAxC/C,oBAkEI,SAAOuI,GAA4B,IAArBC,IAAqB,yDAC/B,OAAOjJ,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,2FAGpB,OAHoB,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGduC,IAAMoG,IAAN,UAAajI,KAAKU,UAAlB,YAA+BmH,EAAMvG,IAAMtB,KAAKkI,qBAAqBL,IAHvD,cAG3B7F,EAH2B,yBAIxBqB,aAAY,WACf,IAAIjC,EAASyG,EAAMM,WAAa,EAAKjG,YAAYF,EAAKC,MACtD4F,EAAMO,YAEN,IAAMC,EAAa,EAAKtH,QAAQW,IAAImG,EAAMvG,IAU1C,YATmBqB,IAAf0F,GAA2C,OAAfA,GAC5B,EAAKC,QAAQD,GAEjB,EAAKtH,QAAQM,IAAID,EAAOE,GAAIF,GAC5B,EAAKG,MAAMH,GACP0G,GAAgB,EAAKd,aAAaxG,IAAIqH,EAAMvG,KAC5C,EAAK0F,aAAaH,OAAOgB,EAAMvG,IAEnC,EAAKR,MAAMxB,MAAQ,UACZ,EAAKyB,QAAQW,IAAIN,EAAOE,QAlBJ,sCAsB/B+B,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WAvBQ,gEAnE/C,oBAmGI,SAAOgC,GACH,OAAOzC,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,uGAEpB2C,KADTvB,EAASpB,KAAKe,QAAQW,IAAIJ,IADG,6DAK/BtB,KAAKc,MAAMxB,MAAQ,WACnBU,KAAKe,QAAQ8F,OAAOvF,GACL,OAAXF,EAP2B,iBAQ3BpB,KAAKsI,QAAQlH,GARc,cASNpB,KAAKoH,mBATC,IAS3B,4BAASQ,EAAoC,SAChCxG,GAVc,0BAAAI,IAc3B,OAd2B,UAcrBK,IAAMgF,OAAN,UAAgB7G,KAAKU,UAArB,YAAkCY,IAdb,QAgB/B+B,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,aAjBQ,wDAqB/B+D,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WAtBQ,iEApG/C,sBAmII,WACI,OAAOT,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,yFAG/B,OAH+B,SAE/BA,KAAKc,MAAMxB,MAAQ,WAFY,SAGzBuC,IAAMgF,OAAN,UAAgB7G,KAAKU,YAHI,OAI/B2C,aAAY,WAAM,oBACO,EAAKtC,QAAQ8C,UADpB,IACd,2BAA4C,KAAjCzC,EAAiC,QACxC,GAAe,OAAXA,EAAiB,CACjB,EAAKkH,QAAQlH,GADI,oBAEI,EAAKgG,mBAFT,IAEjB,2BAA6C,EACzCQ,EADyC,SAChCxG,IAHI,iCAFX,8BASd,EAAKL,QAAQwH,QACb,EAAKzH,MAAMxB,MAAQ,aAdQ,sDAkB/B+D,aAAY,WACR,EAAKvC,MAAMxB,MAAQ,WAnBQ,gEApI/C,4BAgKI,SAAe0I,GACX,OAAOhI,KAAK+G,aAAarF,IAAIsG,KAjKrC,4BAmKI,SAAeH,GACX7H,KAAK+G,aAAa1F,IAAIwG,EAAMG,QAASH,KApK7C,+BAsKI,SAAkBG,GACdhI,KAAK+G,aAAaF,OAAOmB,KAvKjC,4BAyKI,SAAe1G,GACX,OAAOtB,KAAKgH,aAAatF,IAAIJ,KA1KrC,4BA4KI,SAAeuG,GACX7H,KAAKgH,aAAa3F,IAAIwG,EAAMvG,GAAIuG,KA7KxC,+BA+KI,SAAkBvG,GACdtB,KAAKgH,aAAaH,OAAOvF,KAhLjC,qBAqLI,SAAQF,GAAQ,oBACQpB,KAAKa,SADb,IACZ,2BAAkC,SACxB2H,OAAOpH,IAFL,iCArLpB,kCA6LI,SAAqBA,GACjB,OAAOpB,KAAKyI,gBAAgBrH,KA9LpC,kCAmMI,SAAqBA,GACjB,OAAOpB,KAAKyI,gBAAgBrH,KApMpC,6BA0MI,SAAgBA,GAEZ,IADA,IAAMsH,EAAM,GACZ,MAAqBpG,OAAOC,QAAQnB,GAApC,eAA6C,CAAxC,0BAAOuH,EAAP,KAAUpI,EAAV,KACGP,KAAKW,WAAWiI,eAAeD,GAC/BD,EAAI1I,KAAKW,WAAWgI,IAAMpI,EAG1BmI,EAAIC,GAAKpI,EAGjB,OAAOmI,MApNf,GAA+BjI,GAuNlBoI,EAAb,kDACI,WAAYnI,EAAWC,EAAYC,EAASC,GAAS,iCACjD,cAAMH,EAAWC,EAAYC,EAASC,GACtCT,YAAe,eAAM,CACjBiH,OAAQyB,IACRxB,OAAQwB,MAJqC,EADzD,0CAQI,SAAOjB,GAAO,WACJkB,EAASzG,OAAO+E,OAAO,KAAM,CAC/BA,OAAQ,CAAE3F,IAAK,8BAAC,yCAEpB,OAAO7C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,uGAC5B+I,EAAO1B,OAAO2B,KAAKhJ,KAAMsC,OAAO2G,OAAO,CAAEjB,QAAS,IAAMH,IAAQ,IADpC,kDAZ/C,oBAgBI,SAAOA,GAAO,WACJkB,EAASzG,OAAO+E,OAAO,KAAM,CAC/BC,OAAQ,CAAE5F,IAAK,8BAAC,yCAEpB,OAAO7C,EAAUmB,UAAM,OAAQ,EAAf,UAAuB,uGAC5B+I,EAAOzB,OAAO0B,KAAKhJ,KAAMsC,OAAO2G,OAAO,CAC1Cb,UAAW,aACXD,QAAS,cACVN,IAAQ,IAJwB,oDApB/C,GAAqCf,GCrOxBoC,G,KAAb,WACI,WAAY/E,EAAOgF,GAAS,oBACxBnJ,KAAKuB,MAAQ,IAAIP,IACjBhB,KAAKoJ,QAAUjF,EACfnE,KAAKmJ,QAAUA,GAAW,KAC1B/I,YAAeJ,KAAM,CACjBuB,MAAOlB,IACPiF,IAAKxC,IACL0F,OAAQ1F,MARpB,uCAWI,SAAI1B,GACA,IAAMoB,EAAMpB,EAAOpB,KAAKoJ,SACxBpJ,KAAKuB,MAAMF,IAAImB,EAAKpB,EAAOpB,KAAKmJ,YAbxC,oBAeI,SAAO/H,GACH,IAAMoB,EAAMpB,EAAOpB,KAAKoJ,SACxBpJ,KAAKuB,MAAMsF,OAAOrE,OAjB1B,MAuBa6G,EAAb,WACI,WAAYlF,EAAOgF,GAAS,oBACxBnJ,KAAKuB,MAAQ,IAAIP,IACjBhB,KAAKoJ,QAAUjF,EACfnE,KAAKmJ,QAAUA,GAAW,KAC1B/I,YAAeJ,KAAM,CACjBuB,MAAOlB,IACPiF,IAAKxC,IACL0F,OAAQ1F,MARpB,uCAWI,SAAI1B,GACA,IAAMoB,EAAMpB,EAAOpB,KAAKoJ,SACnBpJ,KAAKuB,MAAMf,IAAIgC,IAChBxC,KAAKuB,MAAMF,IAAImB,EAAK,IAAIrC,KAE5BH,KAAKuB,MAAMG,IAAIc,GAAK8C,IAAIlE,EAAOpB,KAAKmJ,YAhB5C,oBAkBI,SAAO/H,GACH,IAAIkI,EACE9G,EAAMpB,EAAOpB,KAAKoJ,SACO,QAA9BE,EAAKtJ,KAAKuB,MAAMG,IAAIc,UAAyB,IAAP8G,GAAyBA,EAAGzC,OAAOzF,EAAOpB,KAAKmJ,cArB9F,KAoEaI,EAAb,WACI,WAAYC,EAAUC,EAAUN,GAAS,oBACrCnJ,KAAKuB,MAAQ,IAAIP,IACjBhB,KAAKwJ,SAAWA,EAChBxJ,KAAKyJ,SAAWA,EAChBzJ,KAAKmJ,QAAUA,GAAW,KAC1B/I,YAAeJ,KAAM,CACjBuB,MAAOlB,IACPiF,IAAKxC,IACL0F,OAAQ1F,MATpB,uCAeI,SAAI1B,GACA,IAAMsI,EAAOtI,EAAOpB,KAAKwJ,UACnBG,EAAOvI,EAAOpB,KAAKyJ,UACpBzJ,KAAKuB,MAAMf,IAAIkJ,IAChB1J,KAAKuB,MAAMF,IAAIqI,EAAM,IAAI1I,KAEnBhB,KAAKuB,MAAMG,IAAIgI,GACrBrI,IAAIsI,EAAMvI,EAAOpB,KAAKmJ,YAtBlC,oBAwBI,SAAO/H,GACH,IAAMsI,EAAOtI,EAAOpB,KAAKwJ,UACnBG,EAAOvI,EAAOpB,KAAKyJ,UACrBzJ,KAAKuB,MAAMf,IAAIkJ,IACf1J,KAAKuB,MAAMG,IAAIgI,GAAM7C,OAAO8C,OA5BxC,K,wBCvEeC,cAlBA,CACXC,KAAM,CACFC,WAAY,GACZC,cAAe,EACfC,UAAW,UAEfC,SAAU,CACNC,OAAQ,iBACRC,aAAc,IAUPP,EAPU,SAAC,GAAqD,IAAnDQ,EAAmD,EAAnDA,QAAmD,IAA1CC,YAA0C,MAAnC,UAAmC,MAAxBJ,gBAAwB,SACvEK,EAAYF,EAAQP,KAIxB,OAHII,IACAK,GAAa,IAAJ,OAAQF,EAAQH,WAErBM,cAAK,MAAOjI,OAAO2G,OAAO,CAAEqB,UAAWA,GAAa,CAAEE,SAAUD,cAAKE,IAAM,CAAEC,IAAK,aAAcL,KAAMA,QAAQ,UAAY,M,kCClBzHM,EAA8C,WAAnCC,mIAAYC,mBAAkC,SAAW,M,GAExB,WAAnCD,mIAAYC,oBAC5BD,mIAAYE,qB,iCCClB,SAASC,EAAoBC,EAAS9E,GAClC+E,IAAMC,QAAQ,CACVC,MAAOH,EACPI,OAAQ,QACRC,OAAQ,UACRC,cAAe,CAAEC,QAAQ,GACzBC,WAAY,OACZC,KANU,WAONvF,GAAS,IAEbwF,SATU,WAWNxF,GAAS,MAId,IAAMyF,EAAuB,WAAbhB,EACjBiB,YAAoB,CAClBb,wBAEFc,YAAqB,CACnBd,wBAEKe,EAAb,WACI,cAAsG,QAAxFC,iBAAwF,MAA5E,GAA4E,MAAxEC,mBAAwE,MAA1D,GAA0D,EAAtDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,QAA2C,IAAlCC,aAAkC,aAAnBC,cAAmB,6BAClGpM,KAAK+L,UAAYA,EACjB/L,KAAKgM,YAAcA,EACnBhM,KAAKkM,QAAUA,EACflM,KAAKmM,MAAQA,EACbnM,KAAKoM,OAASA,EACdpM,KAAKqM,SAAW,CAAEC,KAAMJ,EAASC,QAAOC,SAAQH,aAChDjM,KAAKiM,UAAYA,EARzB,0CAiBI,SAAOM,EAASC,GACZ,IAAIF,EAAOtM,KAAKkM,QAChB,GAAgB,OAAZK,EACA,IAAK,IAAIhM,KAAKgM,EACVD,EAAOA,EAAKG,QAAL,WAAiBlM,GAAKgM,EAAQhM,IAG7C,IAAMY,EAAQ,IAAIuL,gBAAgBF,GAAWG,WAI7C,OAHIxL,EAAMiC,OAAS,IACfkJ,EAAO,GAAH,OAAMA,EAAN,YAAcnL,IAEfmL,IA5Bf,sBAiCI,SAASC,EAASC,GACd,IAAIF,EAAOtM,KAAKkM,QAChB,IAAK,IAAI3L,KAAKgM,EACVD,EAAOA,EAAKG,QAAL,WAAiBlM,GAAKgM,EAAQhM,IAEzC,IAAIY,EAAQ,IAAIuL,gBAAgBF,GAAWG,WAE3C,MAAO,CACHC,SAAUN,EACVO,OAHJ1L,EAAQA,EAAMiC,OAAS,EAAf,WAAuBjC,GAAUA,EAIrC2L,KAAM,GACNhM,WAAO6B,KA5CnB,kBAkDI,SAAK4J,EAASC,GACV,OAAO,IAAIO,EAAK/M,KAAMuM,EAASC,KAnDvC,0BAsDI,WAAe,WAELQ,EAAWC,cAEjB,OAAOC,mBAAQ,kBAAM,EAAKC,WAAWH,KAAW,CAACA,EAASJ,aA1DlE,4BA6DI,WAAiB,WAEPI,EAAWC,cAEjB,OAAOC,mBAAQ,kBAAM,EAAKE,aAAaJ,KAAW,CAACA,EAASH,WAjEpE,uBAoEI,WACI,MAAO,CAAEQ,IAAKrN,KAAKsN,eAAgBnM,MAAOnB,KAAKuN,oBArEvD,wBA2EI,SAAWP,GACP,IAAMjI,EAAIyI,YAAUR,EAASJ,SAAU5M,KAAKqM,UAC5C,OAAU,OAANtH,EACO,KAEJ/E,KAAK4F,MAAMb,EAAEjD,OAAQ9B,KAAK+L,aAhFzC,0BAsFI,SAAaiB,GACT,IAAMlL,EAAS,IAAI4K,gBAAgBM,EAASH,QACtC1L,EAAQnB,KAAK4F,MAAMtD,OAAOI,YAAYZ,EAAOS,WAAYvC,KAAKgM,aACpE,OAAc,OAAV7K,GAAkBmB,OAAOuB,OAAO1C,GAAOsM,OAAM,SAAC/G,GAAD,YAAa/D,IAAN+D,KAC7C,KAEJvF,IA5Ff,mBAqGI,SAAMuM,EAAQC,GAEV,IADA,IAAMhK,EAAS,GACf,MAA+BrB,OAAOC,QAAQoL,GAA9C,eAAuD,CAAlD,0BAAOC,EAAP,KAAaC,EAAb,KACKvO,EAAQoO,EAAOE,GACrB,OAAQC,GACJ,IAAK,SACD,QAAclL,IAAVrD,EACA,OAAO,KAGX,GADAqE,EAAOiK,GAAQE,WAAWxO,IACrByO,OAAOC,SAASrK,EAAOiK,IACxB,OAAO,KAEX,MACJ,IAAK,UACD,QAAcjL,IAAVrD,GAAiC,SAAVA,GAA8B,UAAVA,EAC3C,OAAO,KAEXqE,EAAOiK,GAAkB,SAAVtO,EACf,MACJ,IAAK,SACD,QAAcqD,IAAVrD,EACA,OAAO,KAEXqE,EAAOiK,GAAQtO,EACf,MACJ,IAAK,iBACD,QAAcqD,IAAVrD,EACA,SAGJ,GADAqE,EAAOiK,GAAQE,WAAWxO,IACrByO,OAAOC,SAASrK,EAAOiK,IACxB,OAAO,KAEX,MACJ,IAAK,kBACD,QAAcjL,IAAVrD,EACA,SAEJ,GAAc,SAAVA,GAA8B,UAAVA,EACpB,OAAO,KAEXqE,EAAOiK,GAAkB,SAAVtO,EACf,MACJ,IAAK,iBACD,QAAcqD,IAAVrD,EACA,SAEJqE,EAAOiK,GAAQtO,GAI3B,OAAOqE,MAzJf,KA+JasK,EAAb,4JACI,WACI,qEAAoB,GAAI,MAFhC,sBAII,WACI,uEAAsB,GAAI,MALlC,kBAOI,WACI,mEAAkB,GAAI,QAR9B,GAAmCnC,GActBoC,EAAb,4JACI,SAAO3B,GACH,qEAAoBA,EAAS,MAFrC,sBAII,SAASA,GACL,uEAAsBA,EAAS,MALvC,kBAOI,SAAKA,GACD,mEAAkBA,EAAS,QARnC,GAAwCT,GAiClCiB,E,WACF,WAAYb,EAASK,EAASC,GAAW,+BAIrCxM,KAAKmO,4BAA8B,SAAC1O,EAAG2O,QACzBzL,IAANlD,GACAA,EAAE4O,iBAEFD,QAAwBzL,IAANlD,IAAoBA,EAAE6O,SAAW7O,EAAE8O,UAErDxI,OAAOyI,KAAK,EAAKtC,QAAQuC,OAAO,EAAKlC,QAAS,EAAKC,WAAY,UAE/DzG,OAAO2I,SAGP/C,EAAQvG,KAAK,EAAK8G,QAAQc,SAAS,EAAKT,QAAS,EAAKC,aAG9DxM,KAAKkM,QAAUA,EACflM,KAAKuM,QAAUA,EACfvM,KAAKwM,UAAYA,E,wCAKrB,WACIb,EAAQvG,KAAKpF,KAAKkM,QAAQc,SAAShN,KAAKuM,QAASvM,KAAKwM,gB,KAMjDmC,EAAY,CACrBC,0BAA2B,0CAC3BjD,QAASA,EACTkD,sBAAuB,SAACpP,GACpBA,EAAE4O,iBACF,IAAIS,EAAOrP,EAAEsP,OAAOC,aAAa,QAC7BvP,EAAE6O,SAAW7O,EAAE8O,SAEfxI,OAAOyI,KAAKM,EAAM,UAClB/I,OAAO2I,SAGP/C,EAAQvG,KAAK0J,IAGrBG,OAAQ,kBAAMtD,EAAQsD,UACtBC,UAAW,kBAAMvD,EAAQuD,aACzBC,iBAAkB,SAACL,GACfnD,EAAQvG,KAAK0J,KAGrB/I,OAAOqJ,WAAaT,EChSpB,IAAIU,EAAkC,SAAUC,EAAG7P,GAC/C,IAAI8P,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAOhN,OAAOmN,UAAU7G,eAAeI,KAAKsG,EAAGE,IAAM/P,EAAEiQ,QAAQF,GAAK,IAC9ED,EAAEC,GAAKF,EAAEE,IACb,GAAS,MAALF,GAAqD,oBAAjChN,OAAOqN,sBACtB,KAAIC,EAAI,EAAb,IAAgBJ,EAAIlN,OAAOqN,sBAAsBL,GAAIM,EAAIJ,EAAEpM,OAAQwM,IAC3DnQ,EAAEiQ,QAAQF,EAAEI,IAAM,GAAKtN,OAAOmN,UAAUI,qBAAqB7G,KAAKsG,EAAGE,EAAEI,MACvEL,EAAEC,EAAEI,IAAMN,EAAEE,EAAEI,KAE1B,OAAOL,GASEO,EAAe,SAACC,GACzB,IAAQzD,EAAuCyD,EAAvCzD,KAAMC,EAAiCwD,EAAjCxD,QAASC,EAAwBuD,EAAxBvD,UAAWhC,EAAauF,EAAbvF,SAAoBwF,EAAYX,EAAOU,EAAO,CAAC,OAAQ,UAAW,YAAa,aAIjH,OAAQxF,cAAK,IAAKjI,OAAO2G,OAAO,CAAE6F,KAAMxC,EAAKmC,OAAOlC,EAASC,GAAYyD,QAHzD,SAACxQ,GACb6M,EAAKA,KAAKC,EAASC,GAAW2B,4BAA4B1O,KAE+BuQ,EAAW,CAAExF,SAAUA,SAAa,IASxH0F,EAAe,SAAC5G,GACzB,IAAMwF,EAAuDxF,EAAvDwF,KAAN,EAA6DxF,EAAjD8E,qBAAZ,SAAmC5D,EAA0BlB,EAA1BkB,SAAU2F,EAAgB7G,EAAhB6G,YAAoBH,EAAYX,EAAO/F,EAAI,CAAC,OAAQ,gBAAiB,WAAY,gBAW9H,YAHoB3G,IAAhBwN,IACAH,EAAUC,QARE,SAACxQ,IACRA,EAAE6O,SAAW7O,EAAE8O,UAAY4B,IAE5B1Q,EAAE4O,iBACF8B,OAMA5F,cAAK,IAAKjI,OAAO2G,OAAO,CAAE6F,KAAMA,EAAMC,OAAQX,EAAgB,cAAWzL,EAAWyN,IAAK,uBAAyBJ,EAAW,CAAExF,SAAUA,SAAa,ICtC3J,SAAS6F,EAAmBrD,EAAUsD,GACzC,cAA0BhO,OAAOC,QAAQ+N,GAAzC,eAAkD,CAA7C,0BAAK1O,EAAL,KAAW2O,EAAX,KACD,GAAqD,OAAjD/C,YAAUR,EAASJ,SAAU2D,EAAMlE,UACnC,OAAOzK,GCLnB,IAAM4O,GAAgB,IAAIvC,EAAc,CACpChC,UAAW,kBAAM,MACjBC,QAAS,MACVI,OAAO6B,4BAIKsC,GAHM,WACjB,OAAQlG,cAAKmG,IAAQ,CAAEnN,OAAQ,MAAO4H,MAAO,MAAOwF,SAAU,8CAA+CC,MAAOC,eAAMC,IAAO,CAAEtG,SAAU,CAACD,cAAKwG,IAAQzO,OAAO2G,OAAO,CAAEgH,QAAStB,EAAUM,QAAU,CAAEzE,SAAU,cAAW,GAASD,cAAKwG,IAAQzO,OAAO2G,OAAO,CAAE+H,KAAM,UAAWf,QAASO,IAAiB,CAAEhG,SAAU,cAAW,UAAY,SAAW,I,UCT9V6E,GAAkC,SAAUC,EAAG7P,GAC/C,IAAI8P,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAOhN,OAAOmN,UAAU7G,eAAeI,KAAKsG,EAAGE,IAAM/P,EAAEiQ,QAAQF,GAAK,IAC9ED,EAAEC,GAAKF,EAAEE,IACb,GAAS,MAALF,GAAqD,oBAAjChN,OAAOqN,sBACtB,KAAIC,EAAI,EAAb,IAAgBJ,EAAIlN,OAAOqN,sBAAsBL,GAAIM,EAAIJ,EAAEpM,OAAQwM,IAC3DnQ,EAAEiQ,QAAQF,EAAEI,IAAM,GAAKtN,OAAOmN,UAAUI,qBAAqB7G,KAAKsG,EAAGE,EAAEI,MACvEL,EAAEC,EAAEI,IAAMN,EAAEE,EAAEI,KAE1B,OAAOL,GAQL0B,GAAM,CACRC,aAAc,CACVC,eAAgB,SAChBC,UAAW,qBAEfC,WAAY,CACR,iBAAkB,CACdC,aAAc,kBACdC,WAAY,mBAEhB,uBAAwB,CACpBD,aAAc,kBACdC,WAAY,mBAEhB,cAAe,CACXC,OAAQ,GACRrH,aAAc,EACdsH,WAAY,GAEhBC,YAAa,GACbC,aAAc,GACdP,UAAW,sBAgBNQ,IAbehI,YAAWqH,GAAXrH,EAAgB,YAAoE,IAAjEQ,EAAiE,EAAjEA,QAASyH,EAAwD,EAAxDA,MAAOvB,EAAiD,EAAjDA,OAAQhG,EAAyC,EAAzCA,UAAWwH,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,gBAC/E/E,EAAWC,cAIXnJ,EAAQxB,OAAO0P,KAAKH,GAAOpQ,KAAI,SAACwQ,EAAW1Q,GAE7C,OAAO2Q,GAAYD,GADmB,IAApBF,GAAsC,IAAVxQ,EAAc,OAAS,GAC5BsQ,EAAMI,OAE7CE,EAAkB9B,EAAmBrD,EAAUsD,GACrD,OAAQ/F,cAAK6H,KAAM9P,OAAO2G,OAAO,CAAEoJ,KAAM,aAAc/H,UAAWF,EAAQ8G,mBACnDvO,IAAd2H,EAA0B,IAAMA,EAAY,IAAKwH,MAAOA,EAAO7B,QATvD,SAACxQ,GACd6Q,EAAO7Q,EAAE+C,KAAK8J,KAAK,GAAI,IAAIkC,QAQ4D8D,kBAAkC3P,IAApBwP,EAAgC,CAACA,QAAmBxP,GAAa,CAAE6H,SAAU1G,SAAU,MAE1K8F,YAAWqH,GAAXrH,EAAgB,YAAoE,IAAjEQ,EAAiE,EAAjEA,QAASyH,EAAwD,EAAxDA,MAAOvB,EAAiD,EAAjDA,OAAQhG,EAAyC,EAAzCA,UAAWwH,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,gBAC7E/E,EAAWC,cAIXnJ,EAAQxB,OAAO0P,KAAKH,GAAOpQ,KAAI,SAACwQ,EAAW1Q,GAE7C,OAAO2Q,GAAYD,GADmB,IAApBF,GAAsC,IAAVxQ,EAAc,OAAS,GAC5BsQ,EAAMI,OAE7CE,EAAkB9B,EAAmBrD,EAAUsD,GACrD,OAAQ/F,cAAK6H,KAAM9P,OAAO2G,OAAO,CAAEoJ,KAAM,aAAc/H,UAAWF,EAAQiH,iBAA4B1O,IAAd2H,EAA0B,IAAMA,EAAY,IAAKwH,MAAOA,EAAO7B,QARtI,SAACxQ,GACd6Q,EAAO7Q,EAAE+C,KAAK8J,KAAK,GAAI,IAAIkC,QAO2I8D,kBAAkC3P,IAApBwP,EAAgC,CAACA,QAAmBxP,GAAa,CAAE6H,SAAU1G,SAAU,OAEnR,SAASoO,GAAY1P,EAAK8H,EAAWyF,GACjC,IAAIvF,EAAU+H,EACd,GAAqB,kBAAVxC,EACPvF,EAAWuF,OAEV,GAAIyC,IAAMC,eAAe1C,GAC1BvF,EAAWuF,MAEV,CACK,IAAAzG,EAAKyG,EACXvF,EAD4ClB,EAAxBkB,SAEpB+H,EAF6DlD,GAAO/F,EAAI,CAAC,aAI7E,OAAQiB,cAAK6H,KAAKM,KAAMpQ,OAAO2G,OAAO,CAAEqB,UAAWA,GAAaiI,EAAW,CAAE/H,SAAUA,IAAahI,G,kCCzEzF,SAASmQ,GAAT,GAAsC,IAAvBC,EAAuB,EAAvBA,WAAYtC,EAAW,EAAXA,OAGtC,OAAQ/F,cAAKsI,KAAgBvQ,OAAO2G,OAAO,CAAE6J,QAAuB,IAAfF,EAAsBG,UAAWpQ,GAAa,CAAE6H,SAAUD,cAAKyI,IAAQ1Q,OAAO2G,OAAO,CAAE0C,QAASA,GAAW,CAAEnB,SAAUD,cAAK,MAAOjI,OAAO2G,OAAO,CAAEqB,UAAW,YAAc,CAAEE,SAAUqG,eAAMoC,IAAQ,CAAEzI,SAAU,CAAClI,OAAOC,QAAQ+N,GAAQ7O,KAAI,mCAAEe,EAAF,KAAO+N,EAAP,YAAmBhG,cAAK2I,IAAO5Q,OAAO2G,OAAO,GAAIsH,EAAMlE,UAAW7J,MAAQ+H,cAAK2I,IAAO,CAAEjH,UAAWwE,SAAgB,UAAY,UAAY,UAAY,UAAY,GCP1c,IAYe0C,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxT,MAAK,YAAkD,IAA/CyT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCHDO,IAHX/I,mIAAYC,mBAIuB,WAAnCD,mIAAYC,mBACPD,mIAAYE,qBACb,I,QCTO8I,GAAb,8DAESC,WAAqB,GAF9B,KAKSC,iBAAmB,IAAI3T,IALhC,KAQS4T,qBAAuB,IAAI5T,IARpC,KAWY6T,kBAAqD,GAXjE,KAYSC,gBAAkB,IAAI9T,IAZ/B,KAaY+T,gBAAkB,IAAIC,GAAwB,EAAG,GAb7D,KAgBSC,WAAa,SAACC,GACnB,OAAO,EAAKH,gBAAgBxS,IAAI2S,IAjBpC,KAqBSC,cAAgB,SAACL,GACtB,EAAKD,kBAAoBC,EACzB,EAAKA,gBAAkB,IAAI9T,IAAImC,OAAOuB,OAAOoQ,IAC7C,EAAKC,gBAAkBC,GAAgBI,YAAY,EAAKP,uBAI/CG,GAAb,WAUE,WAAYK,EAAeC,GAAc,IAAD,gCAR9BlT,MAIN,GAIoC,KAH9BiT,MAAgB,EAGc,KAF9BC,IAAc,EAEgB,KA6DxC/S,IAAM,SAACgT,GACL,IAAMlS,EAAMkS,EAAKC,UAAU,EAAKH,MAAO,EAAKC,KACtC1Q,EAAO,EAAKxC,MAAMiB,GAExB,YAAaG,IAAToB,EACKA,EAAK6Q,aAAe7Q,EAAKzE,MAAMoC,IAAIgT,GAAQ3Q,EAAKzE,WAI/BqD,IAAnB,EAAKpB,MAAM,IACb,EAAKA,MAAM,IAAIjC,WAChBqD,GAvEJ3C,KAAKwU,MAAQA,EACbxU,KAAKyU,IAAMA,EAZf,oDAeE,SAA6BI,GAE3B,IAAMC,EAAiBxS,OAAO0P,KAAK6C,GAASE,MAC1C,SAACC,EAAGC,GAAJ,OAAUA,EAAE7R,OAAS4R,EAAE5R,UAEzB,GAA8B,IAA1B0R,EAAe1R,OACjB,MAAM,IAAI8R,MAAM,iBA8ClB,OA3CW,SAALhQ,EAAMiQ,EAAoBX,GAC9B,IAAMY,EAAiBD,EAASA,EAAS/R,OAAS,GAC5C7B,EAAQ,IAAI4S,EAAmBK,EAAOY,EAAehS,QAE3D,GAAI7B,EAAMiT,QAAUjT,EAAMkT,IAAK,CAE7BlT,EAAMA,MAAM,IAAM,CAChBqT,cAAc,EACdtV,MAAOuV,EAAQO,IAGjB,IADA,IAAMC,EAAWnQ,EAAGiQ,EAASG,MAAM,GAAI,GAAI/T,EAAMkT,KACjD,MAA0BnS,OAAOC,QAAQ8S,EAAS9T,OAAlD,eAA0D,CAArD,0BAAOiB,EAAP,KAAY+S,EAAZ,KACHhU,EAAMA,MAAMiB,GAAO+S,EAErB,OAAOhU,EAGT,IAjBgD,EAiB1CiU,EAAmC,GAjBO,cAkB3BL,GAlB2B,IAkBhD,2BAA+B,CAAC,IAArBM,EAAoB,QACvBjT,EAAMiT,EAAOd,UAAUpT,EAAMiT,MAAOY,EAAehS,aACxCT,IAAb6S,EAAIhT,KACNgT,EAAIhT,GAAO,IAEbgT,EAAIhT,GAAK4C,KAAKqQ,IAvBgC,8BA0BhD,cAAiCnT,OAAOC,QAAQiT,GAAhD,eAAsD,CAAjD,0BAAOhT,EAAP,KAAYkT,EAAZ,KACwB,IAAvBA,EAAYtS,OACd7B,EAAMA,MAAMiB,GAAO,CACjBoS,cAAc,EACdtV,MAAOuV,EAAQa,EAAY,KAG7BnU,EAAMA,MAAMiB,GAAO,CACjBoS,cAAc,EAEdtV,MAAO4F,EAAGwQ,EAAanU,EAAMkT,MAInC,OAAOlT,EAGF2D,CAAG4P,EAAgB,OAnE9B,KC1Baa,GAAb,WAaE,aAAe,IAAD,gCAXPC,uBAAsC,IAAIzV,IAWnC,KARP0V,0BAAyC,IAAI1V,IAQtC,KALP8T,gBAAmD,GAK5C,KAFP6B,YAAsB,GAEf,KA4BdC,eAAiB,SAACC,GAChB,EAAKF,YAAcE,GA7BP,KAgCdC,mBAAqB,SAACC,GACpB,EAAKjC,gBAAkBiC,GAjCX,KAoCdC,yBAA2B,SAACpG,GAC1B,EAAK6F,uBAAyB7F,GArClB,KAwCdqG,4BAA8B,SAACrG,GAC7B,EAAK8F,0BAA4B9F,GAzCrB,KA4CdsG,yBAA2B,SAACzI,GAC1B,EAAKgI,uBAAuBtQ,IAAIsI,IA7CpB,KAgDd0I,4BAA8B,SAAC1I,GAC7B,EAAKiI,0BAA0BvQ,IAAIsI,IAjDvB,KAoDd2I,4BAA8B,SAAC3I,GAC7B,EAAKgI,uBAAuB/O,OAAO+G,IArDvB,KAwDd4I,+BAAiC,SAAC5I,GAChC,EAAKiI,0BAA0BhP,OAAO+G,IAzD1B,KA4Dd6I,kBAAoB,SAACpC,GAEnB,IAAK,IAAMqC,KAAM,EAAKzC,gBACpB,GAAII,EAAIsC,WAAW,EAAK1C,gBAAgByC,IACtC,OAAO,EAAKzC,gBAAgBI,IA/DhCjU,YAAeJ,KAAM,CACnB4V,uBAAwBvV,IACxBwV,0BAA2BxV,IAC3B4T,gBAAiB5T,IACjByV,YAAazV,IACb0V,eAAgBjT,IAChBmT,mBAAoBnT,IACpB8T,sBAAuBtW,IACvBuW,yBAA0BvW,IAC1B6V,yBAA0BrT,IAC1BsT,4BAA6BtT,IAC7BuT,yBAA0BvT,IAC1BwT,4BAA6BxT,IAC7ByT,4BAA6BzT,IAC7B0T,+BAAgC1T,IAChC2T,kBAAmB3T,MA7BzB,uDAiCE,WACE,OAAO0B,MAAMQ,KAAKhF,KAAK4V,0BAlC3B,oCAqCE,WACE,OAAOpR,MAAMQ,KAAKhF,KAAK6V,+BAtC3B,KCAaiB,GAAb,aAKE,aAAe,IAAD,gCAHPC,SAAmB,EAGZ,KAFPC,yBAAmC,EAE5B,KAUdC,YAAc,SAACF,GACb,EAAKA,SAAWA,GAXJ,KAcdG,0BAA4B,WAC1B,EAAKF,yBAA2B,EAAKA,yBAfzB,KAkBdG,0BAA4B,WAC1B,EAAKH,yBAA0B,GAlB/B5W,YAAeJ,KAAM,CACnB+W,SAAU1W,IACV2W,wBAAyB3W,IACzB4W,YAAanU,IACboU,0BAA2BpU,IAC3BqU,0BAA2BrU,SCPpBsU,GAAY,IAAIxD,GAEhByD,GAAb,WAIE,aAAe,yBAHRC,YAGO,OAFPC,WAEO,EACZvX,KAAKsX,OAAS,IAAI3B,GAClB3V,KAAKuX,MAAQ,IAAIT,GAEjB1W,YAAeJ,KAAM,CACnBsX,OAAQjX,IACRkX,MAAOlX,IACPmX,cAAe1U,MAXrB,yFAgBE,8BAAAkS,EAAA,sEACqBnT,IAAMH,IAAI,iBAD/B,OACQM,EADR,OAEEoV,GAAU9C,cAActS,EAAKC,KAAL,mBACxBmV,GAAUvD,WAAa7R,EAAKC,KAAL,WACvBmV,GAAUtD,iBAAmB,IAAI3T,IAC/B6B,EAAKC,KAAL,4BAEFmV,GAAUrD,qBAAuB,IAAI5T,IACnC6B,EAAKC,KAAL,4BAIIwV,EAAuBnV,OAAOuB,OAClC7B,EAAKC,KAAL,oBAEamB,OAAS,GACtBpD,KAAKsX,OAAOhB,4BAA4BmB,EAAW,IAhBvD,gDAhBF,6DCiDaC,GAAb,aAKE,WAAYC,GAAmB,IAAD,gCAHtBC,QAAqC,GAGf,KAFtBC,OAAmC,GAEb,KAY9BC,MAAQ,SAACvC,GACP,YAA6B5S,IAAzB,EAAKkV,OAAOtC,EAAKjU,KAA8C,IAAzB,EAAKuW,OAAOtC,EAAKjU,IAClDiU,EAAKuC,MAER,GAAN,OAAUvC,EAAKuC,MAAf,YAAwB,EAAKD,OAAOtC,EAAKjU,MAhBb,KAmB9ByW,UAAY,SAAC1D,EAAayD,GACxB,YAA0BnV,IAAtB,EAAKiV,QAAQvD,GACRyD,EAEH,GAAN,OAAUA,EAAV,YAAmB,EAAKF,QAAQvD,KAvBJ,KA0B9B/O,IAAM,SAACiQ,QAC0B5S,IAA3B,EAAKiV,QAAQrC,EAAKlB,OACpB,EAAKuD,QAAQrC,EAAKlB,KAAO,GAE3B,EAAKwD,OAAOtC,EAAKjU,IAAM,EAAKsW,QAAQrC,EAAKlB,KACzC,EAAKuD,QAAQrC,EAAKlB,MAAQ,GA/BE,KAkC9B2D,OAAS,SAACzC,GACR,OAAO,EAAKsC,OAAOtC,EAAKjU,KAnCI,oBACXqW,GAAS,IADE,IAC5B,2BAA8B,CAAC,IAAtBpC,EAAqB,QACN,eAAlBA,EAAK0C,gBAEsBtV,IAA3B3C,KAAK4X,QAAQrC,EAAKlB,OACpBrU,KAAK4X,QAAQrC,EAAKlB,KAAO,GAE3BrU,KAAK6X,OAAOtC,EAAKjU,IAAMtB,KAAK4X,QAAQrC,EAAKlB,KACzCrU,KAAK4X,QAAQrC,EAAKlB,MAAQ,IARA,kCAuCnB6D,GAAb,WAUE,WAAY5W,EAAYqW,EAAiBQ,GAAkB,IAAD,gCATnD7W,QASmD,OARnD8W,aAQmD,OAPnDT,WAOmD,OANnDQ,WAMmD,OALnDE,WAKmD,OAJnDC,aAAyC,GAIU,KAHnDC,iBAAsD,GAGH,KAFnDC,cAEmD,OAkC1DC,QAAU,WACR,OACuB,GAArB,EAAKN,MAAM/U,QACX,EAAKuU,MAAMlK,OAAM,SAAC8H,GAAD,MAA4B,cAAlBA,EAAK0C,aArCsB,KAyC1DS,MAAQ,WACN,IAAMtX,EAAS,EAAKuX,OACpB,OAAO,IAAIT,EAAQ,EAAK5W,GAAIF,EAAOuW,MAAOvW,EAAO+W,QA3CO,KA8C1DS,OAAS,WACP,EAAKP,OAAQ,GA/C2C,KAkD1D9C,KAAO,SAACjU,GAAD,OAAgB,EAAKqW,MAAM,EAAKW,aAAahX,KAlDM,KAmD1DuX,QAAU,SAACvX,GAAD,YAA0CqB,IAA1B,EAAK2V,aAAahX,IAnDc,KAoD1DwX,WAAa,SAACzE,GAAD,OACX,EAAKsD,MAAMjU,QACT,SAAC6R,GAAD,MAA4B,eAAlBA,EAAK0C,UAA6B1C,EAAKlB,MAAQA,MAtDH,KAwD1D0E,kBAAoB,SAACzX,GAAD,OAAgB,EAAKqW,MAAM,EAAKY,iBAAiBjX,KAxDX,KAyD1D0X,eAAiB,SAAC1X,GAAD,OACf,EAAKqW,MAAMjU,QACT,SAAC6R,GAAD,MACoB,iBAAlBA,EAAK0C,UACe,cAApB1C,EAAKjW,MAAM0R,MACXuE,EAAKjW,MAAMgC,KAAOA,KACpB,IA/DsD,KAiE1D2X,KAAO,SAACC,EAAgBnK,GAAjB,OACL,EAAKoJ,MAAMzU,QAAO,SAACjE,GAAD,OAAOA,EAAEyZ,SAAWA,GAAUzZ,EAAEsP,SAAWA,KAAQ,IAlEb,KAmE1DoK,QAAU,SAACD,EAAgBnK,GAAjB,OACR,EAAKoJ,MAAMzU,QAAO,SAACjE,GAAD,OAAOA,EAAEyZ,SAAWA,GAAUzZ,EAAEsP,SAAWA,KAC1D3L,OAAS,GArE4C,KAsE1DgW,cAAgB,SAACrK,GAAD,OACd,EAAKoJ,MAAMzU,QAAO,SAACjE,GAAD,OAAOA,EAAEsP,SAAWA,MAvEkB,KAwE1DsK,cAAgB,SAACH,GAAD,OACd,EAAKf,MAAMzU,QAAO,SAACjE,GAAD,OAAOA,EAAEyZ,SAAWA,MAzEkB,KA2E1DI,WAAa,WACX,IAAK,IAAI1J,EAAI,EAAGA,EAAwB,IAApB,EAAK+H,MAAMvU,OAAcwM,IAAK,CAChD,IAAI2J,EAAG,YAAQ3J,GACf,QAA+BjN,IAA3B,EAAK2V,aAAaiB,GACpB,OAAOA,EAGX,MAAM,IAAIrE,MAAM,kCAlFwC,KA8F1DsE,iBAAmB,SACjBC,EACAC,GAEA,IADwB,EACpBC,EAAkC,GAClCC,EAAW,EAAKP,cAAcI,GAFV,cAGJG,GAHI,IAGxB,2BAA8B,CAAC,IAAtBC,EAAqB,QAC5B,GAAIA,EAAQ9K,SAAW2K,EAAvB,CAD4B,oBAMP,EAAKL,cAAcQ,EAAQ9K,SANpB,IAM5B,2BAAyD,CAAC,IAAjD+K,EAAgD,QACnDA,EAAS/K,SAAW2K,GACtBC,EAAWvU,KAAK,CAACyU,EAASC,KARF,oCAE1BH,EAAWvU,KAAK,CAACyU,OAASlX,KALN,8BAgBxB,OAAOgX,GAjHiD,KAyH1DI,wBAA0B,SAACC,GACzB,IADqE,EACjEC,EAAU,EAAKb,cAAc,EAAKL,kBAAkBiB,GAAa1Y,IADA,cAElD2Y,GAFkD,IAErE,2BAA4B,CAAC,IAApBC,EAAmB,QAC1B,GAAI9C,GAAUtD,iBAAiBtT,IAAI0Z,EAAO7F,KAAM,CAC9C,GAAI4F,EAAQ7W,OAAS,EACnB,MAAM,IAAI8R,MACR,mEAGJ,OAAOgF,EAAOhB,SATmD,gCAzHb,KAwI1DiB,sBAAwB,SAAC7Y,GACvB,IAD2D,EACvD8Y,EAAgC,GADuB,cAEvC,EAAKf,cAAc/X,IAFoB,IAE3D,2BAA4C,CAAC,IAApCuY,EAAmC,QACtC9K,EAAS,EAAKwG,KAAKsE,EAAQ9K,QAC/B,GACsB,eAApBA,EAAOkJ,UACPb,GAAUrD,qBAAqBvT,IAAIuO,EAAOsF,KAC1C,CAAC,IAAD,gBACqB,EAAKgF,cAAcQ,EAAQ9K,SADhD,IACA,2BAAyD,CAAC,IAAjDsL,EAAgD,QACvDD,EAAShV,KAAK,CAACyU,EAASQ,KAF1B,oCAKAD,EAAShV,KAAK,CAACyU,OAASlX,KAZ+B,8BAe3D,OAAOyX,GAvJiD,KAsclDE,YAAc,SAACC,GACrB,QACgC5X,IAA9B,EAAK2V,aAAaiC,SACwB5X,IAA1C,EAAKgV,MAAM,EAAKW,aAAaiC,IAF/B,CAOA,IAAIC,EAAY,EAAKlC,aAAaiC,GAC9BhF,EAAO,EAAKoC,MAAM6C,GAEtB,KACoB,cAAlBjF,EAAK0C,UACc,iBAAlB1C,EAAK0C,UAA+B1C,EAAKkF,aAF5C,CASC,EAAK9C,MAAM6C,QAAqB7X,EAGjC,IAvBwC,EAuBpCwV,EAAQ,EAAKA,MAAMzU,QACrB,SAACuV,GAAD,OAAUA,EAAKC,SAAWqB,GAAUtB,EAAKlK,SAAWwL,KAxBd,cA0BvBpC,GA1BuB,IA0BxC,2BAAwB,CAAC,IAAhBc,EAAe,QACtB,EAAKyB,YAAYzB,EAAKC,OAAQD,EAAKlK,SA3BG,kCAtcgB,KAwelD2L,YAAc,SAACjB,EAAkBC,GAKvC,IAJA,IAAIiB,OAAYhY,EACZiY,EAAe,EACfC,EAAe,EAEVjL,EAAI,EAAGA,EAAI,EAAKuI,MAAM/U,OAAQwM,IAAK,CAC1C,IAAIqJ,EAAO,EAAKd,MAAMvI,GAClBqJ,EAAKC,SAAWO,GAAYR,EAAKlK,SAAW2K,IAC9CiB,EAAY/K,GAEVqJ,EAAKC,SAAWO,GAAYR,EAAKlK,SAAW0K,IAC9CmB,GAAgB,GAEd3B,EAAKC,SAAWQ,GAAYT,EAAKlK,SAAW2K,IAC9CmB,GAAgB,QAIFlY,IAAdgY,IAKJ,EAAKxC,MAAM2C,OAAOH,EAAW,GAIR,IAAjBC,GACF,EAAKN,YAAYb,GAEE,IAAjBoB,GACF,EAAKP,YAAYZ,KAvgBqC,KA2gBlDqB,WAAa,WACnB,EAAKzC,aAAe,GACpB,EAAKC,iBAAmB,GAExB,IAAK,IAAI3I,EAAI,EAAGA,EAAI,EAAK+H,MAAMvU,OAAQwM,IAAK,CAC1C,IAAIoL,EAAI,EAAKrD,MAAM/H,GACnB,EAAK0I,aAAa0C,EAAE1Z,IAAMsO,EACP,cAAfoL,EAAE/C,UAA8C,OAAlB+C,EAAEhB,cAClC,EAAKzB,iBAAiByC,EAAEhB,aAAepK,KAlhB3C5P,KAAKsB,GAAKA,EACVtB,KAAKoY,QAAU,EACfpY,KAAK2X,MAAQA,EACb3X,KAAKmY,MAAQA,EACbnY,KAAKqY,OAAQ,EAEbrY,KAAK+a,aACL/a,KAAKwY,SAAW,IAAId,GAAS1X,KAAK2X,OAElCvX,YAAeJ,KAAM,CACnBoY,QAAS/X,IACTsX,MAAOtX,IACP8X,MAAO9X,IACPgY,MAAOhY,IACPiY,aAAcjY,IACdkY,iBAAkBlY,IAClBmY,SAAUnY,IACV4a,sBAAuBnY,IACvBoY,iBAAkBpY,IAClBqY,mBAAoBrY,IACpBsY,aAActY,IACduY,eAAgBvY,IAChBwY,WAAYxY,IACZyY,gBAAiBzY,IACjB0Y,eAAgB1Y,IAChB2Y,kBAAmB3Y,IACnB4Y,QAAS5Y,IACT6Y,WAAY7Y,IACZ8Y,WAAY9Y,MAvClB,wCA+FE,WACE,MAAO,CACL6U,MAAOgB,YAAK3Y,KAAK2X,OACjBQ,MAAOQ,YAAK3Y,KAAKmY,OACjBG,aAAcK,YAAK3Y,KAAKsY,iBAnG9B,mCAkLE,SACEuD,EACAC,EACAC,GAEA,IAAI7C,EAASlZ,KAAK+Y,kBAAkB8C,GAChC9M,EAAS/O,KAAK+Y,kBAAkB+C,GAEhCE,EAAsBhc,KAAKoZ,cAAcF,EAAO5X,IACpD,GAAmC,IAA/B0a,EAAoB5Y,OACtB,MAAM,IAAI8R,MAAM,oDAElB,GAAmC,IAA/B8G,EAAoB5Y,OACtB,MAAM,IAAI8R,MACR,iGAIJ,IAAI+G,EAAsBjc,KAAKoZ,cAAcrK,EAAOzN,IACpD,GAAI2a,EAAoB7Y,OAAS,EAC/B,MAAM,IAAI8R,MACR,iGAIJ,IAAIgH,EAAaF,EAAoB,GAAG9C,OACpCiD,EAC6B,IAA/BF,EAAoB7Y,OAChB2L,EAAOzN,GACP2a,EAAoB,GAAG/C,OAE7BlZ,KAAK0b,QAAL,6BACKK,GADL,IAEE7C,OAAQgD,EACRnN,OAAQoN,OApNd,8BA+NE,SAAwBnC,EAAqBd,GAC3C,IAAInK,EAAS/O,KAAK+Y,kBAAkBiB,GAChCiC,EAAsBjc,KAAKoZ,cAAcrK,EAAOzN,IAEpD,GAAI2a,EAAoB7Y,OAAS,EAC/B,MAAM,IAAI8R,MACR,0FAIJ,GAAmC,IAA/B+G,EAAoB7Y,OAAc,CACpC,IAAIqW,EAAWzZ,KAAKsZ,aACpBtZ,KAAKob,aAAL,6BACKlC,GADL,IAEE5X,GAAImY,KAGNzZ,KAAK0b,QAAQ,CACXxC,OAAQO,EACR1K,OAAQA,EAAOzN,GACf+S,IAAK,6CACLyD,MAAO,aACPsE,eAAe,QAEZ,CACL,IAAInD,EAAOgD,EAAoB,GAC/Bjc,KAAKub,gBAAgBtC,EAAKC,OAAQA,GACjB,+CAAbD,EAAK5E,KAEPrU,KAAK4b,WAAW3C,EAAKC,OAAQD,EAAKlK,OAAQ,CACxCsF,IAAK,6CACLyD,MAAO,aACPsE,cAAenD,EAAKmD,mBA/P9B,gCAiRE,SACE3C,EACAC,EACA2C,EACAC,GAKA,IAAI3C,EAAa3Z,KAAKwZ,iBAAiBC,EAAUC,GAEjD,GAA0B,IAAtBC,EAAWvW,OAAf,CAsCA,GAAIuW,EAAWvW,OAAS,EACtB,MAAM,IAAI8R,MACR,iFAIJ,kBAAqByE,EAAW,GAAhC,GAAK4C,EAAL,KAAYC,EAAZ,KACAxc,KAAK4b,WAAWW,EAAMrD,OAAQqD,EAAMxN,OAAQ,CAC1CsF,IAAKgI,EAAMhI,IACXyD,MAAOuE,EAAMvE,MACbsE,eAAe,SAEHzZ,IAAV6Z,GAEFxc,KAAK4b,WAAWY,EAAMtD,OAAQsD,EAAMzN,OAAQ,CAC1CsF,IAAKiI,EAAMjI,IACXyD,MAAOwE,EAAMxE,MACbsE,eAAe,SArDjB,GAAIC,EAAMhI,MAAQiI,EAAMjI,IAEtBrU,KAAK0b,QAAQ,CACXxC,OAAQO,EACR1K,OAAQ2K,EACRrF,IAAKgI,EAAMhI,IACXyD,MAAOuE,EAAMvE,MACbsE,eAAe,QAEZ,CACL,IAAIK,EAASzc,KAAKsZ,aAClBtZ,KAAKob,aAAa,CAChB9Z,GAAImb,EACJpI,IAAK,sCACLyD,MAAO,qBACPsE,eAAe,EACfnE,SAAU,eAEZjY,KAAK0b,QAAQ,CACXxC,OAAQO,EACR1K,OAAQ0N,EACRpI,IAAKgI,EAAMhI,IACXyD,MAAOuE,EAAMvE,MACbsE,eAAe,IAEjBpc,KAAK0b,QAAQ,CACXxC,OAAQuD,EACR1N,OAAQ2K,EACRrF,IAAKiI,EAAMjI,IACXyD,MAAOwE,EAAMxE,MACbsE,eAAe,OA5TzB,0BA2VE,SAAoB7G,GAClB,QAAmC5S,IAA/B3C,KAAKsY,aAAa/C,EAAKjU,IACzB,MAAM,IAAI4T,MAAM,iBAElBlV,KAAKsY,aAAa/C,EAAKjU,IAAMtB,KAAK2X,MAAMvU,OACxCpD,KAAK2X,MAAMvS,KAAKmQ,GAChBvV,KAAKwY,SAASlT,IAAIiQ,GAClBvV,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IAnWjB,4BAyWE,SAAsB9C,GACpB,QAAmC5S,IAA/B3C,KAAKsY,aAAa/C,EAAKjU,IACzB,MAAM,IAAI4T,MAAM,iBAElBlV,KAAKsY,aAAa/C,EAAKjU,IAAMtB,KAAK2X,MAAMvU,OACxCpD,KAAK2X,MAAMvS,KAAKmQ,GAChBvV,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IAhXjB,wBAmXE,SAAkBkC,GAChBva,KAAKsa,YAAYC,GACjBva,KAAK2X,MAAQ3X,KAAK2X,MAAMjU,QAAO,SAACsX,GAAD,YAAarY,IAANqY,KACtChb,KAAK+a,aACL/a,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,EACbrY,KAAKwY,SAAW,IAAId,GAAS1X,KAAK2X,SAzXtC,6BA4XE,SAAuB4C,EAAgBxK,GACrC,IAAIyK,EAAYxa,KAAKsY,aAAaiC,GAC9BhF,EAAOvV,KAAK2X,MAAM6C,GAEtB,GAAsB,eAAlBjF,EAAK0C,SACP,MAAM,IAAI/C,MAAJ,yDAC8CK,EAAK0C,WAG3D3V,OAAO2G,OAAOsM,EAAMxF,GACpB/P,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,OACK1V,IAAdoN,EAAMsE,MACRrU,KAAKwY,SAAW,IAAId,GAAS1X,KAAK2X,UAzYxC,+BA6YE,SAAyB4C,EAAgBxK,GACvC,IAAIyK,EAAYxa,KAAKsY,aAAaiC,GAC9BhF,EAAOvV,KAAK2X,MAAM6C,GAEtB,GAAsB,iBAAlBjF,EAAK0C,SACP,MAAM,IAAI/C,MAAJ,2DACgDK,EAAK0C,WAG7D3V,OAAO2G,OAAOsM,EAAMxF,GACpB/P,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IAxZjB,4BA2ZE,SAAsBkC,EAAgBxK,GACpC,IAAIyK,EAAYxa,KAAKsY,aAAaiC,GAC9BhF,EAAOvV,KAAK2X,MAAM6C,GAEtB,GAAsB,cAAlBjF,EAAK0C,SACP,MAAM,IAAI/C,MAAJ,wDAC6CK,EAAK0C,WAG1D3V,OAAO2G,OAAOsM,EAAMxF,GACpB/P,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IAtajB,qBAyaE,SAAeY,GACb,GAAIjZ,KAAKmZ,QAAQF,EAAKC,OAAQD,EAAKlK,QACjC,MAAM,IAAImG,MAAM,oDAGlBlV,KAAKmY,MAAM/S,KAAK6T,GAChBjZ,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IAhbjB,wBAmbE,SAAkBoB,EAAkBC,GAClC,IAAIrP,EAAOrK,KAAK2X,MAAMvU,OACtBpD,KAAK0a,YAAYjB,EAAUC,GAC3B1Z,KAAK2X,MAAQ3X,KAAK2X,MAAMjU,QAAO,SAACsX,GAAD,YAAarY,IAANqY,KAElChb,KAAK2X,MAAMvU,SAAWiH,IACxBrK,KAAK+a,aACL/a,KAAKwY,SAAW,IAAId,GAAS1X,KAAK2X,QAEpC3X,KAAKoY,SAAW,EAChBpY,KAAKqY,OAAQ,IA7bjB,wBAgcE,SAAkBa,EAAgBnK,EAAgBgB,GAChD,IAAK,IAAIH,EAAI,EAAGA,EAAI5P,KAAKmY,MAAM/U,OAAQwM,IAAK,CAC1C,IAAIqJ,EAAOjZ,KAAKmY,MAAMvI,GAClBqJ,EAAKC,SAAWA,GAAUD,EAAKlK,SAAWA,IAC5C/O,KAAKmY,MAAMvI,GAAX,6BAAqB5P,KAAKmY,MAAMvI,IAAOG,IAG3C/P,KAAKoY,SAAWpY,KAAKoY,SAAW,GAAK,EACrCpY,KAAKqY,OAAQ,MAxcjB,KC1FaqE,GAAb,WAUE,WACEpb,EACAM,EACA+a,EACAvE,EACAwE,EACArF,GACC,yBAdHjW,QAcE,OAbFM,UAaE,OAZF+a,iBAYE,OAXFvE,aAWE,OAVFwE,WAUE,OATFrF,WASE,EACAvX,KAAKsB,GAAKA,EACVtB,KAAK4B,KAAOA,EACZ5B,KAAK2c,YAAcA,EACnB3c,KAAKoY,QAAUA,EACfpY,KAAK4c,MAAQA,EACb5c,KAAKuX,MAAQA,EAvBjB,6CAgCE,WACEvX,KAAK4c,MAAMhE,WAjCf,qBAoCE,WACE,OAAO5Y,SArCX,KAAa0c,GA0BJG,QAAU,SACfC,GAEA,YAA8Cna,IAAtCma,EAA0B9U,SAY/B,IAAM+U,GAAb,kDAME,WACE/U,EACApG,EACA+a,EACAvE,EACAwE,EACArF,GACC,IAAD,8BACA,eAAO,EAAG3V,EAAM+a,EAAavE,EAASwE,EAAOrF,IAV/CvP,aASE,EAEA,EAAKA,QAAUA,EAFf,EAbJ,qEAqBE,SACE1G,EACAM,EACA2V,GAEqB,IADrBoF,EACoB,uDADN,GAERC,EAAQ,IAAI1E,GAChB5W,EACAiW,EAAMyF,QAAQvb,KAAI,SAACwb,EAAQ1b,GAAT,MAAoB,CACpCD,GAAG,OAAD,OAASC,GACXuW,MAAOmF,EACPjD,YAAazY,EACb0W,SAAU,gBAEZ,IAGF,OADA2E,EAAMvE,OAAQ,EACP,IAAI0E,EAAmBzb,EAAIM,EAAM+a,EAAa,EAAGC,EAAOrF,EAAMjW,QAtCzE,GACUob,IAyCGQ,GAAb,kDAME,aAAe,IAAD,8BACZ,wBAASvJ,GAAT,2BAAqChR,GAAW,EAAO,CACrD,IAAI0G,EAAe,YASvB8T,oBAAsB,SAAC5F,GAErB,IADA,IAAI3H,EAAI,IACK,CACX,IAAMtO,EAAE,gBAAYsO,EAAZ,YAAiB2H,EAAMjW,IAC/B,QAAgCqB,IAA5B,EAAKya,eAAe9b,GACtB,OAAOA,EAETsO,MAlBU,EANhB,4CAYE,WACE,OAAO5P,KAAKa,QAAQ,KAbxB,qCA6BE,SAAwB0W,GACtB,IAD4C,EACtC8F,EAAMrd,KAAKsd,YAAY/F,EAAMjW,IAC7Bic,EAASvd,KAAKwd,uBAAuBjG,GAEvCkG,GAAO,EAJiC,cAK3BJ,EAAIK,OAAOH,IALgB,IAK5C,2BAAqC,CAAC,IAA3BT,EAA0B,QAC7B/X,EAAI,WAAWuB,KAAKwW,EAAGlb,MACnB,OAANmD,IACA4Y,SAAS5Y,EAAE,KAAO0Y,IACpBA,EAAMG,KAAKC,IAAIJ,EAAKE,SAAS5Y,EAAE,QATS,8BAY5C,MAAM,MAAN,OAAa0Y,EAAM,KAzCvB,oCA6CE,SAAuBlG,GACrB,IADyD,EACnDgG,EAAS,GAD0C,cAErCvd,KAAK+G,aAAalD,UAFmB,IAEzD,2BAAgD,CAAC,IAAtCgE,EAAqC,QAC1CA,EAAM0P,OAASA,EAAMjW,IACvBic,EAAOnY,KAAKyC,IAJyC,8BAOzD,OAAO0V,IApDX,yBA0DE,SAAmBO,GAAmC,IAAD,OACnD,OAAOtZ,MAAMQ,KAAKhF,KAAK+d,WAAWxc,MAAMG,IAAIoc,IAAY,IAAIrc,KAC1D,SAACH,GAAD,OAAQ,EAAKP,QAAQW,IAAIJ,QA5D/B,qBAmEE,SAAkBF,GAA8B,IAAD,gBACzBpB,KAAKa,SADoB,IAC7C,2BAAkC,SAC1B2H,OAAOpH,IAF8B,iCAnEjD,wBA0EE,SAAkB0c,GAChB,OAAO9d,KAAK+d,WAAWxc,MAAMf,IAAIsd,KA3ErC,yBA8EE,SAAmB1c,GACjB,IAAMuW,EAAkBvW,EAAOa,KAAK0V,MAAMlW,KAAI,SAAC8T,GAC7C,IAAMvE,EAAmBuE,EAAKvE,KAU9B,cATOuE,EAAKvE,KACZuE,EAAK0C,SAAWjH,EACH,cAATA,GACFuE,EAAKyE,YAAczE,EAAKyI,oBACjBzI,EAAKyI,cACM,iBAAThN,IACTuE,EAAKkF,YAAclF,EAAK0I,qBACjB1I,EAAK0I,eAEP1I,KAEH4C,EAAkB/W,EAAOa,KAAKkW,MAEhCyE,EAAQ,IAAI1E,GAAQ9W,EAAOE,GAAGqL,WAAYgL,EAAOQ,GACrD,OAAO,IAAIuE,GACTtb,EAAOE,GACPF,EAAOQ,KACPR,EAAOub,YACPvb,EAAOgX,QACPwE,EACAxb,EAAOmW,SArGb,kCAyGE,SAA4BnW,GAE1B,OADAA,EAAOgX,SAAW,EACX,CACLb,MAAOnW,EAAOmW,MACd3V,KAAMR,EAAOQ,KACb+a,YAAavb,EAAOub,YACpBvE,QAAShX,EAAOgX,QAChBnW,KAAM,CACJ0V,MAAOvW,EAAOwb,MAAMjF,MAAMlW,KAAI,SAAC8T,GAC7B,OAAQA,EAAK0C,UACX,IAAK,aACH,MAAO,CACL3W,GAAIiU,EAAKjU,GACT+S,IAAKkB,EAAKlB,IACV+H,cAAe7G,EAAK6G,cACpBtE,MAAOvC,EAAKuC,MACZ9G,KAAMuE,EAAK0C,UAEf,IAAK,YACH,MAAO,CACL3W,GAAIiU,EAAKjU,GACTwW,MAAOvC,EAAKuC,MACZkG,aAAczI,EAAKyE,YACnBhJ,KAAMuE,EAAK0C,UAEf,IAAK,eACH,MAAO,CACL3W,GAAIiU,EAAKjU,GACThC,MAAOiW,EAAKjW,MACZwY,MAAOvC,EAAKuC,MACZmG,cAAe1I,EAAKkF,YACpBzJ,KAAMuE,EAAK0C,cAInBE,MAAO/W,EAAOwb,MAAMzE,MAAM1W,KAAI,SAACwX,GAC7B,MAAO,CACLC,OAAQD,EAAKC,OACbnK,OAAQkK,EAAKlK,OACbsF,IAAK4E,EAAK5E,IACV+H,cAAenD,EAAKmD,cACpBtE,MAAOmB,EAAKnB,cAlJxB,kCAyJE,SAA4B1W,GAC1B,OAAOpB,KAAKkI,qBAAqB9G,OA1JrC,GAAwC0F,GCzE3BoX,GAAb,kDAQE,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,IAAD,8BACA,wBAAS7K,GAAT,uBAAiChR,GAAW,EAAO,KAf3C8b,YAcR,IAbQC,UAaR,IAZQL,aAYR,IAXQG,iBAWR,IAVQF,gBAUR,IATQC,eASR,IAqBFI,QAAsDzd,YAAI,UAAC,WAEzDqW,GAFyD,2FAKjB,OALiB,SAKX1V,IAAMH,IAAN,UACzC1B,KAAKU,UADoC,oBACf6W,EAAMjW,IACnC,CACEQ,OAAQ,CAAE8c,UAAW,UARgC,OAKnD5c,EALmD,OAanD6c,EAAQ7c,EAAKC,KAAK6c,KAAKhC,GACvBiC,EAAU/c,EAAKC,KAAK6c,KAAKJ,KAEzBM,EAAUhf,KAAKqe,QAAQlB,oBAAoB5F,GAC3CqF,EAAQ5c,KAAKqe,QAAQnc,YAAY,CACrCD,KAAM4c,EACNvd,GAAI,KACHsb,MAIuB,KADpBqC,EAAajf,KAAKqe,QAAQb,uBAAuBjG,IACxCnU,QAAgB6b,EAAW,GAAGrC,MAAMnE,WACjDzY,KAAKqe,QAAQ5W,kBAAkBwX,EAAW,GAAGjX,SAGzCpG,EAAO5B,KAAKqe,QAAQa,wBAAwB3H,GAClDvX,KAAKqe,QAAQ7W,eACX,IAAIuV,GAAmBiC,EAASpd,EAAM,GAAI,EAAGgb,EAAOrF,EAAMjW,KAGtDod,EAAOK,EAAQtd,IAAIzB,KAAK0e,KAAKxc,aAjCsB,cAkCvCwc,GAlCuC,IAkCzD,2BAAWS,EAAa,QACtBnf,KAAK0e,KAAKrd,IAAI8d,GAnCyC,0BAAA3d,IAAA,2EAlBzD,EAAKid,OAASN,EACd,EAAKO,KAAON,EACZ,EAAKC,QAAUA,EACf,EAAKC,WAAaA,EAClB,EAAKC,UAAYA,EACjB,EAAKC,YAAcA,EAEnBpe,YAAe,eAAM,CACnBue,QAAS7b,IACTsc,eAAgBtc,IAChBuc,oBAAqBvc,IACrBwc,qBAAsBxc,MAdxB,EAfJ,0FA+EE,WACEyU,EACAyC,EACAuF,GAHF,6EAAAvK,EAAA,sEAKqBhV,KAAK0e,KAAKc,aAAajI,EAAO,EAAGA,EAAMlN,MAL5D,OAKQqU,EALR,OAQQe,EAAS,IAAItf,IARrB,cASoBue,GATpB,IASE,2BAAwB,CAAbS,EAAa,sBACHA,EAAIO,MAAM1F,IAAgB,IADvB,IACtB,2BAQE,QANoBrX,KAFXgd,EAAsC,SAExCC,UACLD,EAAKC,WAAaxI,GAAUvD,YAE5B4L,EAAOna,IAAIqa,EAAKC,UAGdL,EAA0B,CAAC,EAAD,YACJI,EAAKE,mBADD,IAC5B,2BAAWC,EAAqC,QAC9CL,EAAOna,IAAIwa,EAAUF,UAFK,gCATV,gCAT1B,8CA0BqB5f,KAAKwe,YAAYvb,WAAWuB,MAAMQ,KAAKya,IA1B5D,OA0BQM,EA1BR,OA6BQC,EAAW,IAAI7f,IA7BvB,MA8BoBmC,OAAOuB,OAAOkc,GA9BlC,6CA8BaE,EA9Bb,UAiCyBtd,KAFfud,EAAiB9I,GAAUhD,WAAW6L,EAAI5L,YAGX1R,IAAnCsd,EAAIE,WAAWD,GAlCrB,sEAuCuBD,EAAIE,WAAWD,IAvCtC,IAuCI,2BAC0B,cADfE,EAAwC,SACxC9gB,MAAM0R,OACPqP,EAAUD,EAAK9gB,MAAMA,MAC3B0gB,EAAS1a,IAAI+a,IA1CrB,mFA+CwBrgB,KAAKse,WAAWrb,WAAWuB,MAAMQ,KAAKgb,IA/C9D,QA+CQ5V,EA/CR,OAkDQiT,EAAMrd,KAAKqe,QACdf,YAAY/F,EAAMjW,IAClBoc,OAAO1d,KAAKqe,QAAQb,uBAAuBjG,IACxC+I,EAA8B,IAAIngB,IArD1C,cAsDmBkd,GAtDnB,IAsDE,2BAAWP,EAAW,aAEJna,KADV0d,EAAUvD,EAAGF,MAAM7C,wBAAwBC,KAGzB,gBADhBzE,EAAOuH,EAAGF,MAAMrH,KAAK8K,IAClBpI,UACPqI,EAAehb,IAAIiQ,EAAKlB,KA3DhC,wDA+D4BnV,QAAQuH,IAChCjC,MAAMQ,KAAKsb,GAAgB7e,IACzBzB,KAAKse,WAAWiC,oBAAoBpe,KAAKnC,KAAKse,cAjEpD,wGAoEkB3b,KALL6d,EA/Db,iEAqEIpW,EAAQoW,EAAMlf,IAAMkf,EArExB,0KAwESpW,GAxET,iEA/EF,oIA6JE,WACEmN,EACAyC,EACAuF,GAHF,+FAAAvK,EAAA,sEAKqBhV,KAAK0e,KAAKc,aAAajI,EAAO,EAAGA,EAAMlN,MAL5D,OAKQqU,EALR,OAQQe,EAAS,IAAItf,IARrB,cASoBue,GATpB,IASE,2BAAwB,CAAbS,EAAa,sBACHA,EAAIO,MAAM1F,IAAgB,IADvB,IACtB,2BAQE,QANoBrX,KAFXgd,EAAsC,SAExCC,UACLD,EAAKC,WAAaxI,GAAUvD,YAE5B4L,EAAOna,IAAIqa,EAAKC,UAGdL,EAA0B,CAAC,EAAD,YACJI,EAAKE,mBADD,IAC5B,2BAAWC,EAAqC,QAC9CL,EAAOna,IAAIwa,EAAUF,UAFK,gCATV,gCAT1B,8CA0BqB5f,KAAKwe,YAAYvb,WAAWuB,MAAMQ,KAAKya,IA1B5D,OA8BE,IAJMM,EA1BR,OA6BQU,EAAU,IAAItgB,IACpB,MAAkBmC,OAAOuB,OAAOkc,GAAhC,eACE,IADSE,EAA4B,KACrC,MAA8B3d,OAAOC,QAAQ0d,EAAIE,YAAjD,eAA8D,CAAC,EAAD,oBAAlDO,EAAkD,KAA1CC,EAA0C,KAC5DF,EAAQnb,IAAIob,GADgD,cAGzCC,GAHyC,IAG5D,2BAA0B,CAAfP,EAAe,sBACHA,EAAKQ,iBADF,IACxB,2BAAWC,EAAgC,QACzCJ,EAAQnb,IAAIub,GAFU,gCAHkC,+BA/BlE,iBA0CsB7gB,KAAKue,UAAUtb,WAAWuB,MAAMQ,KAAKyb,IA1C3D,QA0CQ1Q,EA1CR,OA6CQsN,EAAMrd,KAAKqe,QACdf,YAAY/F,EAAMjW,IAClBoc,OAAO1d,KAAKqe,QAAQb,uBAAuBjG,IACxC+I,EAA8B,IAAIngB,IAhD1C,cAiDmBkd,GAjDnB,IAiDE,2BAEE,GAFSP,EAAW,aAEJna,KADV0d,EAAUvD,EAAGF,MAAM7C,wBAAwBC,KAGzB,gBADhBzE,EAAOuH,EAAGF,MAAMrH,KAAK8K,IAClBpI,SAA2B,CAAC,EAAD,YACf6E,EAAGF,MAAMvD,cAAc9D,EAAKjU,KADb,IAClC,2BAAW2X,EAAyC,QAClDqH,EAAehb,IAAI2T,EAAK5E,KAFQ,gCArD1C,wDA4D2BnV,QAAQuH,IAC/BjC,MAAMQ,KAAKsb,GAAgB7e,IACzBzB,KAAKue,UAAUgC,oBAAoBpe,KAAKnC,KAAKue,aA9DnD,wGAiEiB5b,KALJiL,EA5Db,iEAkEImC,EAAMnC,EAAKtM,IAAMsM,EAlErB,0KAqESmC,GArET,iEA7JF,qIAyOE,WACEwH,EACAyC,GAFF,6DAAAhF,EAAA,sDAIQpO,EAAM/E,IAAM+B,KAAN,UAAc5D,KAAKU,UAAnB,iBAA6C,CACvD6W,MAAOA,EAAMjW,GACb2b,OAAQjD,IAGJqD,EAAMrd,KAAKqe,QACdf,YAAY/F,EAAMjW,IAClBoc,OAAO1d,KAAKqe,QAAQb,uBAAuBjG,IACxC+I,EAA8B,IAAIngB,IAZ1C,cAcmBkd,GAdnB,IAcE,2BAAWP,EAAW,aAEJna,KADV0d,EAAUvD,EAAGF,MAAM7C,wBAAwBC,KAGzB,gBADhBzE,EAAOuH,EAAGF,MAAMrH,KAAK8K,IAClBpI,UACPqI,EAAehb,IAAIiQ,EAAKlB,KAnBhC,8CAwBgEzN,EAxBhE,cAwBQ5E,EAxBR,OAyBQ8e,EAAOxe,OAAOI,YAClBJ,OAAOC,QAAQP,EAAKC,MAAMR,KAAI,SAACnC,GAAD,MAAW,CAACA,EAAM,GAAI,IAAIa,IAAIb,EAAM,SA1BtE,KA8B0BgD,OA9B1B,UA+BUtC,KAAKse,WAAWrb,WAAWX,OAAO0P,KAAK8O,IA/BjD,2BA8BQC,EA9BR,KA8BiCld,OA9BjC,qBAiCkBvB,OAjClB,UAmCYpD,QAAQuH,IACZjC,MAAMQ,KAAKsb,GAAgB7e,IACzBzB,KAAKse,WAAWiC,oBAAoBpe,KAAKnC,KAAKse,cArCxD,QA6CE,IA7CF,YAyCO5a,QAAO,SAAC8c,GAAD,YAAqB7d,IAAV6d,KAClB/e,KAAI,SAAC+e,GAAD,MAAW,CAACA,EAAOlf,GAAIkf,MAT1BpW,EAjCR,KAiCyB1H,YAjCzB,gBA6CE,MAAoBJ,OAAOuB,OAAOuG,GAAlC,eACE,GADSoW,EAAiC,UACnB7d,IAAnBme,EAAKN,EAAMlf,IAAmB,CAChCwf,EAAKN,EAAMlf,IAAM,IAAInB,IADW,cAEXqgB,EAAMQ,SAFK,IAEhC,2BAAWC,EAAyB,aACbte,IAAjBme,EAAKG,IACPH,EAAKG,GAAQ3b,IAAIkb,EAAMlf,IAJK,+BAYpC,UAAoByf,EAApB,eAAqC,CAA1BP,EAA0B,mBACdA,EAAMQ,SADQ,IACnC,2BAAWC,EAAyB,aACVte,IAApByH,EAAQ6W,IACVH,EAAKG,GAAQ3b,IAAIkb,EAAMlf,IAHQ,+BA1DvC,yBAkESwf,GAlET,iDAzOF,8DAAsCrgB,GCfzBygB,GAAb,kDACE,aAAe,iDACJvN,GADG,sBACoBhR,GAAW,GAF/C,+CAKE,SAAmBvB,GACjBA,EAAO+f,cAAgB/f,EAAOggB,sBACvBhgB,EAAOggB,eACd,cAAoB9e,OAAOuB,OAAOzC,EAAO+e,YAAzC,eAAsD,CAAjD,IAAiD,EAA3CQ,EAAK,KAAsC,cACnCA,GADmC,IACpD,2BAAiC,CAAC,IAAzBP,EAAwB,QAC/BA,EAAKQ,gBAAkBR,EAAKiB,wBACrBjB,EAAKiB,kBAHsC,+BAMtD,OAAOjgB,MAdX,GAAiCX,GCYpB6gB,GAAb,kDAGE,aAAe,IAAD,8BACZ,wBACK3N,GADL,gBAEE,CAAEwN,cAAe,iBAAkBI,eAAgB,oBACnD,EACA,CAAC,IAAIrY,EAAqB,UAPvBsY,iBAAmB,IAAIrhB,IAEhB,EAkBdshB,cAAgB,SAACpN,GACf,IAAM/S,EAAK,EAAKogB,SAASngB,MAAMG,IAAI2S,GACnC,YAAc1R,IAAPrB,EAAmB,EAAKI,IAAIJ,QAAOqB,GAZ1CvC,YAAe,eAAM,CACnBohB,iBAAkBnhB,IAClBkgB,oBAAqBzd,MAVX,EAHhB,0CAiBE,WACE,OAAO9C,KAAKa,QAAQ,KAlBxB,yEAgCE,WAA0BwT,GAA1B,wBAAAW,EAAA,0DACMhV,KAAKwhB,iBAAiBhhB,IAAI6T,GADhC,8CAEW1R,GAFX,eAMaA,KADLrB,EAAKtB,KAAK0hB,SAASngB,MAAMG,IAAI2S,IALrC,gCAO4CrU,KAAK+C,SAAS,CACpDsB,WAAY,CAAEgQ,SARpB,mBAUmB1R,KAHTvB,EAPV,SAWMiC,aAAY,WACV,EAAKme,iBAAiBlc,IAAI+O,MAZlC,kBAeWjT,GAfX,gCAiBSpB,KAAK0B,IAAIJ,IAjBlB,iDAhCF,gFAoDE,SAAmBF,GAGjB,OAFAA,EAAM,mEAAqBA,IACpBmgB,eAAiB,IAAIphB,IAAIiB,EAAOmgB,gBAChCngB,MAvDX,GAAgCX,GCJnBkhB,GAAb,kDAGE,aAAe,IAAD,8BACZ,wBACKhO,GADL,mBAEE,CAAEwN,cAAe,mBACjB,EACA,CAAC,IAAIjY,EAAqB,UAPvBsY,iBAAmB,IAAIrhB,IAEhB,EAkBdyhB,iBAAmB,SAACvN,GAClB,IAAM/S,EAAK,EAAKogB,SAASngB,MAAMG,IAAI2S,GACnC,YAAc1R,IAAPrB,EAAmB,EAAKI,IAAIJ,QAAOqB,GAZ1CvC,YAAe,eAAM,CACnBohB,iBAAkBnhB,IAClBkgB,oBAAqBzd,MAVX,EAHhB,0CAiBE,WACE,OAAO9C,KAAKa,QAAQ,KAlBxB,yEA+BE,WAA0BwT,GAA1B,wBAAAW,EAAA,0DACMhV,KAAKwhB,iBAAiBhhB,IAAI6T,GADhC,8CAEW1R,GAFX,eAMaA,KADLrB,EAAKtB,KAAK0hB,SAASngB,MAAMG,IAAI2S,IALrC,gCAO+CrU,KAAK+C,SAAS,CACvDsB,WAAY,CAAEgQ,SARpB,mBAUmB1R,KAHTvB,EAPV,SAWMiC,aAAY,WACV,EAAKme,iBAAiBlc,IAAI+O,MAZlC,kBAeWjT,GAfX,gCAiBSpB,KAAK0B,IAAIJ,IAjBlB,iDA/BF,4DAAmCb,GCLtBohB,GAAb,aAOE,WAAmBvgB,EAAYM,EAAc+a,GAAsB,yBANnErb,QAMkE,OAJlEM,UAIkE,OAFlE+a,iBAEkE,EAChE3c,KAAKsB,GAAKA,EACVtB,KAAK4B,KAAOA,EACZ5B,KAAK2c,YAAcA,EAEnBvc,YAAeJ,KAAM,CACnBsB,GAAIjB,IACJuB,KAAMvB,IACNsc,YAAatc,SAKNyhB,GAAb,+JAYE,cAZF,qBAcE,WACE,OAAO,IAAID,GAAQ7hB,KAAKsB,GAAItB,KAAK4B,KAAM5B,KAAK2c,gBAfhD,0BAIE,SAAmBoF,GACjB,OAAO,IAAID,EACTC,EAAQzgB,GACRygB,EAAQngB,KACRmgB,EAAQpF,iBARd,GACUkF,IAkBGG,GAAb,kDAGE,WAAYha,GAAkB,IAAD,8BAC3B,cAAM,EAAG,GAAI,KAHRA,aAEsB,EAE3B,EAAKA,QAAUA,EAFY,EAH/B,uBAAwC6Z,ICpC3BI,GAAb,kDAME,aAAe,IAAD,8BACZ,wBAAStO,GAAT,qBAA+BhR,GAAW,IAMrCuf,YAPO,wCAOO,WACnBC,EACAC,EACAC,EACAC,GAJmB,iBAAAtN,EAAA,6DAMbuN,EAAO,IAAIC,UACZC,OAAO,OAAQL,QAEFzf,IAAd0f,GACFE,EAAKE,OAAO,cAAehd,KAAKC,UAAU,CAAE0c,KAAMC,UAG7B1f,IAAnB2f,GACFC,EAAKE,OAAO,kBAAmBhd,KAAKC,UAAU4c,IAd7B,SAiBAzgB,IAAM+B,KAAN,UACd+P,GADc,wBACQwO,EADR,WAEjBI,EACA,CACEG,QAAS,CACP,eAAgB,yBAtBH,eA2BM/f,KAVnBX,EAjBa,QA2BVC,KAAKwc,OA3BK,yCA2BwBzc,EAAKC,KAAKwc,OAAO,IA3BzC,gCA4BZzc,EAAKC,KAAK0gB,WA5BE,4CAPP,8DANhB,+CA4CE,SAAmBvhB,GACjB,OAAO,IAAIygB,GAAQzgB,EAAOE,GAAIF,EAAOQ,KAAMR,EAAOub,eA7CtD,kCAgDE,SAA4Bvb,GAC1B,MAAO,CACLE,GAAIF,EAAOE,GACXM,KAAMR,EAAOQ,KACb+a,YAAavb,EAAOub,eApD1B,kCAwDE,SAA4Bvb,GAC1B,MAAO,CAAEQ,KAAMR,EAAOQ,KAAM+a,YAAavb,EAAOub,iBAzDpD,GAAkC7V,GCCrB8b,GAAoB,CAAC,MAAO,QCMlC,SAASC,GAAY9e,GAC1B,YAAsCpB,IAA9BoB,EAAmB+e,OCRtB,IAAMC,GAAb,kDACE,aAAe,IAAD,8BACZ,wBAASpP,GAAT,sBAAgChR,GAAW,EAAO,CAChD,IAAI4G,EAAoB,QAAS,YA2BrCyZ,gBAAkB9hB,YAAI,UAAC,WAErBie,EACAnF,EACA4F,EACAqD,GALqB,gFAQA,kBADf3jB,EAAQ6f,EAAIA,IAAInF,IAPD,sBASb,IAAI9E,MAAJ,oCAAsC5V,EAAtC,mBATa,eAcQqD,IAA3Bwc,EAAIO,MAAM1F,IACwB,IAAlCmF,EAAIO,MAAM1F,GAAa5W,OAfJ,wBAiBFT,IAAbid,EAjBe,iDAuBnBT,EAAIO,MAAM1F,GAAe,CACvB,CACExF,MAAO,EACPC,IAAKnV,EAAM8D,OACXiK,SAAK1K,EACLid,SAAUA,EACVC,kBAAmB,KA7BJ,OAsCnB,GALFV,EAAIO,MAAM1F,GAAa,GAAG4F,SAAWA,EAjChB,SAqCb9d,EAAS,CAAE4d,MAAOP,EAAIO,MAAM1F,GAAavY,IAAIzB,KAAKkjB,iBACnDD,EAAyB,CAAC,EAAD,YACTnhB,EAAO4d,OADE,IAC5B,kCAAiC,QACVyD,mBAFK,+BAO9B,OADAnjB,KAAKc,MAAMxB,MAAQ,WA5CA,UA6CbuC,IAAMoG,IAAN,UACDjI,KAAKU,UADJ,YACiBye,EAAI7d,GADrB,kBACiC0Y,GACrClY,GA/CiB,QAiDnB9B,KAAKc,MAAMxB,MAAQ,UAjDA,wDAmDnBU,KAAKc,MAAMxB,MAAQ,QAnDA,+DA7BT,EA+Fd8jB,kBAAoBliB,YAAI,UAAC,WAEvBqW,EACAyC,EACAtF,EACAkL,GALuB,yFASXjd,KADNlB,EAAMzB,KAAK+d,WAAWxc,MAAMG,IAAI6V,EAAMjW,KARrB,+BAUQG,GAVR,0FAUF4hB,EAVE,MAWblE,EAAMnf,KAAKe,QAAQW,IAAI2hB,IACrBlE,IAAInF,KAAiBtF,EAZV,gEAiBU/R,IAA3Bwc,EAAIO,MAAM1F,IACwB,IAAlCmF,EAAIO,MAAM1F,GAAa5W,OAlBN,yBAoBAT,IAAbid,EApBa,wDA0BjBT,EAAIO,MAAM1F,GAAe,CACvB,CACExF,MAAO,EACPC,IAAKC,EAAKtR,OACViK,SAAK1K,EACLid,SAAUA,EACVC,kBAAmB,KAhCN,QAoCnBV,EAAIO,MAAM1F,GAAa,GAAG4F,SAAWA,EApClB,sHAAApe,IAAA,qBA2CrB,OA3CqB,UA0CrBxB,KAAKc,MAAMxB,MAAQ,WA1CE,UA2CfuC,IAAMoG,IAAN,UAAajI,KAAKU,UAAlB,wBAAmD,CACvD6W,MAAOA,EAAMjW,GACb2b,OAAQjD,EACRtF,KAAMA,EACN4O,eAAwB3gB,IAAbid,EAAyB,KAAOA,IA/CxB,QAiDrB5f,KAAKc,MAAMxB,MAAQ,UAjDE,yDAmDrBU,KAAKc,MAAMxB,MAAQ,QAnDE,6EA/FX,EA+JdkgB,aAIsCte,YAAI,UAAC,WAEzCqW,EACA/C,EACA+O,GAJyC,sFAOrChM,EAAMlN,KAAOmK,EAAQ+O,IACvBA,EAAKhM,EAAMlN,KAAOmK,GAGhBgP,GAAe,OAEP7gB,KADNlB,EAAMzB,KAAK+d,WAAWxc,MAAMG,IAAI6V,EAAMjW,KAZH,gBAcD,OAdC,SAcKtB,KAAKiB,MAAM,CACrDkC,MAAOogB,EACPvf,OAAQwQ,EACRnQ,WAAY,CAAEkT,MAAOA,EAAMjW,MAjBU,cAcjC3B,EAdiC,yBAmBhCA,EAAOoB,SAnByB,OAsBnC4C,EAAS,GACNiM,EAAI,EAvB4B,aAuBzBA,EAAI2T,GAvBqB,yBAyBzB5gB,KADR0gB,EAAQ5hB,EAAIC,IAAIkO,EAAI4E,IAxBa,wBA0BrCgP,GAAe,EA1BsB,6BA6BvC7f,EAAOyB,KAAKpF,KAAKe,QAAQW,IAAI2hB,IA7BU,QAuBjBzT,IAvBiB,4BAgCrC4T,EAhCqC,0CAgChB7f,GAhCgB,QAiCH,OAjCG,UAiCG3D,KAAKiB,MAAM,CACrDkC,MAAOogB,EACPvf,OAAQwQ,EACRnQ,WAAY,CAAEkT,MAAOA,EAAMjW,MApCY,eAiCnC3B,EAjCmC,yBAsClCA,EAAOoB,SAtC2B,iDAnK7B,EAmPJmiB,cAAgB,SAACvD,GACzB,MAAO,CACLnL,MAAOmL,EAAKnL,MACZC,IAAKkL,EAAKlL,IACVpH,IAAKsS,EAAKtS,KAAO,KACjBiW,UAAW3D,EAAKC,UAAY,KAC5BuD,mBAAoBxD,EAAKE,kBAAkBpe,KAAI,SAACgiB,GAAD,MAAa,CAC1DH,UAAWG,EAAO7D,SAClB8D,YAAaD,EAAOC,kBAtPxBtjB,YAAe,eAAM,CACnBof,aAAc1c,IACdkgB,gBAAiBlgB,IACjBsgB,kBAAmBtgB,MART,EADhB,4CAaE,WACE,OAAO9C,KAAKa,QAAQ,KAdxB,mBA6ME,SAAgBO,GACdpB,KAAK+d,WAAWzY,IAAIlE,KA9MxB,yBAiNE,SAAmBA,GAmBjB,OAlBAkB,OAAOuB,OAAOzC,EAAOse,OAAOiE,SAAQ,SAACjE,GACnCA,EAAMiE,SAAQ,SAAChE,GACU,OAAnBA,EAAK2D,YACP3D,EAAKC,SAAWD,EAAK2D,WAGN,OAAb3D,EAAKtS,YACAsS,EAAKtS,IAEdsS,EAAKwD,mBAAmBQ,SAAQ,SAACC,GAC/BA,EAAGhE,SAAWgE,EAAGN,iBACVM,EAAGN,aAEZ3D,EAAKE,kBAAoBF,EAAKwD,0BACvBxD,EAAK2D,iBACL3D,EAAKwD,yBAGT/hB,IApOX,6BAuOE,SAA0BA,GAAkD,IAAD,OACzE,MAAO,CACLmW,MAAOnW,EAAOmW,MACdhW,MAAOH,EAAOG,MACd4d,IAAK3a,MAAMQ,KAAK5D,EAAO+d,KACvBO,MAAOpd,OAAOI,YACZJ,OAAOC,QAAQnB,EAAOse,OAAOje,KAAI,YAA2B,IAAD,mBACzD,MAAO,CADkD,UAC9BA,IAAI,EAAKyhB,yBA9O9C,GAAmCra,GCK7BsV,GAAa,ICbnB,kDACE,aAAe,IAAD,8BACZ,wBAASxK,GAAT,mBAA6BhR,GAAW,EAAO,CAC7C,IAAI0G,EAAe,cAevBwa,cAAgB,SAAC1B,EAAmB3N,EAAgB+O,GAClD,OAAO/e,MAAMQ,KAAK,EAAK8e,aAAaviB,MAAMG,IAAIygB,IAAc,IAAI1gB,KAC9D,SAACH,GAAD,OAAQ,EAAKP,QAAQW,IAAIJ,OAnBf,EADhB,8CAOE,WACE,OAAOtB,KAAKa,QAAQ,KARxB,yBAwBE,SAAmBO,GAqCjB,OApCAA,EAAO2iB,YAAc3iB,EAAO4iB,aACD,OAAvB5iB,EAAO2iB,kBAA+CphB,IAAvBvB,EAAO2iB,cACxC3iB,EAAO2iB,YAAc,IAGW,OAA9B3iB,EAAO2iB,YAAYzM,SACrBlW,EAAO2iB,YAAYnE,SAAWxe,EAAO2iB,YAAYzM,cAC1ClW,EAAO2iB,YAAYzM,QAG5BlW,EAAO6iB,cAAgB7iB,EAAO8iB,oBACFvhB,IAAxBvB,EAAO+iB,eACT/iB,EAAOgjB,YAAchjB,EAAO+iB,aAAa1iB,KAAI,SAACsC,GAiB5C,OAhBAA,EAAKsgB,cAAgBtgB,EAAKugB,eAAe7iB,KAAI,SAACiF,GAK5C,YAJkB/D,IAAd+D,EAAE6d,UACJ7d,EAAEoc,OAASpc,EAAE6d,eACN7d,EAAE6d,SAEJ7d,KAET3C,EAAKygB,aAAezgB,EAAK0gB,cAAchjB,KAAI,SAACiF,GAK1C,YAJkB/D,IAAd+D,EAAE6d,UACJ7d,EAAEoc,OAASpc,EAAE6d,eACN7d,EAAE6d,SAEJ7d,YAEF3C,EAAKugB,sBACLvgB,EAAK0gB,cACL1gB,YAEF3C,EAAO+iB,qBAET/iB,EAAO+iB,oBACP/iB,EAAO8iB,sBACP9iB,EAAO4iB,aACP5iB,IA7DX,mBAgEE,SAAgBA,GACdpB,KAAK8jB,aAAaxe,IAAIlE,OAjE1B,GAAgCyH,IDc1B6b,GAAqB,IAAIxH,GACzBkB,GAAgB,IAAI2E,GACpBzE,GAAa,IAAIgD,GACjBqD,GAAgB,IAAIhD,GACpBnD,GAAc,IAAI0C,GAEX0D,GAAS,CACpBC,aAAc,IAAI5C,GAClB9D,cACAC,iBACAsG,sBACAlG,eACAmG,iBACArG,cACAwG,iBAAkB,IAAI5G,GACpBC,GACAC,GACAsG,GACApG,GACAqG,GACAnG,IAEFuG,WAAY,IAAI1N,IEzBdtR,OAAOif,iBAAiB,sBAAsB,SAACC,IACT,IAA9BA,EAAMC,OAAOC,eACbna,IAAQoa,MAAM,uCAAwC,IACtDC,QAAQD,MAAMH,EAAMC,YF2B/Bnf,OAAeuf,QAAUV,GAQnB,IAAMW,GAAeC,wBAAsBZ,IAE3C,SAASa,KACd,OAAOjT,IAAMkT,WAAWH,I,0FG/CbI,GAAiB/b,YAFf,GAEeA,CAC5Bgc,cAAS,YAA4C,EAAzCxb,QAA0C,IAC5Cya,EAAiBY,KAAjBZ,aACR,EAAegB,KAAKC,UAAbvD,EAAP,oBACA,EAA4CwD,mBAAS,CACnDnkB,KAAM,GACN2B,OAAQ,YAFV,mBAAOyiB,EAAP,KAAuBC,EAAvB,KAoBA,OACE,mCACE,eAAC,KAAD,CACEC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpB5D,KAAMA,EACN8D,SArBS,WACb,IAAMtE,EAAU,IAAIC,GAAmB,IACvCD,EAAQngB,KAAO2gB,EAAK+D,cAAc,QAClCvE,EAAQpF,YAAc4F,EAAK+D,cAAc,eAEzCzB,EACGxd,OAAO0a,GACPliB,MAAK,WACJoL,IAAMsb,gBAEPhgB,OAAM,WACL0f,EAAkB,CAAErkB,KAAMmgB,EAAQngB,KAAM2B,OAAQ,cAMlD,UAME,cAAC,KAAKmP,KAAN,CACE9Q,KAAK,OACLkW,MAAM,OACN0O,MAAO,CACL,CACEC,UAAU,IAGdC,eACEV,EAAepkB,OAAS2gB,EAAK+D,cAAc,SACjB,UAA1BN,EAAeziB,OACX,aACAZ,EAZR,SAeE,cAAC,KAAD,MAEF,cAAC,KAAK+P,KAAN,CACE9Q,KAAK,cACLkW,MAAM,cACN0O,MAAO,CAAC,CAAEC,UAAU,IAHtB,SAKE,cAAC,KAAD,MAEF,cAAC,KAAK/T,KAAN,CACE0T,WAAY,CACVD,KAAM,GACNniB,OAAQ,GAHZ,SAME,cAAC,IAAD,CAAQgN,KAAK,UAAU2V,SAAS,SAAhC,+BC/CNC,GAAc,CAClBC,KAAI,GACJC,KAAQ,GACRC,KAAK,GACLC,KAAK,GACLC,KAAO,GACPC,KAAO,GACPC,KAAK,GACLC,KAAM,GACNC,KAAK,GACLC,KAAS,GACTC,KAAO,GACPC,KAAQ,IAGGC,GAAW7B,cAAS,WAC/B,IAAQf,EAAiBY,KAAjBZ,aAMR,OAJA6C,qBAAU,WACR7C,EAAa5jB,MAAM,CAAEkC,MAAO,IAAKa,OAAQ,MACxC,CAAC6gB,IAGF,eAAC,IAAM8C,SAAP,WACE,eAAC,KAAD,CAAKC,OAAQ,GAAb,UACE,cAAC,KAAD,CAAKtd,UAAU,aAAa6b,KAAM,GAAlC,SACE,cAAC,KAAW0B,MAAZ,CAAkBC,MAAO,EAAzB,wBAEF,cAAC,KAAD,CAAKxd,UAAU,aAAa6b,KAAM,EAAlC,SACE,cAAC,IAAD,CACErU,MAAO,CAAEiW,MAAO,SAChB/W,KAAK,UACLf,QAAS,kBDyBa,SAAC+X,GACjC,IAAMC,EAAU,cAACtC,GAAD,IAEhB1a,IAAMid,KAAK,CACT/c,MACE,sBAAM2G,MAAO,CAAEqW,aAAc,GAAIC,QAAS,gBAA1C,yBAIFH,UACAI,UAAW,CAAEC,QAAS,GACtBhd,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,EACNR,OAAQA,EACRS,MAAO,qBACP3W,MAAO,CAAE4W,IAAK,MCzCSC,IAHjB,8BASJ,cAAC,KAAD,CAAKf,OAAQ,GAAb,SACE,cAAC,KAAD,CAAKtd,UAAU,aAAa6b,KAAM,GAAlC,SACE,cAAC,KAAD,CACE9b,KAAK,QACLJ,UAAU,EACV2e,WAAW,aACXC,WAAYhE,EAAa3hB,KACzB4lB,WAAY,SAAC/G,EAASnS,GAAV,OACV,cAAC,KAAK8C,KAAN,UACE,cAAC,KAAKA,KAAKqW,KAAX,CACEC,OACE,cAAC,KAAD,CACEC,MAAM,SACN5e,KAAK,QACLyH,MAAO,CACLL,UAAW,EACXyX,gBACEtC,GACE7E,EAAQngB,KAAKunB,WAAW,GAAKvC,GAAYxjB,SAPjD,SAWG2e,EAAQngB,KAAK,GAAGwnB,gBAGrBje,MACE,cAAC,EAAD,CACEmB,KAAMgE,GAAOyR,QACbxV,QAAS,CAAE4V,UAAWJ,EAAQzgB,IAC9BkL,UAAW,GAHb,SAKGuV,EAAQngB,OAGb+a,YAAaoF,EAAQpF,6B,mDCtF1B0M,GAAoBzf,YAFlB,GAEkBA,CAC/Bgc,cACE,YAGyD,IAFvD7D,EAEsD,EAFtDA,QAGQ8C,GAD8C,EADtDza,QAEyBqb,KAAjBZ,cACR,EAAegB,KAAKC,UAAbvD,EAAP,oBACA,EAA4CwD,mBAAS,CACnDnkB,KAAM,GACN2B,OAAQ,YAFV,mBAAOyiB,EAAP,KAAuBC,EAAvB,KA8BA,OACE,mCACE,eAAC,KAAD,CACEC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpB5D,KAAMA,EACN8D,SA/BS,WACb,IAAMxe,EAAQia,GAAmBwH,YAAYvH,GAC7Cla,EAAMjG,KAAO2gB,EAAK+D,cAAc,QAChCze,EAAM8U,YAAc4F,EAAK+D,cAAc,eACvCzB,EACGvd,OAAOO,GACPhI,MAAK,WACJoL,IAAMsb,gBAEPhgB,OAAM,WACL0f,EAAkB,CAAErkB,KAAMiG,EAAMjG,KAAM2B,OAAQ,cAiBhD,UAME,cAAC,KAAKmP,KAAN,CACE9Q,KAAK,OACLkW,MAAM,OACN0O,MAAO,CACL,CACEC,UAAU,IAGd8C,aAAcxH,EAAQngB,KACtB8kB,eACEV,EAAepkB,OAAS2gB,EAAK+D,cAAc,SACjB,UAA1BN,EAAeziB,OACX,aACAZ,EAbR,SAgBE,cAAC,KAAD,MAEF,cAAC,KAAK+P,KAAN,CACE9Q,KAAK,cACLkW,MAAM,cACN0O,MAAO,CAAC,CAAEC,UAAU,IACpB8C,aAAcxH,EAAQpF,YAJxB,SAME,cAAC,KAAD,MAEF,cAAC,KAAKjK,KAAN,CACE0T,WAAY,CACVD,KAAM,GACNniB,OAAQ,GAHZ,SAME,eAAC,IAAD,CAAO8N,MAAO,CAAE2W,MAAO,QAAvB,UACE,cAAC,IAAD,CAAQzX,KAAK,UAAU2V,SAAS,SAAhC,oBAGA,cAAC,IAAD,CAAQ3V,KAAK,UAAUzF,QAAQ,EAAM0E,QAvD9B,WACf4U,EACGhe,OAAOkb,EAAQzgB,IACfzB,MAAK,WACJoL,IAAMsb,gBAEP1mB,MAAK,WACJyQ,GAAOkZ,KAAKld,OAAOkC,WAgDf,kC,wCCxFHib,GAAgB,SAAC,GAMxB,EALJC,IAKK,IAJLnH,EAII,EAJJA,KAKA,OACE,qCACE,cAAC,KAAK7P,KAAN,CACE9Q,KAAK,YACLkW,MAAM,YACN0O,MAAO,CAAC,CAAEC,UAAU,IAHtB,SAKE,cAAC,KAAD,CACEkD,SAAU,SAAClqB,GACT8iB,EAAKqH,eAAe,CAClBC,UAAWpqB,EAAEsP,OAAOzP,MACjBmN,QAAQ,MAAO,MACfA,QAAQ,MAAO,SAGtBqF,MAAO,CAAE2W,MAAO,QAGpB,cAAC,KAAK/V,KAAN,CACE9Q,KAAK,sBACLkW,MAAM,sBACN0O,MAAO,CAAC,CAAEC,UAAU,IACpBqD,cAAc,UAJhB,SAME,cAAC,KAAD,UAMKC,GAAkB,SAACF,GAC9B,OAAQA,GACN,IAAK,KACH,MAAO,MACT,IAAK,KACH,MAAO,MACT,QACE,OAAOA,IAIAG,GAAiB,SAACja,GAC7B,IACIka,EADJ,EAAepE,KAAKC,UAAbvD,EAAP,oBASA,OALE0H,EAD8B,QAA5Bla,EAAMma,WAAWC,OACD,cAAC,GAAD,CAAeT,IAAK3Z,EAAMma,WAAY3H,KAAMA,IAE5C,KAIlB,eAAC,KAAD,CACE6H,OAAO,SACPC,cAAa,6BACRta,EAAMma,YADE,IAEXL,UAC8B,QAA5B9Z,EAAMma,WAAWC,OACbJ,GAAgBha,EAAMma,WAAWL,gBACjClnB,IAPV,UAUE,cAAC,KAAK+P,KAAN,CAAW9Q,KAAK,SAASkW,MAAM,YAAY0O,MAAO,CAAC,CAAEC,UAAU,IAA/D,SACE,cAAC,KAAD,CACEkD,SAAU,SAACrqB,GACTijB,EAAKqH,eAAe,CAAEO,OAAQ7qB,KAFlC,SAKGsjB,GAAQnhB,KAAI,SAACnC,GAAD,OACX,cAAC,KAAOgrB,OAAR,CAA2BhrB,MAAOA,EAAlC,SACGA,GADiBA,UAMzB2qB,EACD,cAAC,KAAKvX,KAAN,UACE,cAAC,IAAD,CAAQ1B,KAAK,UAAU2V,SAAS,SAAhC,0BClEK4D,GAAoB3gB,YAjBlB,CACb2N,MAAO,CACL,4BAA6B,CAC3BrN,OAAQ,iBACRC,aAAc,EACdqgB,WAAY,6BAEd,sBAAuB,CACrB9Y,YAAa,EACbC,aAAc,GAEhB,OAAQ,CACN8Y,WAAY,OAKe7gB,EAC/B,YAA0E,IAAvE2N,EAAsE,EAAtEA,MAAOnN,EAA+D,EAA/DA,QACR,OACE,cAAC,KAAD,CACEE,UAAWF,EAAQmN,MACnBmT,YAAY,QACZzgB,UAAU,EACV0gB,eAAe,EACf9d,QAAQ,EACR+d,WAAY,CACV7T,SAAU,EACV8T,gBAAiB,CAAC,IAAK,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,SAEhEC,OAAO,KACP9N,QAASzF,EAAMwT,OAAOtpB,KAAI,SAACspB,EAAQxpB,GAAT,MAAoB,CAC5CypB,UAAW,CAAC,OAAQzpB,GACpB4J,MAAO4f,MAETE,QAAO,wCAAE,WAAOnpB,EAAQiT,EAAMrR,GAArB,iBAAAsR,EAAA,6DACDR,GAAS1S,EAAOopB,QAAW,GAAKppB,EAAOiV,SACvCtC,EAAMD,EAAQ1S,EAAOiV,SAFpB,kBAGA,CACL9U,KAAMsV,EAAMmH,KACTpJ,MAAMd,EAAOC,GACbhT,KAAI,SAAC0d,EAAK5d,GAAN,MAAiB,CAAEU,KAAMkd,EAAK7d,GAAIC,EAAQiT,MACjD2W,SAAS,EACT/oB,MAAOmV,EAAMmH,KAAKtb,SARb,2CAAF,+DCrBTgoB,GAAS,CACbC,OAAQ,CACN,kBAAmB,CACjBC,QAAS,qBAGbC,YAAa,CACXvD,OAAQ,IACRkB,gBAAiB,QACjBsC,QAAS,IAIAC,GAAe7hB,YAAWwhB,GAAXxhB,EAC1B,YAOmC,IANjCQ,EAMgC,EANhCA,QACA+X,EAKgC,EALhCA,UACAuJ,EAIgC,EAJhCA,eAKQ7G,EAAiBY,KAAjBZ,aAYR,OACE,eAAC,IAAD,CAAO8G,UAAU,WAAW7Z,MAAO,CAAE2W,MAAO,QAA5C,UACE,eAAC,KAAOmD,QAAR,CACEhqB,KAAK,OACLiqB,UAAU,EACVC,OAfS,SAACrsB,GACd,IAAM2iB,EAAO3iB,EAAEssB,aAAaC,MAAM,GAClCnH,EAAa3C,YAAYC,EAAWC,GAAMviB,MAAK,SAACosB,GAC9C,GAAIznB,MAAMC,QAAQwnB,GAChB,MAAM,IAAI/W,MAAM,SAElBwW,EAAeO,EAAK7J,OAUlB8J,aAAc,kBAAM,GACpB5hB,UAAWF,EAAQihB,OALrB,UAOE,mBAAG/gB,UAAU,uBAAb,SACE,cAAC6hB,GAAA,EAAD,MAEF,mBAAG7hB,UAAU,kBAAb,0DAKF,eAAC,KAAD,CAAM8f,OAAO,SAAb,UACE,cAAC,KAAK1X,KAAN,CACE9Q,KAAK,MACLkW,MAAM,MACN0O,MAAO,CAAC,CAAEC,UAAU,IACpB3U,MAAO,CAAE2W,MAAO,qBAJlB,SAME,cAAC,KAAD,MAEF,cAAC,KAAK/V,KAAN,CAAWZ,MAAO,CAAEwW,OAAQ,GAA5B,SACE,cAAC,IAAD,CAAQtX,KAAK,UAAU2V,SAAS,SAAhC,+BAUCyF,GAAexiB,YAAWwhB,GAAXxhB,EAC1B,YAWmC,IAK7B6U,EAfJ4N,EAUgC,EAVhCA,eAEAlK,GAQgC,EAThC/X,QASgC,EARhC+X,WACAmK,EAOgC,EAPhCA,QACAC,EAMgC,EANhCA,OAOQ1H,EAAiBY,KAAjBZ,aACR,EAA4CkB,mBAC1CsG,EAAe9U,MAAMkH,OAAOhd,KAAI,kBAAM,MADxC,mBAAO6gB,EAAP,KAAuBkK,EAAvB,KAME/N,EADwC,GAAtC4N,EAAe9U,MAAMkH,OAAOrb,OACrB,cAACmnB,GAAD,CAAmBhT,MAAO8U,EAAe9U,MAAMkH,OAAO,KAEtD4N,EAAe9U,MAAMkH,OAAOhd,KAAI,SAAC8V,EAAOhW,GAC/C,OACE,eAAC,IAAD,CACEoqB,UAAU,WACV7Z,MAAO,CAAE2W,MAAO,QAFlB,UAKE,eAAC,KAAWgE,KAAZ,yBAEE,cAAC,KAAD,CACEC,QAASpK,EAAe/gB,GACxBooB,SAAU,SAAC+C,GACT,IAAMC,EAAMrK,EAAehN,QAC3BqX,EAAIprB,GAASmrB,EACbF,EAAkBG,SAIxB,cAACpC,GAAD,CAAmBhT,MAAOA,IAhB5B,sBAGgBhW,EAHhB,aAyCN,OACE,eAAC,IAAD,CAAOoqB,UAAU,WAAW7Z,MAAO,CAAE2W,MAAO,QAA5C,UACE,cAAC,GAAD,CAAgByB,WAAYmC,EAAe9U,MAAMqV,cAChDnO,EACD,cAAC,IAAD,UACE,cAAC,IAAD,CAAQzN,KAAK,UAAUf,QAxBR,WACnB,IAAM8N,EAAuB,GAK7B,OAJAuE,EAAeqB,SAAQ,SAACkJ,EAAMtrB,GACxBsrB,GAAM9O,EAAW3Y,KAAK7D,MAGrBsjB,EACJ3C,YACCC,EACAkK,EAAejK,KACfiK,EAAe9U,MAAMqV,YACrB7O,GAEDle,MAAK,SAACF,GACL2sB,IACAC,QASA,6BAmBGO,GAAkB,SAAC,GAQzB,IAPL/K,EAOI,EAPJA,QACAuK,EAMI,EANJA,QACAC,EAKI,EALJA,OAOA,GADyB9G,KAAjBZ,aACkBkB,mBAA8B,WAAxD,mBAAOgH,EAAP,KAAcC,EAAd,KACA,EAA4CjH,wBAE1CpjB,GAFF,mBAAO0pB,EAAP,KAAuBY,EAAvB,KAIA,MAAc,WAAVF,EAEA,cAACtB,GAAD,CACEtJ,UAAWJ,EAAQzgB,GACnBoqB,eAAgB,SAACnU,EAAO6K,GACtB6K,EAAkB,CAAE1V,QAAO6K,SAC3B4K,EAAS,aAMH,WAAVD,EAEA,cAACX,GAAD,CACEjK,UAAWJ,EAAQzgB,GACnB+qB,eAAgBA,EAChBC,QAASA,EACTC,OAAQA,GAAW,eAKlB,8BC3LIW,GAActjB,YAjBZ,CACb2N,MAAO,CACL,4BAA6B,CAC3BrN,OAAQ,iBACRC,aAAc,EACdqgB,WAAY,6BAEd,sBAAuB,CACrB9Y,YAAa,EACbC,aAAc,GAEhB,OAAQ,CACN8Y,WAAY,OAKS7gB,CACzBgc,cAAS,YAA6C,IAA1Cxb,EAAyC,EAAzCA,QACJ+X,EAAY7R,GAAOyR,QAAQzU,eAAgB6U,UACjD,EAA+BlX,IAAMkiB,WAArC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAYC,mBAElB,EAAqC9H,KAA7BZ,EAAR,EAAQA,aAAc1G,EAAtB,EAAsBA,WACtBuJ,qBAAU,WACR7C,EAAa7hB,UAAUmf,KACtB,CAAC0C,EAAc1C,IAElB,IAAMJ,EAAU8C,EAAanjB,IAAIygB,GACjC,QAAgBxf,IAAZof,EACF,OAAO,cAACyL,EAAD,IACF,GAAgB,OAAZzL,EACT,OAAO,cAAC,GAAD,IAGT,IAAM/E,EAAU,CACd,CAAEgO,UAAW,KAAM7f,MAAO,MAC1B,CACE6f,UAAW,OACX7f,MAAO,OACPsiB,WAAY,SAAC/Y,EAAcuX,GACzB,OACE,cAAC,EAAD,CACE3f,KAAMgE,GAAOiH,MACbhL,QAAS,CAAEuR,QAASmO,EAAI3qB,IACxBkL,UAAW,CACTrL,MAAOgd,EAAWuP,iBAAiB,CAAE3L,QAASI,KAJlD,SAOG8J,EAAIrqB,SAKb,CAAEopB,UAAW,cAAe7f,MAAO,eACnC,CACE6f,UAAW,KACX7f,MAAO,SACPsiB,WAAY,SAACE,EAAW1B,GACtB,OACE,cAAC,KAAD,CACE9gB,MAAM,qCACNyiB,UAAW,WAAO,IAAD,EACfzP,EAAWtX,OAAOolB,EAAI3qB,IACtB,UAAAgsB,EAAUpC,eAAV,SAAmB2C,UAErBziB,OAAO,MACPI,WAAW,KAPb,SASE,cAAC,IAAD,CAAQwF,KAAK,UAAUzF,QAAQ,EAAMlB,KAAK,QAA1C,yBASV,OACE,eAAC,IAAMsd,SAAP,WACE,eAAC,KAAWE,MAAZ,CAAkBC,MAAO,EAAzB,qBACW6F,KAAEG,WAAW/L,EAAQngB,MADhC,OAGE,mBACEkQ,MAAO,CAAEic,SAAU,QAAStD,WAAY,KACxCxa,QAAS,kBJMgB,SAAC8R,EAAkBiG,GACtD,IAAMC,EAAU,cAACoB,GAAD,CAAmBtH,QAASA,IAE5C9W,IAAMid,KAAK,CACT/c,MACE,uBAAM2G,MAAO,CAAEqW,aAAc,GAAIC,QAAS,gBAA1C,4BACkBrG,EAAQngB,QAG5BqmB,UACAI,UAAW,CAAEC,QAAS,GACtBhd,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,EACNR,OAAQA,EACRS,MAAO,qBACP3W,MAAO,CAAE4W,IAAK,MItBSsF,CAAsBjM,IAFvC,SAIE,cAACkM,GAAA,EAAD,SAGJ,eAAC,KAAWxB,KAAZ,WACE,6CAAoB,IACpB,cAAC,KAAWA,KAAZ,CAAiBzb,KAAK,YAAtB,SACG+Q,EAAQpF,iBAGb,cAAC,KAAD,CACE2Q,UAAWA,EACXhjB,UAAWF,EAAQmN,MACnBmT,YAAY,QACZzgB,UAAU,EACVghB,QAAO,wCAAE,WAAOnpB,EAAQiT,EAAMrR,GAArB,eAAAsR,EAAA,sEACYmJ,EAAWld,MAAM,CAClCkC,MAAOrB,EAAOiV,SACd/S,QAASlC,EAAOopB,QAAW,GAAKppB,EAAOiV,SACvC1S,WAAY,CAAE0d,QAASI,KAJlB,cACHxiB,EADG,yBAMA,CACLsC,KAAMtC,EAAOoB,QAAQU,IAAIysB,IACzB/C,SAAS,EACT/oB,MAAOzC,EAAOyC,QATT,2CAAF,0DAYP+rB,QAAS,CACPthB,QAAQ,GAEVuhB,YAAa,cAAC,KAAWvG,MAAZ,CAAkBC,MAAO,EAAzB,oBACb6C,cAAe,WACb,MAAO,CACL,cAAC,IAAD,CAEE3Z,KAAK,UACLf,QAAS,kBDqFU,SACjC8R,EACA7L,GAMA,IACMmY,QADuB1rB,KAAZ,OAAHuT,QAAG,IAAHA,OAAA,EAAAA,EAAKkX,OAAsBniB,IAAQiL,EAAIkX,OACnClF,KAAK,CACrB/c,MACE,sBAAM2G,MAAO,CAAEqW,aAAc,GAAIC,QAAS,gBAA1C,2BAIFC,UAAW,CAAEC,QAAS,GACtBhd,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,EACNR,OAAM,OAAE9R,QAAF,IAAEA,OAAF,EAAEA,EAAK8R,OACbS,MAAO,qBACP3W,MAAO,CAAE4W,IAAK,MAEhB2F,EAAI/mB,OAAO,CACT2gB,QACE,cAAC,GAAD,CACElG,QAASA,EACTuK,QAAS+B,EAAI/B,QACbC,OAAM,OAAErW,QAAF,IAAEA,OAAF,EAAEA,EAAKqW,WChHH+B,CAAoBvM,EAAS,CAC3BqL,QACAb,OAAQ,WAAO,IAAD,EACZ,UAAAe,EAAUpC,eAAV,SAAmB2C,aAP3B,mBACM,YAeVhhB,QAAQ,EACR+d,WAAY,CACV7T,SAAU,IACV8T,gBAAiB,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,SAE3DC,OAAO,KACP9N,QAASA,IAEVqQ,SAMT,SAASa,GAAUjC,GACjB,MAAO,CACL3qB,GAAI2qB,EAAI3qB,GACRM,KAAMqqB,EAAIrqB,KACV+a,YAAasP,EAAItP,a,cCrKR4R,GAAb,iDACUC,MAAgB,EAD1B,wCAGE,SAAetpB,GAA+C,IAAD,OAC3DlF,KAAKwuB,OAAS,EACd,IAAIC,EAAWzuB,KAAKwuB,MAEpB,OAAOtpB,IAAKrF,MAAK,SAACF,GAChB,KAAI8uB,EAAW,EAAKD,OAIpB,OAAO7uB,SAZb,KCMMyrB,GAAS,CACbsD,UAAW,CACTjG,MAAO,SAWEkG,GAAyB/kB,YAAWwhB,GAAXxhB,CACpCgc,cAAS,SAAC7V,GACR,OAAO6e,GAAmB,gBAAiB7e,OAIlC8e,GAA0BjlB,YAAWwhB,GAAXxhB,CACrCgc,cAAS,SAAC7V,GACR,OAAO6e,GAAmB,aAAc7e,OAI/B+e,GAAwBllB,YAAWwhB,GAAXxhB,CACnCgc,cAAS,SAAC7V,GACR,OAAO6e,GAAmB,cAAe7e,OAI7C,SAAS6e,GACPG,EACAhf,GAEA,IAAMjK,EAAQ2f,KAAYsJ,GACpBC,EAAa,IAAIT,GAGvB7G,qBAAU,gBACY/kB,IAAhBoN,EAAMzQ,QAINkF,MAAMC,QAAQsL,EAAMzQ,OAEjBwG,EAAMlF,QAGTkF,EAAM7C,WAAW8M,EAAMzQ,MAAMoE,QAAO,SAACpC,GAAD,OAASwE,EAAM/E,QAAQP,IAAIc,OAF/DwE,EAAM7C,WAAW8M,EAAMzQ,YAIWqD,IAA3BmD,EAAMpE,IAAIqO,EAAMzQ,QACzBwG,EAAM9C,UAAU+M,EAAMzQ,UAEvB,CAACyQ,EAAMzQ,QAIV,IAAM6uB,EAAUjhB,mBAAQ,WACtB,IAD4B,EACtBihB,EAAU,GADY,cAEZroB,EAAMb,QAFM,IAE5B,2BAA8B,CAAC,IAApBE,EAAmB,QAC5BgpB,EAAQ/oB,KAAK,CACX9F,MAAO6F,EAAE7D,GACTwW,MAAO3S,EAAEgc,iBALe,8BAQ5B,OAAOgN,IACN,CAACroB,EAAM/E,QAAQsJ,OAUlB,OACE,cAAC,KAAD,CACEgI,KAAMtC,EAAMsC,KACZ4c,YAAY,EACZd,QAASA,EACTe,iBAAiB,QACjB5kB,UAAWyF,EAAM3F,QAAQskB,UACzBS,YAAY,EACZC,SAfa,SAACjuB,GACF,KAAVA,GACJ6tB,EAAW1oB,MAAK,WACd,OAAOR,EAAM9C,UAAU7B,GAAOtB,MAAK,kBAAM,SAazCP,MAAOyQ,EAAMzQ,MACb+vB,SAAUtf,EAAMsf,SAChBC,WAAYvf,EAAMuf,aCxFxB,IAEaC,GAAyB3lB,YAFvB,GAEuBA,CACpCgc,cAAS,YAAiD,EAA9Cxb,QAA+C,IACjD2a,EAAeU,KAAfV,WAER,OACE,eAAC,KAAD,CAAc5Z,MAAM,kBAAkBd,KAAK,QAAQ4S,OAAQ,EAA3D,UACE,cAAC,KAAavK,KAAd,CAAmBoF,MAAM,yBAAzB,SACE,cAAC6W,GAAD,CACEtc,KAAK,WACL/S,MAAOylB,EAAWzN,OAAOV,sBACzByY,SAAUtK,EAAWzN,OAAOjB,yBAC5BiZ,WAAYvK,EAAWzN,OAAOf,gCAGlC,cAAC,KAAa7D,KAAd,CAAmBoF,MAAM,4BAAzB,SACE,cAAC6W,GAAD,CACEtc,KAAK,WACL/S,MAAOylB,EAAWzN,OAAOT,yBACzBwY,SAAUtK,EAAWzN,OAAOhB,4BAC5BgZ,WAAYvK,EAAWzN,OAAOd,0C,wHCnBpC4U,GAAS,CACbsD,UAAW,CACTjG,MAAO,QAET+G,WAAY,CACVtG,gBAAiB9B,KAAM,GACvB,UAAW,CACT8B,gBAAiB9B,KAAM,GACvBqI,MAAO,UAGXC,aAAc,CACZxG,gBAAiB3B,KAAO,GACxB,UAAW,CACT2B,gBAAiB3B,KAAO,GACxBkI,MAAO,UAGXE,UAAW,CACTzG,gBAAiBlC,KAAK,GACtB,UAAW,CACTkC,gBAAiBlC,KAAK,GACtByI,MAAO,WAOAG,GAAsBhmB,YAAWwhB,GAAXxhB,CACjCgc,cACE,YAWmC,IAVjC9I,EAUgC,EAVhCA,GACAxd,EASgC,EAThCA,MACAgwB,EAQgC,EARhCA,WACAD,EAOgC,EAPhCA,SACAjlB,EAMgC,EANhCA,QAOQkU,EAAemH,KAAfnH,WACF0Q,EAAa,IAAIT,GAIjBJ,EAAUjhB,mBAAQ,WACtB,IAD4B,EACtBihB,EAGe,GAJO,cAKZ7P,EAAWrZ,QALC,IAK5B,2BAAmC,CAAC,IAAzBE,EAAwB,QACjCgpB,EAAQ/oB,KAAK,CACX4L,KAAM,QACN1P,GAAI6D,EAAE7D,GACNhC,MAAM,SAAD,OAAW6F,EAAE7D,IAClBwW,MAAOgF,EAAGF,MAAMpE,SAAST,UAAU5S,EAAEkP,IAAKlP,EAAEgc,kBAVpB,kDAcZrE,EAAGF,MAAMjF,OAdG,IAc5B,2BAAgC,CAAC,IAAtBkY,EAAqB,QAC9B1B,EAAQ/oB,KAAK,CACX4L,KAAM6e,EAAE5X,SACR3W,GAAIuuB,EAAEvuB,GACNhC,MAAM,GAAD,OAAKuwB,EAAE5X,SAAP,YAAmB4X,EAAEvuB,IAC1BwW,MAAOgF,EAAGF,MAAMpE,SAASV,MAAM+X,GAC/BvlB,UAAWF,EAAQylB,EAAE5X,aApBG,8BAuB5B,OAAOkW,IACN,CAAC7P,EAAWvd,QAAQsJ,OAUvB,OACE,cAAC,KAAD,CACE4kB,YAAY,EACZd,QAASA,EACTe,iBAAiB,QACjB5kB,UAAWF,EAAQskB,UACnBS,YAAY,EACZC,SAda,SAACjuB,GACF,KAAVA,GACJ6tB,EAAW1oB,MAAK,WACd,OAAOgY,EAAWtb,UAAU7B,GAAOtB,MAAK,kBAAM,SAY9CP,WAAiBqD,IAAVrD,OAAsBqD,EAAtB,UAAqCrD,EAAM0R,KAA3C,YAAmD1R,EAAMgC,IAChE+tB,SAAU,SAAC/vB,EAAYwwB,GACrBT,EAAS,CAAEre,KAAM8e,EAAO9e,KAAM1P,GAAIwuB,EAAOxuB,MAE3CguB,WAAY,SAAChwB,EAAYwwB,GACvBR,EAAW,CAAEte,KAAM8e,EAAO9e,KAAM1P,GAAIwuB,EAAOxuB,YChGjD8pB,GAAS,CACb7T,MAAO,CACLkR,MAAO,OACPze,UAAW,OACX+lB,cAAe,EACf5lB,aAAc,cAEd,OAAQ,CACN6lB,cAAe,UAEjB,WAAY,CACV1E,QAAS,UAGboD,UAAW,CACTjG,MAAO,SAkDEwH,IA9CyBrmB,YAAWwhB,GAAXxhB,CACpCgc,cACE,YAWmC,IAVjC9I,EAUgC,EAVhCA,GACA1S,EASgC,EAThCA,QACA9K,EAQgC,EARhCA,MACA+vB,EAOgC,EAPhCA,SACAC,EAMgC,EANhCA,WASMnB,EAAUjhB,mBAAQ,WACtB,OAAO4P,EAAGF,MAAMjF,MAAMlW,KAAI,SAAC8T,GACzB,MAAO,CACLjW,MAAOiW,EAAKjU,GACZwW,MAAOvC,EAAKuC,YAGf,CAACgF,IAEJ,OACE,cAAC,KAAD,CACEqS,YAAY,EACZF,YAAY,EACZd,QAASA,EACTe,iBAAiB,QACjB5kB,UAAWF,EAAQskB,UACnBpvB,MAAOA,EACP+vB,SAAUA,EACVC,WAAYA,QAYE1lB,YAAWwhB,GAAXxhB,CACtBgc,cACE,YAAuE,IAAD,IAAnE9I,EAAmE,EAAnEA,GAAI7D,EAA+D,EAA/DA,KACL,GADoE,EAAzD7O,QAC2Bqb,MAA9BnH,EAAR,EAAQA,WAAYqG,EAApB,EAAoBA,cACpB,EAA4BoB,wBACjBpjB,IAATsW,EACI,CAAEjI,KAAM8L,EAAGF,MAAMrH,KAAK0D,EAAKC,QAAQjB,SAAU3W,GAAI2X,EAAKC,aACtDvW,GAHN,mBAAOuW,EAAP,KAAegX,EAAf,KAKA,EAA4BnK,wBACjBpjB,IAATsW,EACI,CAAEjI,KAAM8L,EAAGF,MAAMrH,KAAK0D,EAAKlK,QAAQkJ,SAAU3W,GAAI2X,EAAKlK,aACtDpM,GAHN,mBAAOoM,EAAP,KAAeohB,EAAf,KAKA,EAAsBpK,mBAAQ,OAAqB9M,QAArB,IAAqBA,OAArB,EAAqBA,EAAM5E,KAAzD,mBAAOA,EAAP,KAAY+b,EAAZ,KACA,EAA0CrK,oBAAS,GAAnD,mBAAO3J,EAAP,KAAsBiU,EAAtB,KAKMC,EAAUpjB,mBAAQ,WACtB,YAAevK,IAAXuW,GAAwC,UAAhBA,EAAOlI,YACpBrO,IAAXoM,GAAwC,UAAhBA,EAAOiC,OAEjC8L,EAAGF,MAAMzD,QAAQD,EAAO5X,GAAIyN,EAAOzN,WACzBqB,IAATsW,GACCC,EAAO5X,KAAO2X,EAAKC,QACnBnK,EAAOzN,KAAO2X,EAAKlK,YAEtB,CAAC+N,EAAGF,MAAMxE,QAAV,OAAmBc,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQ5X,GAA3B,OAA+ByN,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQzN,KAE1ComB,qBAAU,gBACK/kB,IAATsW,QAC6CtW,IAA7CgiB,EAAc/C,iBAAiB3I,EAAK5E,MAExCsQ,EAAc5hB,SAAS,CAAEsB,WAAY,CAAEgQ,IAAK4E,EAAK5E,SAChD,CAACsQ,EAAe1L,EAAM5E,IA2EzB,OACE,eAAC,KAAD,CACE6R,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBoK,WAAW,EACXnG,OAAO,aAJT,UAME,cAAC,KAAK1X,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cACa7tB,IAAXuW,EAAuB,CAAExE,KAAMwE,EAAO5X,SAAOqB,EAFjD,oBAQF+jB,eAAgB4J,EAAU,aAAU3tB,EACpC8tB,KACEH,EACI,wDACA3tB,EAdR,SAiBE,cAACitB,GAAD,CACE9S,GAAIA,EACJxd,MAAO4Z,EACPmW,SAAUa,EACVZ,WAAY,kBAAMY,OAAUvtB,QAGhC,cAAC,KAAK+P,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cACa7tB,IAAXoM,EAAuB,CAAE2F,KAAM3F,EAAOzN,SAAOqB,EAFjD,oBAFJ,SAWE,cAACitB,GAAD,CACE9S,GAAIA,EACJxd,MAAOyP,EACPsgB,SAAUc,EACVb,WAAY,kBAAMa,OAAUxtB,QAGhC,cAAC,KAAK+P,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cACU7tB,IAAR0R,EACI,CAAEK,KAAI,UAAEiQ,EAAc/C,iBAAiBvN,UAAjC,aAAE,EAAqC/S,SAC7CqB,EAJR,uBAFJ,SAaE,cAACgsB,GAAD,CACErvB,WACUqD,IAAR0R,EAAA,UACIsQ,EAAc/C,iBAAiBvN,UADnC,aACI,EAAqC/S,QACrCqB,EAEN0sB,SAAU,SAAC/tB,GAAD,aAAQ8uB,EAAM,UAACzL,EAAcjjB,IAAIJ,UAAnB,aAAC,EAAuB+S,MAChDib,WAAY,SAAChwB,GAAD,OAAW8wB,OAAOztB,QAGlC,cAAC,KAAK+P,KAAN,CAAWoF,MAAM,gBAAjB,SACE,cAAC,KAAD,CACE4U,QAAStQ,EACTuN,SAAU,SAACjhB,GAAD,OAAS2nB,EAAiB3nB,QAGxC,cAAC,KAAKgK,KAAN,CAAWoF,MAAM,OAAS4Y,OAAO,EAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE1f,KAAK,UACLf,QA3JK,WACb,QAAYtN,IAAR0R,QAAgC1R,IAAXuW,QAAmCvW,IAAXoM,IAE7CuhB,EAAJ,CAEA,IACI7W,EAAUC,EADR9L,EAAO+W,EAAc/C,iBAAiBvN,GAG5C,GAAoB,UAAhB6E,EAAOlI,KAAkB,CAC3B,IAAM2f,EAAMrS,EAAW5c,IAAIwX,EAAO5X,IAClCmY,EAAWqD,EAAGF,MAAMtD,aACpBwD,EAAGF,MAAMxB,aAAa,CACpB9Z,GAAImY,EACJpF,IAAKsc,EAAItc,IACTyD,MAAO6Y,EAAIxP,cACX/E,eAAe,EACfnE,SAAU,oBAGZwB,EAAWP,EAAO5X,GAGpB,GAAoB,UAAhByN,EAAOiC,KAAkB,CAC3B,IAAM2f,EAAMrS,EAAW5c,IAAIqN,EAAOzN,IAClCoY,EAAWoD,EAAGF,MAAMtD,aACpBwD,EAAGF,MAAMxB,aAAa,CACpB9Z,GAAIoY,EACJrF,IAAKsc,EAAItc,IACTyD,MAAO6Y,EAAIxP,cACX/E,eAAe,EACfnE,SAAU,oBAGZyB,EAAW3K,EAAOzN,GAGpB,IAAMsvB,EAAU,CACd1X,OAAQO,EACR1K,OAAQ2K,EACRrF,IAAKzG,EAAKyG,IACV+H,gBACAtE,MAAOlK,EAAKuT,oBAEDxe,IAATsW,EACEA,EAAKC,SAAWO,GAAYR,EAAKlK,SAAW2K,EAC9CoD,EAAGF,MAAMhB,WAAW3C,EAAKC,OAAQD,EAAKlK,OAAQ6hB,IAE9C9T,EAAGF,MAAMjB,WAAW1C,EAAKC,OAAQD,EAAKlK,QACtC+N,EAAGF,MAAMlB,QAAQkV,IAGnB9T,EAAGF,MAAMlB,QAAQkV,GAGnB3lB,IAAMsb,eAsGEsK,cACaluB,IAAXuW,QACWvW,IAAXoM,QACQpM,IAAR0R,UA9FC1R,IAATsW,IACM,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQ5X,MAAO2X,EAAKC,SACd,OAANnK,QAAM,IAANA,OAAA,EAAAA,EAAQzN,MAAO2X,EAAKlK,QACpBsF,IAAQ4E,EAAK5E,KACb+H,IAAkBnD,EAAKmD,gBA4FfkU,EARJ,uBAaU3tB,IAATsW,EACC,cAAC,IAAD,CAAQjI,KAAK,UAAUzF,QAAQ,EAAM0E,QA9G9B,gBACFtN,IAATsW,IACJ6D,EAAGF,MAAMjB,WAAW1C,EAAKC,OAAQD,EAAKlK,QACtC9D,IAAMsb,eA2GE,oBAGE,kB,UCvPLuK,GAAmBlL,cAC9B,SAAC7V,GAAwE,IAAD,UAC9DuO,EAAemH,KAAfnH,WACR,EAAsByH,mBAAQ,UAAqBhW,EAAMwF,YAA3B,aAAqB,EAAYlB,KAA/D,mBAAOA,EAAP,KAAY+b,EAAZ,KACA,EAA0CrK,oBACxC,UAAAhW,EAAMwF,YAAN,eAAY6G,iBAAiB,GAD/B,mBAAOA,EAAP,KAAsBiU,EAAtB,KAKA3I,qBAAU,gBACW/kB,IAAfoN,EAAMwF,MACV+I,EAAWiC,oBAAoBxQ,EAAMwF,KAAKlB,OACzC,WAACtE,EAAMwF,YAAP,aAAC,EAAYlB,MAuChB,OACE,qCACE,cAAC,KAAK3B,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cACU7tB,IAAR0R,EACI,CACEK,KAAI,UAAE4J,EAAWmD,cAAcpN,UAA3B,aAAE,EAA+B/S,SAEvCqB,EANR,mBAFJ,SAeE,cAACksB,GAAD,CACEvvB,WACUqD,IAAR0R,EAAA,UAAoBiK,EAAWmD,cAAcpN,UAA7C,aAAoB,EAA+B/S,QAAKqB,EAE1D0sB,SAAU,SAAC/tB,GAAD,aAAQ8uB,EAAM,UAAC9R,EAAW5c,IAAIJ,UAAhB,aAAC,EAAoB+S,MAC7Cib,WAAY,kBAAMc,OAAOztB,QAG7B,cAAC,KAAK+P,KAAN,CAAWoF,MAAM,gBAAjB,SACE,cAAC,KAAD,CACE4U,QAAStQ,EACTuN,SAAU,SAACjhB,GAAD,OAAS2nB,EAAiB3nB,QAGxC,cAAC,KAAKgK,KAAN,CAAWoF,MAAM,OAAS4Y,OAAO,EAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE1f,KAAK,UACLf,QAxEK,gBACDtN,IAAR0R,SAEe1R,IAAfoN,EAAMwF,KAERxF,EAAM+M,GAAGF,MAAMxB,aAAa,CAC1B9Z,GAAIyO,EAAM+M,GAAGF,MAAMtD,aACnBjF,IAAKA,EACLyD,MAAOwG,EAAWmD,cAAcpN,GAAM8M,cACtClJ,SAAU,aACVmE,cAAeA,IAIjBrM,EAAM+M,GAAGF,MAAMrB,gBAAgBxL,EAAMwF,KAAKjU,GAAI,CAC5C+S,IAAKA,EACLyD,MAAOwG,EAAWmD,cAAcpN,GAAM8M,cACtC/E,cAAeA,IAInBrM,EAAMwc,WAoDEsE,cAAkBluB,IAAR0R,UA1CD1R,IAAfoN,EAAMwF,MACNxF,EAAMwF,KAAKlB,MAAQA,GACnBtE,EAAMwF,KAAK6G,gBAAkBA,GAqCzB,uBAOgBzZ,IAAfoN,EAAMwF,KACL,cAAC,IAAD,CAAQvE,KAAK,UAAUzF,QAAQ,EAAM0E,QAtD9B,WACfF,EAAM+M,GAAGF,MAAMtB,WAAWvL,EAAMwF,KAAMjU,IACtCyO,EAAMwc,UAoDE,oBAGE,gBAQHwE,GAAqBnL,cAChC,SAAC7V,GAA0E,IAAD,IAChEyO,EAAgBiH,KAAhBjH,YACR,EAAoBuH,mBACU,eAA5B,UAAAhW,EAAMwF,YAAN,mBAAYjW,aAAZ,eAAmB0R,MAAuBjB,EAAMwF,KAAKjW,MAAMgC,QAAKqB,GADlE,mBAAOrB,EAAP,KAAW0vB,EAAX,KAGA,EAAsCjL,wBACrBpjB,IAAfoN,EAAMwF,MAA8C,iBAAxBxF,EAAMwF,KAAK0C,UACnClI,EAAMwF,KAAKkF,aAFjB,mBAAOA,EAAP,KAAoBwW,EAApB,KAMMC,EAAehkB,mBACnB,6BACSvK,IAAPrB,SACiBqB,IAAfoN,EAAMwF,WACgC5S,IAAtCoN,EAAM+M,GAAGF,MAAM5D,eAAe1X,SACdqB,IAAfoN,EAAMwF,OACL,UAAAxF,EAAM+M,GAAGF,MAAM5D,eAAe1X,UAA9B,eAAmCA,MAAOyO,EAAMwF,KAAKjU,MAC3D,CAACyO,EAAM+M,GAAGF,MAAMxE,QAAS9W,IAG3B,QAAmBqB,IAAfoN,EAAMwF,MAAgD,WAA1BxF,EAAMwF,KAAKjW,MAAM0R,KAC/C,OAAO,sDAoDT,OACE,qCACE,cAAC,KAAK0B,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cAAiB7tB,IAAPrB,EAAmB,CAAEoT,KAAMpT,QAAOqB,EAD9C,oBAMF+jB,eAAgBwK,EAAe,aAAUvuB,EACzC8tB,KAAMS,EAAe,qCAAkCvuB,EATzD,SAWE,cAACmsB,GAAD,CACExvB,MAAOgC,EACP+tB,SAAU2B,EACV1B,WAAY,kBAAM0B,OAAMruB,QAG5B,cAAC,KAAK+P,KAAN,CAAWoF,MAAM,iBAAjB,SACE,cAAC,KAAD,CACE4U,QAASjS,EACTkP,SAAU,SAACjhB,GAAD,OAASuoB,EAAevoB,QAGtC,cAAC,KAAKgK,KAAN,CAAWoF,MAAM,OAAS4Y,OAAO,EAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE1f,KAAK,UACLf,QA9EK,WACb,QAAWtN,IAAPrB,IACA4vB,EAAJ,CAEA,IAAMjR,EAAMzB,EAAY9c,IAAIJ,QAETqB,IAAfoN,EAAMwF,KAERxF,EAAM+M,GAAGF,MAAMvB,eAAe,CAC5B/Z,GAAIyO,EAAM+M,GAAGF,MAAMtD,aACnBha,MAAO,CACL0R,KAAM,YACN1P,GAAIA,EACJ+S,IAAK4L,EAAI5L,KAEXyD,MAAOmI,EAAIkB,cACXlJ,SAAU,eACVwC,YAAaA,IAIf1K,EAAM+M,GAAGF,MAAMnB,kBAAkB1L,EAAMwF,KAAKjU,GAAI,CAC9ChC,MAAO,CACL0R,KAAM,YACN1P,GAAIA,EACJ+S,IAAK4L,EAAI5L,KAEXyD,MAAOmI,EAAIkB,cACXlJ,SAAU,eACVwC,YAAaA,IAIjB1K,EAAMwc,WA8CEsE,cAAiBluB,IAAPrB,GAAoB4vB,UApCrBvuB,IAAfoN,EAAMwF,MACNxF,EAAMwF,KAAKkF,cAAgBA,GACA,cAA1B1K,EAAMwF,KAAKjW,MAAM0R,MAAwBjB,EAAMwF,KAAKjW,MAAMgC,KAAOA,GA+B9D,uBAOgBqB,IAAfoN,EAAMwF,KACL,cAAC,IAAD,CAAQvE,KAAK,UAAUzF,QAAQ,EAAM0E,QAhD9B,WACfF,EAAM+M,GAAGF,MAAMtB,WAAWvL,EAAMwF,KAAMjU,IACtCyO,EAAMwc,UA8CE,oBAGE,gBAQH4E,GAAkBvL,cAC7B,YAUO,IAAD,IATJ9I,EASI,EATJA,GACAvH,EAQI,EARJA,KACA2E,EAOI,EAPJA,OACAqS,EAMI,EANJA,OAOA,EAAsC9G,KAA9BnH,EAAR,EAAQA,WAAYqG,EAApB,EAAoBA,cACpB,EAA4BoB,wBACfpjB,IAAXuX,EACI,CACElJ,KAAM8L,EAAGF,MAAMrH,KAAK2E,EAAOhB,QAAQjB,SACnC3W,GAAI4Y,EAAOhB,aAEbvW,GANN,mBAAOuW,EAAP,KAAegX,EAAf,KAQA,EAAsBnK,mBAAQ,OAAqB7L,QAArB,IAAqBA,OAArB,EAAqBA,EAAQ7F,KAA3D,mBAAOA,EAAP,KAAY+b,EAAZ,KACA,EAA0CrK,oBAAS,GAAnD,mBAAO3J,EAAP,KAAsBiU,EAAtB,KAwDA,OACE,qCACE,cAAC,KAAK3d,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cAAqB7tB,IAAXuW,EAAuB,CAAExE,KAAMwE,EAAO5X,SAAOqB,EADzD,oBAFJ,SASE,cAACitB,GAAD,CACE9S,GAAIA,EACJxd,MAAO4Z,EACPmW,SAAUa,EACVZ,WAAY,kBAAMY,OAAUvtB,QAGhC,cAAC,KAAK+P,KAAN,CACEoF,MACE,cAAC,KAAW2U,KAAZ,CACE+D,cACU7tB,IAAR0R,EACI,CAAEK,KAAI,UAAEiQ,EAAc/C,iBAAiBvN,UAAjC,aAAE,EAAqC/S,SAC7CqB,EAJR,uBAFJ,SAaE,cAACgsB,GAAD,CACErvB,WACUqD,IAAR0R,EAAA,UACIsQ,EAAc/C,iBAAiBvN,UADnC,aACI,EAAqC/S,QACrCqB,EAEN0sB,SAAU,SAAC/tB,GAAD,aAAQ8uB,EAAM,UAACzL,EAAcjjB,IAAIJ,UAAnB,aAAC,EAAuB+S,MAChDib,WAAY,SAAChwB,GAAD,OAAW8wB,OAAOztB,QAGlC,cAAC,KAAK+P,KAAN,CAAWoF,MAAM,SAAjB,SACE,eAAC,KAAW2U,KAAZ,WACGlX,EAAKuC,MADR,KACiBvC,EAAKyE,YADtB,SAIF,cAAC,KAAKtH,KAAN,CAAWoF,MAAM,gBAAjB,SACE,cAAC,KAAD,CACE4U,QAAStQ,EACTuN,SAAU,SAACjhB,GAAD,OAAS2nB,EAAiB3nB,QAGxC,cAAC,KAAKgK,KAAN,CAAWoF,MAAM,OAAS4Y,OAAO,EAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE1f,KAAK,UACLf,QA9GK,WACb,QAAetN,IAAXuW,QAAgCvW,IAAR0R,EAA5B,CAEA,IACIoF,EADE7L,EAAO+W,EAAc/C,iBAAiBvN,GAG5C,GAAoB,UAAhB6E,EAAOlI,KAAkB,CAC3B,IAAM2f,EAAMrS,EAAW5c,IAAIwX,EAAO5X,IAClCmY,EAAWqD,EAAGF,MAAMtD,aACpBwD,EAAGF,MAAMxB,aAAa,CACpB9Z,GAAImY,EACJpF,IAAKsc,EAAItc,IACTyD,MAAO6Y,EAAIxP,cACX/E,eAAe,EACfnE,SAAU,oBAGZwB,EAAWP,EAAO5X,GAGpB,IAAMsvB,EAAU,CACd1X,OAAQO,EACR1K,OAAQwG,EAAKjU,GACb+S,IAAKzG,EAAKyG,IACV+H,gBACAtE,MAAOlK,EAAKuT,oBAECxe,IAAXuX,EACEA,EAAOhB,SAAWO,EACpBqD,EAAGF,MAAMhB,WAAW1B,EAAOhB,OAAQgB,EAAOnL,OAAQ6hB,IAElD9T,EAAGF,MAAMjB,WAAWzB,EAAOhB,OAAQgB,EAAOnL,QAC1C+N,EAAGF,MAAMlB,QAAQkV,IAGnB9T,EAAGF,MAAMlB,QAAQkV,GAEnBrE,MA0EQsE,cACaluB,IAAXuW,QAAgCvW,IAAR0R,MAtE1B,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQ5X,OAAR,OAAe4Y,QAAf,IAAeA,OAAf,EAAeA,EAAQhB,SACvB7E,KAAG,OAAK6F,QAAL,IAAKA,OAAL,EAAKA,EAAQ7F,MAChB+H,KAAa,OAAKlC,QAAL,IAAKA,OAAL,EAAKA,EAAQkC,gBAgEtB,uBASYzZ,IAAXuX,EACC,cAAC,IAAD,CAAQlJ,KAAK,UAAUzF,QAAQ,EAAM0E,QAtE9B,gBACAtN,IAAXuX,IACJ4C,EAAGF,MAAMjB,WAAWzB,EAAOhB,OAAQgB,EAAOnL,QAC1Cwd,MAmEQ,oBAGE,gBAQH6E,GAAWxnB,YAtYT,GAsYSA,CACtBgc,cACE,YAAuE,IAApE9I,EAAmE,EAAnEA,GAAIvH,EAA+D,EAA/DA,KACL,GADoE,EAAzDnL,QACqB2b,oBAC1B,OAAJxQ,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,WAAY,eADpB,mBAAOA,EAAP,KAAiBoZ,EAAjB,KAGM9E,EAAS,kBAAMthB,IAAMsb,cAE3B,YAAa5jB,IAAT4S,GAAwC,cAAlBA,EAAK0C,UACzB6E,EAAGF,MAAMxD,cAAc7D,EAAKjU,IAAI8B,OAAS,EAEzC,8JASJ,eAAC,KAAD,CACE8iB,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBoK,WAAW,EACXnG,OAAO,aAJT,eAMYznB,IAAT4S,EACC,cAAC,KAAK7C,KAAN,CAAWoF,MAAM,YAAjB,SACE,eAAC,KAAMwZ,MAAP,CACEhyB,MAAO2Y,EACP0R,SAAU,SAAC1E,GAAD,OAAWoM,EAAYpM,EAAMlW,OAAOzP,QAC9CiyB,YAAY,QAHd,UAKE,cAAC,KAAMxgB,OAAP,CAAczR,MAAM,aAApB,wBACA,cAAC,KAAMyR,OAAP,CAAczR,MAAM,eAApB,+BAGF,KACU,eAAb2Y,EACC,cAAC6Y,GAAD,CACEhU,GAAIA,EACJvH,KAAyB,gBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,UAA4B1C,OAAO5S,EAC/C4pB,OAAQA,IAEK,iBAAbtU,EACF,cAAC8Y,GAAD,CACEjU,GAAIA,EACJvH,KAAyB,kBAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,UAA8B1C,OAAO5S,EACjD4pB,OAAQA,IAGV,cAAC4E,GAAD,CACErU,GAAIA,EACJvH,KAAMA,EACN2E,OAAQ4C,EAAGF,MAAMxD,cAAc7D,EAAMjU,IAAI,GACzCirB,OAAQA,WCtcf,SAASiF,GACdC,EACAzJ,GAEA,IAAI7c,EACA8c,EACJ,OAAQwJ,EAAKzgB,MACX,IAAK,OACHiX,EAAU,cAACgI,GAAD,gBAAcwB,IACxBtmB,OAAsBxI,IAAd8uB,EAAKxY,KAAqB,WAAa,cAC/C,MACF,IAAK,OACHgP,EAAU,cAACmJ,GAAD,gBAAcK,IACxBtmB,OAAsBxI,IAAd8uB,EAAKlc,KAAqB,WAAa,cAInDtK,IAAMid,KAAK,CACT/c,MACE,sBAAM2G,MAAO,CAAEqW,aAAc,GAAIC,QAAS,gBAA1C,SAA6Djd,IAE/D8c,UACAI,UAAW,CAAEC,QAAS,GACtBhd,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,EACNR,OAAQA,EACRS,MAAO,qBACP3W,MAAO,CAAE4W,IAAK,MCVX,IAAMgJ,GAAU9L,cACrB,YAcO,IAAD,EAbJ+L,EAaI,EAbJA,SACAC,EAYI,EAZJA,SACAra,EAWI,EAXJA,MACAsa,EAUI,EAVJA,cAWA,EAAsC9L,oBAAS,GAA/C,mBAAO+L,EAAP,KAAoBC,EAApB,KACA,EACEtM,KADkBf,GAApB,EAAQvG,WAAR,EAAoBuG,oBAAoBI,EAAxC,EAAwCA,iBAAkBC,EAA1D,EAA0DA,WAG1DiN,aACE,IACqB,OAArBJ,EAAS1G,QAAmB,aAAW0G,EAAS1G,QAAQ+G,SACxD,CAACL,EAAS1G,QAASgH,GAAcL,EAAcxU,IAAIwU,EAActwB,UAIjE,IAAM4wB,EAAYN,EAAcxU,IAAI5b,IAAIywB,IAAe9tB,KAAK,OAC5D4tB,aACE,WACA,WACMH,EAActwB,MAAQswB,EAAcxU,IAAIja,OAAS,GACnDyuB,EAAcO,SAASP,EAActwB,MAAQ,KAGjD,CAACgW,EAAMjW,GAAIuwB,EAActwB,MAAO4wB,IAElCH,aACE,WACA,WACMH,EAActwB,MAAQ,GACxBswB,EAAcO,SAASP,EAActwB,MAAQ,KAGjD,CAACgW,EAAMjW,GAAIuwB,EAActwB,MAAO4wB,IAIpC,IAAMrV,EAAK+U,EAAcxU,IAAIwU,EAActwB,OAErC8wB,EAAQ,CACZC,UAAW,WACL5V,GAAcG,QAAQC,GACxB4H,EAAmBrd,OAAOyV,GACjBA,EAAGF,MAAMvE,OAClBqM,EAAmBpd,OAAOwV,IAG9ByV,SAAU,WACR,IAAMjxB,EAAKojB,EAAmBvH,oBAAoB5F,GAC5Cib,EAAOX,EAAcxU,IAAIja,OACzByE,EAAQkV,GAAmB0V,6BAC/BnxB,EACAojB,EAAmBxF,wBAAwB3H,GAC3CA,GAEF1P,EAAM+U,MAAQE,EAAGF,MAAMlE,QACvB7Q,EAAM+U,MAAMtb,GAAKA,EACjBojB,EAAmBld,eAAeK,GAClCgqB,EAAcO,SAASI,IAEzBE,YAAa,WACPhW,GAAcG,QAAQC,GACxB4H,EAAmBjd,kBAAkBqV,EAAG9U,SAExC0c,EAAmB7d,OAAOiW,EAAGxb,IAE/BuwB,EAAcO,SAAS,GACvBL,GAAe,IAEjBY,YAAa,WACXriB,GAAOsiB,iBACJtmB,KAAK,CAAEwR,QAASvG,EAAMjW,IAAM,CAAEuxB,YAAY,IAC1C1kB,iCAA4BxL,GAAW,IAE5CmwB,WAAY,WACVxiB,GAAOyiB,gBACJzmB,KAAK,CAAEwR,QAASvG,EAAMjW,IAAM,CAAEuxB,YAAY,IAC1C1kB,iCAA4BxL,GAAW,IAE5CqwB,gBAAiB,WACfxB,GAAS,CAAExgB,KAAM,OAAQ8L,QAE3BmW,gBAAiB,kBAAMzB,GAAS,CAAExgB,KAAM,OAAQ8L,QAChD6B,QAAS,WACPmG,EAAiBnG,QAAQpH,GAAO1X,MAAK,WAAO,IAAD,EACzC,UAAA8xB,EAASzG,eAAT,SAAkB2C,SAClB9I,EAAWxN,MAAMJ,iCAKjB+b,EACJ,eAAC,KAAD,CACEjjB,QAAS,SAACgV,GACHA,EAAMziB,IAAImU,WAAW,iBACxBob,GAAe,IAHrB,UAOE,eAAC,KAAKoB,UAAN,CAA+BhoB,MAAM,wBAArC,UACG0mB,EAAcxU,IAAIja,OAAS,EAC1B,cAAC,KAAKgwB,QAAN,CAEEjoB,MAAM,cACNkoB,KAAM,cAAC,KAAD,CAAiBA,KAAMC,OAH/B,SAKGzB,EAAcxU,IAAI5b,KAAI,SAACqb,EAAIvb,GAC1B,OACE,eAAC,KAAKmR,KAAN,CAEEzC,QAAS,kBAAM4hB,EAAcO,SAAS7wB,IACtCuQ,MAAO,CACL2Y,WACElpB,IAAUswB,EAActwB,MAAQ,YAASoB,GAL/C,UAQG+Z,GAAcG,QAAQC,GACrB,cAAC,KAAD,CAAK2S,MAAM,SAAX,mBACE3S,EAAGF,MAAMvE,MACX,cAAC,KAAD,CAAKoX,MAAM,SAAX,qBACE,KACH3S,EAAGlb,OAbN,aACakb,EAAGlb,WAPhB,cAwBJ,KACJ,cAAC,KAAK8Q,KAAN,CAEEme,UAAWnU,GAAcG,QAAQC,KAAQA,EAAGF,MAAMvE,MAClDgb,KAAM,cAACE,GAAA,EAAD,IACNtjB,QAASoiB,EAAMC,UAJjB,+BACM,cAON,cAAC,KAAK5f,KAAN,CAEEzC,QAASoiB,EAAME,SACfc,KAAM,cAACG,GAAA,EAAD,IAHR,0BACM,aAMN,cAAC,KAAK9gB,KAAN,CAEEnH,QAAQ,EACR8nB,KAAM,cAACI,GAAA,EAAD,IAHR,SAKE,cAAC,KAAD,CACEtoB,MAAM,oDACNyiB,UAAWyE,EAAMK,YACjBhnB,SAAU,kBAAMqmB,GAAe,IAC/B3mB,OAAO,MACPI,WAAW,KALb,mCAJI,kBAcN,cAAC,KAAKkH,KAAN,CAEEme,UAAU,EACVwC,KAAM,cAACK,GAAA,EAAD,IAHR,0BACM,gBAMN,cAAC,KAAKhhB,KAAN,CAEEzC,QAASoiB,EAAMM,YACfU,KAAM,cAACM,GAAA,EAAD,IAHR,0BACM,kBAlEY,YAyEpB,cAAC,KAAKC,QAAN,IACA,cAAC,KAAKlhB,KAAN,CAEE2gB,KAAM,cAAC,KAAD,CAAiBA,KAAMQ,OAC7B5jB,QAAS8U,EAAWxN,MAAML,0BAH5B,yCACM,oBAMN,cAAC,KAAKxE,KAAN,CAEE2gB,KAAM,cAAC,KAAD,CAAiBA,KAAMS,OAC7B7jB,QAASoiB,EAAMS,WAHjB,wBACM,kBASV,OACE,qCACE,eAAC,IAAD,CAAqBhhB,MAAO,CAAEiW,MAAO,SAArC,eACwBplB,IAArBivB,EAAS1G,QAAwB,KAChC,eAAC,KAAD,CACEuE,MACE/S,GAAcG,QAAQC,IAAOA,EAAGF,MAAMvE,MAAQ,SAAW,QAE3DvG,MAAO,CAAEiiB,YAAa,EAAGC,OAAQ,WACjC/jB,QAASoiB,EAAMC,UALjB,oBAOU,IACP5V,GAAcG,QAAQC,GACnB,QACAA,EAAGF,MAAMvE,MACT,UACA,QACHwZ,EAAcxU,IAAIja,OAAS,EAA3B,YAAoC0Z,EAAGlb,KAAvC,KAAiD,MAGrDmjB,EAAWxN,MAAMP,wBAChB,cAAC,KAAD,CACEyY,MAAO,WACP3d,MAAO,CAAEiiB,YAAa,EAAGC,OAAQ,WACjC/jB,QAAS8U,EAAWxN,MAAML,0BAH5B,oCAOE,OA1BK,WA4BX,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ7M,KAAK,QAAQ4F,QAAO,UAAE2hB,EAAS1G,eAAX,aAAE,EAAkB+G,SAAhD,8BAGA,cAAC,IAAD,CAAQ5nB,KAAK,QAAQ4F,QAASoiB,EAAMW,gBAApC,sBAGA,cAAC,IAAD,CAAQ3oB,KAAK,QAAQ4F,QAASoiB,EAAMY,gBAApC,sBAGA,cAAC,IAAD,CAAQ5oB,KAAK,QAAQ4F,QAASoiB,EAAM1T,QAApC,qBAGA,cAAC,KAAD,CACEsV,QAASf,EACTgB,gBAAiBnC,EACjBoC,QAASrC,EAHX,SAKE,eAAC,IAAD,CAAQznB,KAAK,QAAb,kBACO,cAAC+pB,GAAA,EAAD,WAnBA,iBA4BnB,SAASlC,GAAcpV,GACrB,OAAOJ,GAAcG,QAAQC,GAAMA,EAAG9U,QAAU8U,EAAGxb,G,8FCvR9C,SAAS+yB,GACdC,EACAC,EACAC,EAHK,GAgBM,IAXTC,EAWQ,EAXRA,QACAC,EAUQ,EAVRA,QACAxe,EASQ,EATRA,IACAye,EAQQ,EARRA,OAgCF,OAvBAF,OAAsB9xB,IAAZ8xB,EAAwB,EAAIA,EACtCC,OAAsB/xB,IAAZ+xB,EAAwB,EAAIA,OAEvB/xB,IAAXgyB,GACFH,EAAM/yB,KAAI,YAAqB,IAAlBiT,EAAiB,EAAjBA,KAAMhO,EAAW,EAAXA,EAAGkuB,EAAQ,EAARA,EACpBN,EAAOO,SAAS,OAAQ,CACtBC,MAAM,2BACJpgB,OACAhO,EAAGA,EAAI+tB,EACPG,EAAGA,EAAIF,EACPK,WAAYR,EAASQ,YAClB7e,GALA,IAOH8e,KAAML,EAAOlF,MACbkF,OAAQA,EAAOlF,MACfwF,UAAWN,EAAOlM,QAEpB7mB,KAAM,UACNszB,WAAW,OAKVV,EAAM/yB,KAAI,YAAqB,IAAlBiT,EAAiB,EAAjBA,KAAMhO,EAAW,EAAXA,EAAGkuB,EAAQ,EAARA,EAC3B,OAAON,EAAOO,SAAS,OAAQ,CAC7BC,MAAM,cACJpgB,OACAsgB,KAAM,QACNtuB,EAAGA,EAAI+tB,EACPG,EAAGA,EAAIF,EACPK,WAAYR,EAASQ,YAClB7e,GAELtU,KAAM,OACNszB,WAAW,OCtCV,SAASC,GAAmBZ,GACjC,IAAMa,EAAeb,EAASc,oBAAoB,GA+DlD,OAVAC,KAAGC,aACD,cACA,CACEC,KAAM,SAACtf,EAAmBoe,GACxB,OAvDO,SAACpe,EAAmBoe,GACfpe,EAAIpE,MAAMwZ,QADgC,IAAD,IAGnDmK,GAAc,UAAAvf,EAAIwf,gBAAJ,eAAc1xB,SAAU,EAuB5C,EAAyBuwB,EAASoB,SAChCzf,EAAI4B,MACJsd,EACA,UAHMZ,EAAR,EAAQA,MAAO/L,EAAf,EAAeA,MAMTQ,EAAQqL,EAAOO,SAAS,SAAU,CACtCC,MAAM,cAGJ3vB,EALkB,IAMf+Q,EAAIpE,OAETlQ,KAAM,WASR,OANAyyB,GAASC,EAAOC,EAAUC,EAAO,CAC/BC,SAAUhM,EAAQ,EAClBiM,QAboB,GAaKe,EACzBvf,IAAG,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAKwf,gBAAP,aAAE,EAAe5jB,MACpB6iB,OAAQ,CAAElF,MAAO,QAAShH,MAAO,KAE5BQ,EAOIuM,CAAKtf,EAAsBoe,KAGtC,eAGKC,E,8CCtFHqB,GAAU,SACd1wB,EACA2wB,GAEA,OAAQ,WAAmB,IAAD,uBAAdpE,EAAc,yBAAdA,EAAc,gBACxB,IAAMjvB,EAAMivB,EAAKrtB,KAAK,KAItB,YAHmBzB,IAAfkzB,EAAMrzB,KACRqzB,EAAMrzB,GAAO0C,EAAE,WAAF,EAAMusB,IAEdoE,EAAMrzB,KAcJszB,GAAb,aAUE,WAAYC,GAAuB,IAAD,gCATxBA,eASwB,OARxBC,0BAQwB,OAPxBC,iBAA8C,GAOtB,KANxBC,kBAA+C,GAMvB,KALxBC,uBAAoD,GAK5B,KAJxBC,0BAEN,GAE8B,KAqBlCC,SAAW,WACT,OAAO,EAAKC,kBAAkB,EAAG,EAAKP,UAAU3yB,OAAS,EAAG,IAtB5B,KAqClCkzB,kBAAoBV,IAClB,SACEphB,EACAC,EACA8hB,GAEA,IAAMC,EAAiB,EAAKC,sBAC1BjiB,EACAC,EACA8hB,GAEF,QAAuB5zB,IAAnB6zB,GAAgCA,GAAkB,EAEpD,MAAO,CACLE,YAAa,GACbC,SAAU,EAAKC,oBAAoBpiB,EAAOC,EAAK8hB,IAWnD,IAPA,IAAMM,EAAe,CACnBC,OAAQ,EACRH,SAAUI,IACVL,YAAa,IAINI,EAAQriB,EAAM,EAAGqiB,EAAQtiB,EAAOsiB,IACvC,GAAmC,QAA/B,EAAKf,UAAUe,GAAO9lB,KAA1B,CAEA,IAAMgmB,EAA2B,EAAKV,kBACpC9hB,EACAsiB,EACAP,GAEIU,EAA2B,EAAKX,kBACpCQ,EAAQ,EACRriB,EACA8hB,GACGS,EAAyBN,YAAYtzB,OAAS,EAC3C4zB,EAAyBN,YAAYtzB,OAAS,EAC9C,IAIN4zB,EAAyBL,SACvBM,EAAyBN,SAC3BE,EAAaF,WAEbE,EAAaC,MAAQA,EACrBD,EAAaF,SACXK,EAAyBL,SACzBM,EAAyBN,SAC3BE,EAAaH,YACXM,EAAyBN,YAAYphB,QACvCuhB,EAAaH,YAAYtxB,KAAK0xB,GAC9BD,EAAaH,YAAcG,EAAaH,YAAYhZ,OAClDuZ,EAAyBP,cAK/B,MAAO,CACLA,YAAaG,EAAaH,YAC1BC,SAAUE,EAAaF,YAG3B32B,KAAKo2B,2BAvG2B,KAkHlCc,kBAAoBtB,IAAQ,SAACphB,EAAeC,GAE1C,IADA,IAAI0iB,EAAM,EACDvnB,EAAI4E,EAAO5E,EAAI6E,EAAK7E,IACI,YAA3B,EAAKmmB,UAAUnmB,GAAGoB,OAEtBmmB,GAAO,EAAKpB,UAAUnmB,GAAG6Y,OAQ3B,MAJiC,YAA7B,EAAKsN,UAAUthB,GAAKzD,OAEtBmmB,GAAO,EAAKpB,UAAUthB,GAAKgU,OAEtB0O,IACNn3B,KAAKi2B,kBAhI0B,KAuIlCmB,mBAAqB,SAAC5iB,EAAeC,GAInC,IAHA,IAAI4iB,EAAiB,EACjBC,EAAgB,EAEX1nB,EAAI4E,EAAO5E,GAAK6E,EAAK7E,IAAK,CACjC,IAAM7L,EAAO,EAAKgyB,UAAUnmB,GACV,SAAd7L,EAAKiN,OACPqmB,GAAkBtzB,EAAKwzB,QACvBD,GAAiBvzB,EAAKyzB,QAI1B,MAAO,CAAEH,iBAAgBC,kBAnJO,KA8JlCb,sBAAwB,SAACjiB,EAAeC,EAAagjB,GACnD,IAAMN,EAAM,EAAKD,kBAAkB1iB,EAAOC,GACpCijB,EAAgB,EAAK1B,qBAAqByB,GAEhD,GAAIN,IAAQO,EACV,OAAO,EAGT,IAAMC,EAAU,EAAKP,mBAAmB5iB,EAAOC,GAC/C,GAAI0iB,EAAMO,EAAe,CACvB,GAAIC,EAAQN,eAAiB,EAC3B,OAGF,OAA+B,IAA3BM,EAAQN,gBACFK,EAAgBP,GAAO,IAEzBO,EAAgBP,GAAOQ,EAAQN,eAEzC,OAAIM,EAAQL,eAAiB,OAA7B,GAGQI,EAAgBP,GAAOQ,EAAQL,eApLP,KAuLlCM,mBAAqB,SAACpjB,EAAeC,EAAagjB,GAChD,IAAMtyB,EAAI,EAAKsxB,sBAAsBjiB,EAAOC,EAAKgjB,GACjD,YAAU90B,IAANwC,GAAmBA,GAAK,GAClB4xB,IAGH,KAAP,IAAO5xB,EAAK,IA7LoB,KAgMlCyxB,oBAAsBhB,IACpB,SAACphB,EAAeC,EAAagjB,GAC3B,IAAMI,EAAe,EAAK9B,UAAUthB,GAC9BqjB,EACkB,YAAtBD,EAAa7mB,KAAqB6mB,EAAaE,KAAO,EAClDC,EAAc,EAAKJ,mBAAmBpjB,EAAOC,EAAKgjB,GAGxD,OAAIK,GAAe,EACV,SAAC,EAAIE,EAAcF,EAAgB,GAHlB,EAIfA,KAAiBf,IACnB,SAAC,EAAIiB,EAAgB,GALJ,EAOjB,SAAC,EAAIA,EAAgB,GAArB,SAAyBF,EAAe,GAPvB,IAU5B93B,KAAKk2B,mBAhN2B,KAmNlC+B,yBAA2B,SACzBzjB,EACAC,EACAiiB,EACAH,GAIA,IAFA,IAAIO,EAAQtiB,EACRmiB,EAAW,EACN/mB,EAAI,EAAGA,EAAI8mB,EAAYtzB,OAAQwM,IACtC+mB,GAAY,EAAKC,oBACfE,EACAJ,EAAY9mB,GACZ2mB,EAAiB3mB,GAEnBknB,EAAQJ,EAAY9mB,GAAK,EAQ3B,OANA+mB,GAAY,EAAKC,oBACfE,EACAriB,EACA8hB,GAAkBG,EAAYtzB,OAAS,EAAIszB,EAAYtzB,OAAS,EAAI,KArOtEpD,KAAK+1B,UAAYA,EAAUvB,MAAM/yB,KAAI,SAACsC,GAOpC,OANAA,EAAOzB,OAAO2G,OAAO,GAAIlF,IACpB0kB,MAAQ1kB,EAAK0kB,MAAQ,GACR,SAAd1kB,EAAKiN,OACPjN,EAAKwzB,QAAUxzB,EAAKwzB,QAAU,GAC9BxzB,EAAKyzB,OAASzzB,EAAKyzB,OAAS,IAEvBzzB,KAET/D,KAAKg2B,qBAAuB,SAACpmB,GAAD,OAAemmB,EAAUmC,cAActoB,GAAK,OCoC/DuoB,GAAb,WAME,WAAY3D,EAAwB4D,GAAiC,IAAD,gCALpDC,gBAKoD,OAJpD7D,WAIoD,OAHpD4D,iBAGoD,OAFpDF,mBAEoD,OAwHpEI,YAAc,SAACC,GACb,IAAMC,EAAQ,GACVhkB,EAAQ,GAEZ+jB,EAAaA,EAAWjjB,SACblQ,KAAK,EAAKovB,MAAMpxB,OAAS,GALmB,oBAOrCm1B,GAPqC,IAOvD,2BAA8B,CAAC,IAAD,EAAnB9jB,EAAmB,QACtB+f,EAAQ,EAAKA,MAAMlf,MAAMd,EAAOC,GAChCgkB,EAAO,GAFe,cAKTjE,GALS,IAK5B,2BAA0B,CAAC,IAAhBkE,EAAe,QACN,YAAdA,EAAK1nB,OAKO,QAAd0nB,EAAK1nB,MACLynB,EAAKr1B,OAAS,GACiB,QAA/Bq1B,EAAKA,EAAKr1B,OAAS,GAAG4N,MAGtBynB,EAAKA,EAAKr1B,OAAS,GAAGsR,MAAQgkB,EAAKhkB,KACnC+jB,EAAKA,EAAKr1B,OAAS,GAAGqlB,OAASiQ,EAAKjQ,OAItCgQ,EAAKrzB,KAAK9C,OAAO2G,OAAO,GAAIyvB,MArBF,8BAyBD,YAAzB,EAAKlE,MAAM/f,GAAKzD,MAChB,EAAKwjB,MAAM/f,GAAKC,KAAKtR,OAAS,GAE9Bq1B,EAAKrzB,KAAK,EAAKovB,MAAM/f,IAGvBD,EAAQC,EAAM,EACd+jB,EAAMpzB,KAAKqzB,IAvC0C,8BA0CvD,OAAOD,GAlK2D,KAsKpEpO,OAAS,SACPoO,EADO,GAUwD,IAP7DG,EAO4D,EAP5DA,WACAC,EAM4D,EAN5DA,cACA7K,EAK4D,EAL5DA,SACA8K,EAI4D,EAJ5DA,MAEAC,GAE4D,EAH5D9I,cAG4D,EAF5D8I,YAGIC,EAAiB,GACjBX,EAAcI,EAAM/2B,KAAI,SAACg3B,GAAD,OAC5BA,EAAKO,QAAO,SAAChkB,EAAGtO,GAAJ,OAAUsO,EAAItO,EAAE+hB,QAAO,MAE/BwQ,EAAcT,EAAM/2B,KAAI,SAACg3B,EAAM7oB,GAAP,OAAa,EAAKsoB,cAActoB,MAE9D,GAAIkpB,EAEF,IADA,IAAMI,EAAStb,KAAKC,IAAL,MAAAD,KAAI,aAAQwa,IAClBxoB,EAAI,EAAGA,EAAIqpB,EAAY71B,OAAQwM,IAClCqpB,EAAYrpB,GAAKspB,IACnBD,EAAYrpB,GAAKspB,GAKvB,IAAK,IAAItpB,EAAI,EAAGA,EAAI4oB,EAAMp1B,OAAQwM,IAAK,CACrC,IAAM6oB,EAAOD,EAAM5oB,GAGbunB,EAAMiB,EAAYxoB,GAClBupB,EAAaF,EAAYrpB,GACzBwpB,EAASX,EAAK/0B,QAAO,SAACgD,GAAD,MAAkB,SAAXA,EAAEsK,QAAiB5N,OAC/Ci2B,EACJlC,EAAMgC,GAAwB,YAAVN,EAChB,EAAKR,WACLza,KAAK0b,IAAIH,EAAahC,GAAOiC,EAAS,EAAKf,WAG3CzD,GAAKhlB,EAAI,GAAK+oB,EAAc5K,GAAY6K,EAAgB,GAAM,EAChElyB,EAAI,EAQR,GANc,WAAVmyB,EACFnyB,IAAMyyB,EAAahC,GAAO,EACP,UAAV0B,IACTnyB,GAAKyyB,EAAahC,GAGhBkC,IAAc,EAAKhB,WAAY,CACjC,IAAMkB,EAAgBj3B,OAAO2G,OAC3B,CACEvC,IACAkuB,IACA4E,cAAerC,EACfM,WAAY7nB,GAEd6oB,EAAK,IAEPc,EAAc7kB,KAAO+jB,EAAKh3B,KAAI,SAACiF,GAAD,OAAOA,EAAEgO,QAAMtQ,KAAK,IAClD20B,EAAe3zB,KAAKm0B,OACf,CAAC,IAAD,gBACcd,GADd,IACL,2BAAyB,CAAC,IAAfC,EAAc,QACjBc,EAA8B,SAAdd,EAAK1nB,KAAkBqoB,EAAYX,EAAKjQ,MACxDgR,EAAen3B,OAAO2G,OAC1B,CACEvC,IACAkuB,IACA4E,gBACA/B,WAAY7nB,GAEd8oB,GAGFhyB,GAAK8yB,EACLT,EAAe3zB,KAAKq0B,IAdjB,gCAmBT,MAAO,CAAEjF,MAAOuE,EAAgBX,gBApPhCp4B,KAAKw0B,MAAQA,EACbx0B,KAAKo4B,YAAcA,EAEf5zB,MAAMC,QAAQ2zB,GAChBp4B,KAAKk4B,cAAgB,SAACtoB,GAAD,OACnBA,EAAIwoB,EAAYh1B,OACZg1B,EAAYxoB,GACZwoB,EAAYA,EAAYh1B,OAAS,IAEvCpD,KAAKk4B,cAAgB,SAACtoB,GAAD,OAAewoB,GAGtCp4B,KAAKq4B,WAAa,EAbgD,oBAc/C7D,GAd+C,IAclE,2BAA0B,CAAC,IAAhBkE,EAAe,QACxB,GAAkB,SAAdA,EAAK1nB,KAAiB,CACxBhR,KAAKq4B,WAAaK,EAAKjQ,MACvB,QAjB8D,+BANtE,yDAsCE,SACE/T,EACAglB,EACAC,EACAC,GAEkB,IADlBC,EACiB,uDADK,IAEhBrF,EAAyB,GAE3BsF,EAASplB,EAAKqlB,MAAM,SAASr2B,QAAO,SAACs2B,GAAD,OAAOA,EAAE52B,OAAS,KAC1D,QAAkBT,IAAdi3B,GAA2BA,EAAUx2B,OAAS,EAAG,CACnD,IAAM62B,EAAK,IAAIC,OAAJ,cAAkBN,EAAUx1B,KAAK,IAAjC,QAA4C,KACvD01B,EAASA,EAAOK,SAAQ,SAACH,GAAD,OAAOA,EAAEI,MAAMH,MAKzC,IAAM5B,EAAaqB,EAAU,KACvBW,EAAcX,EAAU,KACxBY,EAAU,SAACC,GAAD,MAAkB,KAAKC,KAAKD,EAAKE,OAAO,KAGlDlD,EAAUc,EAAa,EACvBb,EAASa,EAAa,EAwD5B,OAtDAyB,EAAOnW,SAAQ,SAACqW,GACd,GAAIM,EAAQN,GAAZ,CACE,IAAMU,EAAU,CACd1pB,KAAM,OACNyX,MAAO4P,EACPb,SACAD,UACA7iB,KAAMslB,GAERxF,EAAMpvB,KAAKs1B,QAeb,GAVIlG,EAAMpxB,OAAS,GAAsC,QAAjCoxB,EAAMA,EAAMpxB,OAAS,GAAG4N,MAC9CwjB,EAAMpvB,KAAK,CACT4L,KAAM,UACNyX,MAAO,EACPsP,KAAM,EACN4C,SAAS,EACTjmB,KAAM,KAINilB,EAAa,CACf,IAAMG,EAASH,EAAYK,GAC3BF,EAAOnW,SAAQ,SAACiX,EAAGhrB,GACjB,IAAMqF,EAAS,CAAEjE,KAAM,MAAOyX,MAAOiR,EAAUkB,GAAIlmB,KAAMkmB,GAEzD,GADApG,EAAMpvB,KAAK6P,GACPrF,EAAIkqB,EAAO12B,OAAS,EAAG,CACzB,IAAMy3B,EAAkB,CACtB7pB,KAAM,UACN0D,KAAM,IACN+T,MAAO4R,EACPtC,KAAM8B,EACNc,SAAS,GAEXnG,EAAMpvB,KAAKy1B,WAGV,CACL,IAAM5lB,EAAS,CAAEjE,KAAM,MAAOyX,MAAOiR,EAAUM,GAAItlB,KAAMslB,GACzDxF,EAAMpvB,KAAK6P,OAIfuf,EAAMpvB,KAAK,CACT4L,KAAM,OACNyX,MAAO,EACP8O,QAAS,IACTC,OAAQ,EACR9iB,KAAM,KAGD8f,MArHX,KCtEasG,GAAb,aAuBE,WACEC,EACAC,GACC,IAAD,gCAzBQC,gBAyBR,OAxBQC,kBAwBR,OAvBQC,YAuBR,OArBcC,UAqBd,OApBcrG,gBAoBd,OAnBchH,cAmBd,OAlBc6K,cAAwB,MAkBtC,KAhBcD,gBAgBd,OAfcN,gBAed,OAdcuB,UAAsB,CACpC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAMA,KA0BFjE,SAAW,SACTjhB,EACA2mB,GAMI,IALJxC,EAKG,uDAL8C,UAM3C9C,EAAY,IAAIoC,GACpBA,GAAUmD,iBACR5mB,EACA,EAAK6mB,YACL,EAAKC,UACL,EAAK5B,WAEPyB,GAUI3E,EAAc,IAAIZ,GAAmBC,GAAWM,WACnDK,YACH,EAA+BX,EAAU3L,OACvC2L,EAAUuC,YAAY5B,GACtB,CACEmC,QACAD,cAAe,EAAKA,cACpB7K,SAAU,EAAKA,SACf4K,WAAY,EAAKA,WACjB3I,cAAe,SACf8I,YAAY,IARRtE,EAAR,EAAQA,MAAO4D,EAAf,EAAeA,YAYT3P,EAAQ7K,KAAKC,IAAL,MAAAD,KAAI,aAAQwa,IACpB5mB,GAAUklB,EAAYtzB,OAAS,GAAK,EAAKu1B,WAE/C,MAAO,CAAEnE,MAAOA,EAAO/L,QAAOjX,WArE9B,KAyEFiqB,eAAiB,SACf/mB,GAMI,IAAD,EALHgnB,EAKG,uDALiB,KACpBC,EAIG,uDAJuB,GAKtBC,EACF,EAAKV,aAAaW,WAChB,EAAKN,YAAY7mB,GACjBgnB,EACAC,GACE,GACAT,EAAe,EAAKA,aAAaY,UAAUF,GAExCxD,EAGL8C,EAHF1C,MAIF,EAAyB,EAAK7C,SAC5BjhB,EACA0jB,EAAY9iB,MAAM,EAAG,GACrB,UAHMkf,EAAR,EAAQA,MAAO/L,EAAf,EAAeA,MAKT3F,EAASlF,KAAKC,IAAL,MAAAD,KAAI,aAAQ4W,EAAM/yB,KAAI,SAACsC,GAAD,OAAUA,EAAK0zB,gBAAe,EAI7DsE,IADNH,EAASnT,EAAQ,GAEXuT,IACFlZ,EAAS,IAAM,GAAKA,EAAS,GAAK,EAAIA,EAAS,GAAK,EAAK6V,WAC3D,EAAKA,WAAa,EAzBjB,cA2BoBnE,GA3BpB,IA2BH,2BAA8B,CAAC,IAAtB5L,EAAqB,QAC5BA,EAAWliB,GAAKq1B,EAChBnT,EAAWgM,GAAKoH,GA7Bf,8BAgCH,MAAO,CACLxH,MAAOA,EACPoH,WAlHF,KAuHFJ,UAAY,SAACjB,GACX,OAAOA,EAAKn3B,OAAS,EAAI,EAAK+3B,OAAOK,UAAUjB,GAAQ,CAACA,IAxHxD,KA4HFlF,oBAAsB,SAAC4G,GACrB,OAAOA,EAAS,EAAKV,YAAY,WA7HjC,KAgJFA,YAAc,SAAC7mB,GACb,OAAO,EAAKumB,WAAWM,YAAY7mB,GAAM+T,OAhJzC,IAAMyT,EAASC,SAASC,cAAc,UACtCp8B,KAAKi7B,WAAaiB,EAAOG,WAAW,MACpCr8B,KAAKq4B,WAAar4B,KAAKu7B,YAAY,KAEnCv7B,KAAKo7B,KAAOL,EAAQK,MAAR,UAAmBL,EAAQhN,SAA3B,cAAyCgN,EAAQhG,YAC7D/0B,KAAK+0B,WAAagG,EAAQhG,WAC1B/0B,KAAK+tB,SAAWgN,EAAQhN,SACxB/tB,KAAKi7B,WAAWG,KAAOp7B,KAAKo7B,KAE5Bp7B,KAAKm7B,OAAS,IAAImB,KAAOC,WAEP55B,IAAdq4B,SAC2Br4B,IAAzBq4B,EAAUrC,aACZ34B,KAAK44B,cAAgBoC,EAAUrC,iBAELh2B,IAAxBq4B,EAAUpB,YACZ55B,KAAK45B,UAAYoB,EAAUpB,YAI/B55B,KAAK24B,WAAa34B,KAAK+tB,SAAW/tB,KAAK44B,cACvC54B,KAAKk7B,aAAe,IAAIsB,GAAax8B,SAhD5B86B,GA6JJ2B,WAAa,SAACC,GACnB,IAAM5qB,EAAQ6qB,iBAAiBD,GACvBE,EAA6D9qB,EAA7D8qB,UAAWC,EAAkD/qB,EAAlD+qB,YAAapS,EAAqC3Y,EAArC2Y,WAAYsD,EAAyBjc,EAAzBic,SAAUgH,EAAejjB,EAAfijB,WACtD,MAAO,CACLqG,KAAK,GAAD,OAAKwB,EAAL,YAAmBC,EAAnB,YAAmCpS,EAAnC,YAAkDsD,EAAlD,YAA+DgH,GACnEhH,SAAUjgB,WAAWigB,GACrBgH,eAYC,IAAMyH,GAAb,aAYE,WAAYM,GAAsB,IAAD,gCAXvBA,eAWuB,OAVvBnE,gBAUuB,OATvBoE,mBASuB,OAMjClB,WAAa,SACXmB,GAOA,IAJY,IAFZtB,EAEW,uDAFS,KACpBC,EACW,uDADe,GAGrBnnB,EAAe,EAARC,EAAWinB,EACnBuB,OAAat6B,EACRiN,EAAI,EAAGA,EAAI8rB,EAAW9rB,IAAK,CAClC,GAAI6E,EAAMD,IAAU,EAAG,CACrByoB,EAAaxoB,EACb,MAGF,IAAMmnB,EAAShe,KAAKsf,MAAM1oB,EAAQC,GAAO,GACnC0oB,EAAI,EAAKrB,UAAUF,GAAQwB,YAEjC,GAAID,EAAIH,EACNxoB,EAAQonB,MADV,CAKA,KAAIuB,EAAIH,EAAarB,GAArB,CAIAsB,EAAarB,EACb,MAJEnnB,EAAMmnB,GAOV,QAAmBj5B,IAAfs6B,EACF,MAAM,IAAI/nB,MAAJ,sBACW8nB,EADX,2EACwFtB,EADxF,cAEF,EAAKI,UAAUJ,GAAW0B,cAOhC,OAAOH,GA9CwB,KAkDjCnB,UAAY,SAACF,GACX,QAAmCj5B,IAA/B,EAAKo6B,cAAcnB,GAAuB,CAK5C,IAJA,IAAM5gB,EAAI,EAAKqiB,yBAAyBzB,GAElCpD,EAAQ,GACR8E,EAAS,GACN1tB,EAAIoL,EAAGpL,EAAI,EAAGA,IACrB4oB,EAAMpzB,KAAK,EAAK8xB,kBAAkBtnB,EAAGgsB,IACrC0B,EAAOl4B,KAAKw2B,EAAS,EAAKjD,YAAc/oB,EAAI,KAE9C4oB,EAAMpzB,KAAK,EAAKm4B,yBAAyB3B,IACzC0B,EAAOl4B,KAAKw2B,EAAS,EAAKjD,WAAa,GACvC,IAAK,IAAI/oB,EAAIoL,EAAI,EAAGpL,GAAK,EAAGA,IAC1B4oB,EAAMpzB,KAAKozB,EAAM5oB,IACjB0tB,EAAOl4B,KAAKw2B,EAAS,EAAKjD,YAAc/oB,EAAI,KAG9C,EAAKmtB,cAAcnB,GAAU,CAC3BpD,QACA8E,SACAE,YAAahF,EAAMxd,GACnBoiB,YAAa5E,EAAMQ,QAAO,SAAChkB,EAAGC,GAAJ,OAAUD,EAAIC,MAI5C,OAAO,EAAK8nB,cAAcnB,IA3EK,KA+EjCyB,yBAA2B,SAACzB,GAC1B,OAAOhe,KAAK6f,OAAO7B,EAAS,EAAKjD,WAAa,GAAK,EAAKA,aAhFzB,KAoFjCzB,kBAAoB,SAAC31B,EAAeq6B,GAClC,OAAiE,EAA1Dhe,KAAK8f,KAAK,SAAA9B,EAAU,GAAV,SAAe,EAAKjD,WAAap3B,EAAU,KArF7B,KAwFjCg8B,yBAA2B,SAAC3B,GAC1B,OAA6D,EAAtDhe,KAAK8f,KAAK,SAAA9B,EAAU,GAAV,SAAe,EAAKjD,WAAa,EAAM,KAxFxD34B,KAAK88B,UAAYA,EACjB98B,KAAK24B,WAAamE,EAAUnE,WAC5B34B,KAAK+8B,cAAgB,MC1JZY,GAAb,WAQE,WAAYjB,EAA2B3sB,GAAsB,IAAD,gCAPpDqI,aAOoD,OANpDskB,eAMoD,OALrD9f,WAKqD,OAJpD3a,UAIoD,OAHrD8N,WAGqD,OAFpDwkB,cAEoD,OA8G5DqJ,aAAe,SAAC7tB,GACd,QAAK4d,KAAEkQ,QAAQ,EAAK9tB,MAAMqa,OAAQra,EAAMqa,UAIpC,EAAKra,MAAM+tB,0BAA4B/tB,EAAM+tB,0BAIjD,EAAK/tB,MAAQA,GACN,KAxHmD,KA2H5Duc,QAAU,WACR,EAAK1P,MAAM0P,WA5H+C,KA2M5DyR,UAAY,WACV,EAAKnhB,MAAMmhB,aA5M+C,KAgN5DC,iBAAmB,SAAC/7B,EAAiBokB,GAC/B,EAAKjO,QAAU,GACjB,EAAKwE,MAAMrU,QAEb,EAAKtG,KAAOA,EACZ,EAAK2a,MAAM3a,KAAK,CAAE0V,MAAO1V,EAAK0V,MAAOQ,MAAOlW,EAAKkW,QACjD,EAAKyE,MAAMqhB,SACX,EAAK7lB,SAAW,OAECzV,IAAb0jB,GACFA,KA1NwD,KA+N5D6X,aAAe,SAAClD,GACd,EAAKpe,MAAMshB,aAAalD,GACxB,EAAKpe,MAAMwN,UAjO+C,KA2O5D+T,oBAAsB,YASN,IARdC,EAQa,EARbA,OACA5sB,EAOa,EAPbA,OASI8iB,EAAQ,EAAK1X,MAAMlb,IAAI,SAC3B4yB,EAAM+J,cACN,IAAIC,EAAOhK,EAAMiK,gBACjB,GAAqB,IAAfD,EAAK7V,OAA+B,IAAhB6V,EAAK9sB,OAAe,CAE5C,IAEIgtB,EAFAC,EAAa,EAAK/B,UAAUgC,YAGhC,OAAQltB,EAAOR,MACb,IAAK,YACHwtB,EAAcF,EAAK9sB,OAASA,EAAOmtB,YACnC,MACF,IAAK,uBACH,IAAIC,EAAiB,EAAKlC,UAAUmC,wBAAwBnW,IACxDoW,EAAkB/4B,OAAOg5B,QAE7BP,EADqBrC,SAAS6C,gBAAgBC,cAG3CL,EAAiBE,GAClBttB,EAAO0tB,aACT,MACF,IAAK,aACHV,EAAc,EAAKzuB,MAAMovB,WAE7B,EAAKviB,MAAMwiB,WAAWX,EAAYD,IACnB,IAAXJ,EACF,EAAKxhB,MAAMyiB,OACTZ,EAAa,EAAIH,EAAK7V,MAAQ,EAC9B+V,EAAc,EAAIF,EAAK9sB,OAAS,GAGlC,EAAKoL,MAAMyiB,OACT,EAAKtvB,MAAMuvB,YAAc,EACzB,EAAKvvB,MAAMwvB,WAAa,GAI9B,OAAOjB,GA3RmD,KAgT5DkB,kBAAoB,SAClBC,EACAC,EACAx6B,EACAusB,EACApL,EACAsZ,EACAC,GAEA,GAAIH,GAAY,EAMd,OAJAv6B,EAAE,WAAF,eAAMusB,cACW9uB,IAAb0jB,GACFA,KAKJ,IACMiY,EADQ,EAAK1hB,MAAMlb,IAAI,SACV68B,gBAInB,GAFAoB,EAAoBA,GAAqB,QAExBh9B,IAAbi9B,EAAwB,CAC1B,GACEhiB,KAAK0b,IAAIsG,EAASnX,MAAQ6V,EAAK7V,OAASkX,GACxC/hB,KAAK0b,IAAIsG,EAASpuB,OAAS8sB,EAAK9sB,QAAUmuB,EA8B1C,YAzBAv5B,YAAW,WACT,IACMy5B,EADQ,EAAKjjB,MAAMlb,IAAI,SACN68B,gBAGrB3gB,KAAK0b,IAAIgF,EAAK7V,MAAQoX,EAASpX,QAAUkX,GACzC/hB,KAAK0b,IAAIgF,EAAK9sB,OAASquB,EAASruB,SAAWmuB,EAG3C,EAAKH,kBACHC,EAAW,EACXC,EACAx6B,EACAusB,EACApL,EACAsZ,EACAE,IAGF36B,EAAE,WAAF,eAAMusB,SACW9uB,IAAb0jB,GACFA,OAGHqZ,GAGHt5B,YAAW,WACT,EAAKo5B,kBACHC,EAAW,EACXC,EACAx6B,EACAusB,EACApL,EACAsZ,EACArB,KAEDoB,QAGLt5B,YAAW,WACT,EAAKo5B,kBACHC,EACAC,EACAx6B,EACAusB,EACApL,EACAsZ,EACArB,KAEDoB,IAhYL1/B,KAAKoY,QAAU,EACfpY,KAAK+P,MAAQA,EACb/P,KAAK08B,UAAYA,EACjB18B,KAAKiC,KAAO,CACV0V,MAAO,GACPQ,MAAO,IAQTnY,KAAKu0B,SAAW,IAAIuG,GALR,CACV/F,WACE,wLACFhH,SAAU,KLeT,SAA0BwG,GAC/B,IAAMa,EAAeb,EAASc,oBAAoB,GAE5CG,EAAO,SAACtf,EAAiBoe,GAA2B,IAAD,EACjDwL,EAAK5pB,EAAIpE,MAAMiuB,cAAgB,EAC/BC,EAAK9pB,EAAIpE,MAAMmuB,eAAiB,EACtC,EAAiC1L,EAASoB,SACxCzf,EAAI4B,MACJ5B,EAAI7L,MAAQ+qB,EACZ,UAHMZ,EAAR,EAAQA,MAAO/L,EAAf,EAAeA,MAAOjX,EAAtB,EAAsBA,OAOhByX,EAAQqL,EAAOO,SAAS,OAAQ,CACpCC,MAAM,cAGJrM,MAAOA,EAAa,EAALqX,EACftuB,OAAQA,EAAc,EAALwuB,GACd9pB,EAAIpE,OAETlQ,KAAM,SASR,OALAyyB,GAASC,EAAOC,EAAUC,EAAO,CAC/BC,QAASqL,EACTpL,QAASsL,EACT9pB,IAAG,UAAEA,EAAIwf,gBAAN,aAAE,EAAc5jB,QAEdmX,GAGTqM,KAAGC,aACD,YACA,CACEC,KAAM,SAACtf,EAAmBoe,GACxB,OAAOkB,EAAKtf,EAAoBoe,IAKlC4L,SAPF,SAOWt+B,EAAMtC,EAAOiW,GAOpB,IAP2B,IAAD,EACpBW,EAAMX,EAAM4qB,KACZC,EAAQlqB,EAAIkqB,MACZC,EAASnqB,EAAImqB,OACfjV,EAAc,GACdkV,EAAW,0BAAQF,EAAM1K,gBAAd,aAAQ,EAAgB5jB,OAEvC,MAA2BxP,OAAOC,QAAQ69B,EAAMtuB,OAAhD,eAAyD,CAApD,0BAAOlQ,EAAP,KAAagM,EAAb,KACiB,kBAATA,IAGXwd,EAAOxpB,GAAQgM,GAXS,oBAaNyyB,GAbM,IAa1B,2BACE,IAD2B,IAAlBv/B,EAAiB,QAC1B,MAA2BwB,OAAOC,QAChC2T,EAAIkV,OAAQtqB,IADd,eAEG,CAFE,0BAAOc,EAAP,KAAagM,EAAb,KAGU,UAAThM,EACFU,OAAO2G,OAAOq3B,EAAa1yB,GAE3Bwd,EAAOxpB,GAAQgM,GApBK,8BAyB1B,IAAM0mB,EAAQpe,EAAIoe,MAClBA,EAAM/rB,QACNitB,EACE,CACE1d,MAAOsoB,EAAMtoB,MACbzN,KAAM+1B,EAAM/1B,KACZyH,MAAOsZ,EACPsK,SAAU,CAAE5jB,MAAOwuB,IAErBhM,KAIN,eK5FAiM,CAAiBvgC,KAAKu0B,UACtBY,GAAmBn1B,KAAKu0B,UAExB,IAAMiM,EAAe,CAAC,cAAe,aAEjCzwB,EAAM+tB,yBACR0C,EAAMp7B,KAAK,CACT4L,KAAM,qBACNyvB,eAAe,IAInBzgC,KAAK4c,MAAQ,IAAI0Y,KAAGoL,MAAM,CACxBhE,UAAWA,EACXjU,MAAOiU,EAAUiE,YACjBnvB,OAAQzB,EAAMovB,WACd/U,OAAQra,EAAMqa,QAAU,CACtBpZ,KAAM,QACN4vB,gBAAgB,EAChBC,aAAc,GACdC,YAAa,IAEfC,YAAa,CACX/vB,KAAM,YACNc,MAAO,CACL6iB,OAAQ,QACRqM,SAAU,CACRhM,KAAM,QACN1oB,KAAMgpB,KAAG2L,MAAMC,SAAS,EAAG,KAG/BxL,SAAU,CACR5jB,MAAO,CACLkjB,KAAM,QACNmM,WAAY,CACVnM,KAAM,UACNL,OAAQ,UACRrJ,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBsQ,OAAQ,MAKhB4E,MAAO,CACLY,QAASZ,EACTa,KAAM,CAAC,iBAITC,gBAAiB,CACfC,OAAQ,CACN/V,QAAS,EAGT1T,MAAO,CACL0T,QAAS,IAGbgW,SAAU,CACRhW,QAAS,GAGT1T,MAAO,CACL0T,QAAS,MAIfiW,gBAAiB,CACfF,OAAQ,CACN5M,OAAQ,QACRnJ,QAAS,GAEXgW,SAAU,CACRhW,QAAS,GACT9W,KAAM,CACJ8W,QAAS,aAMS7oB,IAAtBoN,EAAM2xB,aACR1hC,KAAK4c,MAAM+kB,GAAG,cAAc,SAAC1c,GAC3B,EAAKlV,MAAM2xB,YAAazc,EAAMlhB,KAAKo8B,KAAKC,MAAM9+B,YAIxBqB,IAAtBoN,EAAM6xB,aACR5hC,KAAK4c,MAAM+kB,GAAG,cAAc,SAAC1c,GAC3B,EAAKlV,MAAM6xB,YAAa3c,EAAMlhB,KAAKo8B,KAAKC,UAhHhD,sDAwIE,SAAqBzoB,EAAoBQ,GAMvC,IAAI0pB,EAAWlqB,EAAMlW,KAAI,SAACouB,EAAGjgB,GAC3B,IAAIoB,EAGAA,EAFA6e,EAAE/X,MAAMgqB,OAAO1+B,OAAS,IACV,SAAZysB,EAAE5G,OAAgC,WAAZ4G,EAAE5G,OACnB4G,EAAE5G,MAAQ,QAKZ4G,EAAE5G,MAGX,IAAM1T,EAAmB,CACvBjU,GAAIuuB,EAAEvuB,GACNwW,MAAO+X,EAAE/X,MACT9G,KAAMA,EACNc,MAAM,6BACD+d,EAAE/d,OADF,IAEH8pB,OAAQ,EACRqE,cAAe,EACfF,aAAc,IAEhBrK,SAAU,CACR5jB,MAAO+d,EAAEkS,aAMb,MAHgB,SAAZlS,EAAE5G,QACJ1T,EAAKzD,MAAO8pB,OAAS,GAEhBrmB,KAILoY,KAAEqU,KAAK7pB,EAAM1W,KAAI,SAACouB,GAAD,OAAOA,EAAEvuB,OAAK8B,SAAW+U,EAAM/U,QAClDiiB,QAAQD,MACN,+CACAjN,EAAM1W,KAAI,SAACouB,GAAD,OAAOA,EAAEvuB,OAIvB,IA9CsE,EA8ClE2gC,EAAW9pB,EAAM1W,KAAI,SAAChC,GAAD,MAAQ,CAC/B6B,GAAI7B,EAAE6B,GACN4X,OAAQzZ,EAAEyZ,OACVnK,OAAQtP,EAAEsP,OACV+I,MAAOrY,EAAEqY,UAILoqB,EAAK,IAAI/hC,IACXgiC,GAAmB,EAvD+C,cAwDnDhqB,GAxDmD,IAwDtE,2BAA0B,CAAC,IAAhBc,EAAe,QAClBmpB,EAAI,UAAMnpB,EAAKC,OAAX,YAAqBD,EAAKlK,QACpC,GAAImzB,EAAG1hC,IAAI4hC,GAAO,CAChBD,GAAmB,EACnB,MAEFD,EAAG58B,IAAI88B,IA9D6D,8BAoEtE,OAJID,GACF7M,KAAG+M,KAAKC,qBAAqBL,GAGxB,CAAEtqB,MAAOkqB,EAAU1pB,MAAO8pB,OA5MrC,KC7BM7W,GAAS,CACbmX,KAAM,CACJna,QAAS,QAEXxL,MAAO,CACL4lB,SAAU,WACV/Z,MAAO,QAITga,QAAS,CACPD,SAAU,WACV9Z,IAAK,EACLga,KAAM,EACN,gBAAiB,CACfv4B,aAAc,EACduH,YAAa,EACbC,aAAc,GAEhB,gBAAiB,CACfxH,aAAc,EACdmhB,QAAS,EACT,QAAS,CACPyC,SAAU,MAIhB9jB,SAAU,CACRC,OAAQ,iBACRC,aAAc,GAEhBuyB,UAAW,CAETjU,MAAO,OACP,WAAY,CACVL,QAAS,WAKTua,GAAc,CAClBC,MAAO,CACL5xB,KAAM,QACN4vB,gBAAgB,EAChBC,aAAc,GACdC,YAAa,IAEf+B,MAAO,CACL7xB,KAAM,QACN8xB,QAAS,KACTC,QAAS,GACTC,QAAS,KASAC,GAAiBr5B,YAAWwhB,GAAXxhB,CAC5Bs5B,sBACE,WA4BE7U,GACI,IA3BF/sB,EA2BC,EA3BDA,GACA8W,EA0BC,EA1BDA,QACAT,EAyBC,EAzBDA,MACAQ,EAwBC,EAxBDA,MACA/N,EAuBC,EAvBDA,QACA2F,EAsBC,EAtBDA,MACAzF,EAqBC,EArBDA,UAqBC,IApBD64B,+BAoBC,MApByB,CAAEnyB,KAAM,YAAa2tB,YAAa,GAoB3D,MAnBD8D,eAmBC,aAlBDx4B,gBAkBC,aAjBDm5B,eAiBC,MAjBST,GAiBT,EACGjG,EAAYnP,iBAAO,MACnB3Q,EAAQ2Q,sBAA4B5qB,GAE1C0gC,8BACEhV,GACA,iBAA2B,CACzBzR,MAAO,kBAAMA,EAAMsO,SACnB+G,SAAU,WACR,YAAsBtvB,IAAlBia,EAAMsO,UACVtO,EAAMsO,QAAQiT,oBAAoB,CAChCC,QAAQ,EACR5sB,OAAQ2xB,KAEH,QAKbzb,qBAAU,WACR,GAA0B,OAAtBgV,EAAUxR,QAAd,MACsBvoB,IAAlBia,EAAMsO,UACRtO,EAAMsO,QAAU,IAAIyS,GAClBjB,EAAUxR,QACVnb,GAAS,CACPovB,WAAY,OAKlB,IAAIzE,EAAI9d,EAAMsO,QACd,QAAcvoB,IAAVoN,EACc2qB,EAAEkD,aAAa7tB,KAE7B2qB,EAAEpO,UACF1P,EAAMsO,QAAU,IAAIyS,GAClBjB,EAAUxR,QACVnb,GAAS,CACPovB,WAAY,MAGhBzE,EAAI9d,EAAMsO,SAGdwP,EAAEsD,iBAAiBL,GAAQ2F,cAAc3rB,EAAOQ,IAAQ,WACrDpS,OAAe20B,EAAIA,EAEpBA,EAAE8E,kBACA,GACA,GACA9E,EAAEyD,oBACF,CAAC,CAAEC,QAAQ,EAAM5sB,OAAQ2xB,KACzB,qBAGH,CAAC7hC,EAAI8W,EAAST,EAAOQ,EAAOpI,EAAOozB,IAEtC,IAAMI,GACQ,IAAZd,EAAoB,KAClB,cAACe,GAAD,CACEC,SAAsB,cAAZhB,EACV7lB,MAAOA,EACPwmB,QAASA,IAIf,OACE,sBAAK94B,UAAWA,EAAhB,UACE,qBAAKA,UAAWF,EAAQm4B,KAAxB,SAA+BnqB,IAC/B,sBAAK9N,UAAWF,EAAQwS,MAAxB,UACG2mB,EACD,qBACElV,IAAKqO,EACLpyB,UACEF,EAAQsyB,WAAazyB,EAAW,IAAMG,EAAQH,SAAW,gBAU5Du5B,GAAe55B,YAAWwhB,GAAXxhB,EAC1B,YASmC,IAAD,IARhC65B,gBAQgC,SAPhC7mB,EAOgC,EAPhCA,MACAxS,EAMgC,EANhCA,QACAg5B,EAKgC,EALhCA,QAMA,EAA8Brd,oBAAS,GAAvC,mBAAO2d,EAAP,KAAgBC,EAAhB,KACA,EAA4B5d,mBAAS,SAArC,mBAAOqE,EAAP,KAAewZ,EAAf,KAEMC,EAAe,WACfJ,GAAUE,GAAW,IAErBG,EAAe,WACfL,GAAUE,GAAW,IAG3B,GAAIF,IAAaC,EACf,OACE,qBACEp5B,UAAWF,EAAQq4B,QACnBoB,aAAcA,EACdC,aAAcA,EAHhB,SAKE,cAAC,IAAD,CAAQx5B,UAAU,OAAlB,SACE,cAAC,KAAD,QAMR,IAAMy5B,EAAc,WAAO,IAAD,EACxB,UAAAnnB,EAAMsO,eAAN,SAAetO,MAAMmhB,aAGjBiG,EAAe,SAACpiC,GAAoC,IAAD,IACvDgiC,EAAUhiC,GACV,UAAAgb,EAAMsO,eAAN,SAAegT,aAAakF,EAAQxhC,IACpC,UAAAgb,EAAMsO,eAAN,SAAesU,kBAAkB,GAAI,GAAIuE,EAAa,IAAI,gBAY5D,OACE,qBACEz5B,UAAWF,EAAQq4B,QACnBoB,aAAcA,EACdC,aAAcA,EAHhB,SAKE,eAAC,IAAD,CAAOz5B,KAAM,EAAGwuB,MAAM,QAAtB,UACE,cAAC,KAAD,CAAS1tB,MAAM,mBAAf,SACE,cAAC,IAAD,CAAQb,UAAU,OAAO2F,QAAS8zB,EAAlC,SACE,cAAC,KAAD,QAGJ,cAAC,KAAD,CAAS54B,MAAM,6BAAf,SACE,cAAC,IAAD,CAAQb,UAAU,OAAlB,SACE,cAAC25B,GAAA,EAAD,QAGJ,cAAC,KAAD,CAAS94B,MAAM,sBAAf,SACE,cAAC,KAAD,CACE8oB,QACE,cAAC,KAAD,CAAMhkB,QAxBS,SAACxQ,GAC1BukC,EAAavkC,EAAE+C,MAuBL,SACGF,OAAO0P,KAAK2wB,IAAalhC,KAAI,SAAC2oB,GAAD,OAC5B,cAAC,KAAK1X,KAAN,UAAyB0X,GAATA,QAJxB,SASE,eAAC,IAAD,CACE9f,UAAU,OACV+oB,KAAM,cAAC6Q,GAAA,EAAD,IACNj0B,QAvCQ,WACH,UAAXma,GAAoB4Z,EAAa,SACtB,UAAX5Z,GAAoB4Z,EAAa,UAkC7B,UAKG5Z,EALH,IAKW,cAACgK,GAAA,EAAD,mBC7PnBhJ,GAAS,CACbmX,KAAM,CACJna,QAAS,QAEX+b,eAAgB,GAChBt8B,MAAO,CACLqC,OAAO,cAAD,OAAgBgd,KAAO,GAAvB,eACN,UAAW,CACTuI,MAAM,GAAD,OAAKzI,KAAK,GAAV,iBAGTod,cAAe,CACblb,gBAAgB,GAAD,OAAKlC,KAAK,GAAV,iBAQNqd,GAAyBz6B,YAAWwhB,GAAXxhB,CACpCgc,aACEsd,sBACE,WAME7U,GACI,IALFjkB,EAKC,EALDA,QAEA0S,GAGC,EAJDvF,MAIC,EAHDuF,IAII8U,EAAWrE,mBAGjB8V,8BACEhV,GACA,iBAAmC,CACjC4D,SAAU,wBAAM,UAAAL,EAAS1G,eAAT,eAAkB+G,cAAc,OAIpD,MAAuB/kB,mBAAQ,WA4C7B,MAAO,CA3CO4P,EAAGF,MAAMjF,MAAMlW,KAAI,SAAC8T,GAChC,IAAI0T,EAA2BnX,EAC/B,OAAQyD,EAAK0C,UACX,IAAK,aACHgR,EAAQ,SACRnX,EAAQ,CAAEkjB,KAAM5N,KAAM,GAAIuN,OAAQvN,KAAM,IACxC,MACF,IAAK,YACH6B,EAAQ,OACRnX,EAAQ,CAAEkjB,KAAMhO,KAAK,GAAI2N,OAAQ3N,KAAK,IACtC,MACF,IAAK,eAEDiC,EADsB,cAApB1T,EAAKjW,MAAM0R,KACL,SAEA,OAGRc,EADEyD,EAAKkF,YACC,CAAEua,KAAM,UAAWL,OAAQ,WAE3B,CAAEK,KAAMzN,KAAO,GAAIoN,OAAQ,WAErC,MACF,QACE,MAAM,IAAIzf,MAAJ,gBAGV,MAAO,CACL5T,GAAIiU,EAAKjU,GACTwW,MAAOwsB,GAAaxnB,EAAIvH,GACxBzD,QACAmX,YAGUnM,EAAGF,MAAMzE,MAAM1W,KAAI,SAACwX,GAChC,MAAO,CACL3X,GAAG,GAAD,OAAK2X,EAAKC,OAAV,YAAoBD,EAAKlK,OAAzB,YAAmCkK,EAAK5E,KAC1C6E,OAAQD,EAAKC,OACbnK,OAAQkK,EAAKlK,OACb+I,MAAOmB,EAAKnB,aAMf,CACD4E,GAAcG,QAAQC,GAAMA,EAAG9U,QAAU,KACzC8U,EAAGxb,GACHwb,EAAGF,MAAMxE,UAjDX,mBAAOT,EAAP,KAAcQ,EAAd,KAoDA,OACE,cAAC8qB,GAAD,CACE5U,IAAKuD,EACLtnB,UAAWF,EAAQ+5B,eACnB7iC,GAAIwb,EAAGxb,GACP8W,QAAS0E,EAAGF,MAAMxE,QAClBT,MAAOA,EACPQ,MAAOA,EACPsqB,SAAS,EACTU,wBAAyB,CAAEnyB,KAAM,YAAa2tB,YAAa,IAC3D5uB,MAAO,CACLovB,WAAY,IACZ/U,OAAQ,CACNpZ,KAAM,QACN8xB,QAAS,KACTC,QAAS,GACTC,QAAS,IAEXtB,YAAa,SAACnnB,GACZiX,GAAS,CACPxgB,KAAM,OACN8L,KACAvH,KAAMuH,EAAGF,MAAMrH,KAAKgF,MAGxBqnB,YAAa,SAAC3oB,GACZuY,GAAS,CACPxgB,KAAM,OACN8L,KACA7D,KAAM6D,EAAGF,MAAM3D,KAAKA,EAAKC,OAAQD,EAAKlK,mBAWlDu1B,GAAe,SAACxnB,EAAmBvH,GACvC,OAAQA,EAAK0C,UACX,IAAK,YAEL,IAAK,eACH,OAAO1C,EAAKuC,MACd,IAAK,aACH,OAAOgF,EAAGF,MAAMpE,SAASV,MAAMvC,K,wDC7JxBgvB,GAAwB,SAAC,GASuC,IAR3EjtB,EAQ0E,EAR1EA,OAQ0E,IAP1EktB,cAO0E,SAN1Er0B,EAM0E,EAN1EA,YACGH,EAKuE,mBAC1E,OAAIw0B,EACK,kDAAUx0B,GAAV,aAAsBsH,EAAO6J,iBAIpC,cAAC,EAAD,2BACErS,KAAMwI,EAAOjD,IACbjG,eAAe,EACf+B,YAAaA,GACTH,GAJN,aAMGsH,EAAO6J,kB,+BCkBP,SAASsjB,GAAoBntB,GAClC,IAAMmJ,EAAUvT,mBAAQ,WAEtB,IADA,IAAM1J,EAAmB,IAAIrD,IAC7B,MAA2BmC,OAAOC,QAAQ+U,EAAO6I,YAAjD,eAA8D,CAAzD,0BAAOukB,EAAP,KAAY/jB,EAAZ,KACHnd,EAAI8B,IAAIo/B,GADoD,oBAEzC/jB,GAFyC,IAE5D,2BACE,IADyB,IAAhBP,EAAe,QACxB,MAAkB9d,OAAO0P,KAAKoO,EAAKukB,YAAnC,eAAgD,CAA3C,IAAMC,EAAG,KACZphC,EAAI8B,IAAIs/B,IAJgD,+BAQ9D,OAAOpgC,MAAMQ,KAAKxB,KACjB,CAAC8T,EAAOhW,KAEHqjB,EAAkBc,KAAlBd,cAMR,OAJA+C,qBAAU,WACR/C,EAAc/hB,MAAMK,WAAWwd,KAC9B,CAACnJ,EAAOhW,KAEJgB,OAAOI,YACZ+d,EAAQhf,KAAI,SAACH,GACX,IAAMF,EAASujB,EAAcjjB,IAAIJ,GACjC,OAAIF,EACK,CAACE,EAAIF,GAEP,CAACE,EAAI,CAAEA,KAAIujC,aAAyB,OAAXzjC,QClE/B,IAAM0jC,GAAuBlf,cAClC,YAYO,IAXLhG,EAWI,EAXJA,SACAqe,EAUI,EAVJA,OACA8G,EASI,EATJA,cACAC,EAQI,EARJA,eAQI,IAPJC,oBAOI,SACJ,EAAoCxf,KAA5BjH,EAAR,EAAQA,YAAauG,EAArB,EAAqBA,WAErB2C,qBAAU,WACRlJ,EAAY5b,MAAMI,UAAU4c,KAC3B,CAACpB,EAAaoB,IAEjB,IAAMtI,EAASkH,EAAY9c,IAAIke,GAE/B,YAAejd,IAAX2U,EACE2tB,OACoBtiC,IAAlBoiC,EACKA,IAEF,cAACvX,EAAD,IAGF,+BAAO5N,IAGD,OAAXtI,OACqB3U,IAAnBqiC,EACKA,IAIP,cAAC,IAAD,CACEzhC,OAAO,MACP4H,MAAM,MACNwF,SAAQ,iBAAYiP,EAAZ,qBAKPqe,EAAO3mB,EAAQyN,EAAWzN,W,kCC7CxB4tB,GAA0B,SAAC,GAYjC,IAXLC,EAWI,EAXJA,SAWI,IAVJX,cAUI,aATJY,cASI,SARDp1B,EAQC,mBACJ,QFiBqDrN,IEjB7BwiC,EFiBYN,aEhBlC,OAAIM,EAASN,aAET,kDAAU70B,GAAV,aACE,0CAAam1B,EAAS7jC,GAAtB,uBAGKkjC,EACF,mDAAUx0B,GAAV,kBAAuBm1B,EAAS7jC,GAAhC,QAKL,eAAC,EAAD,2BAAcwN,KAAM,GAAIV,eAAe,GAAU4B,GAAjD,kBACIm1B,EAAS7jC,GADb,QAON,GAAIkjC,EACF,OACE,mDAAUx0B,GAAV,cACGm1B,EAASrtB,MADZ,KACqBqtB,EAAS7jC,GAD9B,QAMJ,IAAMwW,EAAQstB,EAAM,UAAMD,EAASrtB,MAAf,aAAyBqtB,EAAS7jC,GAAlC,KAA0C6jC,EAASrtB,MAEvE,OACE,cAAC,EAAD,2BAAchJ,KAAMq2B,EAAS9wB,IAAKjG,eAAe,GAAU4B,GAA3D,aACG8H,M,oBC7CMutB,GAAuBz7B,YALrB,CACb24B,KAAM,CACJna,QAAS,SAGuBxe,EAClC,SACEmG,GAIA,MAA8BgW,oBAAS,GAAvC,mBAAOoO,EAAP,KAAgBmR,EAAhB,KACMC,EAAgB,WACpBD,GAAYnR,IAERqR,EAAMrR,EACV,cAACsR,GAAA,EAAD,CAAsBx1B,QAASs1B,IAE/B,cAACG,GAAA,EAAD,CAAaz1B,QAASs1B,IAGxB,OACE,gCACE,eAAC,IAAD,CAAOl7B,KAAM,EAAb,UACG0F,EAAMvF,SACNg7B,KAEH,qBAAKl7B,UAAW6pB,EAAU,GAAKpkB,EAAM3F,QAAQm4B,KAA7C,SACGxyB,EAAM41B,oBCtBJC,GAAiBh8B,YAFf,GAEeA,EAC5B,YAAkE,IAA/DtK,EAA8D,EAA9DA,MACD,MAAmB,aAAfA,EAAM0R,KAEN,cAAC8zB,GAAD,CACEllB,SAAUtgB,EAAMA,MAChB2+B,OAAQ,SAAC3mB,GACP,OAAO,cAAC,GAAD,CAAuBA,OAAQA,OAM3B,SAAfhY,EAAM0R,KAEN,cAACq0B,GAAD,CACEM,YACE,+BACE,+BACE,0CADF,IACoBrmC,EAAMA,MAAMumC,YAEhC,+BACE,sCADF,IACgBvmC,EAAMA,MAAMwmC,OAD5B,MACuCxmC,EAAMA,MAAMymC,SAEnD,+BACE,2CADF,IACqBzmC,EAAMA,MAAM0mC,aAEjC,+BACE,gDAAuB,IACvB,cAAC,EAAD,CACEl3B,KAAMxP,EAAMA,MAAM2mC,cAClB73B,eAAe,EAFjB,SAIG9O,EAAMA,MAAM2mC,sBAlBvB,SAwBG3mC,EAAMA,MAAM4mC,OAKA,aAAf5mC,EAAM0R,KAEN,cAACq0B,GAAD,CACEM,YACE,+BACE,+BACE,uCADF,IACiBrmC,EAAMA,MAAM6mC,WAD7B,KAC2C,IACxC7mC,EAAMA,MAAM8mC,cAEf,+BACE,sCADF,IACgB9mC,EAAMA,MAAMo5B,WARlC,SAaGp5B,EAAMA,MAAM+mC,SAKA,oBAAf/mC,EAAM0R,KAEN,iCACG1R,EAAMA,MAAMoV,KADf,IACqB,kCAAKpV,EAAMA,MAAMgnC,eAKvB,oBAAfhnC,EAAM0R,KAEN,cAACq0B,GAAD,CACEM,YACE,+BACE,+BACE,2CADF,IACqBrmC,EAAMA,MAAM0mC,aAEjC,+BACE,uCAAc,IACd,cAAC,EAAD,CAAcl3B,KAAMxP,EAAMA,MAAMinC,MAAOn4B,eAAe,EAAtD,SACG9O,EAAMA,MAAMinC,cATvB,SAeE,eAAC,EAAD,CACEz3B,KAAI,wCAAmCxP,EAAMA,MAAMknC,SAA/C,YAA2DlnC,EAAMA,MAAMmnC,WAC3Er4B,eAAe,EAFjB,UAIG9O,EAAMA,MAAMknC,SAJf,MAI4BlnC,EAAMA,MAAMmnC,UAJxC,UAWqB,kBAAhBnnC,EAAMA,MACR,+BAAOmG,KAAKC,UAAUpG,EAAMA,SAG9B,+BAAOA,EAAMA,W,gCCtGXonC,GAAqB98B,YANnB,CACb+6B,WAAY,CACVgC,WAAY,KAIkB/8B,EAChC,YASuC,IAAD,EARpCwW,EAQoC,EARpCA,KACAhW,EAOoC,EAPpCA,QACAw8B,EAMoC,EANpCA,QACG52B,EAKiC,mBAC9B20B,EAAa,GADiB,cAElBvkB,EAAKQ,iBAFa,IAEpC,2BAAwC,CAAC,IAA9BgkB,EAA6B,QAClCiC,OAAI,EAENA,EADkC,IAAhCzmB,EAAKukB,WAAWC,GAAKxhC,OAErB,cAAC,KAAWqpB,KAAZ,CAAiBzb,KAAK,YAAY81B,QAAQ,EAA1C,sBAKK1mB,EAAKukB,WAAWC,GAAKnjC,KAAI,SAACnC,EAAOynC,GACtC,OACE,8BACE,cAACnB,GAAD,CAAgBtmC,MAAOA,KADfynC,MAOhBpC,EAAWv/B,KACT,eAAC,KAAD,CAAKwiB,OAAQ,EAAb,UACE,cAAC,KAAD,CAAKzB,KAAM,EAAX,SACE,cAAC,GAAD,CAAyBgf,SAAUyB,EAAQhC,OAE7C,cAAC,KAAD,CAAKze,KAAM,GAAX,SAAgB0gB,MAJGjC,KArBW,8BA8BpC,OACE,kDAAS50B,GAAT,cACE,8BACE,cAAC41B,GAAD,CAAgBtmC,MAAO8gB,EAAK9gB,UAE9B,qBAAKgL,UAAWF,EAAQu6B,WAAxB,SAAqCA,WCzChCqC,GAAoBp9B,YATlB,CACbq9B,YAAa,CACXz1B,OAAQ,EACRtH,OAAQ,OACRulB,MAAO,OACPvG,gBAAiB,SAIYtf,CAC/Bgc,cACE,YAWmC,IAVjCtO,EAUgC,EAVhCA,OACAsvB,EASgC,EAThCA,QACAM,EAQgC,EARhCA,cAQgC,IAPhC9B,cAOgC,SANhCh7B,EAMgC,EANhCA,QAO6B,IAAzB88B,EAAc9jC,SAChB8jC,EAAgB5kC,OAAO0P,KAAKsF,EAAO6I,aAGrC,IALgC,EAK1BgnB,EAAa,GALa,cAMdD,GANc,IAMhC,2BAAiC,CAAC,IAAvBxC,EAAsB,QAE/B,QAA+B/hC,IAA3B2U,EAAO6I,WAAWukB,GAAtB,CAEA,IAAM/jB,EAAQrJ,EAAO6I,WAAWukB,GAC5ByC,EAAW/jC,OAAS,GACtB+jC,EAAW/hC,KACT,oBAA2BkF,UAAWF,EAAQ68B,aAA9C,kBAAoBvC,KAGxByC,EAAW/hC,KACT,eAAC,KAAD,CAAKwiB,OAAQ,EAAb,UACE,cAAC,KAAD,CAAKzB,KAAM,EAAX,SACE,cAAC,KAAWsG,KAAZ,CAAiB2a,QAAQ,EAAzB,SACE,cAAC,GAAD,CACEjC,SAAUyB,EAAQlC,GAClBU,OAAQA,QAId,cAAC,KAAD,CAAKjf,KAAM,GAAX,SACE,cAAC,IAAD,CAAOwF,UAAU,WAAW7Z,MAAO,CAAE2W,MAAO,QAA5C,SACG9H,EAAMlf,KAAI,SAAC2e,EAAM3C,GAChB,OACE,cAACipB,GAAD,CAEEtmB,KAAMA,EACNwmB,QAASA,GAFJnpB,YAdIinB,MAjBO,8BA2ChC,OACE,cAAC,IAAD,CAAO/Y,UAAU,WAAW7Z,MAAO,CAAE2W,MAAO,QAAUpe,KAAM,EAA5D,SACG88B,Q,UC/DEE,GAA0Bz9B,YANxB,CACbC,KAAM,CACJ4e,MAAO,MAI4B7e,CACrCgc,cACE,YAiBmC,IAhBjCtO,EAgBgC,EAhBhCA,OACAgwB,EAegC,EAfhCA,OACAC,EAcgC,EAdhCA,UACAX,EAagC,EAbhCA,QACAM,EAYgC,EAZhCA,cACAM,EAWgC,EAXhCA,gBACAC,EAUgC,EAVhCA,mBACAr9B,EASgC,EAThCA,QAUM2F,EAAQ7C,mBAAQ,WACpB,OAAO5K,OAAO0P,KAAKsF,EAAO6I,YAAY1e,KAAI,SAACijC,GAAD,MAAU,CAClD5sB,MAAM,GAAD,OAAK8uB,EAAQlC,GAAK5sB,MAAlB,aAA4B4sB,EAA5B,KACLplC,MAAOolC,QAER,CAACkC,EAAStvB,EAAOhW,KAEpB,OACE,gCACE,cAAC,KAAD,CAAUqoB,SAAU,kBAAM4d,GAAWD,IAAS5a,QAAS4a,EAAvD,8BAGA,cAAC,KAAD,CACEj1B,KAAK,WACL4c,YAAY,EACZd,QAASpe,EACTmf,iBAAiB,QACjB5kB,UAAWF,EAAQP,KACnBvK,MAAO4nC,EACP7X,SAAUmY,EACVlY,WAAYmY,WCjCXC,GAAsB99B,YATpB,CACbC,KAAM,CACJ,kBAAmB,CACjBye,OAAQ,GAEVqf,SAAU,MAIqB/9B,CACjCgc,cACE,YAKO,IAJLtO,EAII,EAJJA,OACAswB,EAGI,EAHJA,SAIMhB,EAAUnC,GAAoBntB,GACpC,EAA4ByO,oBAAkB,GAA9C,mBAAOuhB,EAAP,KAAeC,EAAf,KAEA,OACE,gCACE,cAAC,IAAD,CAAOz1B,MAAO,CAAEiW,MAAO,SAAvB,SACE,cAACsf,GAAD,CACEC,OAAQA,EACRC,UAAWA,EACXjwB,OAAQA,EACRsvB,QAASA,EACTM,cAAeU,EAAShxB,sBACxB4wB,gBAAiBI,EAASvxB,yBAC1BoxB,mBAAoBG,EAASrxB,gCAGjC,+BACE,cAAC,EAAD,CAAczH,KAAMwI,EAAOjD,IAAKjG,eAAe,EAA/C,SACGkJ,EAAOQ,MAAM+vB,WAAWvwB,EAAOQ,MAAMgwB,QAF1C,OAKE,eAAC,KAAWrb,KAAZ,CACEqa,QAAQ,EACRM,QAAQ,EACRt1B,MAAO,CAAEic,SAAU,GAAItD,WAAY,KACnC+F,SAAU,CAAE9b,KAAM4C,EAAOhW,IAJ3B,cAMIgW,EAAOhW,GANX,UASF,cAAC,KAAWmrB,KAAZ,CAAiBzb,KAAK,YAAtB,SACGsG,EAAOywB,QAAQC,YAAY1wB,EAAOywB,QAAQD,MAAM1jC,KAAK,SAExD,4BAAIkT,EAAOqF,YAAYkrB,WAAWvwB,EAAOqF,YAAYmrB,QACrD,uBACA,cAACd,GAAD,CACE1vB,OAAQA,EACRsvB,QAASA,EACTxB,QAAQ,EACR8B,cAAeI,EAASM,EAAShxB,sBAAwB,YAS9D,SAASqxB,GACdxW,EACAzJ,GAGA,IACIC,EAEFA,EAH+B,kBAATwJ,EAIpB,cAACiW,GAAD,CAAqBpwB,OAAQma,EAAKna,OAAQswB,SAAUnW,EAAKmW,WAIzD,cAAC9C,GAAD,CACEllB,SAAU6R,EACVwM,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACF,GAAD,CAAqBpwB,OAAQA,EAAQswB,SAAUA,OAMvD38B,IAAMid,KAAK,CACTmL,KAAM,KACNpL,UACAI,UAAW,CAAEC,QAAS,EAAG7W,WAAY,IACrCnG,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,EACNR,OAAQA,EACRS,MAAO,qBACP3W,MAAO,CAAE4W,IAAK,M,2DCjFLwf,GAAyBt+B,YAdvB,CACbC,KAAM,CACJ,kBAAmB,CACjBye,OAAQ,GAEVqf,SAAU,MASwB/9B,CACpCgc,cACE,YAYiC,IAX/BtO,EAW8B,EAX9BA,OACA9M,EAU8B,EAV9BA,SACAJ,EAS8B,EAT9BA,QACA4d,EAQ8B,EAR9BA,OACA4f,EAO8B,EAP9BA,SACG53B,EAM2B,mBAExB42B,EAAUnC,GAAoBntB,GAC9B2Q,EACJ,kDACMjY,GADN,IAEE1F,UAAS,UAAKF,EAAQP,KAAb,YAAqBmG,EAAU1F,WAF1C,UAIE,+BACE,cAAC,EAAD,CAAcwE,KAAMwI,EAAOjD,IAAKjG,eAAe,EAA/C,SACGkJ,EAAOQ,MAAM+vB,WAAWvwB,EAAOQ,MAAMgwB,QAF1C,OAKE,eAAC,KAAWrb,KAAZ,CACEqa,QAAQ,EACRM,QAAQ,EACRt1B,MAAO,CAAEic,SAAU,GAAItD,WAAY,KACnC+F,SAAU,CAAE9b,KAAM4C,EAAOhW,IAJ3B,cAMIgW,EAAOhW,GANX,OAQA,cAAC,KAAD,CACEwQ,MAAO,CAAEqW,cAAe,EAAGre,WAAY,EAAGkqB,OAAQ,WAClD/jB,QAAS,WACPg4B,GACE,CAAE3wB,SAAQswB,iBACCjlC,IAAXqlB,EAAuBA,EAAS,OAAIrlB,SAK5C,cAAC,KAAW8pB,KAAZ,CAAiBzb,KAAK,YAAtB,SACGsG,EAAOywB,QAAQC,YAAY1wB,EAAOywB,QAAQD,MAAM1jC,KAAK,SAExD,4BAAIkT,EAAOqF,YAAYkrB,WAAWvwB,EAAOqF,YAAYmrB,QACrD,uBACA,cAACd,GAAD,CACEJ,QAASA,EACTtvB,OAAQA,EACR4vB,cAAeU,EAAS/wB,+BAK9B,OACE,cAAC,KAAD,CAASoR,QAASA,EAASD,OAAQA,EAAnC,SACGxd,Q,oBC7EL4gB,GAAS,CACb+c,SAAU,GACVC,YAAa,GACb7wB,MAAO,CACL,OAAQ,CACNowB,SAAU,GACV39B,UAAW,UAMJq+B,GAAiBz+B,YAAWwhB,GAAXxhB,CAC5Bgc,cACE,YAOmC,IANjC0iB,EAMgC,EANhCA,MACAl+B,EAKgC,EALhCA,QACA1G,EAIgC,EAJhCA,OAKA,EAAgCqiB,mBAAsB,IAAtD,mBAAOwiB,EAAP,KAAiBC,EAAjB,KAoDA,OAlDAt7B,mBAAQ,WAKN,IAHA,IAAMu7B,EAAOnmC,OAAOI,YAClBJ,OAAO0P,KAAKs2B,GAAO7mC,KAAI,SAACH,GAAD,MAAQ,CAACA,EAAI,IAAInB,SAE1C,MAAmBmC,OAAOuB,OAAOykC,GAAjC,eAAyC,CAApC,IAAoC,EAA9Bt3B,EAAI,KAA0B,cACZA,EAAKgQ,SADO,IACvC,2BAAyC,CAAC,IAA/B0nB,EAA8B,aACX/lC,IAAxB2lC,EAAMI,IACRD,EAAKC,GAAcpjC,IAAI0L,EAAK1P,KAHO,+BAUzC,IADA,IAAMqnC,EAAU,IAAIxoC,IAAImC,OAAO0P,KAAKy2B,IACpC,MAAiCnmC,OAAOC,QAAQkmC,GAAhD,eAAuD,CAAlD,IAAkD,EAAlD,sBAAej+B,GAAf,WAAkD,cACjCA,GADiC,IACrD,2BAA8B,CAAC,IAApBo+B,EAAmB,QAC5BD,EAAQ9hC,OAAO+hC,IAFoC,+BAOvDllC,EAAOmlC,SAASvmC,OAAO0P,KAAKs2B,IAE5B,IAxBY,EAwBN7W,EAAO,CACXjd,MAAO,GACPmD,MAAO2wB,EACPG,KAAMA,EACNK,QAAS,GACTlxB,QAAS,EACTlU,OAAQA,GAEJqlC,EAAyB,GAhCnB,cAkCSJ,GAlCT,IAkCZ,2BAA8B,CAAC,IAApBK,EAAmB,QAC5BvX,EAAKjd,MAAQw0B,EACbC,GAA0BxX,EAAMsX,IApCtB,8BAwCZ,IAAK,IAAMxuB,KAAUkuB,OACU9lC,IAAzB8uB,EAAKqX,QAAQvuB,KACfkX,EAAKjd,MAAQ+F,EACb0uB,GAA0BxX,EAAMsX,IAIpCP,EAAYO,KACX,CAACzmC,OAAO0P,KAAKs2B,GAAOvzB,OAAO3Q,KAAK,QAGjC,qCACE,wBAAOkG,UAAWF,EAAQmN,MAA1B,UACE,gCACE,+BACE,6BACE,cAAC,KAAWkV,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,iBAIF,6BACE,cAAC,KAAD,CAASj8B,MAAM,iDAAf,SACE,cAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,oBAKJ,6BACE,cAAC,KAAD,CAASj8B,MAAM,wDAAf,SACE,cAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,oBAKJ,6BACE,cAAC,KAAW3a,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,yBAMN,kCACE,+BACE,uBACA,cAAC,KAAD,CACEj8B,MAAM,+CACN+9B,UAAU,OAFZ,SAIE,6BACE,cAAC,KAAD,CACEC,cACEzlC,EAAO0lC,SAAS,aACf1lC,EAAO2lC,SAAS,WAEnB3c,QAAShpB,EAAO2lC,SAAS,WACzB1f,SAAU,SAAClqB,GAAD,OACRiE,EAAO4lC,cAAc,UAAW7pC,EAAEsP,OAAO2d,gBAKjD,cAAC,KAAD,CACEvhB,MAAM,+CACN+9B,UAAU,QAFZ,SAIE,6BACE,cAAC,KAAD,CACEC,cACEzlC,EAAO0lC,SAAS,aACf1lC,EAAO2lC,SAAS,WAEnB3c,QAAShpB,EAAO2lC,SAAS,WACzB1f,SAAU,SAAClqB,GAAD,OACRiE,EAAO4lC,cAAc,UAAW7pC,EAAEsP,OAAO2d,gBAKjD,6BACE,cAAC,KAAWD,KAAZ,CAAiBzb,KAAK,YAAtB,+BAKHu3B,QAGL,cAAC,KAAD,CAASz2B,MAAO,CAAEwW,OAAQ,WAC1B,eAAC,IAAD,WACE,cAAC,KAAWmE,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRj8B,MAAM,oBACN8E,QAAS,kBAAMvM,EAAO4lC,cAAc,QAAQ,IAC5Cx3B,MAAO,CAAEkiB,OAAQ,WALnB,mBASA,cAAC,KAAD,CAAShjB,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,sCACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBAAMvM,EAAO6lC,cAAc7lC,EAAO8lC,YAC3C13B,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAJ1C,UAME,cAAC,KAAD,CACE/c,QAAShpB,EAAO8lC,UAChB7f,SAAU,SAAClqB,GAAD,OAAOiE,EAAO6lC,aAAa9pC,EAAEsP,OAAO2d,YARlD,oBAaF,cAAC,KAAD,CAAS1b,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,6CACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBAAMvM,EAAOgmC,mBAAmBhmC,EAAOimC,iBAChD73B,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAJ1C,UAME,cAAC,KAAD,CACE/c,QAAShpB,EAAOimC,eAChBhgB,SAAU,SAAClqB,GAAD,OAAOiE,EAAOgmC,kBAAkBjqC,EAAEsP,OAAO2d,YARvD,yBAaF,cAAC,KAAD,CAAS1b,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,yCACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBACPvM,EAAOkmC,6BACJlmC,EAAO6b,2BAGZzN,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAR1C,UAUE,cAAC,KAAD,CACE/c,QAAShpB,EAAO6b,yBAChBoK,SAAU,SAAClqB,GAAD,OACRiE,EAAOkmC,4BAA4BnqC,EAAEsP,OAAO2d,YAblD,wCA0BDmd,GAAWjgC,YAAWwhB,GAAXxhB,CACtBgc,cACE,YAiBmC,IAAD,EAhBhCrL,EAgBgC,EAhBhCA,OACA5C,EAegC,EAfhCA,MACAmxB,EAcgC,EAdhCA,QACAgB,EAagC,EAbhCA,QACAC,EAYgC,EAZhCA,MACAnyB,EAWgC,EAXhCA,QACAxN,EAUgC,EAVhCA,QACA1G,EASgC,EAThCA,OAUMyH,GAAQ,UAAAwM,EAAM4C,UAAN,eAAe4G,gBAAiB5G,EAE1CyvB,EAAO,GAEX,GAAc,IAAVD,EACFC,EAAK5kC,KAAK,+BAAe+F,GAAL,UACf,CAEL,IADA,IAAI8+B,EAAS,GACJr6B,EAAI,EAAGA,EAAIm6B,EAAOn6B,IACzBq6B,GAAU,2BAGZD,EAAK5kC,KACH,sBAEEkF,UAAWF,EAAQg+B,YACnB8B,wBAAyB,CAAEC,OAAO,GAAD,OAAKF,EAAL,8BAF7B,MAKRD,EAAK5kC,KAAK,+BAAe+F,GAAL,MAmBtB,YAhBgBxI,IAAZmmC,GACFkB,EAAK5kC,KACH,eAAC,KAAWqnB,KAAZ,CAAiBzb,KAAK,YAAYc,MAAO,CAAE60B,WAAY,GAAvD,0BACgBmC,EADhB,QAMAgB,GACFE,EAAK5kC,KACH,cAAC,KAAWqnB,KAAZ,CAAiBzb,KAAK,YAAYc,MAAO,CAAE60B,WAAY,GAAvD,wBAOF,qBAAIr8B,UAAWF,EAAQ+9B,SAAvB,UACE,oBAAIh9B,MAAM,gCAAV,SACE,eAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAtB,UAAmC4G,EAAnC,SAEF,oBAAIzM,MAAM,2CAAV,cACexI,IAAZmmC,EACC,cAAC,KAAD,CACEpc,QAAoC,YAA3BhpB,EAAO0mC,QAAQ7vB,GACxBoP,SAAU,SAAClqB,GACTiE,EAAO2mC,UACL9vB,EACA9a,EAAEsP,OAAO2d,QAAU,UAAY,WAInC,OAEN,oBAAIvhB,MAAM,+DAAV,cACexI,IAAZmmC,EACC,cAAC,KAAD,CACEpc,QAAoC,YAA3BhpB,EAAO0mC,QAAQ7vB,GACxBoP,SAAU,SAAClqB,GACTiE,EAAO2mC,UACL9vB,EACA9a,EAAEsP,OAAO2d,QAAU,UAAY,WAInC,OAEN,6BAAKsd,WAOTf,GAA4B,SAChCxX,EASA6Y,GAGA,IADA,IAAMC,EAA4B,CAAC,CAAC9Y,EAAKjd,MAAO,IACzC+1B,EAAMnnC,OAAS,GAAG,CACvBquB,EAAK7Z,SAAW,EAChB,MAAwB2yB,EAAMC,MAA9B,mBAAOjwB,EAAP,KAAewvB,EAAf,KAcA,GAbAO,EAAQllC,KACN,cAACykC,GAAD,CAEEjyB,QAAS6Z,EAAK7Z,QACd2C,OAAQA,EACR5C,MAAO8Z,EAAK9Z,MACZmyB,aAAgCnnC,IAAvB8uB,EAAK9Z,MAAM4C,GACpBwvB,MAAOA,EACPjB,QAASrX,EAAKqX,QAAQvuB,GACtB7W,OAAQ+tB,EAAK/tB,QAPR+tB,EAAK7Z,eAWejV,IAAzB8uB,EAAKqX,QAAQvuB,GAAuB,CACtCkX,EAAKqX,QAAQvuB,GAAUkX,EAAK7Z,QADU,oBAElB6Z,EAAKgX,KAAKluB,IAFQ,IAEtC,2BAAuC,CAAC,IAA7BquB,EAA4B,QACrC2B,EAAMnlC,KAAK,CAACwjC,EAAOmB,EAAQ,KAHS,kCClWtC3e,GAAS,CACb+c,SAAU,GACVC,YAAa,GACb7wB,MAAO,CACL,OAAQ,CACNowB,SAAU,GACV39B,UAAW,UAMJygC,GAAiB7gC,YAAWwhB,GAAXxhB,CAC5Bgc,cACE,YAOmC,IANjCzF,EAMgC,EANhCA,WACA/V,EAKgC,EALhCA,QACA1G,EAIgC,EAJhCA,OAKA,EAAgCqiB,mBAAsB,IAAtD,mBAAOwiB,EAAP,KAAiBC,EAAjB,KAoDA,OAlDAt7B,mBAAQ,WAKN,IAHA,IAAMu7B,EAAOnmC,OAAOI,YAClBJ,OAAO0P,KAAKmO,GAAY1e,KAAI,SAACH,GAAD,MAAQ,CAACA,EAAI,IAAInB,SAE/C,MAAmBmC,OAAOuB,OAAOsc,GAAjC,eAA8C,CAAzC,IAAyC,EAAnCvS,EAAI,KAA+B,cACjBA,EAAKoT,SADY,IAC5C,2BAAyC,CAAC,IAA/B0nB,EAA8B,aACN/lC,IAA7Bwd,EAAWuoB,IACbD,EAAKC,GAAcpjC,IAAIsI,EAAKtM,KAHY,+BAU9C,IADA,IAAMqnC,EAAU,IAAIxoC,IAAImC,OAAO0P,KAAKy2B,IACpC,MAAiCnmC,OAAOC,QAAQkmC,GAAhD,eAAuD,CAAlD,IAAkD,EAAlD,sBAAej+B,GAAf,WAAkD,cACjCA,GADiC,IACrD,2BAA8B,CAAC,IAApBo+B,EAAmB,QAC5BD,EAAQ9hC,OAAO+hC,IAFoC,+BAOvDllC,EAAOmlC,SAASvmC,OAAO0P,KAAKmO,IAE5B,IAxBY,EAwBNsR,EAAO,CACXjd,MAAO,GACPmD,MAAOwI,EACPsoB,KAAMA,EACNK,QAAS,GACTlxB,QAAS,EACTlU,OAAQA,GAEJqlC,EAAyB,GAhCnB,cAkCSJ,GAlCT,IAkCZ,2BAA8B,CAAC,IAApBK,EAAmB,QAC5BvX,EAAKjd,MAAQw0B,EACbC,GAA0BxX,EAAMsX,IApCtB,8BAwCZ,IAAK,IAAMxuB,KAAUkuB,OACU9lC,IAAzB8uB,EAAKqX,QAAQvuB,KACfkX,EAAKjd,MAAQ+F,EACb0uB,GAA0BxX,EAAMsX,IAIpCP,EAAYO,KACX,CAACzmC,OAAO0P,KAAKmO,GAAYpL,OAAO3Q,KAAK,QAGtC,qCACE,wBAAOkG,UAAWF,EAAQmN,MAA1B,UACE,gCACE,+BACE,6BACE,cAAC,KAAWkV,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,iBAIF,6BACE,cAAC,KAAD,CAASj8B,MAAM,iDAAf,SACE,cAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,oBAKJ,6BACE,cAAC,KAAD,CAASj8B,MAAM,wDAAf,SACE,cAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,oBAKJ,6BACE,cAAC,KAAW3a,KAAZ,CAAiBzb,KAAK,YAAYo2B,QAAQ,EAA1C,yBAMN,kCACE,+BACE,uBACA,cAAC,KAAD,CACEj8B,MAAM,+CACN+9B,UAAU,OAFZ,SAIE,6BACE,cAAC,KAAD,CACEC,cACEzlC,EAAO0lC,SAAS,aACf1lC,EAAO2lC,SAAS,WAEnB3c,QAAShpB,EAAO2lC,SAAS,WACzB1f,SAAU,SAAClqB,GAAD,OACRiE,EAAO4lC,cAAc,UAAW7pC,EAAEsP,OAAO2d,gBAKjD,cAAC,KAAD,CACEvhB,MAAM,+CACN+9B,UAAU,QAFZ,SAIE,6BACE,cAAC,KAAD,CACEC,cACEzlC,EAAO0lC,SAAS,aACf1lC,EAAO2lC,SAAS,WAEnB3c,QAAShpB,EAAO2lC,SAAS,WACzB1f,SAAU,SAAClqB,GAAD,OACRiE,EAAO4lC,cAAc,UAAW7pC,EAAEsP,OAAO2d,gBAKjD,6BACE,cAAC,KAAWD,KAAZ,CAAiBzb,KAAK,YAAtB,+BAKHu3B,QAGL,cAAC,KAAD,CAASz2B,MAAO,CAAEwW,OAAQ,WAC1B,eAAC,IAAD,WACE,cAAC,KAAWmE,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRj8B,MAAM,oBACN8E,QAAS,kBAAMvM,EAAO4lC,cAAc,QAAQ,IAC5Cx3B,MAAO,CAAEkiB,OAAQ,WALnB,mBASA,cAAC,KAAD,CAAShjB,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,sCACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBAAMvM,EAAO6lC,cAAc7lC,EAAO8lC,YAC3C13B,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAJ1C,UAME,cAAC,KAAD,CACE/c,QAAShpB,EAAO8lC,UAChB7f,SAAU,SAAClqB,GAAD,OAAOiE,EAAO6lC,aAAa9pC,EAAEsP,OAAO2d,YARlD,oBAaF,cAAC,KAAD,CAAS1b,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,6CACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBAAMvM,EAAOgmC,mBAAmBhmC,EAAOimC,iBAChD73B,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAJ1C,UAME,cAAC,KAAD,CACE/c,QAAShpB,EAAOimC,eAChBhgB,SAAU,SAAClqB,GAAD,OAAOiE,EAAOgmC,kBAAkBjqC,EAAEsP,OAAO2d,YARvD,yBAaF,cAAC,KAAD,CAAS1b,KAAK,aACd,cAAC,KAAD,CACE7F,MAAM,yCACN+9B,UAAU,SAFZ,SAIE,eAAC,KAAWzc,KAAZ,CACEzb,KAAK,YACLo2B,QAAQ,EACRn3B,QAAS,kBACPvM,EAAOkmC,6BACJlmC,EAAO6b,2BAGZzN,MAAO,CAAEkiB,OAAQ,UAAWyV,WAAY,QAR1C,UAUE,cAAC,KAAD,CACE/c,QAAShpB,EAAO6b,yBAChBoK,SAAU,SAAClqB,GAAD,OACRiE,EAAOkmC,4BAA4BnqC,EAAEsP,OAAO2d,YAblD,wCA0BDmd,GAAWjgC,YAAWwhB,GAAXxhB,CACtBgc,cACE,YAiBmC,IAAD,EAhBhCrL,EAgBgC,EAhBhCA,OACA5C,EAegC,EAfhCA,MACAmxB,EAcgC,EAdhCA,QACAgB,EAagC,EAbhCA,QACAC,EAYgC,EAZhCA,MACAnyB,EAWgC,EAXhCA,QACAxN,EAUgC,EAVhCA,QACA1G,EASgC,EAThCA,OAUMyH,GAAQ,UAAAwM,EAAM4C,UAAN,eAAe4G,gBAAiB5G,EAE1CyvB,EAAO,GAEX,GAAc,IAAVD,EACFC,EAAK5kC,KAAK,+BAAe+F,GAAL,UACf,CAEL,IADA,IAAI8+B,EAAS,GACJr6B,EAAI,EAAGA,EAAIm6B,EAAOn6B,IACzBq6B,GAAU,2BAGZD,EAAK5kC,KACH,sBAEEkF,UAAWF,EAAQg+B,YACnB8B,wBAAyB,CAAEC,OAAO,GAAD,OAAKF,EAAL,8BAF7B,MAKRD,EAAK5kC,KAAK,+BAAe+F,GAAL,MAmBtB,YAhBgBxI,IAAZmmC,GACFkB,EAAK5kC,KACH,eAAC,KAAWqnB,KAAZ,CAAiBzb,KAAK,YAAYc,MAAO,CAAE60B,WAAY,GAAvD,0BACgBmC,EADhB,QAMAgB,GACFE,EAAK5kC,KACH,cAAC,KAAWqnB,KAAZ,CAAiBzb,KAAK,YAAYc,MAAO,CAAE60B,WAAY,GAAvD,wBAOF,qBAAIr8B,UAAWF,EAAQ+9B,SAAvB,UACE,oBAAIh9B,MAAM,gCAAV,SACE,eAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAtB,UAAmC4G,EAAnC,SAEF,oBAAIzM,MAAM,2CAAV,cACexI,IAAZmmC,EACC,cAAC,KAAD,CACEpc,QAAoC,YAA3BhpB,EAAO0mC,QAAQ7vB,GACxBoP,SAAU,SAAClqB,GACTiE,EAAO2mC,UACL9vB,EACA9a,EAAEsP,OAAO2d,QAAU,UAAY,WAInC,OAEN,oBAAIvhB,MAAM,+DAAV,cACexI,IAAZmmC,EACC,cAAC,KAAD,CACEpc,QAAoC,YAA3BhpB,EAAO0mC,QAAQ7vB,GACxBoP,SAAU,SAAClqB,GACTiE,EAAO2mC,UACL9vB,EACA9a,EAAEsP,OAAO2d,QAAU,UAAY,WAInC,OAEN,6BAAKsd,WAOTf,GAA4B,SAChCxX,EASA6Y,GAGA,IADA,IAAMC,EAA4B,CAAC,CAAC9Y,EAAKjd,MAAO,IACzC+1B,EAAMnnC,OAAS,GAAG,CACvBquB,EAAK7Z,SAAW,EAChB,MAAwB2yB,EAAMC,MAA9B,mBAAOjwB,EAAP,KAAewvB,EAAf,KAcA,GAbAO,EAAQllC,KACN,cAAC,GAAD,CAEEwS,QAAS6Z,EAAK7Z,QACd2C,OAAQA,EACR5C,MAAO8Z,EAAK9Z,MACZmyB,aAAgCnnC,IAAvB8uB,EAAK9Z,MAAM4C,GACpBwvB,MAAOA,EACPjB,QAASrX,EAAKqX,QAAQvuB,GACtB7W,OAAQ+tB,EAAK/tB,QAPR+tB,EAAK7Z,eAWejV,IAAzB8uB,EAAKqX,QAAQvuB,GAAuB,CACtCkX,EAAKqX,QAAQvuB,GAAUkX,EAAK7Z,QADU,oBAElB6Z,EAAKgX,KAAKluB,IAFQ,IAEtC,2BAAuC,CAAC,IAA7BquB,EAA4B,QACrC2B,EAAMnlC,KAAK,CAACwjC,EAAOmB,EAAQ,KAHS,kCCzV/BW,GAAoB9gC,YARlB,CACb+gC,IAAK,CACH,qBAAsB,CACpBxiB,aAAc,oBAKave,EAC/B,YASmC,IARjC2N,EAQgC,EARhCA,MACAyC,EAOgC,EAPhCA,YACAtW,EAMgC,EANhCA,OACA0G,EAKgC,EALhCA,QAMA,EAAwB2b,mBAAS,WAAjC,mBAAOmN,EAAP,KACA,GADA,KAC6DzN,MAArDX,EAAR,EAAQA,iBACR,GADA,EAA0BJ,mBAA1B,EAA8CpG,WACpByH,mBAAkC,KAA5D,mBAAOuiB,EAAP,KAAcsC,EAAd,KACA,EAA0B7kB,mBAAqC,IAA/D,mBAAOhW,EAAP,KACA,GADA,KAC8BgW,mBAAS,CACrC8kB,YAAY,EACZC,iBAAiB,KAFnB,6BAYA,OAPApjB,qBAAU,WACR5C,EAAiB1F,eAAe7H,EAAOyC,GAAa,GAAOna,KAAK+qC,KAI/D,CAAC1X,IAGF,qBAAKphB,MAAO,CAAE61B,SAAU,IAAKrc,QAAS,GAAtC,SACE,eAAC,KAAD,CAAMhhB,UAAWF,EAAQugC,IAAKI,iBAAiB,UAAU1gC,KAAM,QAA/D,UACE,cAAC,KAAK2gC,QAAN,CAAcL,IAAI,iBAAlB,SACE,cAACtC,GAAD,CAEEC,MAAOA,EACP5kC,OAAQA,GAHV,UACU6T,EAAMjW,GADhB,YACsB0Y,KAFe,WAOvC,cAAC,KAAKgxB,QAAN,CAAcL,IAAI,qBAAlB,SACE,cAACF,GAAD,CAEEtqB,WAAYpQ,EACZrM,OAAQA,GAHV,UACU6T,EAAMjW,GADhB,YACsB0Y,KAFmB,mB,8BCtDxCjM,GAKT,SAAC,GAA6C,IAA3CzO,EAA0C,EAA1CA,MAAO2rC,EAAmC,EAAnCA,eAAmBj7B,EAAgB,mBAC/C,OACE,gDAAM7E,MAAO7L,EAAMqN,YAAgBqD,GAAnC,aACG1Q,EAAM4rC,QAAQD,OCQRE,GAAevhC,YAVb,CACbwhC,aAAc,CACZ9f,QAAS,UACTphB,OAAQ,YACRC,aAAc,EACd4jB,SAAU,GACV5F,cAAe,IAISve,EAC1B,YAamC,IAZjCypB,EAYgC,EAZhCA,KACAjpB,EAWgC,EAXhCA,QACAihC,EAUgC,EAVhCA,SACA1hB,EASgC,EAThCA,SASgC,IARhC2hB,qBAQgC,MARhBvkB,KAAK,GAQW,MAPhCwkB,uBAOgC,MAPdC,KAAK,GAOS,EAChC,EAA0CzlB,oBAAS,GAAnD,mBAAO0lB,EAAP,KAAsBC,EAAtB,KAYMC,OAA+BhpC,IAAb0oC,EAAyBI,EAAgBJ,EAEjE,OACE,cAAC,KAAD,CACEhY,KAAMA,EACN5D,MAAOkc,EAAkBL,EAAgBC,EACzCjhC,UAAWF,EAAQghC,aACnBn7B,QAlBW,WACb,QAAiBtN,IAAb0oC,QAAuC1oC,IAAbgnB,EAC5B,OAAOA,GAAU0hB,GAGnBK,GAAkBD,QACD9oC,IAAbgnB,GACFA,GAAU8hB,SCpCLG,GAA2D,SAAC,GAIlE,IAHLphC,EAGI,EAHJA,SACAW,EAEI,EAFJA,MACA0gC,EACI,EADJA,GAEA,EAA8B9lB,oBAAS,GAAvC,mBAAOoO,EAAP,KAAgBmR,EAAhB,KAUA,OACE,cAAC,KAAD,CACEn6B,MAAOA,EACPgpB,QAASA,EACTD,gBAba,SAACC,GACZA,IACFmR,GAAW,GACXl/B,YAAW,WACTk/B,GAAW,KACVuG,KASHC,QAAQ,QAJV,SAMGthC,KCAD4gB,GAAS,CACb2gB,uBAAwB,CACtBtc,MAAO1I,KAAK,IAEdilB,gBAAiB,CACfvc,MAAO+b,KAAK,GACZ,UAAW,CACT/b,MAAM,GAAD,OAAK+b,KAAK,GAAV,iBAGTS,uBAAwB,CACtBxc,MAAO+b,KAAK,GACZxX,OAAQ,YAOCkY,GAA+BtiC,YAAWwhB,GAAXxhB,CAC1Cgc,cACE,YASmC,IARzBxkB,EAQwB,EARhCA,OACAG,EAOgC,EAPhCA,MACA6I,EAMgC,EANhCA,QAMgC,IALhC+hC,YAKgC,MALzB,EAKyB,EAChC,EAAsC1mB,KAA9BrH,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,WACvB,EACE4H,oBAAS,GADX,mBAAOqmB,EAAP,KAA+BC,EAA/B,KAEMC,EAAe,SAAC1sB,GACpB,OAAO,SAAC2sB,GACN,OAAOnuB,EAAc4E,gBACnB5hB,EACAG,EACAgrC,EAAS3sB,OAAWjd,GACpB,KAKA6pC,EAAiB,SAAC5sB,GACtB,OAAO,SAAC2sB,GACN,IAAMjtC,EAAQ8B,EAAO+d,IAAI5d,GACzB,GAAqB,kBAAVjC,EACT,MAAM,IAAI4V,MAAJ,oCAAsC5V,EAAtC,mBAGR,OAAO8e,EAAcgF,kBACnBjF,EAAWzc,IAAIN,EAAOmW,OACtBhW,EACAjC,EACAitC,EAAS3sB,OAAWjd,KAKpB+c,EAAQte,EAAOse,MAAMne,IAAU,GAC/BkrC,EAAe,GACrB,GAAI/sB,EAAMtc,OAAS,EAAG,CAAC,IAAD,gBACQsc,EAAM,GAAGG,kBAAkBvK,MAAM,EAAG62B,IAD5C,yBACXH,EADW,QAEZ1hC,EACJ0hC,EAAgBpsB,WAAaF,EAAM,GAAGE,SAClCxV,EAAQ2hC,uBACR3hC,EAAQ4hC,gBAEdS,EAAarnC,KACX,8BACE,eAAC,IAAD,CAAOiF,KAAM,EAAb,UACE,cAAC8gC,GAAD,CACE9X,KAAMqZ,KACNrB,SAAU3rB,EAAM,GAAGE,WAAaosB,EAAgBpsB,SAChD+J,SAAU2iB,EAAaN,EAAgBpsB,YAEzC,cAACurB,GAAD,CACE9X,KAAMsZ,KACNtB,SAAU3rB,EAAM,GAAGE,WAAaosB,EAAgBpsB,SAChD+J,SAAU6iB,EAAeR,EAAgBpsB,YAE3C,cAACklB,GAAD,CACEllB,SAAUosB,EAAgBpsB,SAC1Bqe,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACM,GAAD,CAAwB5wB,OAAQA,EAAQswB,SAAUA,EAAlD,SACE,cAAC,GAAD,CACEpD,QAAQ,EACRltB,OAAQA,EACRhN,UAAWA,SAKnB,uBAAMA,UAAWA,EAAjB,cAEE,cAAC,GAAD,CACEhL,MAAO0sC,EAAgBtoB,YACvBunB,eAAgB,IAJpB,WAxBMe,EAAgBpsB,YAP9B,2BAAwE,IADpD,8BA+CpB,IAAMnC,EAAMiC,EAAM,GAAGG,kBAAkB+sB,WACrC,SAAC9sB,GAAD,OAAeA,EAAUF,WAAaF,EAAM,GAAGE,YAEjD,IAAa,IAATnC,GAAcA,GAAO0uB,EAAM,CAC7B,IAAMH,EAAkBtsB,EAAM,GAAGG,kBAAkBpC,GACnDgvB,EAAarnC,KACX,8BACE,eAAC,IAAD,CAAOiF,KAAM,EAAb,UACE,cAAC8gC,GAAD,CACE9X,KAAMqZ,KACNrB,SAAU3rB,EAAM,GAAGE,WAAaosB,EAAgBpsB,SAChD+J,SAAU2iB,EAAaN,EAAgBpsB,YAEzC,cAACurB,GAAD,CACE9X,KAAMsZ,KACNtB,SAAU3rB,EAAM,GAAGE,WAAaosB,EAAgBpsB,SAChD+J,SAAU6iB,EAAeR,EAAgBpsB,YAE3C,cAACklB,GAAD,CACEllB,SAAUosB,EAAgBpsB,SAC1Bqe,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,uBAAMt9B,UAAWF,EAAQ2hC,uBAAzB,cACItuB,EADJ,QAEE,cAACyqB,GAAD,CACE5wB,OAAQA,EACRswB,SAAUA,EAFZ,SAIE,cAAC,GAAD,CAAuBpD,QAAQ,EAAMltB,OAAQA,YAKrD,uBAAMhN,UAAWF,EAAQ2hC,uBAAzB,cAEE,cAAC,GAAD,CACEzsC,MAAO0sC,EAAgBtoB,YACvBunB,eAAgB,IAJpB,WA1BMe,EAAgBpsB,WAuC1BF,EAAM,GAAGG,kBAAkBzc,OAAS+oC,GACtCM,EAAarnC,KACX,8BACE,cAAC,KAAWqnB,KAAZ,CACEniB,UAAWF,EAAQ6hC,uBACnBh8B,QAAS,kBACPo8B,GAA2BD,IAH/B,uBADO,aAef,IAAM9hC,EACJoV,EAAMtc,OAAS,GAAKsc,EAAM,GAAGE,WAAaxI,GAAUvD,WAChDzJ,EAAQ2hC,uBACR3hC,EAAQ4hC,gBAEdS,EAAarnC,KACX,qBAAKkF,UAAWA,EAAhB,SACE,eAAC,IAAD,CAAOD,KAAM,EAAb,UACE,cAAC8gC,GAAD,CACE9X,KAAMqZ,KACNrB,SACE3rB,EAAMtc,OAAS,GAAKsc,EAAM,GAAGE,WAAaxI,GAAUvD,WAEtD8V,SAAU2iB,EAAal1B,GAAUvD,cAEnC,cAACs3B,GAAD,CACE9X,KAAMsZ,KACNtB,SACE3rB,EAAMtc,OAAS,GAAKsc,EAAM,GAAGE,WAAaxI,GAAUvD,WAEtD8V,SAAU6iB,EAAep1B,GAAUvD,cAErC,cAACixB,GAAD,CACEllB,SAAUxI,GAAUvD,WACpBoqB,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACM,GAAD,CAAwB5wB,OAAQA,EAAQswB,SAAUA,EAAlD,SACE,cAAC,GAAD,CACEpD,QAAQ,EACRltB,OAAQA,EACRhN,UAAWA,aAvBQ,eA+BjCmiC,EAAarnC,KACX,qBAAKkF,UAAWF,EAAQ4hC,gBAAxB,SACE,eAAC,IAAD,CACE3hC,KAAM,EACNyH,MAAO,CAAEkiB,OAAQ,WACjB/jB,QAAS,WACP,IAAMgY,EACJ,cAAC6G,GAAD,CACEO,SAAU,SAACzP,GACT0sB,EAAa1sB,EAAb0sB,EAAuB,GAAMzsC,MAAK,WAChCoL,IAAMsb,mBAMdtb,IAAMid,KAAK,CACT/c,MACE,sBAAM2G,MAAO,CAAEqW,aAAc,GAAIC,QAAS,gBAA1C,2BAIFH,UACAI,UAAW,CAAEC,QAAS,GACtBhd,cAAe,CAAEwG,MAAO,CAAEsW,QAAS,SACnCG,cAAc,EACdC,MAAM,KAxBZ,UA4BE,cAAC2iB,GAAD,CAAc9X,KAAMwZ,OA5BtB,aAD2C,eAmC/C,IAAM7vB,EAAe,CACnB,CACEgO,UAAW,KACX7f,MAAO,SACP8yB,OAAQ,SAACre,GACP,OACE,cAACklB,GAAD,CACEllB,SAAUA,EACVqe,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACM,GAAD,CAAwB5wB,OAAQA,EAAQswB,SAAUA,EAAlD,SACE,cAAC,GAAD,CAAuBpD,QAAQ,EAAMltB,OAAQA,WAOzD,CACE0T,UAAW,QACX7f,MAAO,QACP8yB,OAAQ,SAAC6O,GACP,OAAO,cAAC,GAAD,CAAQxtC,MAAOwtC,EAAO7B,eAAgB,MAGjD,CACE9/B,MAAO,SACP8yB,OAAQ,WACN,OACE,cAAC,IAAD,CAAO5zB,KAAM,EAAb,SACE,cAAC,IAAD,0BAOV,OACE,eAAC,IAAMsd,SAAP,WACG8kB,EACD,cAAC,IAAD,CACEthC,MAAM,qBACNgpB,QAASiY,EACTt6B,MAAO,CAAE4W,IAAK,IACdL,UAAW,CAAEiD,QAAS,GACtB7C,MAAO,MACPhd,KAAM,kBAAM4gC,GAA0B,IACtC3gC,SAAU,kBAAM2gC,GAA0B,IAP5C,SASE,cAAC,KAAD,CACE3hB,YAAY,QACZzgB,UAAU,EACV4C,QAAQ,EACR+d,WAAY,CACV7T,SAAU,GACV8T,gBAAiB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,SAErDC,OAAO,KACP9N,QAASA,EACTiO,QAAO,wCAAE,WAAOnpB,EAAQiT,EAAMrR,GAArB,SAAAsR,EAAA,+EACA9V,QAAQC,QAAQ,CACrBiD,MACEsd,EAAMtc,OAAS,EAAIsc,EAAM,GAAGG,kBAAkBzc,OAAS,EACzD+nB,SAAS,EACTlpB,KACmB,IAAjByd,EAAMtc,OACF,GACAsc,EAAM,GAAGG,kBACNvK,OACExT,EAAOopB,QAAW,GAAKppB,EAAOiV,SAC/BjV,EAAOopB,QAAWppB,EAAOiV,UAE1BtV,KAAI,SAACuqC,EAAiBzqC,GAAlB,MAA6B,CAChCD,GAAI0qC,EAAgBpsB,SACpBktB,MAAOd,EAAgBtoB,mBAf5B,2CAAF,qEC1Tf0H,GAAS,CACbzL,KAAM,CACJotB,eAAgB,YAChB,UAAW,CACTA,eAAgB,cAGpBC,aAAc,CACZvd,MAAO+b,KAAK,GACZ,UAAW,CACT/b,MAAO+b,KAAK,MAKLyB,GAAgBrjC,YAAWwhB,GAAXxhB,CAC3Bgc,cACE,YAWmC,IAVjCsnB,EAUgC,EAVhCA,KACA9rC,EASgC,EAThCA,OACAG,EAQgC,EARhCA,MACA6I,EAOgC,EAPhCA,QAOgC,IANhC+hC,YAMgC,MANzB,EAMyB,EACxBpnB,EAAeU,KAAfV,WAEFrF,EAAQte,EAAOse,MAAMne,IAAU,GACjC4lC,EAAaznB,EAAMya,SAAQ,SAACxa,EAAMpe,GACpC,IAAIkU,EACQ,IAAVlU,EACI2rC,EAAKv4B,UAAU,EAAGgL,EAAKnL,OACvB04B,EAAKv4B,UAAU+K,EAAMne,EAAQ,GAAGkT,IAAKkL,EAAKnL,OAC5C24B,EAAcD,EAAKv4B,UAAUgL,EAAKnL,MAAOmL,EAAKlL,KAC9CtE,OAAcxN,OACIA,IAAlBgd,EAAKC,WACPzP,EAAc,WACZ83B,GAAwBtoB,EAAKC,YAGjC,IAAMwtB,OACSzqC,IAAbgd,EAAKtS,UAAuC1K,IAAlBgd,EAAKC,SAC7ButB,EAEA,cAAC,EAAD,CAEEr+B,KAAM6Q,EAAKtS,IACXe,eAAe,EACf87B,wBAAyB,CACvBC,OAA+B,KAAvBgD,EAAYrL,OAAgB,UAAYqL,GAElD7iC,UACEF,EAAQuV,WACWhd,IAAlBgd,EAAKC,UACND,EAAKC,WAAaxI,GAAUvD,WACxB,IAAMzJ,EAAQ4iC,aACd,IAENl7B,MAAyB,OAAlB6N,EAAKC,SAAoB,CAAE6P,MAAO,QAAW,GACpDtf,YAAaA,GAdR5O,GAkBX,YAAsBoB,IAAlBgd,EAAKC,SACA,CAACnK,EAAQ23B,GAuBX,CAAC33B,EAlBN,cAACqvB,GAAD,CAEEllB,SAAUD,EAAKC,SACfqe,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACM,GAAD,CACE5wB,OAAQA,EACR0Q,OAAQ,IACR4f,SAAUA,EAHZ,SAKGwF,KAGLpI,eAAgB,kBACd,sBAAM16B,UAAWF,EAAQ4iC,aAAzB,SAAwCI,MAZrC7rC,OA0BX,OANqB,IAAjBme,EAAMtc,OACR+jC,EAAW/hC,KAAK8nC,GAEhB/F,EAAW/hC,KAAK8nC,EAAKv4B,UAAU+K,EAAMA,EAAMtc,OAAS,GAAGqR,MAIvD,gCACG0yB,EACApiB,EAAWxN,MAAMP,yBACW,kBAAtB5V,EAAO+d,IAAI5d,GAChB,cAAC2qC,GAAD,CACE9qC,OAAQA,EACRG,MAAOA,EACP4qC,KAAMA,IAEN,YCxHDkB,GAAb,WASE,WAAYrzB,EAAqB2P,GAAuB,IAAD,gCARhDygB,QAA8D,GAQd,KAPhDZ,WAAqB,EAO2B,KANhDG,gBAA0B,EAMsB,KALhDpqB,0BAAoC,EAKY,KAH7CvF,iBAG6C,OAF7C2P,cAE6C,OAmBvDkf,SAAW,SAACP,GAAqB,IAAD,gBACXA,GADW,IAC9B,2BAA0B,CAAC,IAAhBt3B,EAAe,QACxB,EAAKo5B,QAAQp5B,GAAQ,QAFO,gCAnBuB,KAyBvD44B,4BAA8B,SAACtqC,GACzB,EAAKigB,2BAA6BjgB,IACtC,EAAKigB,yBAA2BjgB,EAChC,EAAKqqB,aA5BgD,KA+BvD4f,aAAe,SAACjqC,GACV,EAAKkqC,YAAclqC,IACvB,EAAKkqC,UAAYlqC,EACjB,EAAKqqB,aAlCgD,KAqCvD+f,kBAAoB,SAACpqC,GACf,EAAKqqC,iBAAmBrqC,IAC5B,EAAKqqC,eAAiBrqC,EACtB,EAAKqqB,aAxCgD,KA+CvD2f,cAAgB,SAAC/kC,EAAoCmoB,GACnD,IAAI4gB,GAAY,EAEhB,GAAI5gB,EACF,IAAK,IAAM1b,KAAQ,EAAKo5B,QAClB,EAAKA,QAAQp5B,KAAUzM,IAC3B,EAAK6lC,QAAQp5B,GAAQzM,EACrB+oC,GAAY,QAGd,IAAK,IAAMt8B,KAAQ,EAAKo5B,QAClB,EAAKA,QAAQp5B,KAAUzM,IACzB,EAAK6lC,QAAQp5B,GAAQ,OACrBs8B,GAAY,GAKdA,GACF,EAAK3jB,YAlE8C,KAsEvD0gB,UAAY,SAACr5B,EAAczM,GACrB,EAAK6lC,QAAQp5B,KAAUzM,IAC3B,EAAK6lC,QAAQp5B,GAAQzM,EACrB,EAAKolB,aAzEgD,KA4EvDyf,SAAW,SAAC7kC,GACV,IAAK,IAAMyM,KAAQ,EAAKo5B,QACtB,GAAI,EAAKA,QAAQp5B,KAAUzM,EAAI,OAAO,EAExC,OAAO,GAhF8C,KAmFvD8kC,SAAW,SAAC9kC,GACV,IAAK,IAAMyM,KAAQ,EAAKo5B,QACtB,GAAI,EAAKA,QAAQp5B,KAAUzM,EAAI,OAAO,EAExC,OAAO,GAvF8C,KAmGvDgpC,cAAgB,SAACC,EAAuBlvB,GAEtC,IAAMmvB,EAA2B,GAC3BC,EAA2B,GACjC,IAAK,IAAM18B,KAAQ,EAAKo5B,QACK,YAAvB,EAAKA,QAAQp5B,GACfy8B,EAAeroC,KAAK4L,GACY,YAAvB,EAAKo5B,QAAQp5B,IACtB08B,EAAetoC,KAAK4L,GAIxB,+CAAO,WAAOmO,GAAP,qCAAAnK,EAAA,yDACA,EAAK24B,UADL,0CACuB,GADvB,WAID,EAAKnE,YAAa,EAAKG,eAJtB,+BAKgBxqB,EAAIO,MAAM,EAAK1F,cAAgB,IAL/C,4DAKQ2F,EALR,UAOE,EAAK6pB,WAAa7pB,EAAKC,WAAaxI,GAAUvD,YAC9C,EAAK81B,qBAAoChnC,IAAlBgd,EAAKC,UAR9B,2CAUQ,GAVR,mJAcD,EAAK+pB,gBAC0C,KAA9CxqB,EAAIO,MAAM,EAAK1F,cAAgB,IAAI5W,OAfnC,2CAiBM,GAjBN,kCAoBI,GApBJ,QAwBCqc,EAAS,IAAItf,IAxBd,cAyBcgf,EAAIO,MAAM,EAAK1F,cAAgB,IAzB7C,IAyBL,2BAOE,IAPS2F,EAA2C,SAE7CC,WAAaxI,GAAUvD,iBACVlR,IAAlBgd,EAAKC,UAELH,EAAOna,IAAIqa,EAAKC,UAEd,EAAKL,yBAA0B,CAAC,EAAD,YACZI,EAAKE,mBADO,IACjC,2BAAW+tB,EAAkC,QAC3CnuB,EAAOna,IAAIsoC,EAAOhuB,UAFa,gCAhChC,iCAuCe,IAAhBH,EAAOpV,KAvCN,2CAuCyB,GAvCzB,yBAyCcmjC,EAASvqC,WAAWuB,MAAMQ,KAAKya,IAzC7C,eAyCCM,EAzCD,iBA0CiBzB,EAAWrb,WAC/BX,OAAOuB,OAAOkc,GAAMoa,SAAQ,SAACla,GAC3B,IAAMxI,EAAaL,GAAUhD,WAAW6L,EAAI5L,KAC5C,QACiB1R,IAAf8U,QAC+B9U,IAA/Bsd,EAAIE,WAAW1I,GAEf,MAAO,GAGT,IATmC,EAS7B9T,EAAS,GAToB,cAUhBsc,EAAIE,WAAW1I,IAVC,IAUnC,2BAA+C,CAAC,IAArC2I,EAAoC,QACrB,aAApBA,EAAK9gB,MAAM0R,MACbrN,EAAOyB,KAAKgb,EAAK9gB,MAAMA,QAZQ,8BAenC,OAAOqE,MA1DN,eA0CCyG,EA1CD,0BA+DwB,IAA1BqjC,EAAerqC,QACdd,OAAOuB,OAAOuG,GAASyjC,MAAK,SAACrtB,GAAD,OAC1BitB,EAAeI,MACb,SAACC,GAAD,OACEttB,EAAMlf,KAAOwsC,GAAUttB,EAAMe,eAAe/gB,IAAIstC,YAG7B,IAA1BJ,EAAetqC,SACbd,OAAOuB,OAAOuG,GAASyjC,MAAK,SAACrtB,GAAD,OAC3BktB,EAAeG,MACb,SAACC,GAAD,OACEttB,EAAMlf,KAAOwsC,GAAUttB,EAAMe,eAAe/gB,IAAIstC,WA1ErD,gEAAP,uDA9GA9tC,KAAKga,YAAcA,EACnBha,KAAK2pB,SAAWA,EAEhBvpB,YAAeJ,KAAM,CACnBoqC,QAAS/pC,IACTmpC,UAAWnpC,IACXspC,eAAgBtpC,IAChBkf,yBAA0Blf,IAC1BstC,UAAWrtC,IACXuoC,SAAU/lC,IACVymC,aAAczmC,IACd4mC,kBAAmB5mC,IACnB8mC,4BAA6B9mC,IAC7BwmC,cAAexmC,IACfunC,UAAWvnC,MAxBjB,2CAoGE,WACE,IAAK,IAAMkO,KAAQhR,KAAKoqC,QACtB,GAA2B,SAAvBpqC,KAAKoqC,QAAQp5B,GAAkB,OAAO,EAE5C,OAAOhR,KAAKwpC,WAAaxpC,KAAK2pC,mBAxGlC,KA0MaoE,GAAb,aAKE,WAAYC,EAAkBrkB,GAA2C,IAAD,gCAJjEskB,cAAgC,GAIiC,KAF9DtkB,SAAW,SAACjmB,KAEkD,KAmBxEwqC,YAAc,SAACvkB,GACb,EAAKA,SAAWA,GApBsD,KAuBxEwkB,aAAe,WACb,EAAKxkB,SAAS,IAxBwD,KA4BxEgkB,UAAY,WACV,OAAO,EAAKM,cAAcJ,MAAK,SAACjT,GAAD,OAAOA,EAAE+S,cA7B8B,KAiCxEjqC,OAjCwE,wCAiC/D,WACPgb,EACA8uB,EACAlvB,GAHO,iBAAAtJ,EAAA,6DAKDo5B,EAAc,EAAKH,cAAcxsC,KAAI,SAACm5B,GAAD,OACzCA,EAAE2S,cAAcC,EAAUlvB,MANrB,SASepf,QAAQuH,IAC5BiY,EAAKjd,KAAI,SAAC0d,GACR,OAAOjgB,QAAQuH,IAAI2nC,EAAY3sC,KAAI,SAAC6E,GAAD,OAAUA,EAAK6Y,OAAOtf,MACvD,SAACwuC,GACC,OAAOA,EAAQ5gC,OAAM,SAAC6gC,GAAD,OAASA,YAb/B,cASDC,EATC,yBAkBA7vB,EAAKhb,QAAO,SAACyb,EAAKvP,GAAN,OAAY2+B,EAAQ3+B,OAlBhC,2CAjC+D,+DACrDjN,IAAbgnB,IACF3pB,KAAK2pB,SAAWA,GAGlB,IAAK,IAAI/Z,EAAI,EAAGA,EAAIo+B,EAAUp+B,IAC5B5P,KAAKiuC,cAAc7oC,KACjB,IAAIioC,GAAaz9B,GAAG,WAClB,EAAKu+B,mBAKX/tC,YAAeJ,KAAM,CACnBiuC,cAAe5tC,IACf6tC,YAAaprC,SCpMNsoB,GAAS,CACpB7T,MC9ByB,CACzBkR,MAAO,OACP,4BAA6B,CAC3Bve,OAAQ,iBACRC,aAAc,EACdqgB,WAAY,6BAEd,sBAAuB,CACrB9Y,YAAa,EACbC,aAAc,GAEhB,OAAQ,CACN8Y,WAAY,KAEd,oBAAqB,CACnBuF,cAAe,SDsBNwe,GAAiB5kC,YAAWwhB,GAAXxhB,CAC5Bgc,aACEsd,sBACE,WAiBE7U,GACI,IAhBF9W,EAgBC,EAhBDA,MACApW,EAeC,EAfDA,MACAiJ,EAcC,EAdDA,QACAugB,EAaC,EAbDA,cAaC,IAZD8jB,oBAYC,SACGnhB,EAAYC,mBAClB,EAA6BxH,mBAC3B,IAAIgoB,GAAYx2B,EAAMyF,QAAQ5Z,QAAQ,SAACM,GAAyB,IAAD,EAI7D,UAAA4pB,EAAUpC,eAAV,SAAmB2C,QAAO,OAL9B,mBAAOnqB,EAAP,UASA2/B,8BACEhV,GACA,iBAA2B,CACzBR,OAAQ,WAAO,IAAD,EACZ,UAAAP,EAAUpC,eAAV,SAAmB2C,cAKzB,IAAM7Q,EAAUzF,EAAMyF,QAAQvb,KAAI,SAACitC,EAAK10B,GAAN,MAAuB,CACvDgR,UAAW,CAAC,MAAOhR,GACnB7O,MAAOoM,EAAMyF,QAAQhD,GACrBikB,OAAS,SAAC3+B,EAAe8B,GACvB,OACE,cAAC6rC,GAAD,CAAeC,KAAM5tC,EAAO8B,OAAQA,EAAQG,MAAOyY,KAGvD20B,eACE,cAACjE,GAAD,CACEnzB,MAAOA,EACPyC,YAAaA,EACbtW,OAAQA,EAAOuqC,cAAcj0B,KAGjC40B,WACE,cAACC,GAAA,EAAD,CACE/8B,MAAO,CACL2d,MAAO/rB,EAAOuqC,cAAcj0B,GAAa2zB,UACrC,eACAhrC,SAiBZ,OAXI8rC,GACFzxB,EAAQlC,OAAO,EAAG,EAAG,CACnB3P,MACE,cAAC,KAAWshB,KAAZ,CAAiBzb,KAAK,YAAY6f,UAAU,EAA5C,eAIF7F,UAAW,UAKb,qCACE,cAAC,KAAD,CACEsC,UAAWA,EACXhjB,UAAWF,EAAQmN,MACnBmT,YAAY,QACZzgB,UAAU,EACVnI,OAAQ,CAAE4B,UACVunB,QAAO,wCAAE,WAAOnpB,EAAQiT,EAAMrR,GAArB,mBAAAsR,EAAA,sEACuB7T,EAC5BW,EAAOiV,UACNjV,EAAOopB,QAAW,GAAKppB,EAAOiV,SAC/BjV,EAAO4B,QAJF,uBACCgb,EADD,EACCA,KAAMtc,EADP,EACOA,MADP,kBAMA,CACLH,KAAMyc,EACNyM,SAAS,EACT/oB,UATK,2CAAF,0DAYPyK,QAAQ,EACR+d,WAAY,CACV7T,SAAU,EACV8T,gBAAiB,CACf,IACA,KACA,KACA,KACA,MACA,MACA,MACA,SAGJuD,iBAC4BzrB,IAA1B4U,EAAMwM,YAAY1W,IAChB,cAAC,EAAD,CACEyB,KAAMyI,EAAMwM,YAAY1W,IACxBe,eAAe,EAFjB,SAIGmJ,EAAM3V,OAGT2V,EAAM3V,KAGV+oB,cAAeA,EACfG,OAAO,QACP9N,QAASA,IAEX,cAAC,GAAD,CAAkBzF,MAAOA,YAQxBu3B,GAER,SAAC,GAAe,IAAbv3B,EAAY,EAAZA,MACA2Q,EAAoC,CACxC,CAAC,cAAe3Q,EAAMoF,mBAGMha,IAA1B4U,EAAMwM,YAAY1W,IACpB6a,EAAK9iB,KAAK,CACR,eACA,cAAC,EAAD,CAAc0J,KAAMyI,EAAMwM,YAAY1W,IAAKe,eAAe,EAA1D,SACGmJ,EAAMwM,YAAY5Y,UAIvB+c,EAAK9iB,KAAK,CAAC,eAAgB,QAE7B8iB,EAAK9iB,KAAK,CACR,yBAC+BzC,IAA/B4U,EAAMwM,YAAYnE,SAChB,cAACklB,GAAD,CACEllB,SAAUrI,EAAMwM,YAAYnE,SAC5Bqe,OAAQ,SAAC3mB,EAAQswB,GAAT,OACN,cAACM,GAAD,CACE5wB,OAAQA,EACR0Q,OAAQ,IACR4f,SAAUA,EAHZ,SAKE,cAAC,GAAD,CACEtwB,OAAQA,EACRnH,YAAa,WACX83B,GAAwB,CAAE3wB,SAAQswB,mBAK1C5C,eAAgB,kBACd,6CAAgBztB,EAAMwM,YAAYnE,SAAlC,yBAIJ,QAIJ,IAAIqI,GAAW1Q,EAAMw3B,kBAAoB,IAAI5U,SAAQ,SAAC6U,EAAWztC,GAC/D,OAAwB,IAApBytC,EAAUlnB,OAAmD,IAApCknB,EAAUC,QAAQnN,OAAO1+B,QAElD4rC,EAAU3qB,cAAc5W,MAAMoV,KACI,IAAlCmsB,EAAUxqB,aAAaphB,OAEhB,GAGI,CACb,4BACE,8BACG,IAAI8rC,OAAOF,EAAUlnB,OADxB,IACiCknB,EAAUC,YAF7C,UAAW1tC,EAAX,WAOCmc,OAAOyxB,GAAiB,GAAD,OAAI5tC,EAAJ,WAAoBytC,EAAU3qB,gBACrD3G,OAAOyxB,GAAiB,GAAD,OAAI5tC,EAAJ,UAAmBytC,EAAUxqB,kBAOzD,OALA0D,EAAK9iB,KAAK,CACR,oBACA6iB,EAAQ7kB,OAAS,EAAI,8BAAM6kB,IAAiB,QAI5C,cAAC,KAAD,CAAc9c,MAAM,aAAad,KAAK,QAAtC,SACG6d,EAAKzmB,KAAI,mCAAEqW,EAAF,KAASxY,EAAT,YACR,cAAC,KAAaoT,KAAd,CAA+BoF,MAAOA,EAAtC,SACGxY,GADqBwY,SAQ1Bq3B,GAAmB,SAAC3sC,EAAag2B,GACrC,IADqE,EAC/D4W,EAAoB,CAAC,IAD0C,cAElD5W,GAFkD,IAErE,2BAA0B,CAAC,IAAhBC,EAAe,QACpB5V,GAAY4V,GACd2W,EAAMhqC,KAAK,IAEXgqC,EAAMA,EAAMhsC,OAAS,GAAGgC,KAAKqzB,EAAKn5B,QAN+B,8BASrE,OAAO8vC,EACJ1rC,QAAO,SAACipB,GAAD,OAASA,EAAIvpB,OAAS,KAC7B3B,KAAI,SAACkrB,EAAK/c,GAAN,OAAY,4BAAwB+c,GAAxB,UAAWnqB,EAAX,YAAkBoN,Q,UE7FhC,IAAMy/B,GAAc,SAACt/B,GAM1B,IAAIgS,EAAUhS,EAAMgS,SAAW,IAAIF,GAAQ,EAAG,GAAI,IAClD,EA3KF,SAA4B/D,GAC1B,IAAQK,EAAesH,KAAftH,WACFmxB,EAAiB,GACjBC,EAAcj/B,GAAOiH,MAAMhK,iBAC3BiiC,EAA2B,OAAhBD,EAAuB,GAAKA,EAAYpuC,MACnDsuC,EAAuBviC,mBAC3B,iBAAoB,KAAbsiC,EAAkBrxB,EAAWuxB,iBAAiBF,GAAY,KACjE,CAACrxB,EAAYqxB,IAKf,EAA0BzpB,mBAAS,CACjCjI,SAAU,EACVC,YAAa,EACb5c,MAAO,GACPJ,QAAS,GACTu+B,WAAY,EACZl9B,MAAO,EACPutC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,UAAU,EACV13B,QAAS,IAXX,mBAAOtX,EAAP,KAAco/B,EAAd,KAcAxY,qBAAU,WACR,IAAIqoB,GAAe,EAEb7qC,EAAE,wCAAG,4CAAA8P,EAAA,yDAGHyI,EAAMkQ,KAAEqiB,YAAYlvC,EAAMC,QAAS+c,GAC1Bhd,EAAMK,QAAUquC,GAAY1uC,EAAMC,QAAQ0c,KAASK,EAJzD,iCAQkB5e,QAAQuH,IAAI,CACnC0X,EAAWhd,MAAM,CACfgC,MAAOmsC,EACPtrC,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNorC,GADK,IAERnuC,GAAI,CAAEiD,GAAI,MAAOjF,MAAOwe,OAG5BK,EAAWhd,MAAM,CACfgC,MAAOmsC,EACPtrC,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNorC,GADK,IAERnuC,GAAI,CAAEiD,GAAI,KAAMjF,MAAOwe,SAxBtB,mCAQAmyB,EARA,KAQKC,EARL,KA6BDnvC,EAAUmvC,EAAInvC,QACjBU,KAAI,SAACwqB,GAAD,OAASA,EAAI3qB,MACjBoc,OAAOuyB,EAAIlvC,QAAQU,KAAI,SAACwqB,GAAD,OAASA,EAAI3qB,OACvC6uC,EAAW,CACTpyB,WAAYmyB,EAAInvC,QAAQqC,OACxBrC,UACAqB,MAAO8tC,EAAI9tC,MAAQ6tC,EAAI7tC,MACvBk9B,WAAY4Q,EAAI9tC,MAAQ8tC,EAAInvC,QAAQqC,OACpCysC,QAASK,EAAI9tC,OAASktC,EACtBQ,SAAUG,EAAI7tC,OAASktC,EACvBK,QAASO,EAAInvC,QAAQqC,OAAS,EAC9BwsC,QAASK,EAAIlvC,QAAQqC,OAAS,GAxCzB,2BA4CK,IAARqa,GAAc3c,EAAM+uC,QA5CjB,kCA6Ca1xB,EAAWhd,MAAM,CACjCgC,MAAOmsC,EACPtrC,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNorC,GADK,IAERnuC,GAAI,CAAEiD,GAAI,KAAMjF,MAAOwe,OAnDtB,QA6CCoyB,EA7CD,OAsDLC,EAAW,CACTpyB,WAAYmyB,EAAInvC,QAAQqC,OACxBk8B,WAAY4Q,EAAI9tC,MAAQ8tC,EAAInvC,QAAQqC,OACpCrC,QAASmvC,EAAInvC,QAAQU,KAAI,SAACwqB,GAAD,OAASA,EAAI3qB,MAAIoc,OAAO5c,EAAMC,SACvD8uC,QAASK,EAAI9tC,OAASktC,EACtBK,QAASO,EAAInvC,QAAQqC,OAAS,GA3D3B,2BA6DIqa,IAAQ3c,EAAMC,QAAQqC,OAAS,GAAMtC,EAAMgvC,SA7D/C,kCA8Da3xB,EAAWhd,MAAM,CACjCgC,MAAOmsC,EACPtrC,OAAQ,EACRE,OAAQ,CAAC,MACTG,WAAW,6BACNorC,GADK,IAERnuC,GAAI,CAAEiD,GAAI,KAAMjF,MAAOwe,OApEtB,QA8DCmyB,EA9DD,OAuELE,EAAW,CACTpyB,WAAYN,EACZ1c,QAASD,EAAMC,QAAQ2c,OAAOuyB,EAAIlvC,QAAQU,KAAI,SAACwqB,GAAD,OAASA,EAAI3qB,OAC3DwuC,SAAUG,EAAI7tC,OAASktC,EACvBM,QAASK,EAAIlvC,QAAQqC,OAAS,GA3E3B,wBA8EL+sC,EAAW,CACTpyB,WAAYN,EACZmyB,QAASnyB,EAAM3c,EAAMC,QAAQqC,OAAS,EACtCusC,QAASlyB,EAAM,GAjFZ,QAsFLsyB,GACF7P,EAAS,0CACJp/B,GACAqvC,GAFG,IAGN/3B,QAAStX,EAAMsX,QAAU,EACzBjX,MAAOquC,EACP1xB,aA5FK,4CAAH,qDAwGR,OAFA5Y,IAEO,WACL6qC,GAAe,KAGhB,CAACjyB,EAAS0xB,IAGb,IAAMY,EAAO,SAACpsC,GACZ,GAAI8Z,IAAYhd,EAAMgd,QAAtB,CAKA,IAAMuyB,EAAcvvC,EAAMC,QAAQD,EAAMid,WAAa/Z,QACjCrB,IAAhB0tC,GACF//B,GAAOiH,MAAMjL,KAAK,CAAEwR,QAASuyB,GAAe,CAAElvC,MAAOquC,IAAYhhC,SAIrE,MAAO,CAEL8hC,gBAAiB,WACfF,GAAM,IAERG,YAAa,WACXH,EAAK,IAEPI,SAAU1vC,GAWuC2vC,CACjD1gC,EAAMwH,MAAMjW,IADNkvC,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,YAAaD,EAA/B,EAA+BA,gBAO/B,OAHAte,aAAW,IAAKse,EAAiB,CAACE,EAASp4B,UAC3C4Z,aAAW,IAAKue,EAAa,CAACC,EAASp4B,UAGrC,cAAC,KAAD,CACEs4B,OAAQ,kBACN/kC,EAAQvG,KACNkL,GAAOyR,QAAQtT,OAAO,CACpB0T,UAAWpS,EAAMwH,MAAMwK,YAI7B5W,MACE,eAAC,IAAD,WACE,sBAAM2G,MAAO,CAAE2Y,WAAY,KAA3B,oBACA,cAAC,GAAD,CAAiBtf,MAAM,SAAS0gC,GAAI,IAApC,SACE,sBACE/5B,MAAO,CACL2d,MAAO,UACPsd,eAAgB,YAChB/Y,OAAQ,WAEV/jB,QAAS,kBAAM0gC,UAAUC,UAAUC,UAAU9gC,EAAMwH,MAAM3V,OAN3D,SAQGmO,EAAMwH,MAAM3V,WAXR,SAgBb+O,SACE,eAAC,IAAD,WACE,6CACW,4BAAIoR,EAAQngB,OADvB,OAGA,uBAAM0I,UAAU,OAAhB,sBACY,IACV,8BACG,IACAkmC,EAASlR,WAAakR,EAASzyB,WAAa,EAF/C,IAEmDyyB,EAASpuC,cARrD,aAabwO,MAAO,CACL,cAAC,IAAD,CAEEX,QAASqgC,EACTzf,UAAW2f,EAASb,QAHtB,+BACM,QAMN,cAAC,IAAD,CAAmB1/B,QAASsgC,EAAa1f,UAAW2f,EAASZ,QAA7D,2BAAY,YChMPkB,GAAYlnC,YAfV,CACb2N,MAAO,CACL9F,UAAW,EACX,4BAA6B,CAC3BvH,OAAQ,iBACRC,aAAc,EACdqgB,WAAY,8BAGhBkS,UAAW,CACTiK,WAAY,GACZ5S,YAAa,KAIQnqB,CACvBgc,cAAS,YAA6C,IAA1Cxb,EAAyC,EAAzCA,QAEV,EAQIqb,KAPFZ,EADF,EACEA,aACA1G,EAFF,EAEEA,WACAC,EAHF,EAGEA,cACAsG,EAJF,EAIEA,mBAEApG,GANF,EAKEwG,iBALF,EAMExG,YACAE,EAPF,EAOEA,YAGIV,EAAUxN,GAAOiH,MAAMjK,eAAgBwQ,QAC7C,EAoFJ,SAA0BA,GACxB,MAA2C2H,KAAnCtH,EAAR,EAAQA,WAAYuG,EAApB,EAAoBA,mBACpB,EAA0DqB,oBAAS,GAAnE,mBAAOgrB,EAAP,KAA8BC,EAA9B,KACA,EAA0BjrB,mBAAS,GAAnC,mBAAOxkB,EAAP,KAAc6wB,EAAd,KAEA1K,qBAAU,WACHhD,EAAmBusB,WAAWnzB,IACjC4G,EACGzjB,MAAM,CACLkC,MAAO,IACPa,OAAQ,EACRK,WAAY,CACVkT,MAAOuG,KAGVje,MAAK,kBAAMmxC,GAAyB,QAExC,CAACtsB,EAAoB5G,IAExB,IAAMvG,EAAQ4G,EAAWzc,IAAIoc,GAE7B,QACYnb,IAAV4U,GACU,OAAVA,IACEmN,EAAmBusB,WAAWnzB,KAAaizB,EAG7C,MAAO,CAAExvC,QAAO8b,IAAK,GAAI+U,YAG3B,IAAM/U,EAAMqH,EAAmBpH,YAAYQ,GACrCP,EAASmH,EAAmBlH,uBAAuBjG,GACzD,GAAIhW,GAAS8b,EAAIja,OAASma,EAAOna,OAAQ,CAEvC,IAAM9B,EAAKojB,EAAmBvH,oBAAoB5F,GAC5C1P,EAAQkV,GAAmB0V,6BAC/BnxB,EADY,aAEN+b,EAAIja,QACVmU,GAEFmN,EAAmBld,eAAeK,GAClC0V,EAAOnY,KAAKyC,GAGHtG,EAAQ8b,EAAIja,OAASia,EAAI9b,GAASgc,EAAOhc,EAAQ8b,EAAIja,QAEhE,MAAO,CAAEia,IAAKA,EAAIK,OAAOH,GAAShc,QAAO6wB,YAlIN8e,CAAiBpzB,GAA1CT,EAAR,EAAQA,IAAK9b,EAAb,EAAaA,MAAO6wB,EAApB,EAAoBA,SAEdT,EAAWpE,iBAA2B,MACtCqE,EAAWrE,iBAAmC,MAEpD7F,qBAAU,WAERvJ,EAAWnb,UAAU8a,GAASje,MAAK,SAAC0X,QACpB5U,IAAV4U,GACFsN,EAAa7hB,UAAUuU,EAAMwK,cAGhC,CAAC5D,EAAY0G,EAAcH,EAAoB5G,IAElD,IAAMvG,EAAQ4G,EAAWzc,IAAIoc,GAE7B,OAAc,OAAVvG,EACK,cAAC,GAAD,SACY5U,IAAV4U,GAAsC,IAAf8F,EAAIja,OAE7B,cAACoqB,EAAD,IAIP,eAAC,IAAM7F,SAAP,WACE,cAAC,GAAD,CAAa5F,QAAS8C,EAAanjB,IAAI6V,EAAMwK,SAAUxK,MAAOA,IAC9D,qBAAKjN,UAAWF,EAAQsyB,UAAxB,SACE,eAAC,IAAD,CAAO/Q,UAAU,WAAWthB,KAAM,EAAlC,UACE,cAACqnB,GAAD,CACEE,SAAUA,EACVD,SAAUA,EACVpa,MAAOA,EACPsa,cAAe,CAAExU,MAAK9b,QAAO6wB,cAE/B,cAACiS,GAAD,CACEhW,IAAKuD,EAELra,MAAOA,EACPuF,GAAIO,EAAI9b,IAFHuc,GAIP,cAAC0wB,GAAD,CACEngB,IAAKsD,EAELhH,eAAe,EACfpT,MAAOA,EACPpW,MAAK,wCAAE,WACLgC,EACAa,EACAN,GAHK,mBAAAsR,EAAA,yDAKAtR,EAAOiqC,YALP,gCAMgBvvB,EAAcoB,aAC/BjI,EACAvT,EACAb,GATC,cAMGub,EANH,yBAWI,CAAEA,OAAMtc,MAAOmV,EAAMlN,OAXzB,uBAciB+T,EAAcoB,aAClCjI,EACA,EACAA,EAAMlN,MAjBH,cAcC8mC,EAdD,iBAmBcztC,EAAOA,OACxBytC,EACA3yB,EACAF,GAtBG,eAmBCI,EAnBD,yBAwBE,CACLA,KAAMA,EAAKpJ,MAAMtR,EAAQA,EAASb,GAClCf,MAAOsc,EAAKtb,SA1BT,4CAAF,0DA6BLqrC,cAAc,GAhCT3wB,GAkCP,cAACyR,GAAD,gBCnIL,ICFQ,OAA0B,iC,8BC8CnC6hB,GAAO,kBAAM,gEAKN9gC,GAAS,CACpByR,QAAS,IAAI7T,EAAmB,CAC9BjC,UAAWihB,GACXnhB,UAAW,CAAEoW,UAAW,UACxBjW,QAAS,yBAEXqL,MAAO,IAAIzL,EAAQ,CACjBG,UAAW6kC,GACX/kC,UAAW,CAAE+R,QAAS,UACtB9R,YAAa,CAAE7K,MAAO,UACtB+K,QAAS,qBAEX0mB,iBAAkB,IAAI9mB,EAAQ,CAC5BG,UAAWmlC,GACXrlC,UAAW,CAAE+R,QAAS,UACtB9R,YAAa,CAAE6mB,WAAY,mBAC3B3mB,QAAS,sCAEX6mB,gBAAiB,IAAIjnB,EAAQ,CAC3BG,UAAWmlC,GACXrlC,UAAW,CAAE+R,QAAS,UACtB9R,YAAa,CAAE6mB,WAAY,mBAC3B3mB,QAAS,+BAEX07B,SAAU,IAAI35B,EAAc,CAC1BhC,UF1EuB,WACzB,OACE,cAAC,KAAD,CAAK2b,OAAQ,GAAb,SACE,cAAC,KAAD,CAAKtd,UAAU,aAAa6b,KAAM,QEwEpCja,QAAS,YACTC,OAAO,IAETkf,OAAQ,IAAIpd,EAAc,CACxBhC,UAAWwb,GACXvb,QAAS,UACTC,OAAO,IAETklC,SAAU,IAAIpjC,EAAc,CAC1BhC,UAAWwb,GACXvb,QAAS,YACTC,OAAO,IAETqd,KAAM,IAAIvb,EAAc,CAAEhC,UAAWwb,GAAUvb,QAAS,IAAKC,OAAO,KAErEpG,OAAeurC,QAAUhhC,GzExEnB,SAAqBA,EAAQihC,EAASC,GAUzC,QATsB7uC,IAAlB6uC,IACAA,EAAgB,IAAIrxC,KAEpBqE,MAAMC,QAAQ+sC,GACdA,EAAgB,IAAIrxC,IAAIqxC,GAEjBA,aAAyBrxC,MAChCqxC,EAAgB,IAAIrxC,IAAImC,OAAO0P,KAAKw/B,KAEjB,oBAAZD,EACP,cAA0BjvC,OAAOC,QAAQ+N,GAAzC,eAAkD,CAA7C,0BAAK1O,EAAL,KAAW2O,EAAX,KACGihC,EAAchxC,IAAIoB,KAEtB2O,EAAMlE,SAASJ,UAAYslC,EAAQhhC,EAAMtE,UAAWqE,SAIxD,cAA0BhO,OAAOC,QAAQ+N,GAAzC,eAAkD,CAA7C,0BAAK1O,EAAL,KAAW2O,EAAX,KACGihC,EAAchxC,IAAIoB,SAA2Be,IAAlB4uC,EAAQ3vC,KAEvC2O,EAAMlE,SAASJ,UAAYslC,EAAQ3vC,GAAM2O,EAAMtE,UAAWqE,KyEsDtEmhC,CAAYnhC,IAxEU,SACpBrE,GAEA,OAAO,SAAC8D,GACN,IAAM2hC,EAAUl/B,IAAM4pB,cAAcnwB,EAAW8D,GAC/C,OACE,eAAC,IAAD,CAAO4b,UAAU,WAAW7Z,MAAO,CAAE2W,MAAO,QAA5C,UACE,cAAC7W,GAAD,CACEC,MAAO,CACL2X,KAAM,qBAAKmoB,IAAKC,GAAMC,IAAI,SAC1BR,SAAU,CAAEhe,KAAM,cAACye,GAAA,EAAD,IAAqBtnC,SAAU,YACjD6gB,OAAQ,CAAEgI,KAAM,cAAC0e,GAAA,EAAD,IAAyBvnC,SAAU,UACnDo9B,SAAU,CAAEvU,KAAM,cAAC2e,GAAA,EAAD,IAAqBxnC,SAAU,aAEnD8F,OAAQA,GACRyB,iBAAiB,IAEnB,qBAAKzH,UAAU,iBAAf,SAAiConC,UAuDb,CAAC,UpD7CpB9sB,GAAOG,WAAWvN,gBqD3Cd3X,MAAK,WAChBoyC,IAAShU,OACP,cAAC1Y,GAAa2sB,SAAd,CAAuB5yC,MAAOslB,GAA9B,SACE,cAACjS,GAAD,CAAKC,YAAY,EAAMtC,OAAQA,OAEjC6rB,SAASgW,eAAe,YAO5Bh/B,O","file":"static/js/main.4742c978.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, computed, flow, makeObservable, observable, runInAction, } from \"mobx\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     * @param indices list of indices to create\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                result.records = result.records.map((record) => this.records.get(record.id));\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        this.batch = new BatchFetchRequests(this, 50);\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            fetchByIds: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n        this.index(m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Deserialize the data sent from the server to a record.\n     */\n    deserialize(record) {\n        if (this.nameAndField.length > 0) {\n            for (const [name, field] of this.nameAndField) {\n                record[field] = record[name];\n                delete record[name];\n            }\n        }\n        return record;\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\nclass BatchFetchRequests {\n    constructor(store, window) {\n        this.store = store;\n        this.window = window;\n        this.requests = new Set();\n        this.executingRequests = new Map();\n    }\n    fetchById(id) {\n        this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    // in case it's still pending from previous requests\n                    const m = this.executingRequests.get(id);\n                    if (m !== undefined) {\n                        // don't remove executingRequests as it will be removed automatically when the promise resolves\n                        m.then(() => {\n                            const r = this.store.records.get(id);\n                            resolve(r === null ? undefined : r);\n                        });\n                    }\n                    else {\n                        const r = this.store.records.get(id);\n                        resolve(r === null ? undefined : r);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    fetchByIds(ids) {\n        for (const id of ids)\n            this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    const output = {};\n                    const pendingPromises = [];\n                    for (const id of ids) {\n                        const m = this.executingRequests.get(id);\n                        if (m !== undefined) {\n                            // don't remove executingRequests as it will be removed automatically when the promise resolves\n                            pendingPromises.push([m, id]);\n                        }\n                        else {\n                            const record = this.store.records.get(id);\n                            if (record !== null && record !== undefined) {\n                                output[id] = record;\n                            }\n                        }\n                    }\n                    if (pendingPromises.length > 0) {\n                        // waiting for pending requests to finish\n                        Promise.all(pendingPromises.map((x) => x[0])).then(() => {\n                            for (const [m, id] of pendingPromises) {\n                                const record = this.store.records.get(id);\n                                if (record !== null && record !== undefined) {\n                                    output[id] = record;\n                                }\n                            }\n                            resolve(output);\n                        });\n                    }\n                    else {\n                        resolve(output);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    exec() {\n        // clear the callback as we are executing it\n        this.callback = undefined;\n        // sending out requests that is not executing\n        const reqs = Array.from(this.requests).filter((id) => !this.executingRequests.has(id));\n        // clean up the requests so the next callback can add\n        this.requests = new Set();\n        const promise = this.store.fetchByIds(reqs);\n        // adding the sending out requests into the executing queue\n        for (const req of reqs)\n            this.executingRequests.set(req, promise);\n        return promise.then((result) => {\n            // clean up the executing requests\n            for (const req of reqs)\n                this.executingRequests.delete(req);\n            return result;\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, makeObservable, observable, override, runInAction, } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Create the record, will sync with remote server.\n     */\n    create(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft) {\n                        this.createDrafts.delete(draft.draftID);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Update the record, with sync with remote server\n     */\n    update(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                return runInAction(() => {\n                    let record = draft.toModel() || this.deserialize(resp.data);\n                    draft.markSaved();\n                    // deindex the record if it's in the store\n                    const prevRecord = this.records.get(draft.id);\n                    if (prevRecord !== undefined && prevRecord !== null) {\n                        this.deindex(prevRecord);\n                    }\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft && this.updateDrafts.has(draft.id)) {\n                        this.updateDrafts.delete(draft.id);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove a record, will sync with remote server\n     */\n    delete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                runInAction(() => {\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n    /**\n     * Serialize the update to send to the server\n     */\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the create object to send to the server\n     */\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the record for sending to the server, fields are renamed\n     * if a mapping is provided (this.field2name).\n     */\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        makeObservable(this, {\n            create: override,\n            update: override,\n        });\n    }\n    create(draft) {\n        const _super = Object.create(null, {\n            create: { get: () => super.create }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.create.call(this, Object.assign({ draftID: \"\" }, draft), true);\n        });\n    }\n    update(draft) {\n        const _super = Object.create(null, {\n            update: { get: () => super.update }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.update.call(this, Object.assign({\n                markSaved: () => { },\n                toModel: () => undefined,\n            }, draft), true);\n        });\n    }\n}\n","import { action, makeObservable, observable } from \"mobx\";\nexport class SingleKeyUniqueIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        this.index.set(key, record[this.idField]);\n    }\n    remove(record) {\n        const key = record[this.fkField];\n        this.index.delete(key);\n    }\n}\n/**\n * An index (fk1) => rid[]\n */\nexport class SingleKeyIndex {\n    constructor(field, idField) {\n        this.index = new Map();\n        this.fkField = field;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    add(record) {\n        const key = record[this.fkField];\n        if (!this.index.has(key)) {\n            this.index.set(key, new Set());\n        }\n        this.index.get(key).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key = record[this.fkField];\n        (_a = this.index.get(key)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class PairKeysIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        if (!map.has(key2)) {\n            map.set(key2, new Set());\n        }\n        map.get(key2).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            (_a = this.index\n                .get(key1)\n                .get(key2)) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => rid\n */\nexport class PairKeysUniqueIndex {\n    constructor(fkField1, fkField2, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map = this.index.get(key1);\n        map.set(key2, record[this.idField]);\n    }\n    remove(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        if (this.index.has(key1)) {\n            this.index.get(key1).delete(key2);\n        }\n    }\n}\n/**\n * An index fk1 => fk2 => Set<rid>\n */\nexport class TripleKeysIndex {\n    constructor(fkField1, fkField2, fkField3, idField) {\n        this.index = new Map();\n        this.fkField1 = fkField1;\n        this.fkField2 = fkField2;\n        this.fkField3 = fkField3;\n        this.idField = idField || \"id\";\n        makeObservable(this, {\n            index: observable,\n            add: action,\n            remove: action,\n        });\n    }\n    /**\n     * Index record\n     */\n    add(record) {\n        const key1 = record[this.fkField1];\n        const key2 = record[this.fkField2];\n        const key3 = record[this.fkField3];\n        if (!this.index.has(key1)) {\n            this.index.set(key1, new Map());\n        }\n        let map2 = this.index.get(key1);\n        if (!map2.has(key2)) {\n            map2.set(key2, new Map());\n        }\n        let map3 = map2.get(key2);\n        if (!map3.has(key3)) {\n            map3.set(key3, new Set());\n        }\n        map3.get(key3).add(record[this.idField]);\n    }\n    remove(record) {\n        var _a;\n        const map2 = this.index.get(record[this.fkField1]);\n        if (map2 === undefined)\n            return;\n        const map3 = map2.get(record[this.fkField2]);\n        if (map3 === undefined)\n            return;\n        (_a = map3\n            .get(record[this.fkField3])) === null || _a === void 0 ? void 0 : _a.delete(record[this.idField]);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e, openInNewPage) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (openInNewPage || (e !== undefined && (e.ctrlKey || e.metaKey))) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from \"antd\";\nimport { PLATFORM } from \"../env\";\nimport { routeAPIs } from \"./route\";\n/**\n * This file contains all helper to dealing with Links and Navigation in the application so that we can handle it easier in different platforms\n */\nexport const InternalLink = (props) => {\n    const { path, urlArgs, queryArgs, children } = props, restprops = __rest(props, [\"path\", \"urlArgs\", \"queryArgs\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e);\n    };\n    return (_jsx(\"a\", Object.assign({ href: path.getURL(urlArgs, queryArgs), onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const InternalLinkBtn = (_a) => {\n    var { path, urlArgs, queryArgs, openInNewPage = false, children } = _a, restprops = __rest(_a, [\"path\", \"urlArgs\", \"queryArgs\", \"openInNewPage\", \"children\"]);\n    const onClick = (e) => {\n        path.path(urlArgs, queryArgs).mouseClickNavigationHandler(e, openInNewPage);\n    };\n    return (_jsx(Button, Object.assign({ onClick: onClick }, restprops, { children: children }), void 0));\n};\nexport const ExternalLink = (_a) => {\n    var { href, openInNewPage = false, children, onCtrlClick } = _a, restprops = __rest(_a, [\"href\", \"openInNewPage\", \"children\", \"onCtrlClick\"]);\n    const onClick = (e) => {\n        if ((e.ctrlKey || e.metaKey) && onCtrlClick) {\n            // holding ctrl or cmd key, we trigger the action\n            e.preventDefault();\n            onCtrlClick();\n        }\n    };\n    if (onCtrlClick !== undefined) {\n        restprops.onClick = onClick;\n    }\n    return (_jsx(\"a\", Object.assign({ href: href, target: openInNewPage ? \"_blank\" : undefined, rel: \"noopener noreferrer\" }, restprops, { children: children }), void 0));\n};\nexport function InternalHTMLLink(href, text, className) {\n    if (href.startsWith(\"#\") && PLATFORM === \"native\") {\n        // relative link in the samepage does not work in native mode, so we have to fake it...\n        return `<span className=\"a-fake-href ${className}\">${text}</span>`;\n    }\n    return `<a href=\"${href}\" class=\"${className}\" data-internal-link=\"true\" onClick=\"${routeAPIs.internalHTMLLinkClickFnId}(event);\">${text}</a>`;\n}\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    // has to wrap the config provider here when creating components\n    // otherwise, create components first, store in an object, and wrap won't work\n    return (_jsx(ConfigProvider, Object.assign({ locale: enUSLocale === true ? enUSIntl : undefined }, { children: _jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0) }), void 0));\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const THEME: \"dark\" | \"light\" = \"light\";\n\nexport const PLATFORM: \"native\" | \"web\" =\n  process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n\n// url of the API server\nexport const SERVER: string =\n  process.env.REACT_APP_PLATFORM === \"native\"\n    ? (process.env.REACT_APP_API_SERVER as string)\n    : \"\";\n\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL: string = process.env.PUBLIC_URL;\n","export class ApplicationConfig {\n  // configuration related to entities\n  public NIL_ENTITY: string = \"\";\n\n  // list of properties' uris that when a column is tagged with one of them, the column is an entity column\n  public SEM_MODEL_IDENTS = new Set<string>();\n\n  // list of uri of classes that are used as intermediate nodes to represent n-ary relationships, e.g., wikidata's statement\n  public SEM_MODEL_STATEMENTS = new Set<string>();\n\n  // mapping from entity's namespace into the instanceof property that they use\n  protected instanceofMapping: { [namespace: string]: string } = {};\n  public instanceofProps = new Set<string>(); // list of instanceof props in all namespaces\n  protected instanceofIndex = new StartsWithIndex<string>(0, 0); // index to seacrh for the prop given an uri faster\n\n  /** Get instanceof property of an entity identified by the given URI */\n  public instanceof = (uri: string): string | undefined => {\n    return this.instanceofIndex.get(uri);\n  };\n\n  /** Set instanceof property */\n  public setInstanceOf = (instanceofProps: { [namespace: string]: string }) => {\n    this.instanceofMapping = instanceofProps;\n    this.instanceofProps = new Set(Object.values(instanceofProps));\n    this.instanceofIndex = StartsWithIndex.fromMapping(this.instanceofMapping);\n  };\n}\n\nexport class StartsWithIndex<V> {\n  // capture the longest substring from [start, end) that leads us to target or the sub tree\n  protected index: {\n    [substring: string]:\n      | { value: StartsWithIndex<V>; internalNode: true }\n      | { internalNode: false; value: V };\n  } = {};\n  protected start: number = 0;\n  protected end: number = 0;\n\n  constructor(start: number, end: number) {\n    this.start = start;\n    this.end = end;\n  }\n\n  public static fromMapping<V>(mapping: { [prefix: string]: V }) {\n    // sorted in descending order by their length\n    const sortedPrefixes = Object.keys(mapping).sort(\n      (a, b) => b.length - a.length\n    );\n    if (sortedPrefixes.length === 0) {\n      throw new Error(\"Empty mapping\");\n    }\n\n    const fn = (prefixes: string[], start: number) => {\n      const shortestPrefix = prefixes[prefixes.length - 1];\n      const index = new StartsWithIndex<V>(start, shortestPrefix.length);\n\n      if (index.start === index.end) {\n        // we gonna have an empty key, but we must have more than one prefixes\n        index.index[\"\"] = {\n          internalNode: false,\n          value: mapping[shortestPrefix],\n        };\n        const subindex = fn(prefixes.slice(0, -1), index.end);\n        for (const [key, node] of Object.entries(subindex.index)) {\n          index.index[key] = node;\n        }\n        return index;\n      }\n\n      const tmp: { [key: string]: string[] } = {};\n      for (const prefix of prefixes) {\n        const key = prefix.substring(index.start, shortestPrefix.length);\n        if (tmp[key] === undefined) {\n          tmp[key] = [];\n        }\n        tmp[key].push(prefix);\n      }\n\n      for (const [key, subprefixes] of Object.entries(tmp)) {\n        if (subprefixes.length === 1) {\n          index.index[key] = {\n            internalNode: false,\n            value: mapping[subprefixes[0]],\n          };\n        } else {\n          index.index[key] = {\n            internalNode: true,\n            // prefixes are sorted in descending order and tmp maintains the order\n            value: fn(subprefixes, index.end),\n          };\n        }\n      }\n      return index;\n    };\n\n    return fn(sortedPrefixes, 0);\n  }\n\n  /** Get the target mapping matched with the longest prefix */\n  get = (text: string): V | undefined => {\n    const key = text.substring(this.start, this.end);\n    const item = this.index[key];\n\n    if (item !== undefined) {\n      return item.internalNode ? item.value.get(text) : item.value;\n    }\n\n    // try empty key\n    return this.index[\"\"] !== undefined\n      ? (this.index[\"\"].value as V)\n      : undefined;\n  };\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class EntitySettings {\n  // properties to show in full view\n  public _showedPropsInFullView: Set<string> = new Set();\n\n  // properties to show in popover view\n  public _showedPropsInPopoverView: Set<string> = new Set();\n\n  // properties that are used to express \"instance of\" relationships for each namespace\n  public instanceofProps: { [namespace: string]: string } = {};\n\n  // id of an nil entity\n  public nilEntityId: string = \"\";\n\n  constructor() {\n    makeObservable(this, {\n      _showedPropsInFullView: observable,\n      _showedPropsInPopoverView: observable,\n      instanceofProps: observable,\n      nilEntityId: observable,\n      setNilEntityId: action,\n      setInstanceOfProps: action,\n      showedPropsInFullView: computed,\n      showedPropsInPopoverView: computed,\n      setShowedPropsInFullView: action,\n      setShowedPropsInPopoverView: action,\n      addShowedPropsInFullView: action,\n      addShowedPropsInPopoverView: action,\n      removeShowedPropsInFullView: action,\n      removeShowedPropsInPopoverView: action,\n      getInstanceOfProp: action,\n    });\n  }\n\n  get showedPropsInFullView() {\n    return Array.from(this._showedPropsInFullView);\n  }\n\n  get showedPropsInPopoverView() {\n    return Array.from(this._showedPropsInPopoverView);\n  }\n\n  setNilEntityId = (nil: string) => {\n    this.nilEntityId = nil;\n  };\n\n  setInstanceOfProps = (cfg: { [namespace: string]: string }) => {\n    this.instanceofProps = cfg;\n  };\n\n  setShowedPropsInFullView = (props: Set<string>) => {\n    this._showedPropsInFullView = props;\n  };\n\n  setShowedPropsInPopoverView = (props: Set<string>) => {\n    this._showedPropsInPopoverView = props;\n  };\n\n  addShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.add(prop);\n  };\n\n  addShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.add(prop);\n  };\n\n  removeShowedPropsInFullView = (prop: string) => {\n    this._showedPropsInFullView.delete(prop);\n  };\n\n  removeShowedPropsInPopoverView = (prop: string) => {\n    this._showedPropsInPopoverView.delete(prop);\n  };\n\n  getInstanceOfProp = (uri: string) => {\n    // TODO: optimize me, we can get it down to O(1) with proper indexing\n    for (const ns in this.instanceofProps) {\n      if (uri.startsWith(this.instanceofProps[ns])) {\n        return this.instanceofProps[uri];\n      }\n    }\n  };\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\nexport class TableSettings {\n  // page size\n  public pageSize: number = 5;\n  public showEntityLinkingEditor: boolean = false;\n\n  constructor() {\n    makeObservable(this, {\n      pageSize: observable,\n      showEntityLinkingEditor: observable,\n      setPageSize: action,\n      toggleEntityLinkingEditor: action,\n      enableEntityLinkingEditor: action,\n    });\n  }\n\n  setPageSize = (pageSize: number) => {\n    this.pageSize = pageSize;\n  };\n\n  toggleEntityLinkingEditor = () => {\n    this.showEntityLinkingEditor = !this.showEntityLinkingEditor;\n  };\n\n  enableEntityLinkingEditor = () => {\n    this.showEntityLinkingEditor = true;\n  };\n}\n","import axios from \"axios\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { ApplicationConfig } from \"./ApplicationConfig\";\nimport { EntitySettings } from \"./EntitySettings\";\nimport { TableSettings } from \"./TableSettings\";\n\nexport const appConfig = new ApplicationConfig();\n\nexport class UISettings {\n  public entity: EntitySettings;\n  public table: TableSettings;\n\n  constructor() {\n    this.entity = new EntitySettings();\n    this.table = new TableSettings();\n\n    makeObservable(this, {\n      entity: observable,\n      table: observable,\n      fetchSettings: action,\n    });\n  }\n\n  /** Fetch settings from the server */\n  async fetchSettings() {\n    const resp = await axios.get(\"/api/settings\");\n    appConfig.setInstanceOf(resp.data[\"entity\"][\"instanceof\"]);\n    appConfig.NIL_ENTITY = resp.data[\"entity\"][\"nil\"];\n    appConfig.SEM_MODEL_IDENTS = new Set(\n      resp.data[\"semantic_model\"][\"identifiers\"]\n    );\n    appConfig.SEM_MODEL_STATEMENTS = new Set(\n      resp.data[\"semantic_model\"][\"statements\"]\n    );\n\n    // add a default instanceof property to the popover view\n    const instanceOf: string[] = Object.values(\n      resp.data[\"entity\"][\"instanceof\"]\n    );\n    if (instanceOf.length > 0) {\n      this.entity.addShowedPropsInPopoverView(instanceOf[0]);\n    }\n  }\n}\n\nexport { EntitySettings, TableSettings };\n","import { observable, toJS, action, makeObservable } from \"mobx\";\nimport { Resource } from \"../entity\";\nimport { appConfig } from \"../settings\";\n\nexport interface ClassNode {\n  id: string;\n  uri: string;\n  // for class node only, telling if the class is an approximation\n  approximation: boolean;\n  // readable label in form of `{label} ({qnode id})`; not obtaining from URICount.\n  label: string;\n  readonly nodetype: \"class_node\";\n}\n\nexport interface DataNode {\n  id: string;\n  // column name\n  label: string;\n  columnIndex: number;\n  readonly nodetype: \"data_node\";\n}\n\nexport type LiteralDataType = \"entity-id\" | \"string\";\n\nexport interface LiteralNode {\n  id: string;\n  /**\n   * value of this literal node, depends on the type\n   */\n  value:\n    | {\n        type: \"string\";\n        value: string;\n      }\n    | {\n        type: \"entity-id\";\n        id: string;\n        uri: string;\n      };\n  // readable name for this node\n  label: string;\n  // whether this is a node in the context, apply for literal node only\n  readonly isInContext: boolean;\n  readonly nodetype: \"literal_node\";\n}\n\nexport type SMNode = ClassNode | DataNode | LiteralNode;\nexport type SMNodeType = \"class_node\" | \"data_node\" | \"literal_node\";\n\nexport interface SMEdge {\n  source: string;\n  target: string;\n  uri: string;\n  approximation: boolean;\n  label: string;\n}\n\nexport class URICount {\n  // a map from uri of nodes to the next available number\n  private counter: { [uri: string]: number } = {};\n  private id2num: { [id: string]: number } = {};\n\n  constructor(nodes?: SMNode[]) {\n    for (let node of nodes || []) {\n      if (node.nodetype !== \"class_node\") continue;\n\n      if (this.counter[node.uri] === undefined) {\n        this.counter[node.uri] = 1;\n      }\n      this.id2num[node.id] = this.counter[node.uri];\n      this.counter[node.uri] += 1;\n    }\n  }\n\n  label = (node: SMNode) => {\n    if (this.id2num[node.id] === undefined || this.id2num[node.id] === 1) {\n      return node.label;\n    }\n    return `${node.label} ${this.id2num[node.id]}`;\n  };\n\n  nextLabel = (uri: string, label: string) => {\n    if (this.counter[uri] === undefined) {\n      return label;\n    }\n    return `${label} ${this.counter[uri]}`;\n  };\n\n  add = (node: ClassNode) => {\n    if (this.counter[node.uri] === undefined) {\n      this.counter[node.uri] = 1;\n    }\n    this.id2num[node.id] = this.counter[node.uri];\n    this.counter[node.uri] += 1;\n  };\n\n  getNum = (node: ClassNode) => {\n    return this.id2num[node.id];\n  };\n}\n\nexport class SMGraph {\n  public id: string;\n  public version: number;\n  public nodes: SMNode[];\n  public edges: SMEdge[];\n  public stale: boolean; // if it is stale\n  public nodeId2Index: { [id: string]: number } = {};\n  public column2nodeIndex: { [columnIndex: number]: number } = {};\n  public uriCount: URICount;\n\n  constructor(id: string, nodes: SMNode[], edges: SMEdge[]) {\n    this.id = id;\n    this.version = 0;\n    this.nodes = nodes;\n    this.edges = edges;\n    this.stale = false;\n\n    this.buildIndex();\n    this.uriCount = new URICount(this.nodes);\n\n    makeObservable(this, {\n      version: observable,\n      nodes: observable,\n      edges: observable,\n      stale: observable,\n      nodeId2Index: observable,\n      column2nodeIndex: observable,\n      uriCount: observable,\n      addColumnRelationship: action,\n      upsertColumnType: action,\n      upsertRelationship: action,\n      addClassNode: action,\n      addLiteralNode: action,\n      removeNode: action,\n      updateClassNode: action,\n      updateDataNode: action,\n      updateLiteralNode: action,\n      addEdge: action,\n      removeEdge: action,\n      updateEdge: action,\n    });\n  }\n\n  /** Whether this graph is just containing all data nodes and no edges (it hasn't been modeled) */\n  isEmpty = () => {\n    return (\n      this.edges.length == 0 &&\n      this.nodes.every((node) => node.nodetype === \"data_node\")\n    );\n  };\n\n  clone = () => {\n    const record = this.toJS();\n    return new SMGraph(this.id, record.nodes, record.edges);\n  };\n\n  onSave = () => {\n    this.stale = false;\n  };\n\n  node = (id: string) => this.nodes[this.nodeId2Index[id]];\n  hasNode = (id: string) => this.nodeId2Index[id] !== undefined;\n  nodesByURI = (uri: string) =>\n    this.nodes.filter(\n      (node) => node.nodetype === \"class_node\" && node.uri === uri\n    );\n  nodeByColumnIndex = (id: number) => this.nodes[this.column2nodeIndex[id]];\n  nodeByEntityId = (id: string) =>\n    this.nodes.filter(\n      (node) =>\n        node.nodetype === \"literal_node\" &&\n        node.value.type === \"entity-id\" &&\n        node.value.id === id\n    )[0];\n\n  edge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)[0];\n  hasEdge = (source: string, target: string) =>\n    this.edges.filter((e) => e.source === source && e.target === target)\n      .length > 0;\n  incomingEdges = (target: string) =>\n    this.edges.filter((e) => e.target === target);\n  outgoingEdges = (source: string) =>\n    this.edges.filter((e) => e.source === source);\n\n  nextNodeId = () => {\n    for (let i = 0; i < this.nodes.length * 100; i++) {\n      let nid = `c-${i}`;\n      if (this.nodeId2Index[nid] === undefined) {\n        return nid;\n      }\n    }\n    throw new Error(\"Cannot find new id for a node\");\n  };\n\n  public toJS() {\n    return {\n      nodes: toJS(this.nodes),\n      edges: toJS(this.edges),\n      nodeId2Index: toJS(this.nodeId2Index),\n    };\n  }\n\n  /** Find all paths (max 2 hops) that connect two nodes */\n  findPathMax2hops = (\n    sourceId: string,\n    targetId: string\n  ): [SMEdge, SMEdge?][] => {\n    let matchPaths: [SMEdge, SMEdge?][] = [];\n    let outedges = this.outgoingEdges(sourceId);\n    for (let outedge of outedges) {\n      if (outedge.target === targetId) {\n        matchPaths.push([outedge, undefined]);\n        continue;\n      }\n\n      for (let outedge2 of this.outgoingEdges(outedge.target)) {\n        if (outedge2.target === targetId) {\n          matchPaths.push([outedge, outedge2]);\n        }\n      }\n    }\n\n    return matchPaths;\n  };\n\n  /**\n   * Get the class node of an entity column. Undefined if the column is not an entity node\n   * @param columnIndex\n   * @returns\n   */\n  getClassIdOfColumnIndex = (columnIndex: number): string | undefined => {\n    let inedges = this.incomingEdges(this.nodeByColumnIndex(columnIndex).id);\n    for (let inedge of inedges) {\n      if (appConfig.SEM_MODEL_IDENTS.has(inedge.uri)) {\n        if (inedges.length > 1) {\n          throw new Error(\n            \"Invalid semantic model. An entity column has two incoming edges\"\n          );\n        }\n        return inedge.source;\n      }\n    }\n    return undefined;\n  };\n\n  getOutgoingProperties = (id: string): [SMEdge, SMEdge?][] => {\n    let outprops: [SMEdge, SMEdge?][] = [];\n    for (let outedge of this.outgoingEdges(id)) {\n      let target = this.node(outedge.target);\n      if (\n        target.nodetype === \"class_node\" &&\n        appConfig.SEM_MODEL_STATEMENTS.has(target.uri)\n      ) {\n        for (let coutedge of this.outgoingEdges(outedge.target)) {\n          outprops.push([outedge, coutedge]);\n        }\n      } else {\n        outprops.push([outedge, undefined]);\n      }\n    }\n    return outprops;\n  };\n\n  /******************************************************************\n   * Below is a list of operators that modify the graph. The index is rebuilt/modify\n   * inside @action function\n   ******************************************************************\n   */\n\n  /**\n   * Add a link between two columns\n   *\n   * @deprecated\n   * @param sourceColumnIndex\n   * @param targetColumnIndex\n   * @param edgeData\n   */\n  public addColumnRelationship(\n    sourceColumnIndex: number,\n    targetColumnIndex: number,\n    edgeData: Omit<SMEdge, \"source\" | \"target\">\n  ) {\n    let source = this.nodeByColumnIndex(sourceColumnIndex);\n    let target = this.nodeByColumnIndex(targetColumnIndex);\n\n    let sourceIncomingEdges = this.incomingEdges(source.id);\n    if (sourceIncomingEdges.length === 0) {\n      throw new Error(\"Cannot add link from a data node to another node\");\n    }\n    if (sourceIncomingEdges.length !== 1) {\n      throw new Error(\n        \"The source column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let targetIncomingEdges = this.incomingEdges(target.id);\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The target column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    let realSource = sourceIncomingEdges[0].source;\n    let realTarget =\n      targetIncomingEdges.length === 0\n        ? target.id\n        : targetIncomingEdges[0].source;\n\n    this.addEdge({\n      ...edgeData,\n      source: realSource,\n      target: realTarget,\n    });\n  }\n\n  /**\n   * Upsert the type of the column: replace the type if exist otherwise, create the type including the\n   * new class node.\n   *\n   * @param columnIndex\n   * @param source\n   */\n  public upsertColumnType(columnIndex: number, source: Omit<ClassNode, \"id\">) {\n    let target = this.nodeByColumnIndex(columnIndex);\n    let targetIncomingEdges = this.incomingEdges(target.id);\n\n    if (targetIncomingEdges.length > 1) {\n      throw new Error(\n        \"The column connects to multiple class nodes! Don't know the exact class node to choose\"\n      );\n    }\n\n    if (targetIncomingEdges.length === 0) {\n      let sourceId = this.nextNodeId();\n      this.addClassNode({\n        ...source,\n        id: sourceId,\n      });\n\n      this.addEdge({\n        source: sourceId,\n        target: target.id,\n        uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        label: \"rdfs:label\",\n        approximation: false,\n      });\n    } else {\n      let edge = targetIncomingEdges[0];\n      this.updateClassNode(edge.source, source);\n      if (edge.uri !== \"http://www.w3.org/2000/01/rdf-schema#label\") {\n        // need to update the edge as well\n        this.updateEdge(edge.source, edge.target, {\n          uri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n          label: \"rdfs:label\",\n          approximation: edge.approximation,\n        });\n      }\n    }\n  }\n\n  /**\n   * Upsert the relationship between two nodes: replace the type if exist otherwise create id.\n   *\n   * This is a special function as it tight the system to Wikidata with special node of\n   * wikibase:Statement & property/qualifier. Assuming that the source node and target node\n   * always exist.\n   *\n   * @param sourceId\n   * @param targetId\n   * @param pred1\n   * @param pred2\n   */\n  public upsertRelationship(\n    sourceId: string,\n    targetId: string,\n    pred1: Resource,\n    pred2: Resource\n  ) {\n    // let source = this.node(sourceId);\n    // let target = this.node(targetId);\n\n    let matchPaths = this.findPathMax2hops(sourceId, targetId);\n\n    if (matchPaths.length === 0) {\n      // no new node, so we need to create it\n      if (pred1.uri === pred2.uri) {\n        // we just need to create one link\n        this.addEdge({\n          source: sourceId,\n          target: targetId,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n      } else {\n        let tempid = this.nextNodeId();\n        this.addClassNode({\n          id: tempid,\n          uri: \"http://wikiba.se/ontology#Statement\",\n          label: \"wikibase:Statement\",\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n        this.addEdge({\n          source: sourceId,\n          target: tempid,\n          uri: pred1.uri,\n          label: pred1.label,\n          approximation: false,\n        });\n        this.addEdge({\n          source: tempid,\n          target: targetId,\n          uri: pred2.uri,\n          label: pred2.label,\n          approximation: false,\n        });\n      }\n      return;\n    }\n\n    if (matchPaths.length > 1) {\n      throw new Error(\n        \"There are more one path between two nodes. Don't know which path to update it\"\n      );\n    }\n\n    let [edge1, edge2] = matchPaths[0];\n    this.updateEdge(edge1.source, edge1.target, {\n      uri: pred1.uri,\n      label: pred1.label,\n      approximation: false,\n    });\n    if (edge2 !== undefined) {\n      // non direct property, we need to update it as well\n      this.updateEdge(edge2.source, edge2.target, {\n        uri: pred2.uri,\n        label: pred2.label,\n        approximation: false,\n      });\n    }\n  }\n\n  /**\n   * Add a class node to the model.\n   */\n  public addClassNode(node: ClassNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.uriCount.add(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  /**\n   * Add a literal node to the model\n   */\n  public addLiteralNode(node: LiteralNode) {\n    if (this.nodeId2Index[node.id] !== undefined) {\n      throw new Error(\"Duplicated id\");\n    }\n    this.nodeId2Index[node.id] = this.nodes.length;\n    this.nodes.push(node);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeNode(nodeId: string) {\n    this._removeNode(nodeId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n    this.buildIndex();\n    this.version += 1;\n    this.stale = true;\n    this.uriCount = new URICount(this.nodes);\n  }\n\n  public updateClassNode(nodeId: string, props: Partial<ClassNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"class_node\") {\n      throw new Error(\n        `Invalid node type. Expected class node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n    if (props.uri !== undefined) {\n      this.uriCount = new URICount(this.nodes);\n    }\n  }\n\n  public updateLiteralNode(nodeId: string, props: Partial<LiteralNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"literal_node\") {\n      throw new Error(\n        `Invalid node type. Expected literal node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateDataNode(nodeId: string, props: Partial<DataNode>) {\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (node.nodetype !== \"data_node\") {\n      throw new Error(\n        `Invalid node type. Expected data node but get ${node.nodetype}`\n      );\n    }\n    Object.assign(node, props);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public addEdge(edge: SMEdge) {\n    if (this.hasEdge(edge.source, edge.target)) {\n      throw new Error(\"Cannot have more than one edge between two nodes\");\n    }\n\n    this.edges.push(edge);\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public removeEdge(sourceId: string, targetId: string) {\n    let size = this.nodes.length;\n    this._removeEdge(sourceId, targetId);\n    this.nodes = this.nodes.filter((n) => n !== undefined);\n\n    if (this.nodes.length !== size) {\n      this.buildIndex();\n      this.uriCount = new URICount(this.nodes);\n    }\n    this.version += 1;\n    this.stale = true;\n  }\n\n  public updateEdge(source: string, target: string, props: Partial<SMEdge>) {\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === source && edge.target === target) {\n        this.edges[i] = { ...this.edges[i], ...props };\n      }\n    }\n    this.version = (this.version || 0) + 1;\n    this.stale = true;\n  }\n\n  /**\n   * Cascading remove nodes in the graph. To avoid rebuilding the index\n   * everytime we delete a node, we replace the deleted node by undefined.\n   * A post process step is needed to filter out all undefined items in the list\n   */\n  private _removeNode = (nodeId: string) => {\n    if (\n      this.nodeId2Index[nodeId] === undefined ||\n      this.nodes[this.nodeId2Index[nodeId]] === undefined\n    ) {\n      return;\n    }\n\n    let nodeIndex = this.nodeId2Index[nodeId];\n    let node = this.nodes[nodeIndex];\n\n    if (\n      node.nodetype === \"data_node\" ||\n      (node.nodetype === \"literal_node\" && node.isInContext)\n    ) {\n      // don't remove data nodes && context node;\n      return;\n    }\n\n    // remove node by mark it undefined\n    (this.nodes[nodeIndex] as any) = undefined;\n\n    // we need to remove other edges connected to this node\n    let edges = this.edges.filter(\n      (edge) => edge.source === nodeId || edge.target === nodeId\n    );\n    for (let edge of edges) {\n      this._removeEdge(edge.source, edge.target);\n    }\n  };\n\n  /**\n   * Cascading remove edges in the graph\n   */\n  private _removeEdge = (sourceId: string, targetId: string) => {\n    let edgeIndex = undefined;\n    let sourceDegree = 0;\n    let targetDegree = 0;\n\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge.source === sourceId && edge.target === targetId) {\n        edgeIndex = i;\n      }\n      if (edge.source === sourceId || edge.target === sourceId) {\n        sourceDegree += 1;\n      }\n      if (edge.source === targetId || edge.target === targetId) {\n        targetDegree += 1;\n      }\n    }\n\n    if (edgeIndex === undefined) {\n      return;\n    }\n\n    // remove edge\n    this.edges.splice(edgeIndex, 1);\n\n    // if a node only has one connection, so we delete it because now it is lonely, except if it is\n    // a data node\n    if (sourceDegree === 1) {\n      this._removeNode(sourceId);\n    }\n    if (targetDegree === 1) {\n      this._removeNode(targetId);\n    }\n  };\n\n  private buildIndex = () => {\n    this.nodeId2Index = {};\n    this.column2nodeIndex = {};\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      let n = this.nodes[i];\n      this.nodeId2Index[n.id] = i;\n      if (n.nodetype === \"data_node\" && n.columnIndex !== null) {\n        this.column2nodeIndex[n.columnIndex] = i;\n      }\n    }\n  };\n}\n","import {\n  CRUDStore,\n  DraftCreateRecord,\n  DraftUpdateRecord,\n  Record,\n  SingleKeyIndex,\n} from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"../table\";\nimport { SMEdge, SMGraph, SMNode, SMNodeType } from \"./SMGraph\";\n\nexport class SemanticModel\n  implements Record<number>, DraftUpdateRecord<number, SemanticModel>\n{\n  id: number;\n  name: string;\n  description: string;\n  version: number;\n  graph: SMGraph;\n  table: number;\n\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.version = version;\n    this.graph = graph;\n    this.table = table;\n  }\n\n  static isDraft = (\n    sm: SemanticModel | DraftSemanticModel\n  ): sm is DraftSemanticModel => {\n    return (sm as DraftSemanticModel).draftID !== undefined;\n  };\n\n  markSaved(): void {\n    this.graph.onSave();\n  }\n\n  toModel(): SemanticModel | undefined {\n    return this;\n  }\n}\n\nexport class DraftSemanticModel\n  extends SemanticModel\n  implements DraftCreateRecord\n{\n  draftID: string;\n\n  constructor(\n    draftID: string,\n    name: string,\n    description: string,\n    version: number,\n    graph: SMGraph,\n    table: number\n  ) {\n    super(-1, name, description, version, graph, table);\n    this.draftID = draftID;\n  }\n\n  /**\n   * Get a default draft model for a table\n   */\n  static getDefaultDraftSemanticModel(\n    id: string,\n    name: string,\n    table: Table,\n    description = \"\"\n  ): DraftSemanticModel {\n    const graph = new SMGraph(\n      id,\n      table.columns.map((column, index) => ({\n        id: `col-${index}`,\n        label: column,\n        columnIndex: index,\n        nodetype: \"data_node\",\n      })),\n      []\n    );\n    graph.stale = true;\n    return new DraftSemanticModel(id, name, description, 0, graph, table.id);\n  }\n}\n\nexport class SemanticModelStore extends CRUDStore<\n  number,\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModel\n> {\n  constructor() {\n    super(`${SERVER}/api/semanticmodel`, undefined, false, [\n      new SingleKeyIndex(\"table\"),\n    ]);\n  }\n\n  get tableIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, SemanticModel>;\n  }\n\n  /** Generate new draft id */\n  getNewCreateDraftId = (table: Table): string => {\n    let i = 0;\n    while (true) {\n      const id = `draft-${i}:${table.id}`;\n      if (this.getCreateDraft(id) === undefined) {\n        return id;\n      }\n      i++;\n    }\n  };\n\n  /** Generate new semantic model name */\n  getNewSemanticModelName(table: Table): string {\n    const sms = this.findByTable(table.id);\n    const drafts = this.getCreateDraftsByTable(table);\n\n    let idx = -1;\n    for (const sm of sms.concat(drafts)) {\n      const m = /sm-(\\d+)/.exec(sm.name);\n      if (m === null) continue;\n      if (parseInt(m[1]) >= idx) {\n        idx = Math.max(idx, parseInt(m[1]));\n      }\n    }\n    return `sm-${idx + 1}`;\n  }\n\n  /** Get all drafts of a table */\n  getCreateDraftsByTable(table: Table): DraftSemanticModel[] {\n    const drafts = [];\n    for (const draft of this.createDrafts.values()) {\n      if (draft.table == table.id) {\n        drafts.push(draft);\n      }\n    }\n    return drafts;\n  }\n\n  /**\n   * Find semantic models of the given table.\n   */\n  public findByTable(tableId: number): SemanticModel[] {\n    return Array.from(this.tableIndex.index.get(tableId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  }\n\n  /**\n   * Remove a record (by id) from your indexes\n   */\n  protected deindex(record: SemanticModel): void {\n    for (const index of this.indices) {\n      index.remove(record);\n    }\n  }\n\n  /** Whether we have local copies of semantic models of a given table */\n  public hasByTable(tableId: number): boolean {\n    return this.tableIndex.index.has(tableId);\n  }\n\n  public deserialize(record: any): SemanticModel {\n    const nodes: SMNode[] = record.data.nodes.map((node: any) => {\n      const type: SMNodeType = node.type;\n      delete node.type;\n      node.nodetype = type;\n      if (type === \"data_node\") {\n        node.columnIndex = node.column_index;\n        delete node.column_index;\n      } else if (type === \"literal_node\") {\n        node.isInContext = node.is_in_context;\n        delete node.is_in_context;\n      }\n      return node;\n    });\n    const edges: SMEdge[] = record.data.edges;\n\n    let graph = new SMGraph(record.id.toString(), nodes, edges);\n    return new SemanticModel(\n      record.id,\n      record.name,\n      record.description,\n      record.version,\n      graph,\n      record.table\n    );\n  }\n\n  public serializeUpdateDraft(record: SemanticModel): object {\n    record.version += 1;\n    return {\n      table: record.table,\n      name: record.name,\n      description: record.description,\n      version: record.version,\n      data: {\n        nodes: record.graph.nodes.map((node) => {\n          switch (node.nodetype) {\n            case \"class_node\":\n              return {\n                id: node.id,\n                uri: node.uri,\n                approximation: node.approximation,\n                label: node.label,\n                type: node.nodetype,\n              };\n            case \"data_node\":\n              return {\n                id: node.id,\n                label: node.label,\n                column_index: node.columnIndex,\n                type: node.nodetype,\n              };\n            case \"literal_node\":\n              return {\n                id: node.id,\n                value: node.value,\n                label: node.label,\n                is_in_context: node.isInContext,\n                type: node.nodetype,\n              };\n          }\n        }),\n        edges: record.graph.edges.map((edge) => {\n          return {\n            source: edge.source,\n            target: edge.target,\n            uri: edge.uri,\n            approximation: edge.approximation,\n            label: edge.label,\n          };\n        }),\n      },\n    };\n  }\n\n  public serializeCreateDraft(record: DraftSemanticModel): object {\n    return this.serializeUpdateDraft(record);\n  }\n}\n","import { SERVER } from \"../env\";\nimport { RStore, Record } from \"rma-baseapp\";\nimport { action, flow, makeObservable, observable } from \"mobx\";\nimport { Table, TableRowStore, TableStore } from \"../models/table\";\nimport { DraftSemanticModel, SemanticModelStore } from \"./sm\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { Class, ClassStore } from \"./ontology/ClassStore\";\nimport { Property, PropertyStore } from \"./ontology/PropertyStore\";\nimport { appConfig } from \"./settings\";\n\ninterface AssistantRecord extends Record<number> {}\n\ninterface Prediction {\n  [algorithm: string]: {\n    sm: any;\n    rows: any[];\n  };\n}\n\nexport class AssistantService extends RStore<number, AssistantRecord> {\n  protected tables: TableStore;\n  protected rows: TableRowStore;\n  protected smStore: SemanticModelStore;\n  protected entityStore: EntityStore;\n  protected classStore: ClassStore;\n  protected propStore: PropertyStore;\n\n  constructor(\n    tableStore: TableStore,\n    tableRowStore: TableRowStore,\n    smStore: SemanticModelStore,\n    classStore: ClassStore,\n    propStore: PropertyStore,\n    entityStore: EntityStore\n  ) {\n    super(`${SERVER}/api/assistant`, undefined, false, []);\n\n    this.tables = tableStore;\n    this.rows = tableRowStore;\n    this.smStore = smStore;\n    this.classStore = classStore;\n    this.propStore = propStore;\n    this.entityStore = entityStore;\n\n    makeObservable(this, {\n      predict: action,\n      getColumnTypes: action,\n      getColumnProperties: action,\n      getColumnTypesServer: action,\n    });\n  }\n\n  /**\n   * Predict semantic description and entity linking\n   * */\n  predict: (table: Table) => CancellablePromise<void> = flow(function* (\n    this: AssistantService,\n    table: Table\n  ) {\n    // send request to the server to get some suggestions\n    const resp: AxiosResponse<Prediction> = yield axios.get(\n      `${this.remoteURL}/predict/${table.id}`,\n      {\n        params: { algorithm: \"mtab\" },\n      }\n    );\n\n    // deserialzie the results and put it back to the store\n    const rawsm = resp.data.mtab.sm;\n    const rawrows = resp.data.mtab.rows;\n\n    const draftId = this.smStore.getNewCreateDraftId(table);\n    const graph = this.smStore.deserialize({\n      data: rawsm,\n      id: \"\",\n    }).graph;\n\n    // before set a new draft, check if an empty draft is there (as default) and remove it\n    const prevDrafts = this.smStore.getCreateDraftsByTable(table);\n    if (prevDrafts.length === 1 && prevDrafts[0].graph.isEmpty()) {\n      this.smStore.deleteCreateDraft(prevDrafts[0].draftID);\n    }\n\n    const name = this.smStore.getNewSemanticModelName(table);\n    this.smStore.setCreateDraft(\n      new DraftSemanticModel(draftId, name, \"\", 0, graph, table.id)\n    );\n\n    const rows = rawrows.map(this.rows.deserialize);\n    for (const row of rows) {\n      this.rows.set(row);\n    }\n    return;\n  });\n\n  /**\n   * Get column types from entities in the column. This algorithm is implemented in the client side\n   */\n  async getColumnTypes(\n    table: Table,\n    columnIndex: number,\n    includeCandidateEntities: boolean\n  ): Promise<{ [id: string]: Class }> {\n    const rows = await this.rows.fetchByTable(table, 0, table.size);\n\n    // fetch all entities\n    const entIds = new Set<string>();\n    for (const row of rows) {\n      for (const link of row.links[columnIndex] || []) {\n        if (\n          link.entityId !== undefined &&\n          link.entityId !== appConfig.NIL_ENTITY\n        ) {\n          entIds.add(link.entityId);\n        }\n\n        if (includeCandidateEntities) {\n          for (const candidate of link.candidateEntities) {\n            entIds.add(candidate.entityId);\n          }\n        }\n      }\n    }\n\n    const ents = await this.entityStore.fetchByIds(Array.from(entIds));\n\n    // fetch all classes from entities as well as from the semantic models\n    const classIds = new Set<string>();\n    for (const ent of Object.values(ents)) {\n      const instanceofProp = appConfig.instanceof(ent.uri);\n      if (\n        instanceofProp === undefined ||\n        ent.properties[instanceofProp] === undefined\n      ) {\n        continue;\n      }\n\n      for (const stmt of ent.properties[instanceofProp]) {\n        if (stmt.value.type === \"entityid\") {\n          const classId = stmt.value.value;\n          classIds.add(classId);\n        }\n      }\n    }\n\n    const classes = await this.classStore.fetchByIds(Array.from(classIds));\n\n    // add some classes from the semantic models\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          additionalURIs.add(node.uri);\n        }\n      }\n    }\n    for (const klass of await Promise.all(\n      Array.from(additionalURIs).map(\n        this.classStore.fetchIfMissingByURI.bind(this.classStore)\n      )\n    )) {\n      if (klass === undefined) continue;\n      classes[klass.id] = klass;\n    }\n\n    return classes;\n  }\n\n  /**\n   * Get properties of entities in the column. This algorithm is implemented in the client side\n   */\n  async getColumnProperties(\n    table: Table,\n    columnIndex: number,\n    includeCandidateEntities: boolean\n  ): Promise<{ [id: string]: Property }> {\n    const rows = await this.rows.fetchByTable(table, 0, table.size);\n\n    // fetch all entities\n    const entIds = new Set<string>();\n    for (const row of rows) {\n      for (const link of row.links[columnIndex] || []) {\n        if (\n          link.entityId !== undefined &&\n          link.entityId !== appConfig.NIL_ENTITY\n        ) {\n          entIds.add(link.entityId);\n        }\n\n        if (includeCandidateEntities) {\n          for (const candidate of link.candidateEntities) {\n            entIds.add(candidate.entityId);\n          }\n        }\n      }\n    }\n\n    const ents = await this.entityStore.fetchByIds(Array.from(entIds));\n\n    // fetch all properties from entities as well as from the semantic models\n    const propIds = new Set<string>();\n    for (const ent of Object.values(ents)) {\n      for (const [propId, stmts] of Object.entries(ent.properties)) {\n        propIds.add(propId);\n\n        for (const stmt of stmts) {\n          for (const qualId of stmt.qualifiersOrder) {\n            propIds.add(qualId);\n          }\n        }\n      }\n    }\n\n    const props = await this.propStore.fetchByIds(Array.from(propIds));\n\n    // add some properties from the semantic models\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          for (const edge of sm.graph.outgoingEdges(node.id)) {\n            additionalURIs.add(edge.uri);\n          }\n        }\n      }\n    }\n    for (const prop of await Promise.all(\n      Array.from(additionalURIs).map(\n        this.propStore.fetchIfMissingByURI.bind(this.propStore)\n      )\n    )) {\n      if (prop === undefined) continue;\n      props[prop.id] = prop;\n    }\n\n    return props;\n  }\n\n  /**\n   * Get column types from entities in the column.\n   * This algorithm calls the function implemented in the server, therefore, it does not have the candidate entities.\n   */\n  async getColumnTypesServer(\n    table: Table,\n    columnIndex: number\n  ): Promise<{ [id: string]: Set<string> }> {\n    const req = axios.post(`${this.remoteURL}/column-types`, {\n      table: table.id,\n      column: columnIndex,\n    });\n\n    const sms = this.smStore\n      .findByTable(table.id)\n      .concat(this.smStore.getCreateDraftsByTable(table));\n    const additionalURIs: Set<string> = new Set();\n\n    for (const sm of sms) {\n      const classId = sm.graph.getClassIdOfColumnIndex(columnIndex);\n      if (classId !== undefined) {\n        const node = sm.graph.node(classId);\n        if (node.nodetype === \"class_node\") {\n          additionalURIs.add(node.uri);\n        }\n      }\n    }\n\n    const resp: AxiosResponse<{ [id: string]: string[] }> = await req;\n    const tree = Object.fromEntries(\n      Object.entries(resp.data).map((value) => [value[0], new Set(value[1])])\n    );\n\n    // gather the list of additional classes and add them to the tree\n    const existingClasses = Object.values(\n      await this.classStore.fetchByIds(Object.keys(tree))\n    );\n    const classes = Object.fromEntries(\n      (\n        await Promise.all(\n          Array.from(additionalURIs).map(\n            this.classStore.fetchIfMissingByURI.bind(this.classStore)\n          )\n        )\n      )\n        .filter((klass) => klass !== undefined)\n        .map((klass) => [klass!.id, klass!])\n    );\n\n    for (const klass of Object.values(classes)) {\n      if (tree[klass.id] === undefined) {\n        tree[klass.id] = new Set();\n        for (const parent of klass.parents) {\n          if (tree[parent] !== undefined) {\n            tree[parent].add(klass.id);\n          }\n        }\n      }\n    }\n\n    // we need to check if any of the additional URIs have children which are already in the tree, so we\n    // can add them correctly\n    for (const klass of existingClasses) {\n      for (const parent of klass.parents) {\n        if (classes[parent] !== undefined) {\n          tree[parent].add(klass.id);\n        }\n      }\n    }\n\n    return tree;\n  }\n}\n","import { AxiosError } from \"axios\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RStore } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Entity } from \"./Entity\";\n\nexport class EntityStore extends RStore<string, Entity> {\n  constructor() {\n    super(`${SERVER}/api/entities`, undefined, false);\n  }\n\n  public deserialize(record: any): Entity {\n    record.readableLabel = record.readable_label;\n    delete record.readable_label;\n    for (const stmts of Object.values(record.properties)) {\n      for (let stmt of stmts as any[]) {\n        stmt.qualifiersOrder = stmt.qualifiers_order;\n        delete stmt.qualifiers_order;\n      }\n    }\n    return record;\n  }\n}\n","import { PropaneSharp } from \"@mui/icons-material\";\nimport { flow } from \"lodash\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/internal\";\nimport { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Class {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n  parentsClosure: Set<string>;\n}\n\nexport class ClassStore extends RStore<string, Class> {\n  public doesNotExistURIs = new Set<string>();\n\n  constructor() {\n    super(\n      `${SERVER}/api/classes`,\n      { readableLabel: \"readable_label\", parentsClosure: \"parents_closure\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n\n    makeObservable(this, {\n      doesNotExistURIs: observable,\n      fetchIfMissingByURI: action,\n    });\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Class>;\n  }\n\n  getClassByURI = (uri: string): Class | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n\n  /**\n   * Fetch a class by URI if it is not in the store.\n   *\n   * @returns undefined if the URI does not exist in the database.\n   */\n\n  async fetchIfMissingByURI(uri: string): Promise<Class | undefined> {\n    if (this.doesNotExistURIs.has(uri)) {\n      return undefined;\n    }\n\n    const id = this.uriIndex.index.get(uri);\n    if (id === undefined) {\n      const record: Class | undefined = await this.fetchOne({\n        conditions: { uri },\n      });\n      if (record === undefined) {\n        runInAction(() => {\n          this.doesNotExistURIs.add(uri);\n        });\n      }\n      return record;\n    }\n    return this.get(id)!;\n  }\n\n  public deserialize(record: any): Class {\n    record = super.deserialize(record);\n    record.parentsClosure = new Set(record.parentsClosure);\n    return record;\n  }\n}\n","import { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { RStore, SingleKeyIndex, SingleKeyUniqueIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\n\nexport interface Property {\n  id: string;\n  uri: string;\n  label: string;\n  readableLabel: string;\n  aliases: string[];\n  description: string;\n  parents: string[];\n}\n\nexport class PropertyStore extends RStore<string, Property> {\n  public doesNotExistURIs = new Set<string>();\n\n  constructor() {\n    super(\n      `${SERVER}/api/properties`,\n      { readableLabel: \"readable_label\" },\n      false,\n      [new SingleKeyUniqueIndex(\"uri\")]\n    );\n\n    makeObservable(this, {\n      doesNotExistURIs: observable,\n      fetchIfMissingByURI: action,\n    });\n  }\n\n  get uriIndex() {\n    return this.indices[0] as SingleKeyUniqueIndex<string, string, Property>;\n  }\n\n  getPropertyByURI = (uri: string): Property | undefined => {\n    const id = this.uriIndex.index.get(uri);\n    return id !== undefined ? this.get(id)! : undefined;\n  };\n\n  /**\n   * Fetch a property by URI if it is not in the store.\n   *\n   * @returns undefined if the URI does not exist in the database.\n   */\n  async fetchIfMissingByURI(uri: string): Promise<Property | undefined> {\n    if (this.doesNotExistURIs.has(uri)) {\n      return undefined;\n    }\n\n    const id = this.uriIndex.index.get(uri);\n    if (id === undefined) {\n      const record: Property | undefined = await this.fetchOne({\n        conditions: { uri },\n      });\n      if (record === undefined) {\n        runInAction(() => {\n          this.doesNotExistURIs.add(uri);\n        });\n      }\n      return record;\n    }\n    return this.get(id)!;\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\n\nexport class Project implements Record<number> {\n  id: number;\n  // name of the project\n  name: string;\n  // project's description\n  description: string;\n\n  public constructor(id: number, name: string, description: string) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n\n    makeObservable(this, {\n      id: observable,\n      name: observable,\n      description: observable,\n    });\n  }\n}\n\nexport class DraftUpdateProject\n  extends Project\n  implements DraftUpdateRecord<number, Project>\n{\n  static fromProject(project: Project) {\n    return new DraftUpdateProject(\n      project.id,\n      project.name,\n      project.description\n    );\n  }\n\n  markSaved() {}\n\n  toModel(): Project | undefined {\n    return new Project(this.id, this.name, this.description);\n  }\n}\n\nexport class DraftCreateProject extends Project implements DraftCreateRecord {\n  public draftID: string;\n\n  constructor(draftID: string) {\n    super(0, \"\", \"\");\n    this.draftID = draftID;\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { SERVER } from \"../../env\";\nimport {\n  Record,\n  DraftUpdateRecord,\n  DraftCreateRecord,\n  CRUDStore,\n} from \"rma-baseapp\";\nimport { DraftCreateProject, DraftUpdateProject, Project } from \"./Project\";\nimport { ParserOpts, UploadingTable } from \"./ProjectUpload\";\nimport axios from \"axios\";\n\nexport class ProjectStore extends CRUDStore<\n  number,\n  DraftCreateProject,\n  DraftUpdateProject,\n  Project\n> {\n  constructor() {\n    super(`${SERVER}/api/project`, undefined, false);\n  }\n\n  /**\n   * Upload a table to the project\n   */\n  public uploadTable = async (\n    projectId: number,\n    file: File,\n    parserOpt?: ParserOpts,\n    selectedTables?: number[]\n  ): Promise<UploadingTable | number[]> => {\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    if (parserOpt !== undefined) {\n      form.append(\"parser_opts\", JSON.stringify({ file: parserOpt }));\n    }\n\n    if (selectedTables !== undefined) {\n      form.append(\"selected_tables\", JSON.stringify(selectedTables));\n    }\n\n    const resp = await axios.post(\n      `${SERVER}/api/project/${projectId}/upload`,\n      form,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      }\n    );\n\n    if (resp.data.tables !== undefined) return resp.data.tables[0];\n    return resp.data.table_ids;\n  };\n\n  public deserialize(record: any): Project {\n    return new Project(record.id, record.name, record.description);\n  }\n\n  public serializeUpdateDraft(record: DraftUpdateProject): object {\n    return {\n      id: record.id,\n      name: record.name,\n      description: record.description,\n    };\n  }\n\n  public serializeCreateDraft(record: DraftCreateProject): object {\n    return { name: record.name, description: record.description };\n  }\n}\n","import { Link } from \"../table\";\n\nexport interface CSVParserOpts {\n  format: \"csv\";\n  delimiter: string;\n  first_row_is_header: boolean;\n}\n\nexport interface JSONParserOpts {\n  format: \"json\";\n}\n\nexport type Format = \"csv\" | \"json\";\nexport const formats: Format[] = [\"csv\", \"json\"];\nexport type ParserOpts = CSVParserOpts | JSONParserOpts;\n\nexport interface RawTable {\n  name: string;\n  header: string[];\n  rows: (string | number)[][];\n  links: { [columnIndex: string | number]: Link[] }[];\n}\n\nexport interface UploadingTable {\n  parser_opts: ParserOpts;\n  tables: RawTable[];\n}\n","import { HTMLProps } from \"react\";\n\nexport interface ContentHierarchy {\n  level: number; // level of the heading\n  heading: string; // title of the level (header)\n  contentBefore: (Text | LineBreak)[];\n  contentAfter: (Text | LineBreak)[];\n}\n\nexport interface Text {\n  value: string;\n  tags: string[];\n  id2attrs: { [id: string]: HTMLProps<HTMLAnchorElement> };\n}\n\nexport interface LineBreak {\n  nLines: number;\n}\n\nexport function isLineBreak(item: Text | LineBreak): item is LineBreak {\n  return (item as LineBreak).nLines !== undefined;\n}\n","import { SERVER } from \"../../env\";\nimport {\n  FetchResult,\n  PairKeysUniqueIndex,\n  RStore,\n  SimpleCRUDStore,\n} from \"rma-baseapp\";\nimport { Link, Table, TableRow } from \"./Table\";\nimport { action, makeObservable, flow } from \"mobx\";\nimport { CancellablePromise } from \"mobx/dist/api/flow\";\nimport axios from \"axios\";\n\nexport class TableRowStore extends SimpleCRUDStore<number, TableRow> {\n  constructor() {\n    super(`${SERVER}/api/tablerow`, undefined, false, [\n      new PairKeysUniqueIndex(\"table\", \"index\"),\n    ]);\n\n    makeObservable(this, {\n      fetchByTable: action,\n      updateCellLinks: action,\n      updateColumnLinks: action,\n    });\n  }\n\n  get tableIndex() {\n    return this.indices[0] as PairKeysUniqueIndex<\n      number,\n      number,\n      number,\n      TableRow\n    >;\n  }\n\n  /**\n   * Update links of a cell of a single row.\n   *\n   * @param row the row we want to update\n   * @param columnIndex the column we want to save the links\n   * @param entityId the entity id we want to associate with the cell\n   * @param updateCandidateEntities whether or not to update the candidate entities, or just the entities\n   */\n  updateCellLinks = flow(function* (\n    this: TableRowStore,\n    row: TableRow,\n    columnIndex: number,\n    entityId: string | undefined,\n    updateCandidateEntities: boolean\n  ) {\n    const value = row.row[columnIndex];\n    if (typeof value === \"number\") {\n      throw new Error(`Can't not link a number \"${value}\" to an entity`);\n    }\n\n    // first of all, we update the cell\n    if (\n      row.links[columnIndex] === undefined ||\n      row.links[columnIndex].length === 0\n    ) {\n      if (entityId === undefined) {\n        // no need to update as nothing changes\n        return;\n      }\n\n      // add the entity\n      row.links[columnIndex] = [\n        {\n          start: 0,\n          end: value.length,\n          url: undefined,\n          entityId: entityId,\n          candidateEntities: [],\n        },\n      ];\n    }\n    row.links[columnIndex][0].entityId = entityId;\n\n    // then, we sync with the database\n    try {\n      const params = { links: row.links[columnIndex].map(this.serializeLink) };\n      if (!updateCandidateEntities) {\n        for (const link of params.links) {\n          delete (link as any).candidate_entities;\n        }\n      }\n\n      this.state.value = \"updating\";\n      yield axios.put(\n        `${this.remoteURL}/${row.id}/cells/${columnIndex}`,\n        params\n      );\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      throw error;\n    }\n  });\n\n  /**\n   * Update links of cells in a single column that have the same value as the given input.\n   *\n   * This function will never sync the candidate entities.\n   *\n   * @param table the table we want to update\n   * @param columnIndex the column we want to save the links\n   * @param text cell's value matches with this text will be updated\n   * @param entityId the entity id we want to associate with the cell\n   */\n  updateColumnLinks = flow(function* (\n    this: TableRowStore,\n    table: Table,\n    columnIndex: number,\n    text: string,\n    entityId: string | undefined\n  ) {\n    // first, we update cells in the store\n    const map = this.tableIndex.index.get(table.id);\n    if (map !== undefined) {\n      for (const [index, rowId] of map) {\n        const row = this.records.get(rowId)!;\n        if (row.row[columnIndex] !== text) {\n          continue;\n        }\n\n        if (\n          row.links[columnIndex] === undefined ||\n          row.links[columnIndex].length === 0\n        ) {\n          if (entityId === undefined) {\n            // no need to update as nothing changes\n            continue;\n          }\n\n          // add the entity\n          row.links[columnIndex] = [\n            {\n              start: 0,\n              end: text.length,\n              url: undefined,\n              entityId: entityId,\n              candidateEntities: [],\n            },\n          ];\n        }\n        row.links[columnIndex][0].entityId = entityId;\n      }\n    }\n\n    // then, we sync with the database\n    try {\n      this.state.value = \"updating\";\n      yield axios.put(`${this.remoteURL}/update_column_links`, {\n        table: table.id,\n        column: columnIndex,\n        text: text,\n        entity_id: entityId === undefined ? null : entityId,\n      });\n      this.state.value = \"updated\";\n    } catch (error: any) {\n      this.state.value = \"error\";\n      throw error;\n    }\n  });\n\n  /**\n   * Find rows of the table\n   *\n   * @param table\n   * @param start the start row\n   * @param no number of rows to return\n   * @returns\n   */\n  fetchByTable: (\n    table: Table,\n    start: number,\n    no: number\n  ) => CancellablePromise<TableRow[]> = flow(function* (\n    this: TableRowStore,\n    table: Table,\n    start: number,\n    no: number\n  ) {\n    // update the query so we won't query rows not in the table\n    if (table.size < start + no) {\n      no = table.size - start;\n    }\n\n    let hasLocalData = true;\n    const map = this.tableIndex.index.get(table.id);\n    if (map === undefined) {\n      const result: FetchResult<TableRow> = yield this.fetch({\n        limit: no,\n        offset: start,\n        conditions: { table: table.id },\n      });\n      return result.records;\n    }\n\n    const output = [];\n    for (let i = 0; i < no; i++) {\n      const rowId = map.get(i + start);\n      if (rowId === undefined) {\n        hasLocalData = false;\n        break;\n      }\n      output.push(this.records.get(rowId)!);\n    }\n\n    if (hasLocalData) return output;\n    const result: FetchResult<TableRow> = yield this.fetch({\n      limit: no,\n      offset: start,\n      conditions: { table: table.id },\n    });\n    return result.records;\n  });\n\n  protected index(record: TableRow) {\n    this.tableIndex.add(record);\n  }\n\n  public deserialize(record: any): TableRow {\n    Object.values(record.links).forEach((links: any) => {\n      links.forEach((link: any) => {\n        if (link.entity_id !== null) {\n          link.entityId = link.entity_id;\n        }\n        // convert null url to undefined\n        if (link.url === null) {\n          delete link.url;\n        }\n        link.candidate_entities.forEach((ce: any) => {\n          ce.entityId = ce.entity_id;\n          delete ce.entity_id;\n        });\n        link.candidateEntities = link.candidate_entities;\n        delete link.entity_id;\n        delete link.candidate_entities;\n      });\n    });\n    return record;\n  }\n\n  protected serializeRecord(record: TableRow | Omit<TableRow, \"id\">): object {\n    return {\n      table: record.table,\n      index: record.index,\n      row: Array.from(record.row),\n      links: Object.fromEntries(\n        Object.entries(record.links).map(([columnIndex, links]) => {\n          return [columnIndex, links.map(this.serializeLink)];\n        })\n      ),\n    };\n  }\n\n  protected serializeLink = (link: Link): object => {\n    return {\n      start: link.start,\n      end: link.end,\n      url: link.url || null,\n      entity_id: link.entityId || null,\n      candidate_entities: link.candidateEntities.map((canent) => ({\n        entity_id: canent.entityId,\n        probability: canent.probability,\n      })),\n    };\n  };\n}\n","import React, { createContext } from \"react\";\nimport { registerDefaultAxiosErrorHandler } from \"rma-baseapp\";\nimport { AssistantService } from \"./AssistantService\";\nimport { Entity, EntityStore } from \"./entity\";\nimport { ClassStore } from \"./ontology/ClassStore\";\nimport { PropertyStore } from \"./ontology/PropertyStore\";\nimport { Project, ProjectStore } from \"./project\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  SemanticModelStore,\n  SMGraph,\n  URICount,\n} from \"./sm\";\nimport { TableRowStore, TableStore } from \"./table\";\nimport { UISettings, EntitySettings, TableSettings } from \"./settings\";\n\nconst tableStore = new TableStore();\nconst semanticModelStore = new SemanticModelStore();\nconst tableRowStore = new TableRowStore();\nconst classStore = new ClassStore();\nconst propertyStore = new PropertyStore();\nconst entityStore = new EntityStore();\n\nexport const stores = {\n  projectStore: new ProjectStore(),\n  tableStore,\n  tableRowStore,\n  semanticModelStore,\n  entityStore,\n  propertyStore,\n  classStore,\n  assistantService: new AssistantService(\n    tableStore,\n    tableRowStore,\n    semanticModelStore,\n    classStore,\n    propertyStore,\n    entityStore\n  ),\n  uiSettings: new UISettings(),\n};\n\nregisterDefaultAxiosErrorHandler();\n\n(window as any)._stores = stores;\nexport type IStore = Readonly<typeof stores>;\n\n/** Init the stores with essential information (e.g., loading the ui settings) needed to run the app */\nexport function initStores(): Promise<void> {\n  return stores.uiSettings.fetchSettings();\n}\n\nexport const StoreContext = createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport type { Property } from \"./ontology/PropertyStore\";\nexport type { SMEdge, SMNode } from \"./sm/SMGraph\";\nexport type { Table, TableRow } from \"./table\";\nexport {\n  ProjectStore,\n  TableStore,\n  TableRowStore,\n  Project,\n  SemanticModelStore,\n  DraftSemanticModel,\n  PropertyStore,\n  ClassStore,\n  EntityStore,\n  SemanticModel,\n  SMGraph,\n  URICount,\n  Entity,\n  UISettings,\n  TableSettings,\n  EntitySettings,\n};\n","import { SimpleCRUDStore, SingleKeyIndex } from \"rma-baseapp\";\nimport { SERVER } from \"../../env\";\nimport { Table } from \"./Table\";\n\nexport class TableStore extends SimpleCRUDStore<number, Table> {\n  constructor() {\n    super(`${SERVER}/api/table`, undefined, false, [\n      new SingleKeyIndex(\"project\"),\n    ]);\n  }\n\n  get projectIndex() {\n    return this.indices[0] as SingleKeyIndex<number, number, Table>;\n  }\n\n  /**\n   * Find tables in a project\n   *\n   * @param projectId\n   * @param start\n   * @param no number of tables to return\n   */\n  findByProject = (projectId: number, start?: number, no?: number): Table[] => {\n    return Array.from(this.projectIndex.index.get(projectId) || []).map(\n      (id) => this.records.get(id)!\n    );\n  };\n\n  public deserialize(record: any): Table {\n    record.contextPage = record.context_page;\n    if (record.contextPage === null || record.contextPage === undefined) {\n      record.contextPage = {};\n    }\n\n    if (record.contextPage.entity !== null) {\n      record.contextPage.entityId = record.contextPage.entity;\n      delete record.contextPage.entity;\n    }\n\n    record.contextValues = record.context_values;\n    if (record.context_tree !== undefined) {\n      record.contextTree = record.context_tree.map((item: any) => {\n        item.contentBefore = item.content_before.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        item.contentAfter = item.content_after.map((x: any) => {\n          if (x.n_lines !== undefined) {\n            x.nLines = x.n_lines;\n            delete x.n_lines;\n          }\n          return x;\n        });\n        delete item.content_before;\n        delete item.content_after;\n        return item;\n      });\n      delete record.context_tree;\n    }\n    delete record.context_tree;\n    delete record.context_values;\n    delete record.context_page;\n    return record;\n  }\n\n  protected index(record: Table) {\n    this.projectIndex.add(record);\n  }\n}\n","import { message } from \"antd\";\nexport { RStore } from \"./RStore\";\nexport { CRUDStore, SimpleCRUDStore } from \"./CRUDStore\";\nexport { CRUDJunctionStore } from \"./CRUDJunctionStore\";\nexport * from \"./StoreIndex\";\n/**\n * Register a default error handler for all ajax requests via axios, which simply show a bubble message, and re-throw the error.\n *\n * The implementation leverages the feature that when a Promise that has no rejection handler is rejected, the unhandledrejection event is sent to the global scope.\n *\n * More information and browser supports can be found in here: https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event\n *\n * In Mar 2022, most of the important browsers support this feature except IE and Firefox for Android.\n */\nexport const registerDefaultAxiosErrorHandler = () => {\n    window.addEventListener(\"unhandledrejection\", (event) => {\n        if (event.reason.isAxiosError === true) {\n            message.error(\"Error while talking with the server.\", 10);\n            console.error(event.reason);\n        }\n    });\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal } from \"antd\";\nimport { DraftCreateProject } from \"../../../models/project\";\n\nconst styles = {};\n\nexport const NewProjectForm = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [form] = Form.useForm();\n    const [nameValidation, setNameValidation] = useState({\n      name: \"\",\n      status: \"success\",\n    });\n\n    const onSave = () => {\n      const project = new DraftCreateProject(\"\");\n      project.name = form.getFieldValue(\"name\");\n      project.description = form.getFieldValue(\"description\");\n\n      projectStore\n        .create(project)\n        .then(() => {\n          Modal.destroyAll();\n        })\n        .catch(() => {\n          setNameValidation({ name: project.name, status: \"error\" });\n        });\n    };\n\n    return (\n      <>\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          form={form}\n          onFinish={onSave}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"name\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            validateStatus={\n              nameValidation.name === form.getFieldValue(\"name\") &&\n              nameValidation.status === \"error\"\n                ? \"error\"\n                : undefined\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"description\"\n            label=\"description\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 20,\n              offset: 4,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Create\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  })\n);\n\nexport const openNewProjectForm = (zIndex?: number) => {\n  const content = <NewProjectForm />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        New Project\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { Avatar, Button, Col, List, Row, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { InternalLink } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\n\nimport {\n  red,\n  volcano,\n  orange,\n  gold,\n  yellow,\n  lime,\n  green,\n  cyan,\n  blue,\n  geekblue,\n  purple,\n  magenta,\n} from \"@ant-design/colors\";\nimport { openNewProjectForm } from \"../project/forms/NewProjectForm\";\n\n// const colorWheels = [\"#f56a00\", \"#7265e6\", \"#1890ff\", \"#00a2ae\"];\nconst colorWheels = [\n  red[5],\n  volcano[5],\n  blue[5],\n  gold[5],\n  orange[5],\n  yellow[5],\n  lime[5],\n  green[5],\n  cyan[5],\n  geekblue[5],\n  purple[5],\n  magenta[5],\n];\n\nexport const HomePage = observer(() => {\n  const { projectStore } = useStores();\n\n  useEffect(() => {\n    projectStore.fetch({ limit: 100, offset: 0 });\n  }, [projectStore]);\n\n  return (\n    <React.Fragment>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={16}>\n          <Typography.Title level={3}>Projects</Typography.Title>\n        </Col>\n        <Col className=\"gutter-row\" span={8}>\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            onClick={() => openNewProjectForm()}\n          >\n            New Project\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={24}>\n          <List\n            size=\"small\"\n            bordered={true}\n            itemLayout=\"horizontal\"\n            dataSource={projectStore.list}\n            renderItem={(project, i) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      shape=\"square\"\n                      size=\"large\"\n                      style={{\n                        marginTop: 4,\n                        backgroundColor:\n                          colorWheels[\n                            project.name.charCodeAt(0) % colorWheels.length\n                          ],\n                      }}\n                    >\n                      {project.name[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <InternalLink\n                      path={routes.project}\n                      urlArgs={{ projectId: project.id }}\n                      queryArgs={{}}\n                    >\n                      {project.name}\n                    </InternalLink>\n                  }\n                  description={project.description}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n});\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport { Button, Form, Input, Modal, Space } from \"antd\";\nimport { Project, DraftUpdateProject } from \"../../../models/project\";\nimport { routes } from \"../../../routes\";\n\nconst styles = {};\n\nexport const UpdateProjectForm = withStyles(styles)(\n  observer(\n    ({\n      project,\n      classes,\n    }: { project: Project } & WithStyles<typeof styles>) => {\n      const { projectStore } = useStores();\n      const [form] = Form.useForm();\n      const [nameValidation, setNameValidation] = useState({\n        name: \"\",\n        status: \"success\",\n      });\n\n      const onSave = () => {\n        const draft = DraftUpdateProject.fromProject(project);\n        draft.name = form.getFieldValue(\"name\");\n        draft.description = form.getFieldValue(\"description\");\n        projectStore\n          .update(draft)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .catch(() => {\n            setNameValidation({ name: draft.name, status: \"error\" });\n          });\n      };\n\n      const onDelete = () => {\n        projectStore\n          .delete(project.id)\n          .then(() => {\n            Modal.destroyAll();\n          })\n          .then(() => {\n            routes.home.path().open();\n          });\n      };\n\n      return (\n        <>\n          <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            onFinish={onSave}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"name\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n              initialValue={project.name}\n              validateStatus={\n                nameValidation.name === form.getFieldValue(\"name\") &&\n                nameValidation.status === \"error\"\n                  ? \"error\"\n                  : undefined\n              }\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"description\"\n              label=\"description\"\n              rules={[{ required: true }]}\n              initialValue={project.description}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              wrapperCol={{\n                span: 20,\n                offset: 4,\n              }}\n            >\n              <Space style={{ width: \"100%\" }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Update\n                </Button>\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  Delete\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </>\n      );\n    }\n  )\n);\n\nexport const openUpdateProjectForm = (project: Project, zIndex?: number) => {\n  const content = <UpdateProjectForm project={project} />;\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Update Project {project.name}\n      </span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n};\n","import { Button, Form, FormInstance, Input, Select, Switch } from \"antd\";\nimport React from \"react\";\nimport { CSVParserOpts, formats, ParserOpts } from \"../../../../models/project\";\n\nexport const CSVParserForm = ({\n  opt,\n  form,\n}: {\n  form: FormInstance<any>;\n  opt: CSVParserOpts;\n}) => {\n  return (\n    <>\n      <Form.Item\n        name=\"delimiter\"\n        label=\"delimiter\"\n        rules={[{ required: true }]}\n      >\n        <Input\n          onChange={(e) => {\n            form.setFieldsValue({\n              delimiter: e.target.value\n                .replace(\"\\\\t\", \"\\t\")\n                .replace(\"\\\\n\", \"\\n\"),\n            });\n          }}\n          style={{ width: 60 }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"first_row_is_header\"\n        label=\"Is first row header\"\n        rules={[{ required: true }]}\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n    </>\n  );\n};\n\nexport const escapeDelimiter = (delimiter?: string) => {\n  switch (delimiter) {\n    case \"\\t\":\n      return \"\\\\t\";\n    case \"\\n\":\n      return \"\\\\n\";\n    default:\n      return delimiter;\n  }\n};\n\nexport const ParserOptsForm = (props: { parserOpts: ParserOpts }) => {\n  const [form] = Form.useForm();\n  let additionalProps;\n\n  if (props.parserOpts.format === \"csv\") {\n    additionalProps = <CSVParserForm opt={props.parserOpts} form={form} />;\n  } else {\n    additionalProps = null;\n  }\n\n  return (\n    <Form\n      layout=\"inline\"\n      initialValues={{\n        ...props.parserOpts,\n        delimiter:\n          props.parserOpts.format === \"csv\"\n            ? escapeDelimiter(props.parserOpts.delimiter)\n            : undefined,\n      }}\n    >\n      <Form.Item name=\"format\" label=\"File Type\" rules={[{ required: true }]}>\n        <Select\n          onChange={(value) => {\n            form.setFieldsValue({ format: value });\n          }}\n        >\n          {formats.map((value) => (\n            <Select.Option key={value} value={value}>\n              {value}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      {additionalProps}\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import ProTable from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { RawTable } from \"../../../../models/project\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const RawTableComponent = withStyles(styles)(\n  ({ table, classes }: { table: RawTable } & WithStyles<typeof styles>) => {\n    return (\n      <ProTable\n        className={classes.table}\n        defaultSize=\"small\"\n        bordered={true}\n        toolBarRender={false}\n        search={false}\n        pagination={{\n          pageSize: 5,\n          pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n        }}\n        rowKey=\"id\"\n        columns={table.header.map((header, index) => ({\n          dataIndex: [\"data\", index],\n          title: header,\n        }))}\n        request={async (params, sort, filter) => {\n          const start = (params.current! - 1) * params.pageSize!;\n          const end = start + params.pageSize!;\n          return {\n            data: table.rows\n              .slice(start, end)\n              .map((row, index) => ({ data: row, id: index + start })),\n            success: true,\n            total: table.rows.length,\n          };\n        }}\n      />\n    );\n  }\n);\n","import { InboxOutlined } from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  Form,\n  Input,\n  Modal,\n  Space,\n  Switch,\n  Typography,\n  Upload,\n} from \"antd\";\nimport { ModalStaticFunctions } from \"antd/lib/modal/confirm\";\nimport React, { useState } from \"react\";\nimport { useStores } from \"../../../../models\";\nimport { Project, UploadingTable } from \"../../../../models/project\";\nimport { ParserOptsForm } from \"./ParserOptsComponent\";\nimport { RawTableComponent } from \"./RawTableComponent\";\n\nconst styles = {\n  upload: {\n    \"& > .ant-upload\": {\n      padding: \"8px 0 !important\",\n    },\n  },\n  carouselDot: {\n    zIndex: 2000,\n    backgroundColor: \"black\",\n    opacity: 0,\n  },\n};\n\nexport const UploadPhase1 = withStyles(styles)(\n  ({\n    classes,\n    projectId,\n    setUploadTable,\n  }: {\n    setUploadTable: (item: UploadingTable, file: File) => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n\n    const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n      const file = e.dataTransfer.files[0];\n      projectStore.uploadTable(projectId, file).then((tbl) => {\n        if (Array.isArray(tbl)) {\n          throw new Error(\"Error\");\n        }\n        setUploadTable(tbl, file);\n      });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Upload.Dragger\n          name=\"file\"\n          multiple={false}\n          onDrop={onDrop}\n          beforeUpload={() => false}\n          className={classes.upload}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-hint\">\n            Click or drag file to this area to upload\n          </p>\n        </Upload.Dragger>\n\n        <Form layout=\"inline\">\n          <Form.Item\n            name=\"url\"\n            label=\"URL\"\n            rules={[{ required: true }]}\n            style={{ width: \"calc(100% - 94px)\" }}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item style={{ margin: 0 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Space>\n    );\n  }\n);\n\nexport const UploadPhase2 = withStyles(styles)(\n  ({\n    uploadingTable,\n    classes,\n    projectId,\n    destroy,\n    onDone,\n  }: {\n    uploadingTable: { table: UploadingTable; file: File };\n    destroy: () => void;\n    onDone: () => void;\n    projectId: number;\n  } & WithStyles<typeof styles>) => {\n    const { projectStore } = useStores();\n    const [selectedTables, setSelectedTables] = useState(\n      uploadingTable.table.tables.map(() => true)\n    );\n    let tables;\n\n    if (uploadingTable.table.tables.length == 1) {\n      tables = <RawTableComponent table={uploadingTable.table.tables[0]} />;\n    } else {\n      tables = uploadingTable.table.tables.map((table, index) => {\n        return (\n          <Space\n            direction=\"vertical\"\n            style={{ width: \"100%\" }}\n            key={`table-${index}-wrap`}\n          >\n            <Typography.Text>\n              Select:&nbsp;\n              <Switch\n                checked={selectedTables[index]}\n                onChange={(checked) => {\n                  const lst = selectedTables.slice();\n                  lst[index] = checked;\n                  setSelectedTables(lst);\n                }}\n              />\n            </Typography.Text>\n            <RawTableComponent table={table} />,\n          </Space>\n        );\n      });\n    }\n\n    const finishUpload = () => {\n      const tableIndex: number[] = [];\n      selectedTables.forEach((flag, index) => {\n        if (flag) tableIndex.push(index);\n      });\n\n      return projectStore\n        .uploadTable(\n          projectId,\n          uploadingTable.file,\n          uploadingTable.table.parser_opts,\n          tableIndex\n        )\n        .then((result) => {\n          destroy();\n          onDone();\n        });\n    };\n\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <ParserOptsForm parserOpts={uploadingTable.table.parser_opts} />\n        {tables}\n        <Space>\n          <Button type=\"primary\" onClick={finishUpload}>\n            Confirm\n          </Button>\n          {/* <Button\n            type=\"primary\"\n            onClick={() => {\n              finishUpload().then(() => {\n                // TODO: re-open the upload form\n              });\n            }}\n          >\n            Confirm & Upload\n          </Button> */}\n        </Space>\n      </Space>\n    );\n  }\n);\n\nexport const UploadTableForm = ({\n  project,\n  destroy,\n  onDone,\n}: {\n  project: Project;\n  destroy: () => void;\n  onDone?: () => void;\n}) => {\n  const { projectStore } = useStores();\n  const [phase, setPhase] = useState<\"phase1\" | \"phase2\">(\"phase1\");\n  const [uploadingTable, setUploadingTable] = useState<\n    { table: UploadingTable; file: File } | undefined\n  >(undefined);\n\n  if (phase === \"phase1\") {\n    return (\n      <UploadPhase1\n        projectId={project.id}\n        setUploadTable={(table, file) => {\n          setUploadingTable({ table, file });\n          setPhase(\"phase2\");\n        }}\n      />\n    );\n  }\n\n  if (phase === \"phase2\") {\n    return (\n      <UploadPhase2\n        projectId={project.id}\n        uploadingTable={uploadingTable!}\n        destroy={destroy}\n        onDone={onDone || (() => {})}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport const openUploadTableForm = (\n  project: Project,\n  cfg?: {\n    zIndex?: number;\n    modal?: Omit<ModalStaticFunctions, \"warn\">;\n    onDone?: () => void;\n  }\n) => {\n  const modal = cfg?.modal === undefined ? Modal : cfg.modal;\n  const ref = modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n        Upload Tables\n      </span>\n    ),\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: cfg?.zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n  ref.update({\n    content: (\n      <UploadTableForm\n        project={project}\n        destroy={ref.destroy}\n        onDone={cfg?.onDone}\n      />\n    ),\n  });\n};\n","import { EditOutlined } from \"@ant-design/icons\";\nimport ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Modal, Popconfirm, Typography } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useRef } from \"react\";\nimport { InternalLink, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { Table, useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { openUpdateProjectForm } from \"./forms/UpdateProjectForm\";\nimport { openUploadTableForm } from \"./forms/upload\";\n\nconst styles = {\n  table: {\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n    \"& div.ant-card-body\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n};\n\nexport const ProjectPage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    const projectId = routes.project.useURLParams()!.projectId;\n    const [modal, contextHolder] = Modal.useModal();\n    const actionRef = useRef<ActionType>();\n\n    const { projectStore, tableStore } = useStores();\n    useEffect(() => {\n      projectStore.fetchById(projectId);\n    }, [projectStore, projectId]);\n\n    const project = projectStore.get(projectId);\n    if (project === undefined) {\n      return <LoadingPage />;\n    } else if (project === null) {\n      return <NotFoundPage />;\n    }\n\n    const columns = [\n      { dataIndex: \"id\", title: \"id\" },\n      {\n        dataIndex: \"name\",\n        title: \"name\",\n        renderText: (text: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <InternalLink\n              path={routes.table}\n              urlArgs={{ tableId: tbl.id }}\n              queryArgs={{\n                query: tableStore.encodeWhereQuery({ project: projectId }),\n              }}\n            >\n              {tbl.name}\n            </InternalLink>\n          );\n        },\n      },\n      { dataIndex: \"description\", title: \"description\" },\n      {\n        dataIndex: \"id\",\n        title: \"action\",\n        renderText: (_: string, tbl: ReturnType<typeof table2row>) => {\n          return (\n            <Popconfirm\n              title=\"Are you sure to delete this table?\"\n              onConfirm={() => {\n                tableStore.delete(tbl.id);\n                actionRef.current?.reload();\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button type=\"primary\" danger={true} size=\"small\">\n                Delete\n              </Button>\n            </Popconfirm>\n          );\n        },\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        <Typography.Title level={3}>\n          Project {_.upperFirst(project.name)}\n          &nbsp;\n          <a\n            style={{ fontSize: \"0.8em\", fontWeight: 400 }}\n            onClick={() => openUpdateProjectForm(project)}\n          >\n            <EditOutlined />\n          </a>\n        </Typography.Title>\n        <Typography.Text>\n          <b>Description:</b>{\" \"}\n          <Typography.Text type=\"secondary\">\n            {project.description}\n          </Typography.Text>\n        </Typography.Text>\n        <ProTable<ReturnType<typeof table2row>>\n          actionRef={actionRef}\n          className={classes.table}\n          defaultSize=\"small\"\n          bordered={true}\n          request={async (params, sort, filter) => {\n            let result = await tableStore.fetch({\n              limit: params.pageSize!,\n              offset: (params.current! - 1) * params.pageSize!,\n              conditions: { project: projectId },\n            });\n            return {\n              data: result.records.map(table2row),\n              success: true,\n              total: result.total,\n            };\n          }}\n          options={{\n            search: true,\n          }}\n          headerTitle={<Typography.Title level={4}>Tables</Typography.Title>}\n          toolBarRender={() => {\n            return [\n              <Button\n                key=\"upload\"\n                type=\"primary\"\n                onClick={() =>\n                  openUploadTableForm(project, {\n                    modal,\n                    onDone: () => {\n                      actionRef.current?.reload();\n                    },\n                  })\n                }\n              >\n                Upload\n              </Button>,\n            ];\n          }}\n          search={false}\n          pagination={{\n            pageSize: 500,\n            pageSizeOptions: [\"10\", \"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n          }}\n          rowKey=\"id\"\n          columns={columns}\n        />\n        {contextHolder}\n      </React.Fragment>\n    );\n  })\n);\n\nfunction table2row(tbl: Table) {\n  return {\n    id: tbl.id,\n    name: tbl.name,\n    description: tbl.description,\n  };\n}\n","/** A utility to discard responses out of order */\nexport class SequentialFuncInvoker {\n  private timer: number = 0;\n\n  public exec<T>(fn: () => Promise<T>): Promise<T | undefined> {\n    this.timer += 1;\n    let calledAt = this.timer;\n\n    return fn().then((result: any) => {\n      if (calledAt < this.timer) {\n        return undefined;\n      }\n\n      return result;\n    });\n  }\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { useStores } from \"../../models\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n};\n\ntype SearchProps = {\n  value?: string | string[];\n  onDeselect?: (value: string) => void;\n  onSelect?: (value: string) => void;\n  mode?: \"multiple\" | \"tags\";\n} & WithStyles<typeof styles>;\n\nexport const OntPropSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"propertyStore\", props);\n  })\n);\n\nexport const OntClassSearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"classStore\", props);\n  })\n);\n\nexport const EntitySearchComponent = withStyles(styles)(\n  observer((props: SearchProps) => {\n    return useSearchComponent(\"entityStore\", props);\n  })\n);\n\nfunction useSearchComponent(\n  storeName: \"propertyStore\" | \"classStore\" | \"entityStore\",\n  props: SearchProps\n) {\n  const store = useStores()[storeName];\n  const seqInvoker = new SequentialFuncInvoker();\n\n  // when the provided value is not in the store, fetch it\n  useEffect(() => {\n    if (props.value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(props.value)) {\n      // leverage the fact that the three stores are not re-fetched\n      if (!store.refetch) {\n        store.fetchByIds(props.value);\n      } else {\n        store.fetchByIds(props.value.filter((id) => !store.records.has(id)));\n      }\n    } else if (store.get(props.value) === undefined) {\n      store.fetchById(props.value);\n    }\n  }, [props.value]);\n\n  // gather all options already in the store, leverage the fact\n  // that property store is readonly\n  const options = useMemo(() => {\n    const options = [];\n    for (const r of store.iter()) {\n      options.push({\n        value: r.id,\n        label: r.readableLabel,\n      });\n    }\n    return options;\n  }, [store.records.size]);\n\n  // search for additional properties if it's not in the list\n  const onSearch = (query: string) => {\n    if (query === \"\") return;\n    seqInvoker.exec(() => {\n      return store.fetchById(query).then(() => 1);\n    });\n  };\n\n  return (\n    <Select\n      mode={props.mode}\n      allowClear={true}\n      options={options}\n      optionFilterProp=\"label\"\n      className={props.classes.selection}\n      showSearch={true}\n      onSearch={onSearch}\n      value={props.value}\n      onSelect={props.onSelect as any}\n      onDeselect={props.onDeselect as any}\n    />\n  );\n}\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Descriptions } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { useStores } from \"../../models\";\nimport { OntPropSearchComponent } from \"./OntSearchComponent\";\n\nconst styles = {};\n\nexport const EntitySettingComponent = withStyles(styles)(\n  observer(({ classes }: {} & WithStyles<typeof styles>) => {\n    const { uiSettings } = useStores();\n\n    return (\n      <Descriptions title=\"Entity Settings\" size=\"small\" column={1}>\n        <Descriptions.Item label=\"Properties (full view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={uiSettings.entity.showedPropsInFullView}\n            onSelect={uiSettings.entity.addShowedPropsInFullView}\n            onDeselect={uiSettings.entity.removeShowedPropsInFullView}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Properties (popover view)\">\n          <OntPropSearchComponent\n            mode=\"multiple\"\n            value={uiSettings.entity.showedPropsInPopoverView}\n            onSelect={uiSettings.entity.addShowedPropsInPopoverView as any}\n            onDeselect={uiSettings.entity.removeShowedPropsInPopoverView as any}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  })\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useMemo } from \"react\";\nimport { SequentialFuncInvoker } from \"../../misc\";\nimport { SemanticModel, useStores } from \"../../models\";\nimport { SMNodeType } from \"../../models/sm\";\nimport { gold, green, purple, yellow } from \"@ant-design/colors\";\n\nconst styles = {\n  selection: {\n    width: \"100%\",\n  },\n  class_node: {\n    backgroundColor: green[2],\n    \"&:hover\": {\n      backgroundColor: green[8],\n      color: \"white\",\n    },\n  },\n  literal_node: {\n    backgroundColor: purple[2],\n    \"&:hover\": {\n      backgroundColor: purple[8],\n      color: \"white\",\n    },\n  },\n  data_node: {\n    backgroundColor: gold[2],\n    \"&:hover\": {\n      backgroundColor: gold[8],\n      color: \"white\",\n    },\n  },\n};\n\nexport type SearchValue = { type: SMNodeType | \"class\"; id: string };\n\nexport const NodeSearchComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      value,\n      onDeselect,\n      onSelect,\n      classes,\n    }: {\n      sm: SemanticModel;\n      value?: SearchValue;\n      onDeselect: (value: SearchValue) => void;\n      onSelect: (value: SearchValue) => void;\n    } & WithStyles<typeof styles>) => {\n      const { classStore } = useStores();\n      const seqInvoker = new SequentialFuncInvoker();\n\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        const options: ({\n          value: string;\n          label: string;\n        } & SearchValue)[] = [];\n        for (const r of classStore.iter()) {\n          options.push({\n            type: \"class\",\n            id: r.id,\n            value: `class:${r.id}`,\n            label: sm.graph.uriCount.nextLabel(r.uri, r.readableLabel),\n          });\n        }\n\n        for (const u of sm.graph.nodes) {\n          options.push({\n            type: u.nodetype,\n            id: u.id,\n            value: `${u.nodetype}:${u.id}`,\n            label: sm.graph.uriCount.label(u),\n            className: classes[u.nodetype],\n          } as any);\n        }\n        return options;\n      }, [classStore.records.size]);\n\n      // search for additional values if it's not in the list\n      const onSearch = (query: string) => {\n        if (query === \"\") return;\n        seqInvoker.exec(() => {\n          return classStore.fetchById(query).then(() => 1);\n        });\n      };\n\n      return (\n        <Select\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          showSearch={true}\n          onSearch={onSearch}\n          value={value === undefined ? undefined : `${value.type}:${value.id}`}\n          onSelect={(value: any, option: SearchValue) => {\n            onSelect({ type: option.type, id: option.id });\n          }}\n          onDeselect={(value: any, option: SearchValue) => {\n            onDeselect({ type: option.type, id: option.id });\n          }}\n        />\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Select, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SemanticModel, SMEdge, useStores } from \"../../../models\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport { OntPropSearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  table: {\n    width: \"100%\",\n    textAlign: \"left\",\n    borderSpacing: 0,\n    borderRadius: \"2px 2px 0 0\",\n\n    \"& tr\": {\n      verticalAlign: \"middle\",\n    },\n    \"& th, td\": {\n      padding: \"0 4px\",\n    },\n  },\n  selection: {\n    width: \"100%\",\n  },\n} as const;\n\nexport const NodeSelectionComponent = withStyles(styles)(\n  observer(\n    ({\n      sm,\n      classes,\n      value,\n      onSelect,\n      onDeselect,\n    }: {\n      sm: SemanticModel;\n      value?: string;\n      onDeselect?: (value: string) => void;\n      onSelect?: (value: string) => void;\n    } & WithStyles<typeof styles>) => {\n      // gather all options already in the store, leverage the fact\n      // that property store is readonly\n      const options = useMemo(() => {\n        return sm.graph.nodes.map((node) => {\n          return {\n            value: node.id,\n            label: node.label,\n          };\n        });\n      }, [sm]);\n\n      return (\n        <Select\n          showSearch={true}\n          allowClear={true}\n          options={options}\n          optionFilterProp=\"label\"\n          className={classes.selection}\n          value={value}\n          onSelect={onSelect as any}\n          onDeselect={onDeselect as any}\n        />\n      );\n    }\n  )\n);\n\nexport type EdgeFormProps = {\n  sm: SemanticModel;\n  edge?: SMEdge;\n};\n\nexport const EdgeForm = withStyles(styles)(\n  observer(\n    ({ sm, edge, classes }: EdgeFormProps & WithStyles<typeof styles>) => {\n      const { classStore, propertyStore } = useStores();\n      const [source, setSource] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.source).nodetype, id: edge.source }\n          : undefined\n      );\n      const [target, setTarget] = useState<SearchValue | undefined>(\n        edge !== undefined\n          ? { type: sm.graph.node(edge.target).nodetype, id: edge.target }\n          : undefined\n      );\n      const [uri, setURI] = useState<string | undefined>(edge?.uri);\n      const [approximation, setApproximation] = useState(false);\n\n      // whether there exists an edge between source & target\n      // if yes, we can't insert because we assume only one relationship\n      // between two nodes\n      const dupEdge = useMemo(() => {\n        if (source === undefined || source.type === \"class\") return false;\n        if (target === undefined || target.type === \"class\") return false;\n        return (\n          sm.graph.hasEdge(source.id, target.id) &&\n          (edge === undefined ||\n            source.id !== edge.source ||\n            target.id !== edge.target)\n        );\n      }, [sm.graph.version, source?.id, target?.id]);\n\n      useEffect(() => {\n        if (edge === undefined) return;\n        if (propertyStore.getPropertyByURI(edge.uri) !== undefined) return;\n\n        propertyStore.fetchOne({ conditions: { uri: edge.uri } });\n      }, [propertyStore, edge, uri]);\n\n      const onSave = () => {\n        if (uri === undefined || source === undefined || target === undefined)\n          return;\n        if (dupEdge) return;\n\n        const prop = propertyStore.getPropertyByURI(uri)!;\n        let sourceId, targetId;\n\n        if (source.type === \"class\") {\n          const cls = classStore.get(source.id)!;\n          sourceId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: sourceId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          sourceId = source.id;\n        }\n\n        if (target.type === \"class\") {\n          const cls = classStore.get(target.id)!;\n          targetId = sm.graph.nextNodeId();\n          sm.graph.addClassNode({\n            id: targetId,\n            uri: cls.uri,\n            label: cls.readableLabel,\n            approximation: false,\n            nodetype: \"class_node\",\n          });\n        } else {\n          targetId = target.id;\n        }\n\n        const newEdge = {\n          source: sourceId,\n          target: targetId,\n          uri: prop.uri,\n          approximation,\n          label: prop.readableLabel,\n        };\n        if (edge !== undefined) {\n          if (edge.source === sourceId && edge.target === targetId) {\n            sm.graph.updateEdge(edge.source, edge.target, newEdge);\n          } else {\n            sm.graph.removeEdge(edge.source, edge.target);\n            sm.graph.addEdge(newEdge);\n          }\n        } else {\n          sm.graph.addEdge(newEdge);\n        }\n\n        Modal.destroyAll();\n      };\n\n      const onDelete = () => {\n        if (edge === undefined) return;\n        sm.graph.removeEdge(edge.source, edge.target);\n        Modal.destroyAll();\n      };\n\n      const isModified = () => {\n        return (\n          edge === undefined ||\n          source?.id !== edge.source ||\n          target?.id !== edge.target ||\n          uri !== edge.uri ||\n          approximation !== edge.approximation\n        );\n      };\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  source !== undefined ? { text: source.id } : undefined\n                }\n              >\n                Source\n              </Typography.Text>\n            }\n            validateStatus={dupEdge ? \"error\" : undefined}\n            help={\n              dupEdge\n                ? \"Cannot have more than one edge between two nodes\"\n                : undefined\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={source}\n              onSelect={setSource}\n              onDeselect={() => setSource(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  target !== undefined ? { text: target.id } : undefined\n                }\n              >\n                Target\n              </Typography.Text>\n            }\n          >\n            <NodeSearchComponent\n              sm={sm}\n              value={target}\n              onSelect={setTarget}\n              onDeselect={() => setTarget(undefined)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Typography.Text\n                copyable={\n                  uri !== undefined\n                    ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                    : undefined\n                }\n              >\n                Predicate\n              </Typography.Text>\n            }\n          >\n            <OntPropSearchComponent\n              value={\n                uri !== undefined\n                  ? propertyStore.getPropertyByURI(uri)?.id\n                  : undefined\n              }\n              onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n              onDeselect={(value) => setURI(undefined)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Approximation\">\n            <Switch\n              checked={approximation}\n              onChange={(val) => setApproximation(val)}\n            />\n          </Form.Item>\n          <Form.Item label=\"&nbsp;\" colon={false}>\n            <Space>\n              <Button\n                type=\"primary\"\n                onClick={onSave}\n                disabled={\n                  source === undefined ||\n                  target === undefined ||\n                  uri === undefined ||\n                  !isModified() ||\n                  dupEdge\n                }\n              >\n                Save\n              </Button>\n              {edge !== undefined ? (\n                <Button type=\"primary\" danger={true} onClick={onDelete}>\n                  delete\n                </Button>\n              ) : null}\n            </Space>\n          </Form.Item>\n        </Form>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, Form, Modal, Radio, Space, Switch, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useStores } from \"../../../models\";\nimport {\n  ClassNode,\n  DataNode,\n  LiteralNode,\n  SemanticModel,\n  SMEdge,\n  SMNode,\n  SMNodeType,\n} from \"../../../models/sm\";\nimport { NodeSearchComponent, SearchValue } from \"../NodeSearchComponent\";\nimport {\n  EntitySearchComponent,\n  OntClassSearchComponent,\n  OntPropSearchComponent,\n} from \"../OntSearchComponent\";\n\nconst styles = {} as const;\n\nexport interface NodeFormProps {\n  sm: SemanticModel;\n  node?: SMNode;\n}\n\n/**\n * Form for adding/editing a node in the graph. There are two cases:\n *\n * 1. Create new node -- when node is undefined\n * 2. Delete or update existing node data without modifying its edges -- when the node is provided\n */\nexport const ClassNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: ClassNode; onDone: () => void }) => {\n    const { classStore } = useStores();\n    const [uri, setURI] = useState<string | undefined>(props.node?.uri);\n    const [approximation, setApproximation] = useState(\n      props.node?.approximation || false\n    );\n\n    // fetch class id associated with the node uri\n    useEffect(() => {\n      if (props.node === undefined) return;\n      classStore.fetchIfMissingByURI(props.node.uri);\n    }, [props.node?.uri]);\n\n    const onSave = () => {\n      if (uri === undefined) return;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addClassNode({\n          id: props.sm.graph.nextNodeId(),\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          nodetype: \"class_node\",\n          approximation: approximation,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateClassNode(props.node.id, {\n          uri: uri,\n          label: classStore.getClassByURI(uri)!.readableLabel,\n          approximation: approximation,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.uri !== uri ||\n        props.node.approximation !== approximation\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? {\n                      text: classStore.getClassByURI(uri)?.id,\n                    }\n                  : undefined\n              }\n            >\n              Class\n            </Typography.Text>\n          }\n        >\n          <OntClassSearchComponent\n            value={\n              uri !== undefined ? classStore.getClassByURI(uri)?.id : undefined\n            }\n            onSelect={(id) => setURI(classStore.get(id)?.uri)}\n            onDeselect={() => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={uri === undefined || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const LiteralNodeSubForm = observer(\n  (props: { sm: SemanticModel; node?: LiteralNode; onDone: () => void }) => {\n    const { entityStore } = useStores();\n    const [id, setId] = useState<string | undefined>(\n      props.node?.value?.type === \"entity-id\" ? props.node.value.id : undefined\n    );\n    const [isInContext, setIsInContext] = useState(\n      props.node !== undefined && props.node.nodetype === \"literal_node\"\n        ? props.node.isInContext\n        : false\n    );\n\n    const duplicatedId = useMemo(\n      () =>\n        id !== undefined &&\n        ((props.node === undefined &&\n          props.sm.graph.nodeByEntityId(id) !== undefined) ||\n          (props.node !== undefined &&\n            props.sm.graph.nodeByEntityId(id)?.id !== props.node.id)),\n      [props.sm.graph.version, id]\n    );\n\n    if (props.node !== undefined && props.node.value.type === \"string\") {\n      return <div>Not Implemented Yet</div>;\n    }\n\n    const onSave = () => {\n      if (id === undefined) return;\n      if (duplicatedId) return;\n\n      const ent = entityStore.get(id)!;\n\n      if (props.node === undefined) {\n        // always create a new node\n        props.sm.graph.addLiteralNode({\n          id: props.sm.graph.nextNodeId(),\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      } else {\n        // we update existing node, it can be\n        props.sm.graph.updateLiteralNode(props.node.id, {\n          value: {\n            type: \"entity-id\",\n            id: id,\n            uri: ent.uri,\n          },\n          label: ent.readableLabel,\n          nodetype: \"literal_node\",\n          isInContext: isInContext,\n        });\n      }\n\n      props.onDone();\n    };\n\n    const onDelete = () => {\n      props.sm.graph.removeNode(props.node!.id);\n      props.onDone();\n    };\n\n    const isModified = () => {\n      return (\n        props.node === undefined ||\n        props.node.isInContext !== isInContext ||\n        (props.node.value.type === \"entity-id\" && props.node.value.id !== id)\n      );\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={id !== undefined ? { text: id } : undefined}\n            >\n              Entity\n            </Typography.Text>\n          }\n          validateStatus={duplicatedId ? \"error\" : undefined}\n          help={duplicatedId ? \"Entity's already in the graph\" : undefined}\n        >\n          <EntitySearchComponent\n            value={id}\n            onSelect={setId}\n            onDeselect={() => setId(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Is In Context?\">\n          <Switch\n            checked={isInContext}\n            onChange={(val) => setIsInContext(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={id === undefined || duplicatedId || !isModified()}\n            >\n              Save\n            </Button>\n            {props.node !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const DataNodeSubForm = observer(\n  ({\n    sm,\n    node,\n    inedge,\n    onDone,\n  }: {\n    sm: SemanticModel;\n    node: DataNode;\n    inedge?: SMEdge;\n    onDone: () => void;\n  }) => {\n    const { classStore, propertyStore } = useStores();\n    const [source, setSource] = useState<SearchValue | undefined>(\n      inedge !== undefined\n        ? {\n            type: sm.graph.node(inedge.source).nodetype,\n            id: inedge.source,\n          }\n        : undefined\n    );\n    const [uri, setURI] = useState<string | undefined>(inedge?.uri);\n    const [approximation, setApproximation] = useState(false);\n\n    const onSave = () => {\n      if (source === undefined || uri === undefined) return;\n\n      const prop = propertyStore.getPropertyByURI(uri)!;\n      let sourceId;\n\n      if (source.type === \"class\") {\n        const cls = classStore.get(source.id)!;\n        sourceId = sm.graph.nextNodeId();\n        sm.graph.addClassNode({\n          id: sourceId,\n          uri: cls.uri,\n          label: cls.readableLabel,\n          approximation: false,\n          nodetype: \"class_node\",\n        });\n      } else {\n        sourceId = source.id;\n      }\n\n      const newEdge = {\n        source: sourceId,\n        target: node.id,\n        uri: prop.uri,\n        approximation,\n        label: prop.readableLabel,\n      };\n      if (inedge !== undefined) {\n        if (inedge.source === sourceId) {\n          sm.graph.updateEdge(inedge.source, inedge.target, newEdge);\n        } else {\n          sm.graph.removeEdge(inedge.source, inedge.target);\n          sm.graph.addEdge(newEdge);\n        }\n      } else {\n        sm.graph.addEdge(newEdge);\n      }\n      onDone();\n    };\n\n    const isModified = () => {\n      return (\n        source?.id !== inedge?.source ||\n        uri !== inedge?.uri ||\n        approximation !== inedge?.approximation\n      );\n    };\n\n    const onDelete = () => {\n      if (inedge === undefined) return;\n      sm.graph.removeEdge(inedge.source, inedge.target);\n      onDone();\n    };\n\n    return (\n      <>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={source !== undefined ? { text: source.id } : undefined}\n            >\n              Source\n            </Typography.Text>\n          }\n        >\n          <NodeSearchComponent\n            sm={sm}\n            value={source}\n            onSelect={setSource}\n            onDeselect={() => setSource(undefined)}\n          />\n        </Form.Item>\n        <Form.Item\n          label={\n            <Typography.Text\n              copyable={\n                uri !== undefined\n                  ? { text: propertyStore.getPropertyByURI(uri)?.id }\n                  : undefined\n              }\n            >\n              Predicate\n            </Typography.Text>\n          }\n        >\n          <OntPropSearchComponent\n            value={\n              uri !== undefined\n                ? propertyStore.getPropertyByURI(uri)?.id\n                : undefined\n            }\n            onSelect={(id) => setURI(propertyStore.get(id)?.uri)}\n            onDeselect={(value) => setURI(undefined)}\n          />\n        </Form.Item>\n        <Form.Item label=\"Target\">\n          <Typography.Text>\n            {node.label} ({node.columnIndex})\n          </Typography.Text>\n        </Form.Item>\n        <Form.Item label=\"Approximation\">\n          <Switch\n            checked={approximation}\n            onChange={(val) => setApproximation(val)}\n          />\n        </Form.Item>\n        <Form.Item label=\"&nbsp;\" colon={false}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={onSave}\n              disabled={\n                source === undefined || uri === undefined || !isModified()\n              }\n            >\n              Save\n            </Button>\n            {inedge !== undefined ? (\n              <Button type=\"primary\" danger={true} onClick={onDelete}>\n                delete\n              </Button>\n            ) : null}\n          </Space>\n        </Form.Item>\n      </>\n    );\n  }\n);\n\nexport const NodeForm = withStyles(styles)(\n  observer(\n    ({ sm, node, classes }: NodeFormProps & WithStyles<typeof styles>) => {\n      const [nodetype, setNodeType] = useState<SMNodeType>(\n        node?.nodetype || \"class_node\"\n      );\n      const onDone = () => Modal.destroyAll();\n\n      if (node !== undefined && node.nodetype === \"data_node\") {\n        if (sm.graph.incomingEdges(node.id).length > 1) {\n          return (\n            <p>\n              This form can't be used for data node that has more than one\n              incoming edge. Please click on individual edge and edit it there\n            </p>\n          );\n        }\n      }\n\n      return (\n        <Form\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          labelWrap={true}\n          layout=\"horizontal\"\n        >\n          {node === undefined ? (\n            <Form.Item label=\"Node Type\">\n              <Radio.Group\n                value={nodetype}\n                onChange={(event) => setNodeType(event.target.value)}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"class_node\">Class Node</Radio.Button>\n                <Radio.Button value=\"literal_node\">Literal Node</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          ) : null}\n          {nodetype === \"class_node\" ? (\n            <ClassNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"class_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : nodetype === \"literal_node\" ? (\n            <LiteralNodeSubForm\n              sm={sm}\n              node={node?.nodetype === \"literal_node\" ? node : undefined}\n              onDone={onDone}\n            />\n          ) : (\n            <DataNodeSubForm\n              sm={sm}\n              node={node as DataNode}\n              inedge={sm.graph.incomingEdges(node!.id)[0]}\n              onDone={onDone}\n            />\n          )}\n        </Form>\n      );\n    }\n  )\n);\n","import { Modal } from \"antd\";\nimport { EdgeForm, EdgeFormProps } from \"./EdgeForm\";\nimport { NodeForm, NodeFormProps } from \"./NodeForm\";\n\ninterface TypedEdgeFormProps extends EdgeFormProps {\n  type: \"edge\";\n}\n\ninterface TypedNodeFormProps extends NodeFormProps {\n  type: \"node\";\n}\n\nexport function openForm(\n  args: TypedEdgeFormProps | TypedNodeFormProps,\n  zIndex?: number\n) {\n  let title;\n  let content;\n  switch (args.type) {\n    case \"edge\":\n      content = <EdgeForm {...args} />;\n      title = args.edge === undefined ? \"Add Edge\" : \"Update Edge\";\n      break;\n    case \"node\":\n      content = <NodeForm {...args} />;\n      title = args.node === undefined ? \"Add Node\" : \"Update Node\";\n      break;\n  }\n\n  Modal.info({\n    title: (\n      <span style={{ marginBottom: 16, display: \"inline-block\" }}>{title}</span>\n    ),\n    content,\n    bodyStyle: { margin: -8 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import {\n  DeleteOutlined,\n  DownOutlined,\n  ExportOutlined,\n  FileAddOutlined,\n  ImportOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\nimport {\n  faFloppyDisk,\n  faRectangleList,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Dropdown, Menu, Popconfirm, Space, Tag } from \"antd\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { openForm } from \"./forms\";\nimport { SemanticModelComponentFunc } from \"./SemanticModelComponent\";\nimport { TableComponentFunc } from \"./table/TableComponent\";\n\nexport const MenuBar = observer(\n  ({\n    tableRef,\n    graphRef,\n    table,\n    semanticmodel,\n  }: {\n    table: Table;\n    semanticmodel: {\n      sms: SemanticModel[];\n      index: number;\n      setIndex: (index: number) => void;\n    };\n    tableRef: React.MutableRefObject<TableComponentFunc | null>;\n    graphRef: React.MutableRefObject<SemanticModelComponentFunc | null>;\n  }) => {\n    const [menuVisible, setMenuVisible] = useState(false);\n    const { tableStore, semanticModelStore, assistantService, uiSettings } =\n      useStores();\n\n    useHotkeys(\n      \"c\",\n      graphRef.current === null ? () => {} : graphRef.current.recenter,\n      [graphRef.current, smUniqueIdent(semanticmodel.sms[semanticmodel.index])]\n    );\n\n    {\n      const lstSmsKey = semanticmodel.sms.map(smUniqueIdent).join(\"---\");\n      useHotkeys(\n        \"shift+n\",\n        () => {\n          if (semanticmodel.index < semanticmodel.sms.length - 1) {\n            semanticmodel.setIndex(semanticmodel.index + 1);\n          }\n        },\n        [table.id, semanticmodel.index, lstSmsKey]\n      );\n      useHotkeys(\n        \"shift+b\",\n        () => {\n          if (semanticmodel.index > 0) {\n            semanticmodel.setIndex(semanticmodel.index - 1);\n          }\n        },\n        [table.id, semanticmodel.index, lstSmsKey]\n      );\n    }\n\n    const sm = semanticmodel.sms[semanticmodel.index];\n\n    const funcs = {\n      saveModel: () => {\n        if (SemanticModel.isDraft(sm)) {\n          semanticModelStore.create(sm);\n        } else if (sm.graph.stale) {\n          semanticModelStore.update(sm);\n        }\n      },\n      addModel: () => {\n        const id = semanticModelStore.getNewCreateDraftId(table);\n        const nSms = semanticmodel.sms.length;\n        const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n          id,\n          semanticModelStore.getNewSemanticModelName(table),\n          table\n        );\n        draft.graph = sm.graph.clone();\n        draft.graph.id = id;\n        semanticModelStore.setCreateDraft(draft);\n        semanticmodel.setIndex(nSms);\n      },\n      deleteModel: () => {\n        if (SemanticModel.isDraft(sm)) {\n          semanticModelStore.deleteCreateDraft(sm.draftID);\n        } else {\n          semanticModelStore.delete(sm.id);\n        }\n        semanticmodel.setIndex(0);\n        setMenuVisible(false);\n      },\n      exportModel: () => {\n        routes.tableExportModel\n          .path({ tableId: table.id }, { attachment: false })\n          .mouseClickNavigationHandler(undefined, true);\n      },\n      exportData: () => {\n        routes.tableExportData\n          .path({ tableId: table.id }, { attachment: false })\n          .mouseClickNavigationHandler(undefined, true);\n      },\n      openAddNodeForm: () => {\n        openForm({ type: \"node\", sm });\n      },\n      openAddEdgeForm: () => openForm({ type: \"edge\", sm }),\n      predict: () => {\n        assistantService.predict(table).then(() => {\n          tableRef.current?.reload();\n          uiSettings.table.enableEntityLinkingEditor();\n        });\n      },\n    };\n\n    const menu = (\n      <Menu\n        onClick={(event) => {\n          if (!event.key.startsWith(\"manual-close\")) {\n            setMenuVisible(false);\n          }\n        }}\n      >\n        <Menu.ItemGroup key=\"group-sm\" title=\"Semantic Descriptions\">\n          {semanticmodel.sms.length > 1 ? (\n            <Menu.SubMenu\n              key=\"list-model\"\n              title=\"List models\"\n              icon={<FontAwesomeIcon icon={faFloppyDisk} />}\n            >\n              {semanticmodel.sms.map((sm, index) => {\n                return (\n                  <Menu.Item\n                    key={`sm-${sm.name}`}\n                    onClick={() => semanticmodel.setIndex(index)}\n                    style={{\n                      fontWeight:\n                        index === semanticmodel.index ? \"bold\" : undefined,\n                    }}\n                  >\n                    {SemanticModel.isDraft(sm) ? (\n                      <Tag color=\"orange\">draft</Tag>\n                    ) : sm.graph.stale ? (\n                      <Tag color=\"orange\">unsaved</Tag>\n                    ) : null}\n                    {sm.name}\n                  </Menu.Item>\n                );\n              })}\n            </Menu.SubMenu>\n          ) : null}\n          <Menu.Item\n            key=\"save-model\"\n            disabled={!SemanticModel.isDraft(sm) && !sm.graph.stale}\n            icon={<SaveOutlined />}\n            onClick={funcs.saveModel}\n          >\n            Save current model\n          </Menu.Item>\n          <Menu.Item\n            key=\"add-model\"\n            onClick={funcs.addModel}\n            icon={<FileAddOutlined />}\n          >\n            Add new model\n          </Menu.Item>\n          <Menu.Item\n            key=\"manual-close-0\"\n            danger={true}\n            icon={<DeleteOutlined />}\n          >\n            <Popconfirm\n              title=\"Are you sure to delete this semantic description?\"\n              onConfirm={funcs.deleteModel}\n              onCancel={() => setMenuVisible(false)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              Delete current model\n            </Popconfirm>\n          </Menu.Item>\n          <Menu.Item\n            key=\"import-model\"\n            disabled={true}\n            icon={<ImportOutlined />}\n          >\n            Import models\n          </Menu.Item>\n          <Menu.Item\n            key=\"export-model\"\n            onClick={funcs.exportModel}\n            icon={<ExportOutlined />}\n          >\n            Export models\n          </Menu.Item>\n        </Menu.ItemGroup>\n        <Menu.Divider />\n        <Menu.Item\n          key=\"enable-el-editor\"\n          icon={<FontAwesomeIcon icon={faRectangleList} />}\n          onClick={uiSettings.table.toggleEntityLinkingEditor}\n        >\n          Toggle Entity Linking Editor\n        </Menu.Item>\n        <Menu.Item\n          key=\"export-data\"\n          icon={<FontAwesomeIcon icon={faDownload} />}\n          onClick={funcs.exportData}\n        >\n          Export data\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <>\n        <Space key=\"space-1\" style={{ float: \"right\" }}>\n          {graphRef.current === undefined ? null : (\n            <Tag\n              color={\n                SemanticModel.isDraft(sm) || sm.graph.stale ? \"orange\" : \"green\"\n              }\n              style={{ marginRight: 0, cursor: \"pointer\" }}\n              onClick={funcs.saveModel}\n            >\n              Status:{\" \"}\n              {SemanticModel.isDraft(sm)\n                ? \"Draft\"\n                : sm.graph.stale\n                ? \"Changed\"\n                : \"Saved\"}\n              {semanticmodel.sms.length > 1 ? ` (${sm.name})` : \"\"}\n            </Tag>\n          )}\n          {uiSettings.table.showEntityLinkingEditor ? (\n            <Tag\n              color={\"geekblue\"}\n              style={{ marginRight: 0, cursor: \"pointer\" }}\n              onClick={uiSettings.table.toggleEntityLinkingEditor}\n            >\n              Editing Entity Linking\n            </Tag>\n          ) : null}\n        </Space>\n        <Space key=\"space-2\">\n          <Button size=\"small\" onClick={graphRef.current?.recenter}>\n            Center graph (C)\n          </Button>\n          <Button size=\"small\" onClick={funcs.openAddNodeForm}>\n            Add node\n          </Button>\n          <Button size=\"small\" onClick={funcs.openAddEdgeForm}>\n            Add edge\n          </Button>\n          <Button size=\"small\" onClick={funcs.predict}>\n            Predict\n          </Button>\n          <Dropdown\n            overlay={menu}\n            onVisibleChange={setMenuVisible}\n            visible={menuVisible}\n          >\n            <Button size=\"small\">\n              More <DownOutlined />\n            </Button>\n          </Dropdown>\n        </Space>\n      </>\n    );\n  }\n);\n\nfunction smUniqueIdent(sm: SemanticModel) {\n  return SemanticModel.isDraft(sm) ? sm.draftID : sm.id;\n}\n","import { WordWrap } from \"./wordwrap\";\nimport G6, {\n  ModelConfig,\n  ShapeStyle,\n  IGroup,\n  IShape,\n  LabelStyle,\n} from \"@antv/g6\";\nimport { ParagraphRenderedUnit } from \"./wordwrap/model\";\n\n/** Draw paragraph */\nexport function drawText(\n  group: IGroup,\n  wordwrap: WordWrap,\n  units: ParagraphRenderedUnit[],\n  {\n    xoffset,\n    yoffset,\n    cfg,\n    stroke,\n  }: {\n    xoffset?: number;\n    yoffset?: number;\n    cfg?: LabelStyle;\n    // whether to draw a small border around the text for better visibility\n    stroke?: { width: number; color: string };\n  }\n): IShape[] {\n  xoffset = xoffset === undefined ? 0 : xoffset;\n  yoffset = yoffset === undefined ? 0 : yoffset;\n\n  if (stroke !== undefined) {\n    units.map(({ text, x, y }) => {\n      group!.addShape(\"text\", {\n        attrs: {\n          text,\n          x: x + xoffset!,\n          y: y + yoffset!,\n          fontFamily: wordwrap.fontFamily,\n          ...cfg,\n          // override the three important styles to draw a border around the text\n          fill: stroke.color,\n          stroke: stroke.color,\n          lineWidth: stroke.width,\n        },\n        name: \"bg-text\",\n        draggable: true,\n      });\n    });\n  }\n\n  return units.map(({ text, x, y }) => {\n    return group!.addShape(\"text\", {\n      attrs: {\n        text,\n        fill: \"black\",\n        x: x + xoffset!,\n        y: y + yoffset!,\n        fontFamily: wordwrap.fontFamily,\n        ...cfg,\n      },\n      name: \"text\",\n      draggable: true,\n    });\n  });\n}\n\n/**\n * Type of each rect node.\n */\nexport interface RectConfig extends ModelConfig {\n  label: string;\n  // width of the rectangle\n  size: number;\n  style: ShapeStyle & {\n    // padding\n    paddingHeight?: number;\n    paddingWidth?: number;\n  };\n  labelCfg?: { style: LabelStyle };\n}\n\nexport function registerRectNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n  // TODO: fix x and y as well as position of the text\n  const draw = (cfg: RectConfig, group: IGroup): IShape => {\n    const wp = cfg.style.paddingWidth || 0;\n    const hp = cfg.style.paddingHeight || 0;\n    const { units, width, height } = wordwrap.wrapText(\n      cfg.label,\n      cfg.size || defaultWidth,\n      \"center\"\n    );\n\n    // draw shape\n    const shape = group!.addShape(\"rect\", {\n      attrs: {\n        // x,\n        // y,\n        width: width + wp * 2,\n        height: height + hp * 2,\n        ...cfg.style,\n      },\n      name: \"rect\",\n    });\n\n    // draw text\n    drawText(group, wordwrap, units, {\n      xoffset: wp,\n      yoffset: hp,\n      cfg: cfg.labelCfg?.style,\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"rect-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup) => {\n        return draw(cfg! as RectConfig, group!);\n      },\n\n      // call everything state is changed so we can update the shape\n      // currently clear and re-draw it, but we could do better\n      setState(name, value, node) {\n        const cfg = node!._cfg!;\n        const model = cfg.model!;\n        const states = cfg.states!;\n        let styles: any = {};\n        let labelStyles = { ...model.labelCfg?.style };\n\n        for (const [name, prop] of Object.entries(model.style!)) {\n          if (typeof prop === \"object\") {\n            continue;\n          }\n          styles[name] = prop;\n        }\n        for (const state of states) {\n          for (const [name, prop] of Object.entries(\n            cfg.styles![state] as object\n          )) {\n            if (name === \"label\") {\n              Object.assign(labelStyles, prop);\n            } else {\n              styles[name] = prop;\n            }\n          }\n        }\n\n        const group = cfg.group!;\n        group.clear();\n        draw(\n          {\n            label: model.label as string,\n            size: model.size as number,\n            style: styles,\n            labelCfg: { style: labelStyles },\n          },\n          group\n        );\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import G6, {\n  IGroup,\n  ILabelConfig,\n  IShape,\n  LabelStyle,\n  ModelConfig,\n  ShapeStyle,\n} from \"@antv/g6\";\nimport { drawText } from \"./RectNode\";\nimport { WordWrap } from \"./wordwrap\";\n\n/**\n * Type of each circle node.\n */\nexport interface CircleConfig {\n  label: string;\n  style: ShapeStyle & {\n    padding?: number;\n    paddingWidth?: number;\n    paddingHeight?: number;\n  };\n  labelCfg?: { offset: number; style: LabelStyle };\n}\n\nexport function registerCircleNode(wordwrap: WordWrap) {\n  const defaultWidth = wordwrap.getApproximateWidth(4);\n\n  const draw = (cfg: CircleConfig, group: IGroup): IShape => {\n    const padding = cfg.style.padding || 8;\n    const labelPosition: string = \"below\";\n    const labelOffset = cfg.labelCfg?.offset || 0;\n\n    if (labelPosition === \"inside\") {\n      // render text inside circle\n      const { units, radius } = wordwrap.wrapTextCircle(cfg.label, 256);\n      const shape = group!.addShape(\"circle\", {\n        attrs: {\n          // x: cfg.x,\n          // y: cfg.y,\n          r: radius + padding,\n          ...cfg.style,\n        },\n        name: \"circle\",\n      });\n      drawText(group, wordwrap, units, {\n        xoffset: 0,\n        yoffset: 0,\n        cfg: cfg.labelCfg?.style,\n      });\n      return shape;\n    }\n\n    // render text below circle\n    const { units, width } = wordwrap.wrapText(\n      cfg.label as string,\n      defaultWidth,\n      \"center\"\n    );\n    const defaultRadius = 10;\n    const shape = group!.addShape(\"circle\", {\n      attrs: {\n        // x: cfg.x,\n        // y: cfg.y,\n        r: defaultRadius,\n        ...cfg.style,\n      },\n      name: \"circle\",\n    });\n\n    drawText(group, wordwrap, units, {\n      xoffset: -width / 2,\n      yoffset: defaultRadius + labelOffset,\n      cfg: cfg?.labelCfg?.style,\n      stroke: { color: \"white\", width: 4 },\n    });\n    return shape;\n  };\n\n  G6.registerNode(\n    \"circle-wrap\",\n    {\n      draw: (cfg?: ModelConfig, group?: IGroup): IShape => {\n        return draw(cfg! as CircleConfig, group!);\n      },\n    },\n    \"single-node\"\n  );\n\n  return wordwrap;\n}\n","import { Paragraph, ParagraphUnit } from \"./model\";\n\nconst cacheFn = <F extends (...args: any) => any>(\n  fn: F,\n  cache: { [key: string]: ReturnType<F> }\n): F => {\n  return ((...args: any) => {\n    const key = args.join(\":\");\n    if (cache[key] === undefined) {\n      cache[key] = fn(...args);\n    }\n    return cache[key];\n  }) as unknown as F;\n};\n\n/**\n * Optimize paragraph to fit lines.\n *\n * Using a score function similar to Knuth-Plass algorithm. Differences:\n * 1. badness of a line is change to <adjustment_ratio>^3, not 100 * <adjustment_ratio>^3 to avoid\n *    making a number too big\n * 2. the ability to brea, super long word (no glue). the <adjustment_ratio> is undefined in Knuth-Plass algorithm, making\n *    badness becomes infinity. Hence, the algorithm avoids breaking it at all cost. We set the glue size to be 0.1 so that\n *    the badness is finite.\n */\nexport class ParagraphOptimizer {\n  protected paragraph: ParagraphUnit[];\n  protected getDesiredLineLength: (i: number) => number;\n  protected cacheLineLengths: { [key: string]: number } = {};\n  protected cacheLineDemerits: { [key: string]: number } = {};\n  protected cacheParagraphDemerits: { [key: string]: number } = {};\n  protected cacheParagraphBreakpoints: {\n    [key: string]: { breakpoints: number[]; demerits: number };\n  } = {};\n\n  constructor(paragraph: Paragraph) {\n    this.paragraph = paragraph.units.map((item) => {\n      item = Object.assign({}, item);\n      item.width = item.width / 16;\n      if (item.type === \"glue\") {\n        item.stretch = item.stretch / 16;\n        item.shrink = item.shrink / 16;\n      }\n      return item;\n    });\n    this.getDesiredLineLength = (i: number) => paragraph.getLineLength(i) / 16;\n  }\n\n  /**\n   * Optimize a paragraph by minimizing a score (demerits) similar to the one defined by Knuth-Plass algorithm\n   *\n   * Example: optimize returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, <paragraph.length - 1>]\n   *\n   * @see this.optimizeParagraph for more information\n   */\n  optimize = () => {\n    return this.optimizeParagraph(0, this.paragraph.length - 1, 0);\n  };\n\n  /**\n   * Optimize a (sub) paragraph from [start, end] (inclusive) by minimizing the predefined score\n   *\n   * Example: optimizeParagraph(0, 15, 0) returns breakpoints [4, 8] meaning it creates 3 lines:\n   * [0, 4], [5, 8], [9, 15]\n   *\n   * @param start\n   * @param end (inclusive)\n   * @param nPreviousLines the number of lines of previous paragraphs\n   *\n   * @returns breakpoints & the score (demerits)\n   */\n  optimizeParagraph = cacheFn(\n    (\n      start: number,\n      end: number,\n      nPreviousLines: number\n    ): { breakpoints: number[]; demerits: number } => {\n      const lineAdjustment = this.computeLineAdjustment(\n        start,\n        end,\n        nPreviousLines // base 0\n      );\n      if (lineAdjustment !== undefined && lineAdjustment >= 0) {\n        // this paragraph can fit in a whole line -- no need to break it up\n        return {\n          breakpoints: [],\n          demerits: this.computeLineDemerits(start, end, nPreviousLines),\n        };\n      }\n\n      const optimalSplit = {\n        caret: -1,\n        demerits: Infinity,\n        breakpoints: [] as number[],\n      };\n\n      // work incrementally from right to left -- but only consider breaking points\n      for (let caret = end - 1; caret > start; caret--) {\n        if (this.paragraph[caret].type === \"box\") continue;\n\n        const prevParagraphBreakpoints = this.optimizeParagraph(\n          start,\n          caret,\n          nPreviousLines\n        );\n        const nextParagraphBreakpoints = this.optimizeParagraph(\n          caret + 1,\n          end,\n          nPreviousLines +\n            (prevParagraphBreakpoints.breakpoints.length > 0\n              ? prevParagraphBreakpoints.breakpoints.length + 1\n              : 0)\n        );\n\n        if (\n          prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits <\n          optimalSplit.demerits\n        ) {\n          optimalSplit.caret = caret;\n          optimalSplit.demerits =\n            prevParagraphBreakpoints.demerits +\n            nextParagraphBreakpoints.demerits;\n          optimalSplit.breakpoints =\n            prevParagraphBreakpoints.breakpoints.slice();\n          optimalSplit.breakpoints.push(caret);\n          optimalSplit.breakpoints = optimalSplit.breakpoints.concat(\n            nextParagraphBreakpoints.breakpoints\n          );\n        }\n      }\n\n      return {\n        breakpoints: optimalSplit.breakpoints,\n        demerits: optimalSplit.demerits,\n      };\n    },\n    this.cacheParagraphBreakpoints\n  );\n\n  /**\n   * Compute length of units from [start, end] (inclusive) if rendered in a single line.\n   * We only count items that are box, glue & only the penalty if it's the last item as penalties\n   * won't be rendered in the line.\n   *\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineLength = cacheFn((start: number, end: number) => {\n    let len = 0;\n    for (let i = start; i < end; i++) {\n      if (this.paragraph[i].type === \"penalty\") continue;\n\n      len += this.paragraph[i].width;\n    }\n\n    // add the width of the last penalty item only if break is forced (break words are added hyphen)\n    if (this.paragraph[end].type === \"penalty\") {\n      // hyphen will have a non zero width\n      len += this.paragraph[end].width;\n    }\n    return len;\n  }, this.cacheLineLengths);\n\n  /**\n   * Compute the elasticity of a line of units from [start, end] (inclusive)\n   * @param start\n   * @param end -- inclusive\n   */\n  computeLineElastic = (start: number, end: number) => {\n    let stretchability = 0;\n    let shrinkability = 0;\n\n    for (let i = start; i <= end; i++) {\n      const item = this.paragraph[i];\n      if (item.type === \"glue\") {\n        stretchability += item.stretch;\n        shrinkability += item.shrink;\n      }\n    }\n\n    return { stretchability, shrinkability };\n  };\n\n  /**\n   * Compute the adjustment ratio of a line\n   *\n   * @param start\n   * @param end\n   * @param lineNumber\n   * @returns\n   */\n  computeLineAdjustment = (start: number, end: number, lineNumber: number) => {\n    const len = this.computeLineLength(start, end);\n    const desiredLength = this.getDesiredLineLength(lineNumber);\n\n    if (len === desiredLength) {\n      return 0;\n    }\n\n    const elastic = this.computeLineElastic(start, end);\n    if (len < desiredLength) {\n      if (elastic.stretchability < 0) {\n        return undefined;\n      }\n      // This is modified from Knuth-Plass algorithm.\n      if (elastic.stretchability === 0) {\n        return (desiredLength - len) / 0.1;\n      }\n      return (desiredLength - len) / elastic.stretchability;\n    }\n    if (elastic.shrinkability <= 0) {\n      return undefined;\n    }\n    return (desiredLength - len) / elastic.shrinkability;\n  };\n\n  computeLineBadness = (start: number, end: number, lineNumber: number) => {\n    const r = this.computeLineAdjustment(start, end, lineNumber);\n    if (r === undefined || r < -1) {\n      return -Infinity;\n    }\n    // original formula: r ** 3 * 100\n    return r ** 3;\n  };\n\n  computeLineDemerits = cacheFn(\n    (start: number, end: number, lineNumber: number) => {\n      const lastLineItem = this.paragraph[end];\n      const linePenalty =\n        lastLineItem.type === \"penalty\" ? lastLineItem.cost : 0;\n      const lineBadness = this.computeLineBadness(start, end, lineNumber);\n      const additionalPenalty = 0;\n\n      if (linePenalty >= 0) {\n        return (1 + lineBadness + linePenalty) ** 2 + additionalPenalty;\n      } else if (linePenalty === -Infinity) {\n        return (1 + lineBadness) ** 2 + additionalPenalty;\n      } else {\n        return (1 + lineBadness) ** 2 - linePenalty ** 2 + additionalPenalty;\n      }\n    },\n    this.cacheLineDemerits\n  );\n\n  computeParagraphDemerits = (\n    start: number,\n    end: number,\n    breakpoints: number[],\n    nPreviousLines: number\n  ) => {\n    let caret = start;\n    let demerits = 0;\n    for (let i = 0; i < breakpoints.length; i++) {\n      demerits += this.computeLineDemerits(\n        caret,\n        breakpoints[i],\n        nPreviousLines + i\n      );\n      caret = breakpoints[i] + 1;\n    }\n    demerits += this.computeLineDemerits(\n      caret,\n      end,\n      nPreviousLines + (breakpoints.length > 0 ? breakpoints.length + 1 : 0)\n    );\n\n    return demerits;\n  };\n}\n","/**\n * An object (eg. a word) to be typeset.\n */\nexport interface Box {\n  type: \"box\";\n\n  text: string;\n\n  /** Amount of space required by this content. Must be >= 0. */\n  width: number;\n}\n\n/**\n * A space between `Box` items with a preferred width and some\n * capacity to stretch or shrink.\n *\n * `Glue` items are also candidates for breakpoints if they immediately follow a\n * `Box`.\n */\nexport interface Glue {\n  type: \"glue\";\n  text: string;\n\n  /**\n   * Preferred width of this space. Must be >= 0.\n   */\n  width: number;\n  /** Maximum amount by which this space can grow. */\n  stretch: number;\n  /** Maximum amount by which this space can shrink. */\n  shrink: number;\n}\n\n/**\n * An explicit candidate position for breaking a line.\n */\nexport interface Penalty {\n  type: \"penalty\";\n  text: string;\n\n  /**\n   * Amount of space required for typeset content to be added (eg. a hyphen) if\n   * a line is broken here. Must be >= 0.\n   */\n  width: number;\n  /**\n   * The undesirability of breaking the line at this point.\n   *\n   * Values <= `MIN_COST` and >= `MAX_COST` mandate or prevent breakpoints\n   * respectively.\n   */\n  cost: number;\n  /**\n   * A hint used to prevent successive lines being broken with hyphens. The\n   * layout algorithm will try to avoid successive lines being broken at flagged\n   * `Penalty` items.\n   */\n  flagged: boolean;\n}\n\nexport type ParagraphUnit = Box | Glue | Penalty;\nexport type ParagraphRenderedUnit = ParagraphUnit & {\n  x: number;\n  y: number;\n  lineNumber: number;\n  renderedWidth: number;\n};\nexport type ParagraphLine = ParagraphUnit[];\n\nexport interface RenderParams {\n  lineHeight: number;\n  cssLineHeight: number;\n  fontSize: number;\n  align: \"center\" | \"left\" | \"justify\" | \"right\";\n  verticalAlign: \"middle\";\n  // shorten the line's length if possible -- this will affect \"justify\" paragraph\n  // for non uniform line length, this does not change the length of line less than the new maximum length\n  // hence may produce ugly result\n  autoLength: boolean;\n}\n\nexport class Paragraph {\n  public readonly spaceWidth: number;\n  public readonly units: ParagraphUnit[];\n  public readonly lineLengths: number | number[];\n  public readonly getLineLength: (i: number) => number;\n\n  constructor(units: ParagraphUnit[], lineLengths: number | number[]) {\n    this.units = units;\n    this.lineLengths = lineLengths;\n\n    if (Array.isArray(lineLengths)) {\n      this.getLineLength = (i: number) =>\n        i < lineLengths.length\n          ? lineLengths[i]\n          : lineLengths[lineLengths.length - 1];\n    } else {\n      this.getLineLength = (i: number) => lineLengths;\n    }\n\n    this.spaceWidth = 0;\n    for (const unit of units) {\n      if (unit.type === \"glue\") {\n        this.spaceWidth = unit.width;\n        break;\n      }\n    }\n  }\n\n  /**\n   * A convenience function that generates a set of input items for `breakLines`\n   * from a string.\n   *\n   * @param text - Text to process\n   * @param measureFn - Callback that calculates the width of a given string\n   * @param hyphenateFn - Callback that calculates legal hyphenation points in\n   *                      words and returns an array of pieces that can be joined\n   *                      with hyphens.\n   */\n  static getUnitsFromText(\n    text: string,\n    measureFn: (word: string) => number,\n    hyphenateFn?: (word: string) => string[],\n    separable?: string[],\n    penaltyCost: number = 1000\n  ): ParagraphUnit[] {\n    const units: ParagraphUnit[] = [];\n    // MODIFY: modify here to split the word further to create possible break points of really long equation/json string\n    let chunks = text.split(/(\\s+)/).filter((w) => w.length > 0);\n    if (separable !== undefined && separable.length > 0) {\n      const re = new RegExp(`.*?[${separable.join(\"\")}]|.+`, \"g\");\n      chunks = chunks.flatMap((w) => w.match(re)!);\n    }\n\n    // Here we assume that every space has the same default size. Callers who want\n    // more flexibility can use the lower-level functions.\n    const spaceWidth = measureFn(\" \");\n    const hyphenWidth = measureFn(\"-\");\n    const isSpace = (word: string) => /\\s/.test(word.charAt(0));\n\n    // MODIFY: from Knuth-Place paper (space 1/3em, stretch 1/6em, shrink 1/9em)\n    const stretch = spaceWidth / 2;\n    const shrink = spaceWidth / 3;\n\n    chunks.forEach((w) => {\n      if (isSpace(w)) {\n        const g: Glue = {\n          type: \"glue\",\n          width: spaceWidth,\n          shrink,\n          stretch,\n          text: w,\n        };\n        units.push(g);\n        return;\n      }\n\n      // MODIFY: for words that are splitted in the middle by :,\" etc as above\n      if (units.length > 0 && units[units.length - 1].type === \"box\") {\n        units.push({\n          type: \"penalty\",\n          width: 0,\n          cost: 1,\n          flagged: false,\n          text: \"\",\n        });\n      }\n\n      if (hyphenateFn) {\n        const chunks = hyphenateFn(w);\n        chunks.forEach((c, i) => {\n          const b: Box = { type: \"box\", width: measureFn(c), text: c };\n          units.push(b);\n          if (i < chunks.length - 1) {\n            const hyphen: Penalty = {\n              type: \"penalty\",\n              text: \"-\",\n              width: hyphenWidth,\n              cost: penaltyCost,\n              flagged: true,\n            };\n            units.push(hyphen);\n          }\n        });\n      } else {\n        const b: Box = { type: \"box\", width: measureFn(w), text: w };\n        units.push(b);\n      }\n    });\n    // Add \"finishing glue\" to space out final line.\n    units.push({\n      type: \"glue\",\n      width: 0,\n      stretch: 10000,\n      shrink: 0,\n      text: \"\",\n    });\n\n    return units;\n  }\n\n  /**\n   * Group units of the paragraph by lines:\n   * - Penalties in the middle of a line are ignored\n   * - Glue at the end is ignored\n   * - Consecutive boxes are merged.\n   */\n  groupByLine = (breaklines: number[]): ParagraphLine[] => {\n    const lines = [];\n    let start = 0;\n\n    breaklines = breaklines.slice();\n    breaklines.push(this.units.length - 1);\n\n    for (const end of breaklines) {\n      const units = this.units.slice(start, end);\n      const line = [];\n\n      // adjust glues of the line\n      for (const unit of units) {\n        if (unit.type === \"penalty\") {\n          continue;\n        }\n\n        if (\n          unit.type === \"box\" &&\n          line.length > 0 &&\n          line[line.length - 1].type === \"box\"\n        ) {\n          // merge consecutive boxes together\n          line[line.length - 1].text += unit.text;\n          line[line.length - 1].width += unit.width;\n          continue;\n        }\n        // make a shallow copy so that we don't modify the original unit\n        line.push(Object.assign({}, unit));\n      }\n\n      if (\n        this.units[end].type === \"penalty\" &&\n        this.units[end].text.length > 0\n      ) {\n        line.push(this.units[end]);\n      }\n\n      start = end + 1;\n      lines.push(line);\n    }\n\n    return lines;\n  };\n\n  /** Compute layout of the paragraph */\n  layout = (\n    lines: ParagraphLine[],\n    {\n      lineHeight,\n      cssLineHeight,\n      fontSize,\n      align,\n      verticalAlign,\n      autoLength,\n    }: RenderParams\n  ): { units: ParagraphRenderedUnit[]; lineLengths: number[] } => {\n    const renderingUnits = [];\n    const lineLengths = lines.map((line) =>\n      line.reduce((a, x) => a + x.width, 0)\n    );\n    const desiredLens = lines.map((line, i) => this.getLineLength(i));\n\n    if (autoLength) {\n      const maxLen = Math.max(...lineLengths);\n      for (let i = 0; i < desiredLens.length; i++) {\n        if (desiredLens[i] > maxLen) {\n          desiredLens[i] = maxLen;\n        }\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // find the glue width, we won't adjust the glue width if the line is shorter than desired and not justify\n      const len = lineLengths[i];\n      const desiredLen = desiredLens[i];\n      const nGlues = line.filter((x) => x.type === \"glue\").length;\n      const glueWidth =\n        len < desiredLen && align !== \"justify\"\n          ? this.spaceWidth\n          : Math.abs(desiredLen - len) / nGlues + this.spaceWidth;\n\n      // verticalAlign === \"middle\"\n      const y = (i + 1) * lineHeight - (fontSize * (cssLineHeight - 1)) / 2;\n      let x = 0;\n\n      if (align === \"center\") {\n        x += (desiredLen - len) / 2;\n      } else if (align === \"right\") {\n        x += desiredLen - len;\n      }\n\n      if (glueWidth === this.spaceWidth) {\n        const renderingUnit = Object.assign(\n          {\n            x,\n            y,\n            renderedWidth: len,\n            lineNumber: i,\n          },\n          line[0]\n        );\n        renderingUnit.text = line.map((x) => x.text).join(\"\");\n        renderingUnits.push(renderingUnit);\n      } else {\n        for (const unit of line) {\n          const renderedWidth = unit.type === \"glue\" ? glueWidth : unit.width;\n          const renderedUnit = Object.assign(\n            {\n              x,\n              y,\n              renderedWidth,\n              lineNumber: i,\n            },\n            unit\n          );\n\n          x += renderedWidth;\n          renderingUnits.push(renderedUnit);\n        }\n      }\n    }\n\n    return { units: renderingUnits, lineLengths };\n  };\n}\n","import enUsPatterns from \"hyphenation.en-us\";\nimport Hypher from \"hypher\";\nimport { ParagraphOptimizer } from \"./optimizer\";\nimport { Paragraph, ParagraphRenderedUnit } from \"./model\";\n\nexport type ElementFontConfig = {\n  font?: string;\n  fontSize: number;\n  fontFamily: string;\n};\n\nexport class WordWrap {\n  protected measureCtx: CanvasRenderingContext2D;\n  protected circleLayout: CircleLayout;\n  protected hypher: Hypher;\n\n  public readonly font: string;\n  public readonly fontFamily: string;\n  public readonly fontSize: number;\n  public readonly cssLineHeight: number = 1.428;\n  // lineHeight in pixel (different from cssLineHeight property)\n  public readonly lineHeight: number;\n  public readonly spaceWidth: number;\n  public readonly separable: string[] = [\n    \"{\",\n    \"}\",\n    \":\",\n    \",\",\n    \"'\",\n    '\"',\n    \".\",\n    \"/\",\n  ];\n\n  constructor(\n    fontCfg: ElementFontConfig,\n    layoutCfg?: { lineHeight?: number; separable?: string[] }\n  ) {\n    const canvas = document.createElement(\"canvas\");\n    this.measureCtx = canvas.getContext(\"2d\")!;\n    this.spaceWidth = this.measureText(\" \");\n\n    this.font = fontCfg.font || `${fontCfg.fontSize}px ${fontCfg.fontFamily}`;\n    this.fontFamily = fontCfg.fontFamily;\n    this.fontSize = fontCfg.fontSize;\n    this.measureCtx.font = this.font;\n\n    this.hypher = new Hypher(enUsPatterns);\n\n    if (layoutCfg !== undefined) {\n      if (layoutCfg.lineHeight !== undefined) {\n        this.cssLineHeight = layoutCfg.lineHeight;\n      }\n      if (layoutCfg.separable !== undefined) {\n        this.separable = layoutCfg.separable;\n      }\n    }\n\n    this.lineHeight = this.fontSize * this.cssLineHeight;\n    this.circleLayout = new CircleLayout(this);\n  }\n\n  /** Generate a plan to render text. Note that font size is automatically figured out from the given container */\n  wrapText = (\n    text: string,\n    desiredLineLengths: number | number[],\n    align: \"justify\" | \"left\" | \"center\" | \"right\" = \"justify\"\n  ): {\n    units: ParagraphRenderedUnit[];\n    width: number;\n    height: number;\n  } => {\n    const paragraph = new Paragraph(\n      Paragraph.getUnitsFromText(\n        text,\n        this.measureText,\n        this.hyphenate,\n        this.separable\n      ),\n      desiredLineLengths\n    );\n    // TODO: uncomment to debug\n    // console.log(\n    //   text,\n    //   desiredLineLengths,\n    //   JSON.stringify(\n    //     Object.fromEntries(paragraph.units.map((u) => [u.text, u.width]))\n    //   )\n    // );\n    const breakpoints = new ParagraphOptimizer(paragraph).optimize()\n      .breakpoints;\n    const { units, lineLengths } = paragraph.layout(\n      paragraph.groupByLine(breakpoints),\n      {\n        align,\n        cssLineHeight: this.cssLineHeight,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        verticalAlign: \"middle\",\n        autoLength: true,\n      }\n    );\n\n    const width = Math.max(...lineLengths);\n    const height = (breakpoints.length + 1) * this.lineHeight;\n\n    return { units: units, width, height };\n  };\n\n  /** Wrap text in a circle */\n  wrapTextCircle = (\n    text: string,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): {\n    units: ParagraphRenderedUnit[];\n    radius: number;\n  } => {\n    let radius =\n      this.circleLayout.findRadius(\n        this.measureText(text),\n        maxRadius,\n        acceptableError\n      ) + 12;\n    const circleLayout = this.circleLayout.getLayout(radius);\n    const {\n      lines: lineLengths,\n      // centralLine,\n      // linesY,\n    } = circleLayout;\n    const { units, width } = this.wrapText(\n      text,\n      lineLengths.slice(0, 3),\n      \"center\"\n    );\n    const nLines = Math.max(...units.map((item) => item.lineNumber)) + 1;\n\n    // shift the location to the center of the circle\n    radius = width / 2;\n    const deltaX = -radius;\n    const deltaY =\n      -(nLines % 2 === 1 ? (nLines - 1) / 2 : nLines / 2) * this.lineHeight -\n      this.lineHeight / 2;\n\n    for (let itemLayout of units) {\n      itemLayout.x += deltaX;\n      itemLayout.y += deltaY;\n    }\n\n    return {\n      units: units,\n      radius,\n    };\n  };\n\n  /** Hyphenate a long word (at least 4 characters) */\n  hyphenate = (word: string) => {\n    return word.length > 4 ? this.hypher.hyphenate(word) : [word];\n  };\n\n  /** Get approximate width of a sentence of n words */\n  getApproximateWidth = (nWords: number) => {\n    return nWords * this.measureText(\"abcij \");\n  };\n\n  /**\n   * Return the computed CSS `font` property value for an element.\n   */\n  static getCssFont = (container: Element) => {\n    const style = getComputedStyle(container);\n    const { fontStyle, fontVariant, fontWeight, fontSize, fontFamily } = style;\n    return {\n      font: `${fontStyle!} ${fontVariant!} ${fontWeight!} ${fontSize!} ${fontFamily}`,\n      fontSize: parseFloat(fontSize),\n      fontFamily,\n    };\n  };\n\n  /**\n   * Measure the width of `text` as it would appear if rendered with a given computed `font` style.\n   */\n  measureText = (text: string) => {\n    return this.measureCtx.measureText(text).width;\n  };\n}\n\nexport class CircleLayout {\n  protected lineBreak: WordWrap;\n  protected lineHeight: number;\n  protected radius2layout: {\n    [k: number]: {\n      lines: number[];\n      linesY: number[];\n      totalLength: number;\n      centralLine: number;\n    };\n  };\n\n  constructor(lineBreak: WordWrap) {\n    this.lineBreak = lineBreak;\n    this.lineHeight = lineBreak.lineHeight;\n    this.radius2layout = {};\n  }\n\n  findRadius = (\n    textLength: number,\n    maxRadius: number = 1024,\n    acceptableError: number = 10\n  ): number => {\n    // first step is to find the lower bound using binary search\n    let [start, end] = [0, maxRadius];\n    let lowerbound = undefined;\n    for (let i = 0; i < maxRadius; i++) {\n      if (end - start === 1) {\n        lowerbound = end;\n        break;\n      }\n\n      const radius = Math.ceil((start + end) / 2);\n      const l = this.getLayout(radius).totalLength;\n\n      if (l < textLength) {\n        start = radius;\n        continue;\n      }\n\n      if (l - textLength > acceptableError) {\n        end = radius;\n        continue;\n      }\n      lowerbound = radius;\n      break;\n    }\n\n    if (lowerbound === undefined) {\n      throw new Error(\n        `The text of ${textLength} is too long to render in a circle that has the maximum radius: ${maxRadius} - ${\n          this.getLayout(maxRadius).totalLength\n        }`\n      );\n    }\n\n    // next step is to find the upper bound assuming that the longest word\n    // is going to be breaked at every line (textLength + longestWord * nLines)\n    return lowerbound;\n  };\n\n  /** Get layout (line lengths) of a given radius */\n  getLayout = (radius: number) => {\n    if (this.radius2layout[radius] === undefined) {\n      const n = this.computeHalfNumberOfLines(radius);\n      // small to large to small\n      const lines = [];\n      const linesY = [];\n      for (let i = n; i > 0; i--) {\n        lines.push(this.computeLineLength(i, radius));\n        linesY.push(radius - this.lineHeight * (i + 1 / 2));\n      }\n      lines.push(this.computeCentralLineLength(radius));\n      linesY.push(radius - this.lineHeight / 2);\n      for (let i = n - 1; i >= 0; i--) {\n        lines.push(lines[i]);\n        linesY.push(radius + this.lineHeight * (i - 1 / 2));\n      }\n\n      this.radius2layout[radius] = {\n        lines,\n        linesY,\n        centralLine: lines[n],\n        totalLength: lines.reduce((a, b) => a + b),\n      };\n    }\n\n    return this.radius2layout[radius];\n  };\n\n  /** Number of lines can fit in a half of circle without central line */\n  computeHalfNumberOfLines = (radius: number) => {\n    return Math.floor((radius - this.lineHeight / 2) / this.lineHeight);\n  };\n\n  /** Compute line height of non-central lines */\n  computeLineLength = (index: number, radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight * index) ** 2) * 2;\n  };\n\n  computeCentralLineLength = (radius: number) => {\n    return Math.sqrt(radius ** 2 - (this.lineHeight / 2) ** 2) * 2;\n  };\n}\n","import G6, { Graph, GraphData, NodeConfig, LayoutConfig } from \"@antv/g6\";\nimport { registerRectNode } from \"./RectNode\";\nimport { registerCircleNode } from \"./CircleNode\";\nimport { WordWrap } from \"./wordwrap\";\nimport { testNodeWrap } from \"./TestNodeWrap\";\nimport _ from \"lodash\";\n\nexport interface GraphEdge {\n  id: string;\n  source: string;\n  target: string;\n  label: string;\n}\n\nexport interface GraphNode {\n  id: string;\n  label: string;\n  style?: object;\n  labelStyle?: object;\n  shape?:\n    | \"rect\"\n    | \"circle\"\n    | \"ellipse\"\n    | \"diamond\"\n    | \"triangle\"\n    | \"star\"\n    | \"image\";\n}\n\nexport interface G6GraphProps {\n  // init height of the canvas\n  initHeight: number;\n  // shift the node in the graph by `leftOffset` units -- default 0\n  leftOffset?: number;\n  // shift the node in the graph by `topOffset` units -- default 0\n  topOffset?: number;\n  /**\n   * Layout of the graph. Default it's force layout with distance 50\n   */\n  layout?: LayoutConfig;\n  onNodeClick?: (nodeId: string) => void;\n  onEdgeClick?: (edge: GraphEdge) => void;\n  // highlight the node and its related nodes and edges when the mouse enter the node;\n  // default is false\n  enableActivateRelations?: boolean;\n}\n\nexport class G6Graph {\n  private version: number;\n  private container: HTMLDivElement;\n  public graph: Graph;\n  private data: GraphData;\n  public props: G6GraphProps;\n  private wordwrap: WordWrap;\n\n  constructor(container: HTMLDivElement, props: G6GraphProps) {\n    this.version = 0;\n    this.props = props;\n    this.container = container;\n    this.data = {\n      nodes: [],\n      edges: [],\n    };\n\n    const cfg = {\n      fontFamily:\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'\",\n      fontSize: 12,\n    };\n    this.wordwrap = new WordWrap(cfg);\n    registerRectNode(this.wordwrap);\n    registerCircleNode(this.wordwrap);\n\n    const modes: any[] = [\"drag-canvas\", \"drag-node\"];\n\n    if (props.enableActivateRelations) {\n      modes.push({\n        type: \"activate-relations\",\n        resetSelected: true,\n      });\n    }\n\n    this.graph = new G6.Graph({\n      container: container,\n      width: container.scrollWidth,\n      height: props.initHeight,\n      layout: props.layout || {\n        type: \"force\",\n        preventOverlap: true,\n        linkDistance: 50,\n        nodeSpacing: 50,\n      },\n      defaultEdge: {\n        type: \"quadratic\",\n        style: {\n          stroke: \"black\",\n          endArrow: {\n            fill: \"black\",\n            path: G6.Arrow.triangle(6, 8),\n          },\n        },\n        labelCfg: {\n          style: {\n            fill: \"black\",\n            background: {\n              fill: \"#ffffff\",\n              stroke: \"#9EC9FF\",\n              padding: [2, 2, 2, 2],\n              radius: 2,\n            },\n          },\n        },\n      },\n      modes: {\n        default: modes,\n        edit: [\"click-select\"],\n      },\n      // these control styles of nodes & edges at different states\n      // currently define active & inactive for the activate-relations mode\n      nodeStateStyles: {\n        active: {\n          opacity: 1,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 1,\n          },\n        },\n        inactive: {\n          opacity: 0.2,\n          // this is a custom attr for label's style\n          // checkout `setState` method in the custom nodes such as rect-wrap\n          label: {\n            opacity: 0.2,\n          },\n        },\n      },\n      edgeStateStyles: {\n        active: {\n          stroke: \"black\",\n          opacity: 1,\n        },\n        inactive: {\n          opacity: 0.2,\n          text: {\n            opacity: 0.2,\n          },\n        },\n      },\n    });\n\n    if (props.onNodeClick !== undefined) {\n      this.graph.on(\"node:click\", (event: any) => {\n        this.props.onNodeClick!(event.item._cfg.model.id);\n      });\n    }\n\n    if (props.onEdgeClick !== undefined) {\n      this.graph.on(\"edge:click\", (event: any) => {\n        this.props.onEdgeClick!(event.item._cfg.model);\n      });\n    }\n  }\n\n  /** Try to hot-swap the properties of this graph and returns whether it's success or not */\n  hotswapProps = (props: G6GraphProps) => {\n    if (!_.isEqual(this.props.layout, props.layout)) {\n      return false;\n    }\n\n    if (this.props.enableActivateRelations !== props.enableActivateRelations) {\n      return false;\n    }\n\n    this.props = props;\n    return true;\n  };\n\n  destroy = () => {\n    this.graph.destroy();\n  };\n\n  /** Transform the data from our format to G6 format */\n  static transformData(nodes: GraphNode[], edges: GraphEdge[]): GraphData {\n    // const { nodes: x, edges: y } = testNodeWrap(\"rect\");\n    // nodes = x;\n    // edges = y;\n\n    // get new nodes\n    let newNodes = nodes.map((u, i) => {\n      let type;\n      if (u.label.trim().length > 0) {\n        if (u.shape === \"rect\" || u.shape === \"circle\") {\n          type = u.shape + \"-wrap\";\n        } else {\n          type = u.shape;\n        }\n      } else {\n        type = u.shape;\n      }\n\n      const node: NodeConfig = {\n        id: u.id,\n        label: u.label,\n        type: type,\n        style: {\n          ...u.style,\n          radius: 4,\n          paddingHeight: 2,\n          paddingWidth: 4,\n        },\n        labelCfg: {\n          style: u.labelStyle,\n        },\n      };\n      if (u.shape === \"rect\") {\n        node.style!.radius = 4;\n      }\n      return node;\n    });\n\n    // get new edges\n    if (_.uniq(edges.map((u) => u.id)).length !== edges.length) {\n      console.error(\n        \"Edges must have unique ids. However, we get:\",\n        edges.map((u) => u.id)\n      );\n    }\n\n    let newEdges = edges.map((e) => ({\n      id: e.id,\n      source: e.source,\n      target: e.target,\n      label: e.label,\n    }));\n\n    // process parallel edges if needed\n    const uv = new Set();\n    let hasParallelEdges = false;\n    for (const edge of edges) {\n      const pair = `${edge.source}-${edge.target}`;\n      if (uv.has(pair)) {\n        hasParallelEdges = true;\n        break;\n      }\n      uv.add(pair);\n    }\n    if (hasParallelEdges) {\n      G6.Util.processParallelEdges(newEdges);\n    }\n\n    return { nodes: newNodes, edges: newEdges };\n  }\n\n  /**\n   * Adjust the viewport to fit the view without zooming,\n   * just align the center of the image bbox to the center of the canvas\n   */\n  fitCenter = () => {\n    this.graph.fitCenter();\n  };\n\n  /** Entry point of graph. Render the graph with given data */\n  setDataAndRender = (data: GraphData, onFinish?: () => void) => {\n    if (this.version > 0) {\n      this.graph.clear();\n    }\n    this.data = data;\n    this.graph.data({ nodes: data.nodes, edges: data.edges });\n    this.graph.render();\n    this.version += 1;\n\n    if (onFinish !== undefined) {\n      onFinish();\n    }\n  };\n\n  /** Update layout of the graph **/\n  updateLayout = (layoutCfg: LayoutConfig) => {\n    this.graph.updateLayout(layoutCfg);\n    this.graph.layout();\n  };\n\n  /**\n   * Adjust the canvas size to fit with the graph\n   *\n   * For fit-graph mode, the extraHeight mode is used to add top & bottom padding so that it's not too close (e.g., 20px)\n   * For fit-remaining-window, the offsetHeight is used to reserved some pixels at the bottom of the window so that it's not overflow (e.g., minus 1px for the border)\n   * For keep-as-is, we use the initial height\n   */\n  updateContainerSize = ({\n    center,\n    height,\n  }: {\n    center: boolean;\n    height:\n      | { type: \"fit-graph\"; extraHeight: number }\n      | { type: \"fit-remaining-window\"; offsetHeight: number }\n      | { type: \"keep-as-is\" };\n  }): DOMRect => {\n    // follow the code in fitView & fitCenter\n    let group = this.graph.get(\"group\");\n    group.resetMatrix();\n    let bbox = group.getCanvasBBox();\n    if (!(bbox.width === 0 || bbox.height === 0)) {\n      // let graphWidth = this.graph.getWidth();\n      let graphWidth = this.container.clientWidth;\n\n      let graphHeight;\n      switch (height.type) {\n        case \"fit-graph\":\n          graphHeight = bbox.height + height.extraHeight;\n          break;\n        case \"fit-remaining-window\":\n          let viewportOffset = this.container.getBoundingClientRect().top;\n          let documentScrollY = window.scrollY;\n          let viewportHeight = document.documentElement.clientHeight;\n          graphHeight =\n            viewportHeight -\n            (viewportOffset + documentScrollY) -\n            height.offsetHeight;\n          break;\n        case \"keep-as-is\":\n          graphHeight = this.props.initHeight;\n      }\n      this.graph.changeSize(graphWidth, graphHeight);\n      if (center === true) {\n        this.graph.moveTo(\n          graphWidth / 2 - bbox.width / 2,\n          graphHeight / 2 - bbox.height / 2\n        );\n      } else {\n        this.graph.moveTo(\n          this.props.leftOffset || 0,\n          this.props.topOffset || 0\n        );\n      }\n    }\n    return bbox;\n  };\n\n  /**\n   * During rendering, the bounding box of the graph is changing and may\n   * lead to incorrect canvas size. This function will check until the layout\n   * process is finished (the bounding box is not changing a lot) to\n   * call the function.\n   *\n   * If you doesn't provide prevBBox, the function will wait for 3 * delay ms\n   * (first delay to compute bbox, second delay is in the last wait), because of\n   * the last wait, you can set the delay smaller (e.g., 50ms)\n   *\n   * @param maxTries\n   * @param delay milliseconds\n   * @param fn\n   * @param args\n   * @param onFinish\n   * @param significantChange\n   * @param prevBBox\n   */\n  untilLayoutStable = <F extends (...args: any[]) => any>(\n    maxTries: number,\n    delay: number,\n    fn: F,\n    args: Parameters<F>,\n    onFinish?: () => void,\n    significantChange?: number,\n    prevBBox?: DOMRect\n  ) => {\n    if (maxTries <= 0) {\n      // timeout, call the function anyway\n      fn(...args);\n      if (onFinish !== undefined) {\n        onFinish();\n      }\n      return;\n    }\n\n    const group = this.graph.get(\"group\");\n    const bbox = group.getCanvasBBox();\n\n    significantChange = significantChange || 10;\n\n    if (prevBBox !== undefined) {\n      if (\n        Math.abs(prevBBox.width - bbox.width) < significantChange &&\n        Math.abs(prevBBox.height - bbox.height) < significantChange\n      ) {\n        // seem like no significant change we may call the function now\n        // but what if the layout is running quite slow and we call too fast?\n        // wait for sometime and check again to make sure it's really stable\n        setTimeout(() => {\n          const group = this.graph.get(\"group\");\n          const nextBBox = group.getCanvasBBox();\n\n          if (\n            Math.abs(bbox.width - nextBBox.width) >= significantChange! ||\n            Math.abs(bbox.height - nextBBox.height) >= significantChange!\n          ) {\n            // the layout is still changing, keep on waiting\n            this.untilLayoutStable(\n              maxTries - 1,\n              delay,\n              fn,\n              args,\n              onFinish,\n              significantChange,\n              nextBBox\n            );\n          } else {\n            fn(...args);\n            if (onFinish !== undefined) {\n              onFinish();\n            }\n          }\n        }, delay);\n        return;\n      } else {\n        setTimeout(() => {\n          this.untilLayoutStable(\n            maxTries - 1,\n            delay,\n            fn,\n            args,\n            onFinish,\n            significantChange,\n            bbox\n          );\n        }, delay);\n      }\n    } else {\n      setTimeout(() => {\n        this.untilLayoutStable(\n          maxTries,\n          delay,\n          fn,\n          args,\n          onFinish,\n          significantChange,\n          bbox\n        );\n      }, delay);\n    }\n  };\n}\n","import {\n  DownOutlined,\n  FullscreenOutlined,\n  LayoutOutlined,\n} from \"@ant-design/icons\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\nimport { Button, Dropdown, Menu, Space, Tooltip } from \"antd\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { G6Graph, G6GraphProps, GraphEdge, GraphNode } from \"./G6Graph\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graph: {\n    position: \"relative\",\n    width: \"100%\",\n    // marginLeft: -36,\n    // marginRight: -36,\n  },\n  toolbar: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    \"& button.text\": {\n      borderRadius: 4,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    \"& button.icon\": {\n      borderRadius: 4,\n      padding: 4,\n      \"& svg\": {\n        fontSize: 22,\n      },\n    },\n  },\n  bordered: {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n  },\n  container: {\n    // width: \"calc(100% + 72px)\",\n    width: \"100%\",\n    \"& canvas\": {\n      display: \"block\",\n    },\n  },\n} as const;\n\nconst GraphLayout = {\n  Force: {\n    type: \"force\",\n    preventOverlap: true,\n    linkDistance: 50,\n    nodeSpacing: 50,\n  },\n  Dagre: {\n    type: \"dagre\",\n    rankdir: \"TB\",\n    nodesep: 70,\n    ranksep: 30,\n  },\n};\n\nexport interface GraphComponentFunc {\n  graph: () => G6Graph | undefined;\n  recenter: () => boolean;\n}\n\nexport const GraphComponent = withStyles(styles)(\n  forwardRef(\n    (\n      {\n        id,\n        version,\n        nodes,\n        edges,\n        classes,\n        props,\n        className,\n        renderingAdjustedHeight = { type: \"fit-graph\", extraHeight: 8 },\n        toolbar = false,\n        bordered = true,\n        layouts = GraphLayout,\n      }: {\n        nodes: GraphNode[];\n        edges: GraphEdge[];\n        id?: string | number;\n        version?: number;\n        bordered?: boolean;\n        toolbar?: boolean | \"auto-hide\";\n        props?: G6GraphProps;\n        renderingAdjustedHeight?:\n          | { type: \"fit-graph\"; extraHeight: number }\n          | { type: \"fit-remaining-window\"; offsetHeight: number }\n          | { type: \"keep-as-is\" };\n        className?: string;\n        layouts?: typeof GraphLayout;\n      } & WithStyles<typeof styles>,\n      ref\n    ) => {\n      const container = useRef(null);\n      const graph = useRef<G6Graph | undefined>(undefined);\n\n      useImperativeHandle(\n        ref,\n        (): GraphComponentFunc => ({\n          graph: () => graph.current,\n          recenter: () => {\n            if (graph.current === undefined) return false;\n            graph.current.updateContainerSize({\n              center: true,\n              height: renderingAdjustedHeight,\n            });\n            return true;\n          },\n        })\n      );\n\n      useEffect(() => {\n        if (container.current === null) return;\n        if (graph.current === undefined) {\n          graph.current = new G6Graph(\n            container.current,\n            props || {\n              initHeight: 500,\n            }\n          );\n        }\n\n        let g = graph.current;\n        if (props !== undefined) {\n          const success = g.hotswapProps(props);\n          if (!success) {\n            g.destroy();\n            graph.current = new G6Graph(\n              container.current,\n              props || {\n                initHeight: 500,\n              }\n            );\n            g = graph.current;\n          }\n        }\n        g.setDataAndRender(G6Graph.transformData(nodes, edges), () => {\n          (window as any).g = g;\n          // maximum wait is 1 second\n          g.untilLayoutStable(\n            20,\n            50,\n            g.updateContainerSize,\n            [{ center: true, height: renderingAdjustedHeight }],\n            () => {}\n          );\n        });\n      }, [id, version, nodes, edges, props, renderingAdjustedHeight]);\n\n      const toolbarElement =\n        toolbar === false ? null : (\n          <GraphToolbar\n            autoHide={toolbar === \"auto-hide\"}\n            graph={graph}\n            layouts={layouts}\n          />\n        );\n\n      return (\n        <div className={className}>\n          <div className={classes.hide}>{version}</div>\n          <div className={classes.graph}>\n            {toolbarElement}\n            <div\n              ref={container}\n              className={\n                classes.container + (bordered ? \" \" + classes.bordered : \"\")\n              }\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  )\n);\n\nexport const GraphToolbar = withStyles(styles)(\n  ({\n    autoHide = false,\n    graph,\n    classes,\n    layouts,\n  }: {\n    autoHide?: boolean;\n    graph: React.MutableRefObject<G6Graph | undefined>;\n    layouts: typeof GraphLayout;\n  } & WithStyles<typeof styles>) => {\n    const [isHover, setIsHover] = useState(false);\n    const [layout, setLayout] = useState(\"Force\" as keyof typeof GraphLayout);\n\n    const onMouseEnter = () => {\n      if (autoHide) setIsHover(true);\n    };\n    const onMouseLeave = () => {\n      if (autoHide) setIsHover(false);\n    };\n\n    if (autoHide && !isHover) {\n      return (\n        <div\n          className={classes.toolbar}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <Button className=\"icon\">\n            <MoreHorizIcon />\n          </Button>\n        </div>\n      );\n    }\n\n    const centerGraph = () => {\n      graph.current?.graph.fitCenter();\n    };\n\n    const changeLayout = (name: keyof typeof GraphLayout) => {\n      setLayout(name);\n      graph.current?.updateLayout(layouts[name]);\n      graph.current?.untilLayoutStable(20, 50, centerGraph, [], () => {});\n    };\n\n    const cycleLayout = () => {\n      if (layout === \"Force\") changeLayout(\"Dagre\");\n      if (layout === \"Dagre\") changeLayout(\"Force\");\n    };\n\n    const onMenuSelectLayout = (e: any) => {\n      changeLayout(e.key);\n    };\n\n    return (\n      <div\n        className={classes.toolbar}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Space size={4} align=\"start\">\n          <Tooltip title=\"Center the graph\">\n            <Button className=\"icon\" onClick={centerGraph}>\n              <MyLocationIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Make the graph full screen\">\n            <Button className=\"icon\">\n              <FullscreenOutlined />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Change graph layout\">\n            <Dropdown\n              overlay={\n                <Menu onClick={onMenuSelectLayout}>\n                  {Object.keys(GraphLayout).map((layout) => (\n                    <Menu.Item key={layout}>{layout}</Menu.Item>\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                className=\"text\"\n                icon={<LayoutOutlined />}\n                onClick={cycleLayout}\n              >\n                {layout} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Tooltip>\n        </Space>\n      </div>\n    );\n  }\n);\n","import { gold, green, purple, yellow } from \"@ant-design/colors\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { observer } from \"mobx-react\";\nimport React, {\n  forwardRef,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  GraphComponent,\n  GraphComponentFunc,\n  GraphEdge,\n  GraphNode,\n} from \"../../components/graph\";\nimport {\n  DraftSemanticModel,\n  SemanticModel,\n  Table,\n  useStores,\n} from \"../../models\";\nimport { SMNode } from \"../../models/sm\";\nimport { routes } from \"../../routes\";\nimport { openForm } from \"./forms\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n  graphContainer: {},\n  draft: {\n    border: `1px dashed ${yellow[7]} !important`,\n    \"&:hover\": {\n      color: `${gold[5]} !important`,\n    },\n  },\n  selectedDraft: {\n    backgroundColor: `${gold[5]} !important`,\n  },\n};\n\nexport interface SemanticModelComponentFunc {\n  recenter: () => boolean;\n}\n\nexport const SemanticModelComponent = withStyles(styles)(\n  observer(\n    forwardRef(\n      (\n        {\n          classes,\n          table,\n          sm,\n        }: { table: Table; sm: SemanticModel } & WithStyles<typeof styles>,\n        ref\n      ) => {\n        const graphRef = useRef<GraphComponentFunc>();\n\n        // expose the APIs for the control bar to call\n        useImperativeHandle(\n          ref,\n          (): SemanticModelComponentFunc => ({\n            recenter: () => graphRef.current?.recenter() || false,\n          })\n        );\n\n        const [nodes, edges] = useMemo(() => {\n          const nodes = sm.graph.nodes.map((node) => {\n            let shape: GraphNode[\"shape\"], style;\n            switch (node.nodetype) {\n              case \"class_node\":\n                shape = \"circle\";\n                style = { fill: green[2], stroke: green[8] };\n                break;\n              case \"data_node\":\n                shape = \"rect\";\n                style = { fill: gold[3], stroke: gold[8] };\n                break;\n              case \"literal_node\":\n                if (node.value.type === \"entity-id\") {\n                  shape = \"circle\";\n                } else {\n                  shape = \"rect\";\n                }\n                if (node.isInContext) {\n                  style = { fill: \"#C6E5FF\", stroke: \"#5B8FF9\" };\n                } else {\n                  style = { fill: purple[2], stroke: \"#c41d7f\" };\n                }\n                break;\n              default:\n                throw new Error(`Unreachable!`);\n            }\n\n            return {\n              id: node.id,\n              label: getNodeLabel(sm, node),\n              style,\n              shape,\n            };\n          });\n          const edges = sm.graph.edges.map((edge) => {\n            return {\n              id: `${edge.source}-${edge.target}-${edge.uri}`,\n              source: edge.source,\n              target: edge.target,\n              label: edge.label,\n            };\n          });\n\n          return [nodes, edges];\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n          SemanticModel.isDraft(sm) ? sm.draftID : null,\n          sm.id,\n          sm.graph.version,\n        ]);\n\n        return (\n          <GraphComponent\n            ref={graphRef}\n            className={classes.graphContainer}\n            id={sm.id}\n            version={sm.graph.version}\n            nodes={nodes}\n            edges={edges}\n            toolbar={false}\n            renderingAdjustedHeight={{ type: \"fit-graph\", extraHeight: 20 }}\n            props={{\n              initHeight: 300,\n              layout: {\n                type: \"dagre\",\n                rankdir: \"TB\",\n                nodesep: 50,\n                ranksep: 15,\n              },\n              onNodeClick: (nodeId: string) => {\n                openForm({\n                  type: \"node\",\n                  sm,\n                  node: sm.graph.node(nodeId),\n                });\n              },\n              onEdgeClick: (edge: GraphEdge) => {\n                openForm({\n                  type: \"edge\",\n                  sm,\n                  edge: sm.graph.edge(edge.source, edge.target),\n                });\n              },\n            }}\n          />\n        );\n      }\n    )\n  )\n);\n\nconst getNodeLabel = (sm: SemanticModel, node: SMNode) => {\n  switch (node.nodetype) {\n    case \"data_node\":\n      return node.label;\n    case \"literal_node\":\n      return node.label;\n    case \"class_node\":\n      return sm.graph.uriCount.label(node);\n  }\n};\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Render entity in a single line.\n *\n * @param entity the entity to render\n * @param noLink whether to render the entity as plain text (not clickable to open a page)\n */\nexport const InlineEntityComponent = ({\n  entity,\n  nolink = false,\n  onCtrlClick,\n  ...restprops\n}: {\n  entity: Entity;\n  nolink?: boolean;\n  onCtrlClick?: () => void;\n} & Omit<React.HTMLProps<HTMLAnchorElement>, \"href\" | \"target\" | \"rel\">) => {\n  if (nolink) {\n    return <span {...restprops}>{entity.readableLabel}</span>;\n  }\n\n  return (\n    <ExternalLink\n      href={entity.uri}\n      openInNewPage={true}\n      onCtrlClick={onCtrlClick}\n      {...restprops}\n    >\n      {entity.readableLabel}\n    </ExternalLink>\n  );\n};\n","import { useEffect, useMemo } from \"react\";\nimport { Property, useStores } from \"../../models\";\nimport { Entity } from \"../../models/entity\";\nexport { Entity } from \"../../models/entity\";\n\n/**\n * A placeholder for an entity that has not been loaded yet.\n */\nexport interface IncompleteEntity {\n  id: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if an entity is loaded (completed)\n */\nexport function isEntityComplete(\n  entity: Entity | IncompleteEntity\n): entity is Entity {\n  return (entity as IncompleteEntity).doesNotExist === undefined;\n}\n\n/**\n * A placeholder for a property that has not been loaded yet.\n */\nexport interface IncompleteProperty {\n  id: string;\n  // will just be the property id\n  label: string;\n  // whether the value is still fetching or not\n  doesNotExist: boolean;\n}\n\n/**\n * Type guard to check if a property is loaded (completed)\n */\nexport function isPropertyComplete(\n  prop: Property | IncompleteProperty\n): prop is Property {\n  return (prop as IncompleteProperty).doesNotExist === undefined;\n}\n\nexport type ID2Prop = Record<string, Property | IncompleteProperty>;\n\n/**\n * Gather properties of an entity.\n */\nexport function useEntityProperties(entity: Entity): ID2Prop {\n  const propIds = useMemo(() => {\n    const ids: Set<string> = new Set();\n    for (const [pid, stmts] of Object.entries(entity.properties)) {\n      ids.add(pid);\n      for (const stmt of stmts) {\n        for (const qid of Object.keys(stmt.qualifiers)) {\n          ids.add(qid);\n        }\n      }\n    }\n    return Array.from(ids);\n  }, [entity.id]);\n\n  const { propertyStore } = useStores();\n\n  useEffect(() => {\n    propertyStore.batch.fetchByIds(propIds);\n  }, [entity.id]);\n\n  return Object.fromEntries(\n    propIds.map((id) => {\n      const record = propertyStore.get(id);\n      if (record) {\n        return [id, record];\n      }\n      return [id, { id, doesNotExist: record === null }];\n    })\n  );\n}\n","import { Result } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { LoadingPage } from \"rma-baseapp\";\nimport { useStores } from \"../../models\";\nimport { EntitySettings } from \"../../models\";\nimport { Entity } from \"./Entity\";\n\nexport const FetchEntityComponent = observer(\n  ({\n    entityId,\n    render,\n    renderLoading,\n    renderNotFound,\n    forceWaiting = false,\n  }: {\n    entityId: string;\n    forceWaiting?: boolean;\n    render: (entity: Entity, settings: EntitySettings) => React.ReactElement;\n    renderLoading?: () => React.ReactElement;\n    renderNotFound?: () => React.ReactElement;\n  }) => {\n    const { entityStore, uiSettings } = useStores();\n\n    useEffect(() => {\n      entityStore.batch.fetchById(entityId);\n    }, [entityStore, entityId]);\n\n    const entity = entityStore.get(entityId);\n\n    if (entity === undefined) {\n      if (forceWaiting) {\n        if (renderLoading !== undefined) {\n          return renderLoading();\n        }\n        return <LoadingPage />;\n      }\n\n      return <span>{entityId}</span>;\n    }\n\n    if (entity === null) {\n      if (renderNotFound !== undefined) {\n        return renderNotFound();\n      }\n\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle={`Entity ${entityId} does not exist`}\n        />\n      );\n    }\n\n    return render(entity, uiSettings.entity);\n  }\n);\n","import { ExternalLink } from \"rma-baseapp\";\nimport { Property } from \"../../models\";\nimport { IncompleteProperty, isPropertyComplete } from \"./Entity\";\n\n/**\n * Render property in a single line.\n *\n * @param property the property to render\n * @param noLink whether to render the property as plain text (not clickable to open a page)\n */\nexport const InlinePropertyComponent = ({\n  property,\n  nolink = false,\n  showId = false,\n  ...restprops\n}: {\n  property: Property | IncompleteProperty;\n  showId?: boolean;\n  nolink?: boolean;\n} & Omit<\n  React.HTMLProps<HTMLAnchorElement>,\n  \"href\" | \"target\" | \"rel\" | \"property\"\n>) => {\n  if (!isPropertyComplete(property)) {\n    if (property.doesNotExist) {\n      return (\n        <span {...restprops}>\n          <i>Property {property.id} doesn't exist</i>\n        </span>\n      );\n    } else if (nolink) {\n      return <span {...restprops}>({property.id})</span>;\n    } else {\n      // TODO: we need to have a way to handle id & uri properly\n      // create a local page for the property? for entity add uri to part of the entity\n      return (\n        <ExternalLink href={\"\"} openInNewPage={true} {...restprops}>\n          ({property.id})\n        </ExternalLink>\n      );\n    }\n  }\n\n  if (nolink) {\n    return (\n      <span {...restprops}>\n        {property.label} ({property.id})\n      </span>\n    );\n  }\n\n  const label = showId ? `${property.label} (${property.id})` : property.label;\n\n  return (\n    <ExternalLink href={property.uri} openInNewPage={true} {...restprops}>\n      {label}\n    </ExternalLink>\n  );\n};\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\n\nconst styles = {\n  hide: {\n    display: \"none\",\n  },\n};\nexport const CollapsibleComponent = withStyles(styles)(\n  (\n    props: React.PropsWithChildren<\n      { collapsible: React.ReactNode } & WithStyles<typeof styles>\n    >\n  ) => {\n    const [visible, setVisible] = useState(false);\n    const toggleVisible = () => {\n      setVisible(!visible);\n    };\n    const btn = visible ? (\n      <EyeInvisibleOutlined onClick={toggleVisible} />\n    ) : (\n      <EyeOutlined onClick={toggleVisible} />\n    );\n\n    return (\n      <div>\n        <Space size={4}>\n          {props.children}\n          {btn}\n        </Space>\n        <div className={visible ? \"\" : props.classes.hide}>\n          {props.collapsible}\n        </div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { InlineEntityComponent } from \"./InlineEntityComponent\";\nimport { DataValue } from \"../../models/entity\";\nimport { CollapsibleComponent } from \"../element/Collapse\";\n\nconst styles = {};\n\nexport const ValueComponent = withStyles(styles)(\n  ({ value }: { value: DataValue } & WithStyles<typeof styles>) => {\n    if (value.type === \"entityid\") {\n      return (\n        <FetchEntityComponent\n          entityId={value.value}\n          render={(entity) => {\n            return <InlineEntityComponent entity={entity} />;\n          }}\n        />\n      );\n    }\n\n    if (value.type === \"time\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Timezone:</b> {value.value.timezone}\n              </li>\n              <li>\n                <b>From:</b> {value.value.before} - {value.value.after}\n              </li>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Calendar Model:</b>{\" \"}\n                <ExternalLink\n                  href={value.value.calendarmodel}\n                  openInNewPage={true}\n                >\n                  {value.value.calendarmodel}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          {value.value.time}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"quantity\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Bound:</b> {value.value.lowerBound} -{\" \"}\n                {value.value.upperBound}\n              </li>\n              <li>\n                <b>Unit:</b> {value.value.unit}\n              </li>\n            </ul>\n          }\n        >\n          {value.value.amount}\n        </CollapsibleComponent>\n      );\n    }\n\n    if (value.type === \"monolingualtext\") {\n      return (\n        <span>\n          {value.value.text} <i>@{value.value.language}</i>\n        </span>\n      );\n    }\n\n    if (value.type === \"globecoordinate\") {\n      return (\n        <CollapsibleComponent\n          collapsible={\n            <ul>\n              <li>\n                <b>Precision:</b> {value.value.precision}\n              </li>\n              <li>\n                <b>Globe:</b>{\" \"}\n                <ExternalLink href={value.value.globe} openInNewPage={true}>\n                  {value.value.globe}\n                </ExternalLink>\n              </li>\n            </ul>\n          }\n        >\n          <ExternalLink\n            href={`http://maps.google.com/maps?q=${value.value.latitude},${value.value.longitude}`}\n            openInNewPage={true}\n          >\n            {value.value.latitude} N,{value.value.longitude} W\n          </ExternalLink>\n        </CollapsibleComponent>\n      );\n    }\n\n    // haven't handle these types\n    if (typeof value.value === \"object\") {\n      return <span>{JSON.stringify(value.value)}</span>;\n    }\n\n    return <span>{value.value}</span>;\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Typography } from \"antd\";\nimport { ID2Prop, IncompleteProperty } from \"./Entity\";\nimport { Statement } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { ValueComponent } from \"./ValueComponent\";\n\nconst styles = {\n  qualifiers: {\n    marginLeft: 24,\n  },\n};\n\nexport const StatementComponent = withStyles(styles)(\n  ({\n    stmt,\n    classes,\n    id2prop,\n    ...restprops\n  }: {\n    id2prop: ID2Prop;\n    stmt: Statement;\n  } & WithStyles<typeof styles> &\n    React.HTMLProps<HTMLDivElement>) => {\n    const qualifiers = [];\n    for (const qid of stmt.qualifiersOrder) {\n      let qval;\n      if (stmt.qualifiers[qid].length === 0) {\n        qval = (\n          <Typography.Text type=\"secondary\" italic={true}>\n            no value\n          </Typography.Text>\n        );\n      } else {\n        qval = stmt.qualifiers[qid].map((value, valueIndex) => {\n          return (\n            <div key={valueIndex}>\n              <ValueComponent value={value} />\n            </div>\n          );\n        });\n      }\n\n      qualifiers.push(\n        <Row gutter={8} key={qid}>\n          <Col span={6}>\n            <InlinePropertyComponent property={id2prop[qid]} />\n          </Col>\n          <Col span={18}>{qval}</Col>\n        </Row>\n      );\n    }\n\n    return (\n      <div {...restprops}>\n        <div>\n          <ValueComponent value={stmt.value} />\n        </div>\n        <div className={classes.qualifiers}>{qualifiers}</div>\n      </div>\n    );\n  }\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ID2Prop } from \".\";\nimport { Entity } from \"../../models/entity\";\nimport { InlinePropertyComponent } from \"./InlinePropertyComponent\";\nimport { StatementComponent } from \"./StatementComponent\";\n\nconst styles = {\n  propDivider: {\n    height: 1,\n    border: \"none\",\n    color: \"#ddd\",\n    backgroundColor: \"#ddd\",\n  },\n};\n\nexport const PropertyComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      id2prop,\n      filteredProps,\n      showId = false,\n      classes,\n    }: {\n      entity: Entity;\n      id2prop: ID2Prop;\n      showId?: boolean;\n      filteredProps: string[];\n    } & WithStyles<typeof styles>) => {\n      if (filteredProps.length === 0) {\n        filteredProps = Object.keys(entity.properties);\n      }\n\n      const components = [];\n      for (const pid of filteredProps) {\n        // we have undefined when entity does not have this property `pid`\n        if (entity.properties[pid] === undefined) continue;\n\n        const stmts = entity.properties[pid];\n        if (components.length > 0) {\n          components.push(\n            <hr key={`divider-${pid}`} className={classes.propDivider} />\n          );\n        }\n        components.push(\n          <Row gutter={8} key={pid}>\n            <Col span={6}>\n              <Typography.Text strong={true}>\n                <InlinePropertyComponent\n                  property={id2prop[pid]}\n                  showId={showId}\n                />\n              </Typography.Text>\n            </Col>\n            <Col span={18}>\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                {stmts.map((stmt, idx) => {\n                  return (\n                    <StatementComponent\n                      key={idx}\n                      stmt={stmt}\n                      id2prop={id2prop}\n                    />\n                  );\n                })}\n              </Space>\n            </Col>\n          </Row>\n        );\n      }\n\n      return (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size={2}>\n          {components}\n        </Space>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Checkbox, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useMemo } from \"react\";\nimport { Entity, ID2Prop } from \"./Entity\";\n\nconst styles = {\n  root: {\n    width: 240,\n  },\n};\n\nexport const PropertyFilterComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      enable,\n      setEnable,\n      id2prop,\n      filteredProps,\n      addFilteredProp,\n      removeFilteredProp,\n      classes,\n    }: {\n      enable: boolean;\n      setEnable: (enable: boolean) => void;\n      entity: Entity;\n      id2prop: ID2Prop;\n      filteredProps: string[];\n      addFilteredProp: (prop: string) => void;\n      removeFilteredProp: (prop: string) => void;\n    } & WithStyles<typeof styles>) => {\n      const props = useMemo(() => {\n        return Object.keys(entity.properties).map((pid) => ({\n          label: `${id2prop[pid].label} (${pid})`,\n          value: pid,\n        }));\n      }, [id2prop, entity.id]);\n\n      return (\n        <div>\n          <Checkbox onChange={() => setEnable(!enable)} checked={enable}>\n            Enable Filtering\n          </Checkbox>\n          <Select\n            mode=\"multiple\"\n            allowClear={true}\n            options={props}\n            optionFilterProp=\"label\"\n            className={classes.root}\n            value={filteredProps}\n            onSelect={addFilteredProp as any}\n            onDeselect={removeFilteredProp as any}\n          />\n        </div>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Modal, Space, Typography } from \"antd\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { FetchEntityComponent } from \"./FetchEntityComponent\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { PropertyComponent } from \"./PropertyComponent\";\nimport { PropertyFilterComponent } from \"./PropertyFilterComponent\";\nimport { useState } from \"react\";\nimport { EntitySettings } from \"../../models\";\nimport { observer } from \"mobx-react\";\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 360,\n  },\n};\n\nexport const PageEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      settings,\n    }: { entity: Entity; settings: EntitySettings } & WithStyles<\n      typeof styles\n    >) => {\n      const id2prop = useEntityProperties(entity);\n      const [enable, setEnable] = useState<boolean>(true);\n\n      return (\n        <div>\n          <Space style={{ float: \"right\" }}>\n            <PropertyFilterComponent\n              enable={enable}\n              setEnable={setEnable}\n              entity={entity}\n              id2prop={id2prop}\n              filteredProps={settings.showedPropsInFullView}\n              addFilteredProp={settings.addShowedPropsInFullView}\n              removeFilteredProp={settings.removeShowedPropsInFullView}\n            />\n          </Space>\n          <h2>\n            <ExternalLink href={entity.uri} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            entity={entity}\n            id2prop={id2prop}\n            showId={true}\n            filteredProps={enable ? settings.showedPropsInFullView : []}\n          />\n        </div>\n      );\n    }\n  )\n);\n\n/** Open a full page of entity as a modal */\nexport function openPageEntityComponent(\n  args: { entity: Entity; settings: EntitySettings } | string,\n  zIndex?: number\n) {\n  // avoid using instanceof Entity because it's going to be proxy object due to mobx\n  const isEntity = typeof args !== \"string\";\n  let content;\n  if (isEntity) {\n    content = (\n      <PageEntityComponent entity={args.entity} settings={args.settings} />\n    );\n  } else {\n    content = (\n      <FetchEntityComponent\n        entityId={args}\n        render={(entity, settings) => (\n          <PageEntityComponent entity={entity} settings={settings} />\n        )}\n      />\n    );\n  }\n\n  Modal.info({\n    icon: null,\n    content,\n    bodyStyle: { margin: -8, marginTop: -16 },\n    okButtonProps: { style: { display: \"none\" } },\n    maskClosable: true,\n    mask: true,\n    zIndex: zIndex,\n    width: \"calc(100% - 128px)\",\n    style: { top: 64 },\n  });\n}\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { Popover, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { EntitySettings } from \"../../models\";\nimport { Entity, useEntityProperties } from \"./Entity\";\nimport { openPageEntityComponent } from \"./PageEntityComponent\";\nimport { PropertyComponent } from \"./PropertyComponent\";\n\nconst styles = {\n  root: {\n    \"& > h2, p, span\": {\n      margin: 0,\n    },\n    minWidth: 600,\n  },\n};\n\n/**\n * Showing entity in popover mode.\n *\n * To control which one to show first, set the zIndex property of the popover.\n */\nexport const PopoverEntityComponent = withStyles(styles)(\n  observer(\n    ({\n      entity,\n      children,\n      classes,\n      zIndex,\n      settings,\n      ...restprops\n    }: {\n      entity: Entity;\n      settings: EntitySettings;\n      zIndex?: number;\n    } & React.HTMLProps<HTMLDivElement> &\n      WithStyles<typeof styles>) => {\n      // TODO: find a way to remove this hard code\n      const id2prop = useEntityProperties(entity);\n      const content = (\n        <div\n          {...restprops}\n          className={`${classes.root} ${restprops.className}`}\n        >\n          <h2>\n            <ExternalLink href={entity.uri} openInNewPage={true}>\n              {entity.label.lang2value[entity.label.lang]}\n            </ExternalLink>\n            &nbsp;\n            <Typography.Text\n              italic={true}\n              strong={false}\n              style={{ fontSize: 14, fontWeight: 400 }}\n              copyable={{ text: entity.id }}\n            >\n              ({entity.id})\n            </Typography.Text>\n            <UnfoldMoreIcon\n              style={{ marginBottom: -2, paddingTop: 4, cursor: \"pointer\" }}\n              onClick={() => {\n                openPageEntityComponent(\n                  { entity, settings },\n                  zIndex !== undefined ? zIndex + 1 : undefined\n                );\n              }}\n            />\n          </h2>\n          <Typography.Text type=\"secondary\">\n            {entity.aliases.lang2values[entity.aliases.lang].join(\" | \")}\n          </Typography.Text>\n          <p>{entity.description.lang2value[entity.description.lang]}</p>\n          <hr />\n          <PropertyComponent\n            id2prop={id2prop}\n            entity={entity}\n            filteredProps={settings.showedPropsInPopoverView}\n          />\n        </div>\n      );\n\n      return (\n        <Popover content={content} zIndex={zIndex}>\n          {children}\n        </Popover>\n      );\n    }\n  )\n);\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Checkbox, Divider, Space, Tooltip, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReactNode, useEffect, useMemo, useState } from \"react\";\nimport { Table, useStores } from \"../../../../models\";\nimport { Class } from \"../../../../models/ontology/ClassStore\";\nimport { ColumnFilter, TableFilter } from \"./Filter\";\n\nconst styles = {\n  treeNode: {},\n  levelMarker: {},\n  table: {\n    \"& th\": {\n      minWidth: 30,\n      textAlign: \"left\",\n    },\n  },\n};\n\n/** Render a tree from the mappings */\nexport const TypeTreeFilter = withStyles(styles)(\n  observer(\n    ({\n      types,\n      classes,\n      filter,\n    }: {\n      types: { [id: string]: Class };\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const [treeData, setTreeData] = useState<ReactNode[]>([]);\n\n      useMemo(() => {\n        // construct parent to children mapping\n        const p2cs = Object.fromEntries(\n          Object.keys(types).map((id) => [id, new Set<string>()])\n        );\n        for (const type of Object.values(types)) {\n          for (const parentTypeId of type.parents) {\n            if (types[parentTypeId] !== undefined) {\n              p2cs[parentTypeId].add(type.id);\n            }\n          }\n        }\n\n        // get list of roots to start with\n        const rootIds = new Set(Object.keys(p2cs));\n        for (const [parent, children] of Object.entries(p2cs)) {\n          for (const child of children) {\n            rootIds.delete(child);\n          }\n        }\n\n        // traveling the mapping to build the flatten tree\n        filter.addTypes(Object.keys(types));\n\n        const args = {\n          start: \"\",\n          nodes: types,\n          p2cs: p2cs,\n          visited: {} as { [id: string]: number },\n          counter: 0,\n          filter: filter,\n        };\n        const treeNodes: ReactNode[] = [];\n\n        for (const rootId of rootIds) {\n          args.start = rootId;\n          travel2constructTreeNodes(args, treeNodes);\n        }\n\n        // the remaining nodes are part of cycles, we just pick a random node to start\n        for (const nodeId in p2cs) {\n          if (args.visited[nodeId] === undefined) {\n            args.start = nodeId;\n            travel2constructTreeNodes(args, treeNodes);\n          }\n        }\n\n        setTreeData(treeNodes);\n      }, [Object.keys(types).sort().join(\"\\t\")]);\n\n      return (\n        <>\n          <table className={classes.table}>\n            <thead>\n              <tr>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    #\n                  </Typography.Text>\n                </th>\n                <th>\n                  <Tooltip title=\"Include: select rows that have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      In\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Tooltip title=\"Exclude: select rows that do not have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      Ex\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    Type\n                  </Typography.Text>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <Tooltip\n                  title=\"Select all checkbox in this `Include` column\"\n                  placement=\"left\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"include\") &&\n                        !filter.hasAllOp(\"include\")\n                      }\n                      checked={filter.hasAllOp(\"include\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"include\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <Tooltip\n                  title=\"Select all checkbox in this `Exclude` column\"\n                  placement=\"right\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"exclude\") &&\n                        !filter.hasAllOp(\"exclude\")\n                      }\n                      checked={filter.hasAllOp(\"exclude\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"exclude\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <td>\n                  <Typography.Text type=\"secondary\">\n                    (Select all)\n                  </Typography.Text>\n                </td>\n              </tr>\n              {treeData}\n            </tbody>\n          </table>\n          <Divider style={{ margin: \"8px 0\" }} />\n          <Space>\n            <Typography.Text\n              type=\"secondary\"\n              strong={true}\n              title=\"Reset all filters\"\n              onClick={() => filter.toggleAllType(\"null\", true)}\n              style={{ cursor: \"pointer\" }}\n            >\n              Reset\n            </Typography.Text>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows containing NIL entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectNil(!filter.selectNil)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectNil}\n                  onChange={(e) => filter.setSelectNil(e.target.checked)}\n                />\n                &nbsp;NIL Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows that do not link to any entity\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectUnlinked(!filter.selectUnlinked)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectUnlinked}\n                  onChange={(e) => filter.setSelectUnlinked(e.target.checked)}\n                />\n                &nbsp;Unlinked Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Applying filters to candidate entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() =>\n                  filter.setIncludeCandidateEntities(\n                    !filter.includeCandidateEntities\n                  )\n                }\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.includeCandidateEntities}\n                  onChange={(e) =>\n                    filter.setIncludeCandidateEntities(e.target.checked)\n                  }\n                />\n                &nbsp;Candidate entities\n              </Typography.Text>\n            </Tooltip>\n          </Space>\n        </>\n      );\n    }\n  )\n);\n\nexport const TreeNode = withStyles(styles)(\n  observer(\n    ({\n      nodeId,\n      nodes,\n      visited,\n      unknown,\n      depth,\n      counter,\n      classes,\n      filter,\n    }: {\n      nodeId: string;\n      nodes: { [id: string]: Class };\n      visited: number | undefined;\n      unknown: boolean;\n      depth: number;\n      counter: number;\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const title = nodes[nodeId]?.readableLabel || nodeId;\n\n      let comp = [];\n\n      if (depth === 0) {\n        comp.push(<span key=\"2\">{title}</span>);\n      } else {\n        let indent = \"\";\n        for (let i = 1; i < depth; i++) {\n          indent += \"│&nbsp;&nbsp;&nbsp;\";\n        }\n\n        comp.push(\n          <code\n            key=\"1\"\n            className={classes.levelMarker}\n            dangerouslySetInnerHTML={{ __html: `${indent}├──&nbsp;` }}\n          ></code>\n        );\n        comp.push(<span key=\"2\">{title}</span>);\n      }\n\n      if (visited !== undefined) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (visited at #{visited})\n          </Typography.Text>\n        );\n      }\n\n      if (unknown) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (unknown)\n          </Typography.Text>\n        );\n      }\n\n      return (\n        <tr className={classes.treeNode}>\n          <td title=\"The index number of this type\">\n            <Typography.Text type=\"secondary\">{counter}.</Typography.Text>\n          </td>\n          <td title=\"Select rows having entities of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"include\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"include\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td title=\"Select rows having entities that do not be part of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"exclude\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"exclude\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td>{comp}</td>\n        </tr>\n      );\n    }\n  )\n);\n\nconst travel2constructTreeNodes = (\n  args: {\n    start: string;\n    nodes: { [id: string]: Class };\n    p2cs: { [id: string]: Set<string> };\n\n    visited: { [node: string]: number };\n    counter: number;\n    filter: ColumnFilter;\n  },\n  outputs: ReactNode[]\n) => {\n  const stack: [string, number][] = [[args.start, 0]];\n  while (stack.length > 0) {\n    args.counter += 1;\n    const [nodeId, depth] = stack.pop()!;\n    outputs.push(\n      <TreeNode\n        key={args.counter}\n        counter={args.counter}\n        nodeId={nodeId}\n        nodes={args.nodes}\n        unknown={args.nodes[nodeId] === undefined}\n        depth={depth}\n        visited={args.visited[nodeId]}\n        filter={args.filter}\n      />\n    );\n\n    if (args.visited[nodeId] === undefined) {\n      args.visited[nodeId] = args.counter;\n      for (const child of args.p2cs[nodeId]) {\n        stack.push([child, depth + 1]);\n      }\n    }\n  }\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Checkbox, Divider, Space, Tooltip, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReactNode, useEffect, useMemo, useState } from \"react\";\nimport { Property, Table, useStores } from \"../../../../models\";\nimport { Class } from \"../../../../models/ontology/ClassStore\";\nimport { ColumnFilter, TableFilter } from \"./Filter\";\n\nconst styles = {\n  treeNode: {},\n  levelMarker: {},\n  table: {\n    \"& th\": {\n      minWidth: 30,\n      textAlign: \"left\",\n    },\n  },\n};\n\n/** Render a tree from the mappings */\nexport const PropTreeFilter = withStyles(styles)(\n  observer(\n    ({\n      properties,\n      classes,\n      filter,\n    }: {\n      properties: { [id: string]: Property };\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const [treeData, setTreeData] = useState<ReactNode[]>([]);\n\n      useMemo(() => {\n        // construct parent to children mapping\n        const p2cs = Object.fromEntries(\n          Object.keys(properties).map((id) => [id, new Set<string>()])\n        );\n        for (const prop of Object.values(properties)) {\n          for (const parentTypeId of prop.parents) {\n            if (properties[parentTypeId] !== undefined) {\n              p2cs[parentTypeId].add(prop.id);\n            }\n          }\n        }\n\n        // get list of roots to start with\n        const rootIds = new Set(Object.keys(p2cs));\n        for (const [parent, children] of Object.entries(p2cs)) {\n          for (const child of children) {\n            rootIds.delete(child);\n          }\n        }\n\n        // traveling the mapping to build the flatten tree\n        filter.addTypes(Object.keys(properties));\n\n        const args = {\n          start: \"\",\n          nodes: properties,\n          p2cs: p2cs,\n          visited: {} as { [id: string]: number },\n          counter: 0,\n          filter: filter,\n        };\n        const treeNodes: ReactNode[] = [];\n\n        for (const rootId of rootIds) {\n          args.start = rootId;\n          travel2constructTreeNodes(args, treeNodes);\n        }\n\n        // the remaining nodes are part of cycles, we just pick a random node to start\n        for (const nodeId in p2cs) {\n          if (args.visited[nodeId] === undefined) {\n            args.start = nodeId;\n            travel2constructTreeNodes(args, treeNodes);\n          }\n        }\n\n        setTreeData(treeNodes);\n      }, [Object.keys(properties).sort().join(\"\\t\")]);\n\n      return (\n        <>\n          <table className={classes.table}>\n            <thead>\n              <tr>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    #\n                  </Typography.Text>\n                </th>\n                <th>\n                  <Tooltip title=\"Include: select rows that have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      In\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Tooltip title=\"Exclude: select rows that do not have a specific type\">\n                    <Typography.Text type=\"secondary\" strong={true}>\n                      Ex\n                    </Typography.Text>\n                  </Tooltip>\n                </th>\n                <th>\n                  <Typography.Text type=\"secondary\" strong={true}>\n                    Type\n                  </Typography.Text>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <Tooltip\n                  title=\"Select all checkbox in this `Include` column\"\n                  placement=\"left\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"include\") &&\n                        !filter.hasAllOp(\"include\")\n                      }\n                      checked={filter.hasAllOp(\"include\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"include\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <Tooltip\n                  title=\"Select all checkbox in this `Exclude` column\"\n                  placement=\"right\"\n                >\n                  <td>\n                    <Checkbox\n                      indeterminate={\n                        filter.hasAnyOp(\"exclude\") &&\n                        !filter.hasAllOp(\"exclude\")\n                      }\n                      checked={filter.hasAllOp(\"exclude\")}\n                      onChange={(e) =>\n                        filter.toggleAllType(\"exclude\", e.target.checked)\n                      }\n                    />\n                  </td>\n                </Tooltip>\n                <td>\n                  <Typography.Text type=\"secondary\">\n                    (Select all)\n                  </Typography.Text>\n                </td>\n              </tr>\n              {treeData}\n            </tbody>\n          </table>\n          <Divider style={{ margin: \"8px 0\" }} />\n          <Space>\n            <Typography.Text\n              type=\"secondary\"\n              strong={true}\n              title=\"Reset all filters\"\n              onClick={() => filter.toggleAllType(\"null\", true)}\n              style={{ cursor: \"pointer\" }}\n            >\n              Reset\n            </Typography.Text>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows containing NIL entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectNil(!filter.selectNil)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectNil}\n                  onChange={(e) => filter.setSelectNil(e.target.checked)}\n                />\n                &nbsp;NIL Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Select rows that do not link to any entity\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() => filter.setSelectUnlinked(!filter.selectUnlinked)}\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.selectUnlinked}\n                  onChange={(e) => filter.setSelectUnlinked(e.target.checked)}\n                />\n                &nbsp;Unlinked Rows\n              </Typography.Text>\n            </Tooltip>\n            <Divider type=\"vertical\" />\n            <Tooltip\n              title=\"Applying filters to candidate entities\"\n              placement=\"bottom\"\n            >\n              <Typography.Text\n                type=\"secondary\"\n                strong={true}\n                onClick={() =>\n                  filter.setIncludeCandidateEntities(\n                    !filter.includeCandidateEntities\n                  )\n                }\n                style={{ cursor: \"pointer\", userSelect: \"none\" }}\n              >\n                <Checkbox\n                  checked={filter.includeCandidateEntities}\n                  onChange={(e) =>\n                    filter.setIncludeCandidateEntities(e.target.checked)\n                  }\n                />\n                &nbsp;Candidate entities\n              </Typography.Text>\n            </Tooltip>\n          </Space>\n        </>\n      );\n    }\n  )\n);\n\nexport const TreeNode = withStyles(styles)(\n  observer(\n    ({\n      nodeId,\n      nodes,\n      visited,\n      unknown,\n      depth,\n      counter,\n      classes,\n      filter,\n    }: {\n      nodeId: string;\n      nodes: { [id: string]: Property };\n      visited: number | undefined;\n      unknown: boolean;\n      depth: number;\n      counter: number;\n      filter: ColumnFilter;\n    } & WithStyles<typeof styles>) => {\n      const title = nodes[nodeId]?.readableLabel || nodeId;\n\n      let comp = [];\n\n      if (depth === 0) {\n        comp.push(<span key=\"2\">{title}</span>);\n      } else {\n        let indent = \"\";\n        for (let i = 1; i < depth; i++) {\n          indent += \"│&nbsp;&nbsp;&nbsp;\";\n        }\n\n        comp.push(\n          <code\n            key=\"1\"\n            className={classes.levelMarker}\n            dangerouslySetInnerHTML={{ __html: `${indent}├──&nbsp;` }}\n          ></code>\n        );\n        comp.push(<span key=\"2\">{title}</span>);\n      }\n\n      if (visited !== undefined) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (visited at #{visited})\n          </Typography.Text>\n        );\n      }\n\n      if (unknown) {\n        comp.push(\n          <Typography.Text type=\"secondary\" style={{ marginLeft: 4 }}>\n            (unknown)\n          </Typography.Text>\n        );\n      }\n\n      return (\n        <tr className={classes.treeNode}>\n          <td title=\"The index number of this type\">\n            <Typography.Text type=\"secondary\">{counter}.</Typography.Text>\n          </td>\n          <td title=\"Select rows having entities of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"include\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"include\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td title=\"Select rows having entities that do not be part of this type\">\n            {visited === undefined ? (\n              <Checkbox\n                checked={filter.type2op[nodeId] === \"exclude\"}\n                onChange={(e) => {\n                  filter.setTypeOp(\n                    nodeId,\n                    e.target.checked ? \"exclude\" : \"null\"\n                  );\n                }}\n              />\n            ) : null}\n          </td>\n          <td>{comp}</td>\n        </tr>\n      );\n    }\n  )\n);\n\nconst travel2constructTreeNodes = (\n  args: {\n    start: string;\n    nodes: { [id: string]: Property };\n    p2cs: { [id: string]: Set<string> };\n\n    visited: { [node: string]: number };\n    counter: number;\n    filter: ColumnFilter;\n  },\n  outputs: ReactNode[]\n) => {\n  const stack: [string, number][] = [[args.start, 0]];\n  while (stack.length > 0) {\n    args.counter += 1;\n    const [nodeId, depth] = stack.pop()!;\n    outputs.push(\n      <TreeNode\n        key={args.counter}\n        counter={args.counter}\n        nodeId={nodeId}\n        nodes={args.nodes}\n        unknown={args.nodes[nodeId] === undefined}\n        depth={depth}\n        visited={args.visited[nodeId]}\n        filter={args.filter}\n      />\n    );\n\n    if (args.visited[nodeId] === undefined) {\n      args.visited[nodeId] = args.counter;\n      for (const child of args.p2cs[nodeId]) {\n        stack.push([child, depth + 1]);\n      }\n    }\n  }\n};\n","import { Menu, Space, Tabs, Typography } from \"antd\";\nimport { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { Property, Table, useStores } from \"../../models\";\nimport { Class } from \"../../models/ontology/ClassStore\";\nimport { TypeTreeFilter } from \"./table/filters\";\nimport { ColumnFilter } from \"./table/filters/Filter\";\nimport { PropTreeFilter } from \"./table/filters/PropTreeFilter\";\n\nconst styles = {\n  tab: {\n    \"& div.ant-tabs-nav\": {\n      marginBottom: \"8px !important\",\n    },\n  },\n};\n\nexport const TableColumnFilter = withStyles(styles)(\n  ({\n    table,\n    columnIndex,\n    filter,\n    classes,\n  }: {\n    table: Table;\n    columnIndex: number;\n    filter: ColumnFilter;\n  } & WithStyles<typeof styles>) => {\n    const [menu, setMenu] = useState(\"by-type\");\n    const { assistantService, semanticModelStore, classStore } = useStores();\n    const [types, setTypes] = useState<{ [id: string]: Class }>({});\n    const [props, setProps] = useState<{ [id: string]: Property }>({});\n    const [typeCfg, setTypeCfg] = useState({\n      includeNil: false,\n      includeUnlinked: false,\n    });\n\n    useEffect(() => {\n      assistantService.getColumnTypes(table, columnIndex, false).then(setTypes);\n      // assistantService\n      //   .getColumnProperties(table, columnIndex, false)\n      //   .then(setProps);\n    }, [menu]);\n\n    return (\n      <div style={{ minWidth: 495, padding: 8 }}>\n        <Tabs className={classes.tab} defaultActiveKey=\"by-type\" size={\"small\"}>\n          <Tabs.TabPane tab=\"Filter By Type\" key=\"by-type\">\n            <TypeTreeFilter\n              key={`${table.id} ${columnIndex}`}\n              types={types}\n              filter={filter}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Filter By Property\" key=\"by-prop\">\n            <PropTreeFilter\n              key={`${table.id} ${columnIndex}`}\n              properties={props}\n              filter={filter}\n            />\n          </Tabs.TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n);\n","export const Number: React.FunctionComponent<\n  {\n    value: number;\n    fractionDigits?: number;\n  } & Omit<React.HTMLProps<HTMLSpanElement>, \"title\">\n> = ({ value, fractionDigits, ...restprops }) => {\n  return (\n    <span title={value.toString()} {...restprops}>\n      {value.toFixed(fractionDigits)}\n    </span>\n  );\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { blue, grey } from \"@ant-design/colors\";\nimport { useState } from \"react\";\n\nconst styles = {\n  checkboxIcon: {\n    padding: \"1px 2px\",\n    border: \"1px solid\",\n    borderRadius: 2,\n    fontSize: 12,\n    marginBottom: -1,\n  },\n};\n\nexport const CheckboxIcon = withStyles(styles)(\n  ({\n    icon,\n    classes,\n    selected,\n    onChange,\n    colorSelected = blue[5],\n    colorUnselected = grey[5],\n  }: {\n    icon: IconProp;\n    selected?: boolean;\n    onChange?: (selected: boolean) => void;\n    colorSelected?: string;\n    colorUnselected?: string;\n  } & WithStyles<typeof styles>) => {\n    const [stateSelected, setStateSelected] = useState(false);\n    const toggle = () => {\n      if (selected !== undefined && onChange !== undefined) {\n        return onChange(!selected);\n      }\n\n      setStateSelected(!stateSelected);\n      if (onChange !== undefined) {\n        onChange(!stateSelected);\n      }\n    };\n\n    const correctSelected = selected === undefined ? stateSelected : selected;\n\n    return (\n      <FontAwesomeIcon\n        icon={icon}\n        color={correctSelected ? colorSelected : colorUnselected}\n        className={classes.checkboxIcon}\n        onClick={toggle}\n      />\n    );\n  }\n);\n","import { Tooltip } from \"antd\";\nimport { useState } from \"react\";\n\nexport const AutoHideTooltip: React.FC<{ title: string; ms: number }> = ({\n  children,\n  title,\n  ms,\n}) => {\n  const [visible, setVisible] = useState(false);\n  const autoHide = (visible: boolean) => {\n    if (visible) {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n      }, ms);\n    }\n  };\n\n  return (\n    <Tooltip\n      title={title}\n      visible={visible}\n      onVisibleChange={autoHide}\n      trigger=\"click\"\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","import { blue, grey } from \"@ant-design/colors\";\nimport ProTable from \"@ant-design/pro-table\";\nimport {\n  faCheck,\n  faCheckDouble,\n  faPlus,\n  faBan,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Button, Divider, Modal, Space, Typography } from \"antd\";\nimport { runInAction, toJS } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { CheckboxIcon, Number } from \"../../../components/element\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { useStores } from \"../../../models\";\nimport { appConfig } from \"../../../models/settings\";\nimport { TableRow, Link } from \"../../../models/table\";\nimport { EntitySearchComponent } from \"../OntSearchComponent\";\n\nconst styles = {\n  correctCandidateEntity: {\n    color: blue[5],\n  },\n  candidateEntity: {\n    color: grey[5],\n    \"&:hover\": {\n      color: `${grey[5]} !important`,\n    },\n  },\n  candidateEntitySeeMore: {\n    color: grey[5],\n    cursor: \"pointer\",\n  },\n};\n\n/**\n * Component to help select candidate entity for a given cell.\n */\nexport const CandidateEntityListComponent = withStyles(styles)(\n  observer(\n    ({\n      record: record,\n      index,\n      classes,\n      topK = 3,\n    }: {\n      record: TableRow;\n      index: number;\n      topK?: number;\n    } & WithStyles<typeof styles>) => {\n      const { tableRowStore, tableStore } = useStores();\n      const [showAllCandidateModals, setShowAllCandidateModals] =\n        useState(false);\n      const singleUpdate = (entityId: string) => {\n        return (select: boolean) => {\n          return tableRowStore.updateCellLinks(\n            record,\n            index,\n            select ? entityId : undefined,\n            false // don't save the candidate entities\n          );\n        };\n      };\n\n      const selectMultiple = (entityId: string) => {\n        return (select: boolean) => {\n          const value = record.row[index];\n          if (typeof value === \"number\") {\n            throw new Error(`Can't not link a number \"${value}\" to an entity`);\n          }\n\n          return tableRowStore.updateColumnLinks(\n            tableStore.get(record.table)!,\n            index,\n            value,\n            select ? entityId : undefined\n          );\n        };\n      };\n\n      const links = record.links[index] || [];\n      const candidateLst = [];\n      if (links.length > 0) {\n        for (let candidateEntity of links[0].candidateEntities.slice(0, topK)) {\n          const className =\n            candidateEntity.entityId === links[0].entityId\n              ? classes.correctCandidateEntity\n              : classes.candidateEntity;\n\n          candidateLst.push(\n            <div key={candidateEntity.entityId}>\n              <Space size={4}>\n                <CheckboxIcon\n                  icon={faCheck}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={singleUpdate(candidateEntity.entityId)}\n                />\n                <CheckboxIcon\n                  icon={faCheckDouble}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={selectMultiple(candidateEntity.entityId)}\n                />\n                <FetchEntityComponent\n                  entityId={candidateEntity.entityId}\n                  render={(entity, settings) => (\n                    <PopoverEntityComponent entity={entity} settings={settings}>\n                      <InlineEntityComponent\n                        nolink={true}\n                        entity={entity}\n                        className={className}\n                      />\n                    </PopoverEntityComponent>\n                  )}\n                />\n                <span className={className}>\n                  (\n                  <Number\n                    value={candidateEntity.probability}\n                    fractionDigits={3}\n                  />\n                  )\n                </span>\n              </Space>\n            </div>\n          );\n        }\n\n        // if there is a correct entity in top K, no need to highlight, otherwise,\n        // add them to the list\n        const idx = links[0].candidateEntities.findIndex(\n          (candidate) => candidate.entityId === links[0].entityId\n        );\n        if (idx !== -1 && idx >= topK) {\n          const candidateEntity = links[0].candidateEntities[idx];\n          candidateLst.push(\n            <div key={candidateEntity.entityId}>\n              <Space size={4}>\n                <CheckboxIcon\n                  icon={faCheck}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={singleUpdate(candidateEntity.entityId)}\n                />\n                <CheckboxIcon\n                  icon={faCheckDouble}\n                  selected={links[0].entityId === candidateEntity.entityId}\n                  onChange={selectMultiple(candidateEntity.entityId)}\n                />\n                <FetchEntityComponent\n                  entityId={candidateEntity.entityId}\n                  render={(entity, settings) => (\n                    <span className={classes.correctCandidateEntity}>\n                      ({idx})&nbsp;\n                      <PopoverEntityComponent\n                        entity={entity}\n                        settings={settings}\n                      >\n                        <InlineEntityComponent nolink={true} entity={entity} />\n                      </PopoverEntityComponent>\n                    </span>\n                  )}\n                />\n                <span className={classes.correctCandidateEntity}>\n                  (\n                  <Number\n                    value={candidateEntity.probability}\n                    fractionDigits={3}\n                  />\n                  )\n                </span>\n              </Space>\n            </div>\n          );\n        }\n\n        if (links[0].candidateEntities.length > topK) {\n          candidateLst.push(\n            <div key=\"see-more\">\n              <Typography.Text\n                className={classes.candidateEntitySeeMore}\n                onClick={() =>\n                  setShowAllCandidateModals(!showAllCandidateModals)\n                }\n              >\n                See more\n              </Typography.Text>\n            </div>\n          );\n        }\n      }\n\n      // nil entity & create new entity\n      const className =\n        links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n          ? classes.correctCandidateEntity\n          : classes.candidateEntity;\n\n      candidateLst.push(\n        <div className={className} key=\"nil-entity\">\n          <Space size={4}>\n            <CheckboxIcon\n              icon={faCheck}\n              selected={\n                links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n              }\n              onChange={singleUpdate(appConfig.NIL_ENTITY)}\n            />\n            <CheckboxIcon\n              icon={faCheckDouble}\n              selected={\n                links.length > 0 && links[0].entityId === appConfig.NIL_ENTITY\n              }\n              onChange={selectMultiple(appConfig.NIL_ENTITY)}\n            />\n            <FetchEntityComponent\n              entityId={appConfig.NIL_ENTITY}\n              render={(entity, settings) => (\n                <PopoverEntityComponent entity={entity} settings={settings}>\n                  <InlineEntityComponent\n                    nolink={true}\n                    entity={entity}\n                    className={className}\n                  />\n                </PopoverEntityComponent>\n              )}\n            />\n          </Space>\n        </div>\n      );\n      candidateLst.push(\n        <div className={classes.candidateEntity} key=\"new-entity\">\n          <Space\n            size={4}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              const content = (\n                <EntitySearchComponent\n                  onSelect={(entityId) => {\n                    singleUpdate(entityId)(true).then(() => {\n                      Modal.destroyAll();\n                    });\n                  }}\n                />\n              );\n\n              Modal.info({\n                title: (\n                  <span style={{ marginBottom: 16, display: \"inline-block\" }}>\n                    Search Entity\n                  </span>\n                ),\n                content,\n                bodyStyle: { margin: -8 },\n                okButtonProps: { style: { display: \"none\" } },\n                maskClosable: true,\n                mask: true,\n              });\n            }}\n          >\n            <CheckboxIcon icon={faPlus} />\n            Create\n          </Space>\n        </div>\n      );\n\n      const columns: any = [\n        {\n          dataIndex: \"id\",\n          title: \"Entity\",\n          render: (entityId: string) => {\n            return (\n              <FetchEntityComponent\n                entityId={entityId}\n                render={(entity, settings) => (\n                  <PopoverEntityComponent entity={entity} settings={settings}>\n                    <InlineEntityComponent nolink={true} entity={entity} />\n                  </PopoverEntityComponent>\n                )}\n              />\n            );\n          },\n        },\n        {\n          dataIndex: \"score\",\n          title: \"Score\",\n          render: (score: number) => {\n            return <Number value={score} fractionDigits={5} />;\n          },\n        },\n        {\n          title: \"action\",\n          render: () => {\n            return (\n              <Space size={4}>\n                <Button>Select</Button>\n              </Space>\n            );\n          },\n        },\n      ];\n\n      return (\n        <React.Fragment>\n          {candidateLst}\n          <Modal\n            title=\"Candidate Entities\"\n            visible={showAllCandidateModals}\n            style={{ top: 20 }}\n            bodyStyle={{ padding: 0 }}\n            width={\"60%\"}\n            onOk={() => setShowAllCandidateModals(false)}\n            onCancel={() => setShowAllCandidateModals(false)}\n          >\n            <ProTable\n              defaultSize=\"small\"\n              bordered={true}\n              search={false}\n              pagination={{\n                pageSize: 20,\n                pageSizeOptions: [\"20\", \"50\", \"100\", \"200\", \"500\", \"1000\"],\n              }}\n              rowKey=\"id\"\n              columns={columns}\n              request={async (params, sort, filter) => {\n                return Promise.resolve({\n                  total:\n                    links.length > 0 ? links[0].candidateEntities.length : 0,\n                  success: true,\n                  data:\n                    links.length === 0\n                      ? []\n                      : links[0].candidateEntities\n                          .slice(\n                            (params.current! - 1) * params.pageSize!,\n                            params.current! * params.pageSize!\n                          )\n                          .map((candidateEntity, index) => ({\n                            id: candidateEntity.entityId,\n                            score: candidateEntity.probability,\n                          })),\n                });\n              }}\n            ></ProTable>\n          </Modal>\n        </React.Fragment>\n      );\n    }\n  )\n);\n","import { withStyles, WithStyles } from \"@material-ui/styles\";\nimport {\n  FetchEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { grey } from \"@ant-design/colors\";\nimport { CandidateEntityListComponent } from \"./CandidateEntityListComponent\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport { TableRow } from \"../../../models/table\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../../models\";\nimport { appConfig } from \"../../../models/settings\";\n\nconst styles = {\n  link: {\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  noEntityLink: {\n    color: grey[5],\n    \"&:hover\": {\n      color: grey[5],\n    },\n  },\n};\n\nexport const CellComponent = withStyles(styles)(\n  observer(\n    ({\n      cell,\n      record,\n      index,\n      classes,\n      topK = 3,\n    }: {\n      cell: string;\n      record: TableRow;\n      index: number;\n      topK?: number;\n    } & WithStyles<typeof styles>) => {\n      const { uiSettings } = useStores();\n\n      const links = record.links[index] || [];\n      let components = links.flatMap((link, index) => {\n        let prefix =\n          index === 0\n            ? cell.substring(0, link.start)\n            : cell.substring(links[index - 1].end, link.start);\n        let linksurface = cell.substring(link.start, link.end);\n        let onCtrlClick = undefined;\n        if (link.entityId !== undefined) {\n          onCtrlClick = () => {\n            openPageEntityComponent(link.entityId!);\n          };\n        }\n        const infix =\n          link.url === undefined && link.entityId === undefined ? (\n            linksurface\n          ) : (\n            <ExternalLink\n              key={index}\n              href={link.url}\n              openInNewPage={true}\n              dangerouslySetInnerHTML={{\n                __html: linksurface.trim() === \"\" ? \"&blank;\" : linksurface,\n              }}\n              className={\n                classes.link +\n                (link.entityId === undefined ||\n                link.entityId === appConfig.NIL_ENTITY\n                  ? \" \" + classes.noEntityLink\n                  : \"\")\n              }\n              style={link.entityId === null ? { color: \"#aaa\" } : {}}\n              onCtrlClick={onCtrlClick}\n            />\n          );\n\n        if (link.entityId === undefined) {\n          return [prefix, infix];\n        }\n\n        // reassign to infix somehow killing the application\n        const wrappedInfix = (\n          <FetchEntityComponent\n            key={index}\n            entityId={link.entityId}\n            render={(entity, settings) => (\n              <PopoverEntityComponent\n                entity={entity}\n                zIndex={500}\n                settings={settings}\n              >\n                {infix}\n              </PopoverEntityComponent>\n            )}\n            renderNotFound={() => (\n              <span className={classes.noEntityLink}>{infix}</span>\n            )}\n          />\n        );\n\n        return [prefix, wrappedInfix];\n      });\n\n      if (links.length === 0) {\n        components.push(cell);\n      } else {\n        components.push(cell.substring(links[links.length - 1].end));\n      }\n\n      return (\n        <div>\n          {components}\n          {uiSettings.table.showEntityLinkingEditor &&\n          typeof record.row[index] !== \"number\" ? (\n            <CandidateEntityListComponent\n              record={record}\n              index={index}\n              topK={topK}\n            />\n          ) : null}\n        </div>\n      );\n    }\n  )\n);\n","import { action, computed, makeObservable, observable, toJS } from \"mobx\";\nimport { ClassStore, EntityStore, TableRow } from \"../../../../models\";\nimport { appConfig } from \"../../../../models/settings\";\n\nexport class ColumnFilter {\n  public type2op: { [type: string]: \"null\" | \"include\" | \"exclude\" } = {};\n  public selectNil: boolean = false;\n  public selectUnlinked: boolean = false;\n  public includeCandidateEntities: boolean = true;\n\n  protected columnIndex: number;\n  protected onChange: () => void;\n\n  constructor(columnIndex: number, onChange: () => void) {\n    this.columnIndex = columnIndex;\n    this.onChange = onChange;\n\n    makeObservable(this, {\n      type2op: observable,\n      selectNil: observable,\n      selectUnlinked: observable,\n      includeCandidateEntities: observable,\n      hasFilter: computed,\n      addTypes: action,\n      setSelectNil: action,\n      setSelectUnlinked: action,\n      setIncludeCandidateEntities: action,\n      toggleAllType: action,\n      setTypeOp: action,\n    });\n  }\n\n  addTypes = (types: string[]) => {\n    for (const type of types) {\n      this.type2op[type] = \"null\";\n    }\n  };\n\n  setIncludeCandidateEntities = (value: boolean) => {\n    if (this.includeCandidateEntities === value) return;\n    this.includeCandidateEntities = value;\n    this.onChange();\n  };\n\n  setSelectNil = (value: boolean) => {\n    if (this.selectNil === value) return;\n    this.selectNil = value;\n    this.onChange();\n  };\n\n  setSelectUnlinked = (value: boolean) => {\n    if (this.selectUnlinked === value) return;\n    this.selectUnlinked = value;\n    this.onChange();\n  };\n\n  /**\n   * Set all types to a new op if the next state is checked.\n   * Otherwise, only states of the same op are changed to null.\n   */\n  toggleAllType = (op: \"null\" | \"include\" | \"exclude\", checked: boolean) => {\n    let hasChange = false;\n\n    if (checked) {\n      for (const type in this.type2op) {\n        if (this.type2op[type] === op) continue;\n        this.type2op[type] = op;\n        hasChange = true;\n      }\n    } else {\n      for (const type in this.type2op) {\n        if (this.type2op[type] === op) {\n          this.type2op[type] = \"null\";\n          hasChange = true;\n        }\n      }\n    }\n\n    if (hasChange) {\n      this.onChange();\n    }\n  };\n\n  setTypeOp = (type: string, op: \"null\" | \"include\" | \"exclude\") => {\n    if (this.type2op[type] === op) return;\n    this.type2op[type] = op;\n    this.onChange();\n  };\n\n  hasAnyOp = (op: \"null\" | \"include\" | \"exclude\") => {\n    for (const type in this.type2op) {\n      if (this.type2op[type] === op) return true;\n    }\n    return false;\n  };\n\n  hasAllOp = (op: \"null\" | \"include\" | \"exclude\") => {\n    for (const type in this.type2op) {\n      if (this.type2op[type] !== op) return false;\n    }\n    return true;\n  };\n\n  /** Whether we have any filter on */\n  get hasFilter() {\n    for (const type in this.type2op) {\n      if (this.type2op[type] !== \"null\") return true;\n    }\n    return this.selectNil || this.selectUnlinked;\n  }\n\n  /** Test whether the row match this filter */\n  getFilterExec = (entStore: EntityStore, classStore: ClassStore) => {\n    // gather include & exclude types\n    const includeTypeIds: string[] = [];\n    const excludeTypeIds: string[] = [];\n    for (const type in this.type2op) {\n      if (this.type2op[type] === \"include\") {\n        includeTypeIds.push(type);\n      } else if (this.type2op[type] === \"exclude\") {\n        excludeTypeIds.push(type);\n      }\n    }\n\n    return async (row: TableRow) => {\n      if (!this.hasFilter) return true;\n\n      // nil and unlinked are or operator (not and operator)\n      if (this.selectNil || this.selectUnlinked) {\n        for (const link of row.links[this.columnIndex] || []) {\n          if (\n            (this.selectNil && link.entityId === appConfig.NIL_ENTITY) ||\n            (this.selectUnlinked && link.entityId === undefined)\n          )\n            return true;\n        }\n\n        if (\n          this.selectUnlinked &&\n          (row.links[this.columnIndex] || []).length === 0\n        ) {\n          return true;\n        }\n\n        return false;\n      }\n\n      // now apply the filter on those types\n      const entIds = new Set<string>();\n      for (const link of row.links[this.columnIndex] || []) {\n        if (\n          link.entityId !== appConfig.NIL_ENTITY &&\n          link.entityId !== undefined\n        ) {\n          entIds.add(link.entityId);\n        }\n        if (this.includeCandidateEntities) {\n          for (const canEnt of link.candidateEntities) {\n            entIds.add(canEnt.entityId);\n          }\n        }\n      }\n\n      if (entIds.size === 0) return false;\n\n      const ents = await entStore.fetchByIds(Array.from(entIds));\n      const classes = await classStore.fetchByIds(\n        Object.values(ents).flatMap((ent) => {\n          const instanceOf = appConfig.instanceof(ent.uri);\n          if (\n            instanceOf === undefined ||\n            ent.properties[instanceOf] === undefined\n          ) {\n            return [];\n          }\n\n          const output = [];\n          for (const stmt of ent.properties[instanceOf]) {\n            if (stmt.value.type === \"entityid\") {\n              output.push(stmt.value.value);\n            }\n          }\n          return output;\n        })\n      );\n\n      return (\n        (includeTypeIds.length === 0 ||\n          Object.values(classes).some((klass) =>\n            includeTypeIds.some(\n              (typeId) =>\n                klass.id === typeId || klass.parentsClosure.has(typeId)\n            )\n          )) &&\n        (excludeTypeIds.length === 0 ||\n          !Object.values(classes).some((klass) =>\n            excludeTypeIds.some(\n              (typeId) =>\n                klass.id === typeId || klass.parentsClosure.has(typeId)\n            )\n          ))\n      );\n    };\n  };\n}\n\nexport class TableFilter {\n  public columnFilters: ColumnFilter[] = [];\n\n  protected onChange = (filter: TableFilter) => {};\n\n  constructor(nColumns: number, onChange?: (filter: TableFilter) => void) {\n    if (onChange !== undefined) {\n      this.onChange = onChange;\n    }\n\n    for (let i = 0; i < nColumns; i++) {\n      this.columnFilters.push(\n        new ColumnFilter(i, () => {\n          this.handleChange();\n        })\n      );\n    }\n\n    makeObservable(this, {\n      columnFilters: observable,\n      setOnChange: action,\n    });\n  }\n\n  setOnChange = (onChange: (filter: TableFilter) => void) => {\n    this.onChange = onChange;\n  };\n\n  handleChange = () => {\n    this.onChange(this);\n  };\n\n  /** Whether we have any filter on */\n  hasFilter = () => {\n    return this.columnFilters.some((c) => c.hasFilter);\n  };\n\n  /** Filter rows */\n  filter = async (\n    rows: TableRow[],\n    entStore: EntityStore,\n    classStore: ClassStore\n  ) => {\n    const filterExecs = this.columnFilters.map((c) =>\n      c.getFilterExec(entStore, classStore)\n    );\n\n    const matches = await Promise.all(\n      rows.map((row) => {\n        return Promise.all(filterExecs.map((exec) => exec(row))).then(\n          (results) => {\n            return results.every((res) => res);\n          }\n        );\n      })\n    );\n    return rows.filter((row, i) => matches[i]);\n  };\n}\n","import { SearchOutlined } from \"@ant-design/icons\";\nimport ProTable, { ActionType } from \"@ant-design/pro-table\";\nimport { withStyles, WithStyles } from \"@material-ui/styles\";\nimport { Descriptions, Typography } from \"antd\";\nimport { toJS } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { ExternalLink } from \"rma-baseapp\";\nimport {\n  FetchEntityComponent,\n  InlineEntityComponent,\n  openPageEntityComponent,\n  PopoverEntityComponent,\n} from \"../../../components/entity\";\nimport { Table, TableRow } from \"../../../models/table\";\nimport {\n  isLineBreak,\n  LineBreak,\n  Text,\n} from \"../../../models/table/TableContext\";\nimport { TableColumnFilter } from \"../TableColumn\";\nimport { CellComponent } from \"./CellComponent\";\nimport { TableFilter } from \"./filters/Filter\";\nimport { tableStyles } from \"./styles\";\n\nexport const styles = {\n  table: tableStyles,\n};\n\nexport interface TableComponentFunc {\n  reload: () => void;\n}\n\nexport const TableComponent = withStyles(styles)(\n  observer(\n    forwardRef(\n      (\n        {\n          table,\n          query,\n          classes,\n          toolBarRender,\n          showRowIndex = false,\n        }: {\n          table: Table;\n          query: (\n            limit: number,\n            offset: number,\n            filter: TableFilter\n          ) => Promise<{ rows: TableRow[]; total: number }>;\n          toolBarRender?: false;\n          showRowIndex?: boolean;\n        } & WithStyles<typeof styles>,\n        ref\n      ) => {\n        const actionRef = useRef<ActionType>();\n        const [filter, _setFilter] = useState(\n          new TableFilter(table.columns.length, (filter: TableFilter) => {\n            // reload the table and reset the page index cause we update the filter\n            // another reason is some how without resetting the page index, protable triggers the request\n            // function twice\n            actionRef.current?.reload(true);\n          })\n        );\n\n        useImperativeHandle(\n          ref,\n          (): TableComponentFunc => ({\n            reload: () => {\n              actionRef.current?.reload();\n            },\n          })\n        );\n\n        const columns = table.columns.map((col, columnIndex) => ({\n          dataIndex: [\"row\", columnIndex],\n          title: table.columns[columnIndex],\n          render: ((value: string, record: TableRow) => {\n            return (\n              <CellComponent cell={value} record={record} index={columnIndex} />\n            );\n          }) as any,\n          filterDropdown: (\n            <TableColumnFilter\n              table={table}\n              columnIndex={columnIndex}\n              filter={filter.columnFilters[columnIndex]}\n            />\n          ),\n          filterIcon: (\n            <SearchOutlined\n              style={{\n                color: filter.columnFilters[columnIndex].hasFilter\n                  ? \"#1890ff\"\n                  : undefined,\n              }}\n            />\n          ),\n        }));\n\n        if (showRowIndex) {\n          columns.splice(0, 0, {\n            title: (\n              <Typography.Text type=\"secondary\" disabled={true}>\n                #\n              </Typography.Text>\n            ),\n            dataIndex: \"index\",\n          } as any);\n        }\n\n        return (\n          <>\n            <ProTable\n              actionRef={actionRef}\n              className={classes.table}\n              defaultSize=\"small\"\n              bordered={true}\n              params={{ filter }}\n              request={async (params, sort, filter) => {\n                const { rows, total } = await query(\n                  params.pageSize!,\n                  (params.current! - 1) * params.pageSize!,\n                  params.filter\n                );\n                return {\n                  data: rows,\n                  success: true,\n                  total,\n                };\n              }}\n              search={false}\n              pagination={{\n                pageSize: 5,\n                pageSizeOptions: [\n                  \"5\",\n                  \"10\",\n                  \"20\",\n                  \"50\",\n                  \"100\",\n                  \"200\",\n                  \"500\",\n                  \"1000\",\n                ],\n              }}\n              headerTitle={\n                table.contextPage.url !== undefined ? (\n                  <ExternalLink\n                    href={table.contextPage.url}\n                    openInNewPage={true}\n                  >\n                    {table.name}\n                  </ExternalLink>\n                ) : (\n                  table.name\n                )\n              }\n              toolBarRender={toolBarRender}\n              rowKey=\"index\"\n              columns={columns}\n            />\n            <TableInformation table={table} />\n          </>\n        );\n      }\n    )\n  )\n);\n\nexport const TableInformation: React.FunctionComponent<{\n  table: Table;\n}> = ({ table }) => {\n  const info: [string, React.ReactNode][] = [\n    [\"Description\", table.description],\n  ];\n\n  if (table.contextPage.url !== undefined) {\n    info.push([\n      \"From website\",\n      <ExternalLink href={table.contextPage.url} openInNewPage={true}>\n        {table.contextPage.title}\n      </ExternalLink>,\n    ]);\n  } else {\n    info.push([\"From website\", \"N/A\"]);\n  }\n  info.push([\n    \"Associated Entity\",\n    table.contextPage.entityId !== undefined ? (\n      <FetchEntityComponent\n        entityId={table.contextPage.entityId}\n        render={(entity, settings) => (\n          <PopoverEntityComponent\n            entity={entity}\n            zIndex={500}\n            settings={settings}\n          >\n            <InlineEntityComponent\n              entity={entity}\n              onCtrlClick={() => {\n                openPageEntityComponent({ entity, settings });\n              }}\n            />\n          </PopoverEntityComponent>\n        )}\n        renderNotFound={() => (\n          <span>`Entity ${table.contextPage.entityId} does not exist`</span>\n        )}\n      />\n    ) : (\n      \"N/A\"\n    ),\n  ]);\n\n  let content = (table.contextHierarchy || []).flatMap((hierarchy, index) => {\n    if (hierarchy.level === 0 && hierarchy.heading.trim().length === 0) {\n      if (\n        hierarchy.contentBefore.every(isLineBreak) &&\n        hierarchy.contentAfter.length === 0\n      ) {\n        return [];\n      }\n    }\n    const output = [\n      <p key={`${index}-head`}>\n        <b>\n          {\"#\".repeat(hierarchy.level)} {hierarchy.heading}\n        </b>\n      </p>,\n    ];\n    return output\n      .concat(ContentComponent(`${index}-before`, hierarchy.contentBefore))\n      .concat(ContentComponent(`${index}-after`, hierarchy.contentAfter));\n  });\n  info.push([\n    \"Content Hierarchy\",\n    content.length > 0 ? <div>{content}</div> : \"N/A\",\n  ]);\n\n  return (\n    <Descriptions title=\"Table Info\" size=\"small\">\n      {info.map(([label, value]) => (\n        <Descriptions.Item key={label} label={label}>\n          {value}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n  );\n};\n\nconst ContentComponent = (key: string, lines: (Text | LineBreak)[]) => {\n  const comps: string[][] = [[]];\n  for (const line of lines) {\n    if (isLineBreak(line)) {\n      comps.push([]);\n    } else {\n      comps[comps.length - 1].push(line.value);\n    }\n  }\n  return comps\n    .filter((lst) => lst.length > 0)\n    .map((lst, i) => <p key={`${key}-${i}`}>{lst}</p>);\n};\n","/** Table styles applied to all tables */\nexport const tableStyles = {\n  width: \"100%\",\n  \"& div.ant-table-container\": {\n    border: \"1px solid #bbb\",\n    borderRadius: 4,\n    borderLeft: \"1px solid #bbb !important\",\n  },\n  \"& div.ant-card-body\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"& th\": {\n    fontWeight: 600,\n  },\n  \"& .ant-table-cell\": {\n    verticalAlign: \"top\",\n  },\n};\n","import { Button, PageHeader, Space } from \"antd\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { AutoHideTooltip } from \"../../components\";\nimport { Table, Project, useStores } from \"../../models\";\nimport { routes } from \"../../routes\";\nimport _ from \"lodash\";\nimport { history } from \"rma-baseapp\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nfunction useTableNavigation(tableId: number) {\n  const { tableStore } = useStores();\n  const PREFETCH_LIMIT = 50;\n  const queryParams = routes.table.useQueryParams();\n  const b64query = queryParams === null ? \"\" : queryParams.query;\n  const tableQueryConditions = useMemo(\n    () => (b64query !== \"\" ? tableStore.decodeWhereQuery(b64query) : {}),\n    [tableStore, b64query]\n  );\n\n  // Note: assume that the list is always sorted by id (which the order which the table)\n  // is inserted into the DB\n  const [state, setState] = useState({\n    tableId: -1,\n    tableIndex: -1,\n    query: \"\",\n    records: [] as number[],\n    leftOffset: 0,\n    total: 0,\n    hasPrev: false,\n    hasNext: false,\n    allLeft: false,\n    allRight: false,\n    version: 0,\n  });\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    const fn = async () => {\n      // we reinit the state whenever the query change, or table id is moved\n      // too far from the list (e.g., when users modify the URL)\n      const idx = _.sortedIndex(state.records, tableId);\n      const reinit = state.query !== b64query || state.records[idx] !== tableId;\n      let newState: Partial<typeof state>;\n\n      if (reinit) {\n        const [gtr, ltr] = await Promise.all([\n          tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gte\", value: tableId },\n            },\n          }),\n          tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          }),\n        ]);\n\n        const records = ltr.records\n          .map((tbl) => tbl.id)\n          .concat(gtr.records.map((tbl) => tbl.id));\n        newState = {\n          tableIndex: ltr.records.length,\n          records,\n          total: ltr.total + gtr.total,\n          leftOffset: ltr.total - ltr.records.length,\n          allLeft: ltr.total <= PREFETCH_LIMIT,\n          allRight: gtr.total <= PREFETCH_LIMIT,\n          hasPrev: ltr.records.length > 0,\n          hasNext: gtr.records.length > 1,\n        };\n      } else {\n        // only table id change, we fetch if it's near the boundary\n        if (idx === 0 && !state.allLeft) {\n          const ltr = await tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"lt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: ltr.records.length,\n            leftOffset: ltr.total - ltr.records.length,\n            records: ltr.records.map((tbl) => tbl.id).concat(state.records),\n            allLeft: ltr.total <= PREFETCH_LIMIT,\n            hasPrev: ltr.records.length > 0,\n          };\n        } else if (idx === state.records.length - 1 && !state.allRight) {\n          const gtr = await tableStore.query({\n            limit: PREFETCH_LIMIT,\n            offset: 0,\n            fields: [\"id\"],\n            conditions: {\n              ...tableQueryConditions,\n              id: { op: \"gt\", value: tableId },\n            },\n          });\n          newState = {\n            tableIndex: idx,\n            records: state.records.concat(gtr.records.map((tbl) => tbl.id)),\n            allRight: gtr.total <= PREFETCH_LIMIT,\n            hasNext: gtr.records.length > 0,\n          };\n        } else {\n          newState = {\n            tableIndex: idx,\n            hasNext: idx < state.records.length - 1,\n            hasPrev: idx > 0,\n          };\n        }\n      }\n\n      if (isSubscribed) {\n        setState({\n          ...state,\n          ...newState,\n          version: state.version + 1,\n          query: b64query,\n          tableId,\n        });\n      }\n    };\n\n    // TODO:\n    // I think this async function causes a warning that we performs an update\n    // on unmounted component. After we move to a new page, the TableNavBar will shortly\n    // removed due to a small gap time, the async hasn't finished yet but the component\n    // is unmounted.\n    fn();\n\n    return () => {\n      isSubscribed = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableId, b64query]);\n\n  // open another table relative to the current table by some offset\n  const move = (offset: number) => {\n    if (tableId !== state.tableId) {\n      // they call the function too fast before the state is updated\n      return;\n    }\n\n    const nextTableId = state.records[state.tableIndex + offset];\n    if (nextTableId !== undefined) {\n      routes.table.path({ tableId: nextTableId }, { query: b64query }).open();\n    }\n  };\n\n  return {\n    // get id of the table relative to the current table by some offset\n    toPreviousTable: () => {\n      move(-1);\n    },\n    toNextTable: () => {\n      move(1);\n    },\n    navState: state,\n  };\n}\n\nexport const TableNavBar = (props: {\n  project: Project | null | undefined;\n  table: Table;\n  btns?: React.ReactNode[];\n  extraSubTitle?: React.ReactNode;\n}) => {\n  let project = props.project || new Project(0, \"\", \"\");\n  const { navState, toNextTable, toPreviousTable } = useTableNavigation(\n    props.table.id\n  );\n\n  useHotkeys(\"b\", toPreviousTable, [navState.version]);\n  useHotkeys(\"n\", toNextTable, [navState.version]);\n\n  return (\n    <PageHeader\n      onBack={() =>\n        history.push(\n          routes.project.getURL({\n            projectId: props.table.project,\n          })\n        )\n      }\n      title={\n        <Space key=\"title\">\n          <span style={{ fontWeight: 500 }}>Table </span>\n          <AutoHideTooltip title=\"copied\" ms={500}>\n            <span\n              style={{\n                color: \"#237804\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => navigator.clipboard.writeText(props.table.name)}\n            >\n              {props.table.name}\n            </span>\n          </AutoHideTooltip>\n        </Space>\n      }\n      subTitle={\n        <Space key=\"sub-title\">\n          <span>\n            (Project <b>{project.name}</b>)\n          </span>\n          <span className=\"ml-2\">\n            Position:{\" \"}\n            <b>\n              {\" \"}\n              {navState.leftOffset + navState.tableIndex + 1}/{navState.total}\n            </b>\n          </span>\n        </Space>\n      }\n      extra={[\n        <Button\n          key=\"prev\"\n          onClick={toPreviousTable}\n          disabled={!navState.hasPrev}\n        >\n          Previous Table (B)\n        </Button>,\n        <Button key=\"next\" onClick={toNextTable} disabled={!navState.hasNext}>\n          Next Table (N)\n        </Button>,\n      ]}\n    />\n  );\n};\n","import { WithStyles, withStyles } from \"@material-ui/styles\";\nimport { Button, PageHeader, Space } from \"antd\";\nimport _ from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { history, LoadingPage, NotFoundPage } from \"rma-baseapp\";\nimport { AutoHideTooltip } from \"../../components/element\";\nimport {\n  DraftSemanticModel,\n  Project,\n  Table,\n  TableStore as TableStoreType,\n  useStores,\n} from \"../../models\";\nimport { routes } from \"../../routes\";\nimport { EntitySettingComponent } from \"./EntitySettingComponent\";\nimport { MenuBar } from \"./MenuBar\";\nimport {\n  SemanticModelComponent,\n  SemanticModelComponentFunc,\n} from \"./SemanticModelComponent\";\nimport { TableComponent } from \"./table\";\nimport { TableFilter } from \"./table/filters/Filter\";\nimport { TableComponentFunc } from \"./table/TableComponent\";\nimport { TableNavBar } from \"./TableNavBar\";\n\n// https://cssinjs.org/jss-plugin-nested?v=v10.8.0#use--to-reference-selector-of-the-parent-rule\nconst styles = {\n  table: {\n    marginTop: 8,\n    \"& div.ant-table-container\": {\n      border: \"1px solid #bbb\",\n      borderRadius: 4,\n      borderLeft: \"1px solid #bbb !important\",\n    },\n  },\n  container: {\n    marginLeft: 24,\n    marginRight: 24,\n  },\n};\n\nexport const TablePage = withStyles(styles)(\n  observer(({ classes }: WithStyles<typeof styles>) => {\n    // use stores\n    const {\n      projectStore,\n      tableStore,\n      tableRowStore,\n      semanticModelStore,\n      assistantService,\n      classStore,\n      entityStore,\n    } = useStores();\n    // parse necessary route parameters\n    const tableId = routes.table.useURLParams()!.tableId;\n    const { sms, index, setIndex } = useSemanticModel(tableId);\n\n    const tableRef = useRef<TableComponentFunc>(null);\n    const graphRef = useRef<SemanticModelComponentFunc>(null);\n\n    useEffect(() => {\n      // fetch the table\n      tableStore.fetchById(tableId).then((table) => {\n        if (table !== undefined) {\n          projectStore.fetchById(table.project);\n        }\n      });\n    }, [tableStore, projectStore, semanticModelStore, tableId]);\n\n    const table = tableStore.get(tableId);\n\n    if (table === null) {\n      return <NotFoundPage />;\n    } else if (table === undefined || sms.length === 0) {\n      // the table and sms is loading\n      return <LoadingPage />;\n    }\n\n    return (\n      <React.Fragment>\n        <TableNavBar project={projectStore.get(table.project)} table={table} />\n        <div className={classes.container}>\n          <Space direction=\"vertical\" size={8}>\n            <MenuBar\n              graphRef={graphRef}\n              tableRef={tableRef}\n              table={table}\n              semanticmodel={{ sms, index, setIndex }}\n            />\n            <SemanticModelComponent\n              ref={graphRef}\n              key={tableId}\n              table={table}\n              sm={sms[index]}\n            />\n            <TableComponent\n              ref={tableRef}\n              key={tableId}\n              toolBarRender={false}\n              table={table}\n              query={async (\n                limit: number,\n                offset: number,\n                filter: TableFilter\n              ) => {\n                if (!filter.hasFilter()) {\n                  const rows = await tableRowStore.fetchByTable(\n                    table,\n                    offset,\n                    limit\n                  );\n                  return { rows, total: table.size };\n                }\n\n                const allrows = await tableRowStore.fetchByTable(\n                  table,\n                  0,\n                  table.size\n                );\n                const rows = await filter.filter(\n                  allrows,\n                  entityStore,\n                  classStore\n                );\n                return {\n                  rows: rows.slice(offset, offset + limit),\n                  total: rows.length,\n                };\n              }}\n              showRowIndex={true}\n            />\n            <EntitySettingComponent />\n          </Space>\n        </div>\n      </React.Fragment>\n    );\n  })\n);\n\nfunction useSemanticModel(tableId: number) {\n  const { tableStore, semanticModelStore } = useStores();\n  const [hasFetchSemanticModel, setHasFetchSemanticModel] = useState(false);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    if (!semanticModelStore.hasByTable(tableId)) {\n      semanticModelStore\n        .fetch({\n          limit: 1000,\n          offset: 0,\n          conditions: {\n            table: tableId,\n          },\n        })\n        .then(() => setHasFetchSemanticModel(true));\n    }\n  }, [semanticModelStore, tableId]);\n\n  const table = tableStore.get(tableId);\n\n  if (\n    table === undefined ||\n    table === null ||\n    (!semanticModelStore.hasByTable(tableId) && !hasFetchSemanticModel)\n  ) {\n    // either the table does not exist, or the semantic model is not fetched\n    return { index, sms: [], setIndex };\n  }\n\n  const sms = semanticModelStore.findByTable(tableId);\n  const drafts = semanticModelStore.getCreateDraftsByTable(table);\n  if (index >= sms.length + drafts.length) {\n    // there is no semantic model & no draft for this table, create a new draft\n    const id = semanticModelStore.getNewCreateDraftId(table);\n    const draft = DraftSemanticModel.getDefaultDraftSemanticModel(\n      id,\n      `sm-${sms.length}`,\n      table\n    );\n    semanticModelStore.setCreateDraft(draft);\n    drafts.push(draft);\n  }\n\n  const sm = index < sms.length ? sms[index] : drafts[index - sms.length];\n\n  return { sms: sms.concat(drafts), index, setIndex };\n}\n","import { Col, Row } from \"antd\";\n\nexport const SettingPage = () => {\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={24}></Col>\n    </Row>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.e35779db.png\";","import {\n  PathDef,\n  NoArgsPathDef,\n  NoQueryArgsPathDef,\n  applyLayout,\n} from \"rma-baseapp\";\nimport { HomePage, ProjectPage, TablePage, SettingPage } from \"./pages\";\n\nimport React from \"react\";\nimport { LeftNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\nimport logo from \"./logo.png\";\n\nimport {\n  CloudUploadOutlined,\n  ProjectOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { NoURLArgsPathDef } from \"rma-baseapp/lib/esm/routing/route\";\n\n/*************************************************************************************\n * Layouts of the application\n */\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <LeftNavBar\n          menus={{\n            home: <img src={logo} alt=\"logo\" />,\n            projects: { icon: <ProjectOutlined />, children: \"Projects\" },\n            upload: { icon: <CloudUploadOutlined />, children: \"Upload\" },\n            settings: { icon: <SettingOutlined />, children: \"Settings\" },\n          }}\n          routes={routes}\n          isFirstItemLogo={true}\n        />\n        <div className=\"wide-container\">{element}</div>\n      </Space>\n    );\n  };\n};\n\nconst None = () => <h1>Not supposed to see this page</h1>;\n\n/*************************************************************************************\n * Definitions for routes in this application\n */\nexport const routes = {\n  project: new NoQueryArgsPathDef({\n    component: ProjectPage,\n    urlSchema: { projectId: \"number\" },\n    pathDef: \"/projects/:projectId\",\n  }),\n  table: new PathDef({\n    component: TablePage,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { query: \"string\" },\n    pathDef: \"/tables/:tableId\",\n  }),\n  tableExportModel: new PathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { attachment: \"optionalboolean\" },\n    pathDef: \"/api/table/:tableId/export-models\",\n  }),\n  tableExportData: new PathDef({\n    component: None,\n    urlSchema: { tableId: \"number\" },\n    querySchema: { attachment: \"optionalboolean\" },\n    pathDef: \"/api/table/:tableId/export\",\n  }),\n  settings: new NoArgsPathDef({\n    component: SettingPage,\n    pathDef: \"/settings\",\n    exact: true,\n  }),\n  upload: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/upload\",\n    exact: true,\n  }),\n  projects: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/projects\",\n    exact: true,\n  }),\n  home: new NoArgsPathDef({ component: HomePage, pathDef: \"/\", exact: true }),\n};\n(window as any)._routes = routes;\n\n// apply this layout to all routes except table\napplyLayout(routes, Layout, [\"table\"]);\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"rma-baseapp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { stores, initStores, StoreContext } from \"./models\";\nimport { routes } from \"./routes\";\n\ninitStores().then(() => {\n  ReactDOM.render(\n    <StoreContext.Provider value={stores}>\n      <App enUSLocale={true} routes={routes} />\n    </StoreContext.Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}